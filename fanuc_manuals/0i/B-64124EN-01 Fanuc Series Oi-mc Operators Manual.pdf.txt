
 

OPERATOR’S MANUAL

B-64124EN/01

FANUC Series 0  -MC

 

* 



In this manual we have tried as much as possible to describe all the
various matters.
However, we cannot describe all the matters which must not be done,
or which cannot be done, because there are so many possibilities.
Therefore, matters which are not especially described as possible in
this manual should be regarded as ”impossible”.

The export of this product is subject to the authorization of the
government of the country from where the product is exported.

� No part of this manual may be reproduced in any form.

� All specifications and designs are subject to change without notice.



s–1

SAFETY PRECAUTIONS

This section describes the safety precautions related to the use of CNC units.  It is essential that these precautions
be observed by users to ensure the safe operation of machines equipped with a CNC unit (all descriptions in this
section assume this configuration).  Note that some precautions are related only to specific functions, and thus
may not be applicable to certain CNC units.
Users must also observe the safety precautions related to the machine, as described in the relevant manual supplied
by the machine tool builder.  Before attempting to operate the machine or create a program to control the operation
of the machine, the operator must become fully familiar with the contents of this manual and relevant manual
supplied by the machine tool builder.

Contents

1. DEFINITION OF WARNING, CAUTION, AND NOTE s–2. . . . . . . . . . . . . . . . . . . . . . . 

2. GENERAL WARNINGS AND CAUTIONS s–3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3. WARNINGS AND CAUTIONS RELATED TO PROGRAMMING s–5. . . . . . . . . . . . . 

4. WARNINGS AND CAUTIONS RELATED TO HANDLING s–7. . . . . . . . . . . . . . . . . . . 

5. WARNINGS RELATED TO DAILY MAINTENANCE s–9. . . . . . . . . . . . . . . . . . . . . . . . 



SAFETY PRECAUTIONS B–64124EN/01

s–2

1 DEFINITION OF WARNING, CAUTION, AND NOTE
This manual includes safety precautions for protecting the user and preventing damage to the
machine.  Precautions are classified into Warning and Caution according to their bearing on safety.
Also, supplementary information is described as a Note.  Read the Warning, Caution, and Note
thoroughly before attempting to use the machine.

WARNING

Applied when there is a danger of the user being injured or when there is a danger of both the user
being injured and the equipment being damaged if the approved procedure is not observed.

CAUTION

Applied when there is a danger of the equipment being damaged, if the approved procedure is not
observed.

NOTE

The Note is used to indicate supplementary information other than Warning and Caution.

� Read this manual carefully, and store it in a safe place.



B–64124EN/01 SAFETY PRECAUTIONS

s–3

2 GENERAL WARNINGS AND CAUTIONS
WARNING

1. Never attempt to machine a workpiece without first checking the operation of the machine.
Before starting a production run, ensure that the machine is operating correctly by performing
a trial run using, for example, the single block, feedrate override, or machine lock function or
by operating the machine with neither a tool nor workpiece mounted.  Failure to confirm the
correct operation of the machine may result in the machine behaving unexpectedly, possibly
causing damage to the workpiece and/or machine itself, or injury to the user.

2. Before operating the machine, thoroughly check the entered data.
Operating the machine with incorrectly specified data may result in the machine behaving
unexpectedly, possibly causing damage to the workpiece and/or machine itself, or injury to the
user.

3. Ensure that the specified feedrate is appropriate for the intended operation.  Generally, for each
machine, there is a maximum allowable feedrate.  The appropriate feedrate varies with the
intended operation.  Refer to the manual provided with the machine to determine the maximum
allowable feedrate.  If a machine is run at other than the correct speed, it may behave
unexpectedly, possibly causing damage to the workpiece and/or machine itself, or injury to the
user.

4. When using a tool compensation function, thoroughly check the direction and amount of
compensation.  
Operating the machine with incorrectly specified data may result in the machine behaving
unexpectedly, possibly causing damage to the workpiece and/or machine itself, or injury to the
user.

5. The parameters for the CNC and PMC are factory–set.  Usually, there is not need to change them.
When, however, there is not alternative other than to change a parameter, ensure that you fully
understand the function of the parameter before making any change.
Failure to set a parameter correctly may result in the machine behaving unexpectedly, possibly
causing damage to the workpiece and/or machine itself, or injury to the user.

6. Immediately after switching on the power, do not touch any of the keys on the MDI panel until
the position display or alarm screen appears on the CNC unit.
Some of the keys on the MDI panel are dedicated to maintenance or other special operations.
Pressing any of these keys may place the CNC unit in other than its normal state.  Starting the
machine in this state may cause it to behave unexpectedly.

7. The operator’s manual and programming manual supplied with a CNC unit provide an overall
description of the machine’s functions, including any optional functions.  Note that the optional
functions will vary from one machine model to another.  Therefore, some functions described
in the manuals may not actually be available for a particular model.  Check the specification of
the machine if in doubt.



SAFETY PRECAUTIONS B–64124EN/01

s–4

WARNING

8. Some functions may have been implemented at the request of the machine–tool builder.  When
using such functions, refer to the manual supplied by the machine–tool builder for details of their
use and any related cautions.

NOTE

Programs, parameters, and macro variables are stored in nonvolatile memory in the CNC unit.
Usually, they are retained even if the power is turned off.  Such data may be deleted inadvertently,
however, or it may prove necessary to delete all data from nonvolatile memory as part of error
recovery.
To guard against the occurrence of the above, and assure quick restoration of deleted data, backup
all vital data, and keep the backup copy in a safe place.



B–64124EN/01 SAFETY PRECAUTIONS

s–5

3 WARNINGS AND CAUTIONS RELATED TOPROGRAMMING
This section covers the major safety precautions related to programming.  Before attempting to
perform programming, read the supplied operator’s manual and programming manual carefully
such that you are fully familiar with their contents.

WARNING

1. Coordinate system setting

If a coordinate system is established incorrectly, the machine may behave unexpectedly as a
result of the program issuing an otherwise valid move command.
Such an unexpected operation may damage the tool, the machine itself, the workpiece, or cause
injury to the user.

2. Positioning by nonlinear interpolation

When performing positioning by nonlinear interpolation (positioning by nonlinear movement
between the start and end points), the tool path must be carefully confirmed before performing
programming.
Positioning involves rapid traverse.  If the tool collides with the workpiece, it may damage the
tool, the machine itself, the workpiece, or cause injury to the user.

3. Function involving a rotation axis

When programming polar coordinate interpolation or normal–direction (perpendicular) control,
pay careful attention to the speed of the rotation axis.  Incorrect programming may result in the
rotation axis speed becoming excessively high, such that centrifugal force causes the chuck to
lose its grip on the workpiece if the latter is not mounted securely.
Such mishap is likely to damage the tool, the machine itself, the workpiece, or cause injury to
the user.

4. Inch/metric conversion

Switching between inch and metric inputs does not convert the measurement units of data such
as the workpiece origin offset, parameter, and current position.  Before starting the machine,
therefore, determine which measurement units are being used.  Attempting to perform an
operation with invalid data specified may damage the tool, the machine itself, the workpiece, or
cause injury to the user.

5. Constant surface speed control

When an axis subject to constant surface speed control approaches the origin of the workpiece
coordinate system, the spindle speed may become excessively high.  Therefore, it is necessary
to specify a maximum allowable speed.  Specifying the maximum allowable speed incorrectly
may damage the tool, the machine itself, the workpiece, or cause injury to the user.



SAFETY PRECAUTIONS B–64124EN/01

s–6

WARNING

6. Stroke check

After switching on the power, perform a manual reference position return as required.  Stroke
check is not possible before manual reference position return is performed.  Note that when stroke
check is disabled, an alarm is not issued even if a stroke limit is exceeded, possibly damaging
the tool, the machine itself, the workpiece, or causing injury to the user.

7. Tool post interference check

A tool post interference check is performed based on the tool data specified during automatic
operation.  If the tool specification does not match the tool actually being used, the interference
check cannot be made correctly, possibly damaging the tool or the machine itself, or causing
injury to the user.
After switching on the power, or after selecting a tool post manually, always start automatic
operation and specify the tool number of the tool to be used.

8. Absolute/incremental mode

If a program created with absolute values is run in incremental mode, or vice versa, the machine
may behave unexpectedly.

9. Plane selection

If an incorrect plane is specified for circular interpolation, helical interpolation, or a canned cycle,
the machine may behave unexpectedly.  Refer to the descriptions of the respective functions for
details.

10. Torque limit skip

Before attempting a torque limit skip, apply the torque limit.  If a torque limit skip is specified
without the torque limit actually being applied, a move command will be executed without
performing a skip.

11. Programmable mirror image

Note that programmed operations vary considerably when a programmable mirror image is
enabled.

12. Compensation function

If a command based on the machine coordinate system or a reference position return command
is issued in compensation function mode, compensation is temporarily canceled, resulting in the
unexpected behavior of the machine.
Before issuing any of the above commands, therefore, always cancel compensation function
mode.



B–64124EN/01 SAFETY PRECAUTIONS

s–7

4 WARNINGS AND CAUTIONS RELATED TO HANDLING
This section presents safety precautions related to the handling of machine tools.  Before attempting
to operate your machine, read the supplied operator’s manual and programming manual carefully,
such that you are fully familiar with their contents.

WARNING

1. Manual operation

When operating the machine manually, determine the current position of the tool and workpiece,
and ensure that the movement axis, direction, and feedrate have been specified correctly.
Incorrect operation of the machine may damage the tool, the machine itself, the workpiece, or
cause injury to the operator.

2. Manual reference position return

After switching on the power, perform manual reference position return as required.  If the
machine is operated without first performing manual reference position return, it may behave
unexpectedly.  Stroke check is not possible before manual reference position return is performed.
An unexpected operation of the machine may damage the tool, the machine itself, the workpiece,
or cause injury to the user.

3. Manual numeric command

When issuing a manual numeric command, determine the current position of the tool and
workpiece, and ensure that the movement axis, direction, and command have been specified
correctly, and that the entered values are valid.
Attempting to operate the machine with an invalid command specified may damage the tool, the
machine itself, the workpiece, or cause injury to the operator.

4. Manual handle feed

In manual handle feed, rotating the handle with a large scale factor, such as 100, applied causes
the tool and table to move rapidly.  Careless handling may damage the tool and/or machine, or
cause injury to the user.

5. Disabled override

If override is disabled (according to the specification in a macro variable) during threading, rigid
tapping, or other tapping, the speed cannot be predicted, possibly damaging the tool, the machine
itself, the workpiece, or causing injury to the operator.

6. Origin/preset operation

Basically, never attempt an origin/preset operation when the machine is operating under the
control of a program.  Otherwise, the machine may behave unexpectedly, possibly damaging the
tool, the machine itself, the tool, or causing injury to the user.



SAFETY PRECAUTIONS B–64124EN/01

s–8

WARNING

7. Workpiece coordinate system shift

Manual intervention, machine lock, or mirror imaging may shift the workpiece coordinate
system.  Before attempting to operate the machine under the control of a program, confirm the
coordinate system carefully.
If the machine is operated under the control of a program without making allowances for any shift
in the workpiece coordinate system, the machine may behave unexpectedly, possibly damaging
the tool, the machine itself, the workpiece, or causing injury to the operator.

8. Software operator’s panel and menu switches

Using the software operator’s panel and menu switches, in combination with the MDI panel, it
is possible to specify operations not supported by the machine operator’s panel, such as mode
change, override value change, and jog feed commands.
Note, however, that if the MDI panel keys are operated inadvertently, the machine may behave
unexpectedly, possibly damaging the tool, the machine itself, the workpiece, or causing injury
to the user.

9. Manual intervention

If manual intervention is performed during programmed operation of the machine, the tool path
may vary when the machine is restarted.  Before restarting the machine after manual intervention,
therefore, confirm the settings of the manual absolute switches, parameters, and
absolute/incremental command mode.

10. Feed hold, override, and single block

The feed hold, feedrate override, and single block functions can be disabled using custom macro
system variable #3004.  Be careful when operating the machine in this case.

11. Dry run

Usually, a dry run is used to confirm the operation of the machine.  During a dry run, the machine
operates at dry run speed, which differs from the corresponding programmed feedrate.  Note that
the dry run speed may sometimes be higher than the programmed feed rate.

12. Cutter and tool nose radius compensation in MDI mode

Pay careful attention to a tool path specified by a command in MDI mode, because cutter or tool
nose radius compensation is not applied.  When a command is entered from the MDI to interrupt
in automatic operation in cutter or tool nose radius compensation mode, pay particular attention
to the tool path when automatic operation is subsequently resumed.  Refer to the descriptions of
the corresponding functions for details.

13. Program editing

If the machine is stopped, after which the machining program is edited (modification, insertion,
or deletion), the machine may behave unexpectedly if machining is resumed under the control
of that program.  Basically, do not modify, insert, or delete commands from a machining program
while it is in use.



B–64124EN/01 SAFETY PRECAUTIONS

s–9

5 WARNINGS RELATED TO DAILY MAINTENANCE
WARNING

1. Memory backup battery replacement

Only those personnel who have received approved safety and maintenance training may perform
this work.
When replacing the batteries, be careful not to touch the high–voltage circuits (marked  and
fitted with an insulating cover).
Touching the uncovered high–voltage circuits presents an extremely dangerous electric shock
hazard.

NOTE

The CNC uses batteries to preserve the contents of its memory, because it must retain data such as
programs, offsets, and parameters even while external power is not applied.
If the battery voltage drops, a low battery voltage alarm is displayed on the machine operator’s panel
or screen.
When a low battery voltage alarm is displayed, replace the batteries within a week.  Otherwise, the
contents of the CNC’s memory will be lost.
Refer to the maintenance section of the operator’s manual or programming manual for details of the
battery replacement procedure.



SAFETY PRECAUTIONS B–64124EN/01

s–10

WARNING

2. Absolute pulse coder battery replacement

Only those personnel who have received approved safety and maintenance training may perform
this work.
When replacing the batteries, be careful not to touch the high–voltage circuits (marked  and
fitted with an insulating cover).
Touching the uncovered high–voltage circuits presents an extremely dangerous electric shock
hazard.

NOTE

The absolute pulse coder uses batteries to preserve its absolute position.
If the battery voltage drops, a low battery voltage alarm is displayed on the machine operator’s panel
or screen.
When a low battery voltage alarm is displayed, replace the batteries within a week.  Otherwise, the
absolute position data held by the pulse coder will be lost.
Refer to the FANUC SERVO MOTOR αi series for details of the battery replacement procedure.



B–64124EN/01 SAFETY PRECAUTIONS

s–11

WARNING

3. Fuse replacement

Before replacing a blown fuse, however, it is necessary to locate and remove the cause of the
blown fuse.
For this reason, only those personnel who have received approved safety and maintenance
training may perform this work.
When replacing a fuse with the cabinet open, be careful not to touch the high–voltage circuits
(marked  and fitted with an insulating cover).
Touching an uncovered high–voltage circuit presents an extremely dangerous electric shock
hazard.



B–64124EN/01 Table of Contents

c–1

SAFETY PRECAUTIONS s–1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

I.  GENERAL

1. GENERAL 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.1 GENERAL FLOW OF OPERATION OF CNC MACHINE TOOL 6. . . . . . . . . . . . . . . . . . . . . . . . . 

1.2 CAUTIONS ON READING THIS MANUAL 8. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3 CAUTIONS ON VARIOUS KINDS OF DATA 8. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

II.  PROGRAMMING

1. GENERAL 11. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.1 TOOL MOVEMENT ALONG WORKPIECE PARTS FIGURE–INTERPOLATION 12. . . . . . . . . . . 

1.2 FEED–FEED FUNCTION 14. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3 PART DRAWING AND TOOL MOVEMENT 15. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.1 Reference Position (Machine–Specific Position) 15. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.2 Coordinate System on Part Drawing and Coordinate System 

Specified by CNC – Coordinate System 16. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.3 How to IndicateCommand Dimensions for Moving the Tool – Absolute, 

Incremental Commands 19. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4 CUTTING SPEED – SPINDLE SPEED FUNCTION 20. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.5 SELECTION OF TOOL USED FOR VARIOUS MACHINING – TOOL FUNCTION 21. . . . . . . . . . 

1.6 COMMAND FOR MACHINE OPERATIONS – MISCELLANEOUS FUNCTION 22. . . . . . . . . . . . 

1.7 PROGRAM CONFIGURATION 23. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.8 TOOL FIGURE AND TOOL MOTION BY PROGRAM 26. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.9 TOOL MOVEMENT RANGE – STROKE 27. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2. CONTROLLED AXES 28. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.1 CONTROLLED AXES 29. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2 AXIS NAME 29. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3 INCREMENT SYSTEM 30. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4 MAXIMUM STROKE 30. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3. PREPARATORY FUNCTION (G FUNCTION) 31. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4. INTERPOLATION FUNCTIONS 36. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4.1 POSITIONING (G00) 37. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.2 SINGLE DIRECTION POSITIONING (G60) 39. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.3 LINEAR INTERPOLATION (G01) 41. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.4 CIRCULAR INTERPOLATION (G02,G03) 43. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.5 HELICAL  INTERPOLATION (G02,G03) 47. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.6 CYLINDRICAL INTERPOLATION (G07.1) 48. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.7 THREAD CUTTING (G33) 51. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.8 SKIP FUNCTION(G31) 53. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.9 HIGH SPEED SKIP SIGNAL (G31) 55. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.10 MULTISTAGE SKIP (G31) 56. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01Table of Contents

c–2

4.11 TORQUE LIMIT SKIP (G31 P99) 57. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5. FEED FUNCTIONS 59. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
5.1 GENERAL 60. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.2 RAPID TRAVERSE 62. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.3 CUTTING FEED 63. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4 CUTTING FEEDRATE CONTROL 68. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
5.4.1 Exact Stop (G09, G61) Cutting Mode (G64) Tapping Mode (G63) 69. . . . . . . . . . . . . . . . . . . . . . . . . . . 
5.4.2 Automatic Corner Override 70. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.2.1 Automatic Override for Inner Corners (G62) 70. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.2.2 Internal Circular Cutting Feedrate Change 72. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.3 Automatic Corner Deceleration 73. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.3.1 Corner Deceleration According to the Corner Angle 73. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.3.2 Corner Deceleration According to the Feedrate Difference between 
Blocks Along Each Axis 75. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.5 DWELL (G04) 77. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6. REFERENCE POSITION 78. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
6.1 REFERENCE POSITION RETURN 79. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7. COORDINATE SYSTEM 84. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.1 MACHINE COORDINATE SYSTEM 85. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2 WORKPIECE COORDINATE SYSTEM 86. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.2.1 Setting a Workpiece Coordinate System 86. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.2.2 Selecting a Workpiece Coordinate System 87. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.2.3 Changing Workpiece Coordinate System 88. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.2.4 Workpiece coordinate system preset (G92.1) 91. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.2.5 Adding Workpiece Coordinate Systems (G54.1 or G54) 93. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.3 LOCAL COORDINATE SYSTEM 95. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.4 PLANE SELECTION 97. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8. COORDINATE VALUE AND DIMENSION 98. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.1 ABSOLUTE AND INCREMENTAL PROGRAMMING (G90, G91) 99. . . . . . . . . . . . . . . . . . . . . . . 

8.2 POLAR COORDINATE COMMAND (G15, G16) 100. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.3 INCH/METRIC CONVERSION (G20,G21) 103. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.4 DECIMAL POINT PROGRAMMING 104. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9. SPINDLE SPEED FUNCTION (S FUNCTION) 105. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1 SPECIFYING THE SPINDLE SPEED WITH A CODE 106. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.2 SPECIFYING THE SPINDLE SPEED VALUE DIRECTLY (S5–DIGIT COMMAND) 106. . . . . . . . . 

9.3 CONSTANT SURFACE SPEED CONTROL (G96, G97) 107. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.TOOL FUNCTION (T FUNCTION) 110. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.1 TOOL SELECTION FUNCTION 111. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2 TOOL LIFE MANAGEMENT FUNCTION 112. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.2.1 Tool Life Management Data 113. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.2.2 Register, Change and Delete of Tool Life Management Data 114. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.2.3 Tool Life Management Command in a Machining Program 117. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01 ����� �� ��	
�	
�

c–3

10.2.4 Tool Life 120. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.AUXILIARY FUNCTION 121. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1 AUXILIARY FUNCTION (M FUNCTION) 122. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.2 MULTIPLE M COMMANDS IN A SINGLE BLOCK 123. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.3 THE SECOND AUXILIARY FUNCTIONS (B CODES) 124. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.PROGRAM CONFIGURATION 125. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
12.1 PROGRAM COMPONENTS OTHER THAN PROGRAM SECTIONS 127. . . . . . . . . . . . . . . . . . . . . 

12.2 PROGRAM SECTION CONFIGURATION 130. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.3 SUBPROGRAM (M98, M99) 136. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.FUNCTIONS TO SIMPLIFY PROGRAMMING 140. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1 CANNED CYCLE 141. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.1 High–speed Peck Drilling Cycle (G73) 145. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.2 Left–handed Tapping Cycle (G74) 147. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.3 Fine Boring Cycle (G76) 149. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.4 Drilling Cycle, Spot Drilling (G81) 151. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.5 Drilling Cycle Counter Boring Cycle (G82) 153. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.6 Peck Drilling Cycle (G83) 155. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.7 Small–hole peck drilling cycle (G83) 157. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.8 Tapping Cycle (G84) 161. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.9 Boring Cycle (G85) 163. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.10 Boring Cycle (G86) 165. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.11 Back Boring Cycle (G87) 167. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.12 Boring Cycle (G88) 169. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.13 Boring Cycle (G89) 171. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.1.14 Canned Cycle Cancel (G80) 173. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.2 RIGID TAPPING 176. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.2.1 Rigid Tapping (G84) 177. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.2.2 Left–handed Rigid Tapping Cycle (G74) 180. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.2.3 Peck Rigid Tapping Cycle (G84 or G74) 183. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.2.4 Canned Cycle Cancel (G80) 185. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.3 CANNED GRINDING CYCLE (FOR GRINDING MACHINE) 186. . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.3.1 Plunge Grinding Cycle (G75) 187. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.3.2 Direct Constant–Dimension Plunge Grinding Cycle (G77) 189. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.3.3 Continuous–Feed Surface Grinding Cycle (G78) 191. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.3.4 Intermittent–Feed Surface Grinding Cycle (G79) 193. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.4 GRINDING–WHEEL WEAR COMPENSATION BY CONTINUOUS DRESSING 
(FOR GRINDING MACHINE) 195. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.5 IN–FEED GRINDING ALONG THE Y AND Z AXES AT THE END OF TABLE SWING 
(FOR GRINDING MACHINE) 197. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.6 OPTIONAL ANGLE CHAMFERING AND CORNER ROUNDING 198. . . . . . . . . . . . . . . . . . . . . . . 

13.7 EXTERNAL MOTION FUNCTION (G81) 201. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.8 INDEX TABLE INDEXING FUNCTION 202. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.COMPENSATION FUNCTION 205. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.1 TOOL LENGTH OFFSET (G43, G44, G49) 206. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.1.1 General 206. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.1.2 G53, G28, and G30 Commands in Tool Length Offset Mode 211. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.2 AUTOMATIC  TOOL LENGTH MEASUREMENT (G37) 214. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01Table of Contents

c–4

14.3 TOOL  OFFSET (G45–G48) 218. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4 OVERVIEW OF CUTTER COMPENSATION C (G40–G42) 223. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.5 DETAILS OF CUTTER COMPENSATION C 229. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.1 General 229. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.2 Tool Movement in Start–up 230. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.3 Tool Movement in Offset Mode 234. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.4 Tool Movement in Offset Mode Cancel 248. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.5 Interference  Check 254. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.6 Overcutting by Cutter Compensation 259. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.7 Input Command from MDI 262. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.8 G53,G28,G30 and G29 Commands in Cutter Compensation C Mode 263. . . . . . . . . . . . . . . . . . . . . . . . . 
14.5.9 Corner Circular Interpolation (G39) 282. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6 TOOL COMPENSATION VALUES, NUMBER OF COMPENSATION VALUES, 
AND ENTERING VALUES FROM THE PROGRAM (G10) 284. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.7 SCALING (G50, G51) 286. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.8 COORDINATE SYSTEM ROTATION (G68, G69) 291. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.9 NORMAL DIRECTION CONTROL (G40.1, G41.1, G42.1 OR G150, G151, G152) 297. . . . . . . . . . . 

14.10 PROGRAMMABLE MIRROR IMAGE (G50.1, G51.1) 302. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.CUSTOM MACRO 304. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.1 VARIABLES 305. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.2 SYSTEM VARIABLES 308. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.3 ARITHMETIC AND LOGIC OPERATION 317. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.4 MACRO STATEMENTS AND NC STATEMENTS 322. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.5 BRANCH AND REPETITION 323. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.5.1 Unconditional Branch (GOTO Statement) 323. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.5.2 Conditional Branch (IF Statement) 324. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.5.3 Repetition (While Statement) 325. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.6 MACRO CALL 328. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.1 Simple Call (G65) 329. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.2 Modal Call (G66) 333. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.3 Macro Call Using G Code 335. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.4 Macro Call Using an M Code 336. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.5 Subprogram Call Using an M Code 337. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.6 Subprogram Calls Using a T Code 338. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.6.7 Sample Program 339. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.7 PROCESSING MACRO STATEMENTS 341. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.7.1 Details of NC statements and macro statements execution 341. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.7.2 Caution for using system variables 343. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.8 REGISTERING CUSTOM MACRO PROGRAMS 346. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.9 LIMITATIONS 347. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.10 EXTERNAL OUTPUT COMMANDS 348. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.11 INTERRUPTION TYPE CUSTOM MACRO 352. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.11.1 Specification Method 353. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
15.11.2 Details of Functions 354. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.PATTERN DATA INPUT FUNCTION 362. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
16.1 DISPLAYING THE PATTERN MENU 363. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.2 PATTERN  DATA DISPLAY 367. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01 ����� �� ��	
�	
�

c–5

16.3 CHARACTERS AND CODES TO BE USED FOR THE PATTERN DATA 
INPUT FUNCTION 371. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

17.PROGRAMMABLE PARAMETER ENTRY (G10) 373. . . . . . . . . . . . . . . . . . . . . . . . . . . 

18.MEMORY OPERATION USING FS10/11 TAPE FORMAT 375. . . . . . . . . . . . . . . . . . . 

19.HIGH SPEED CUTTING FUNCTIONS 376. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
19.1 FEEDRATE CLAMPING BY ARC RADIUS 377. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

19.2 ADVANCED PREVIEW CONTROL (G08) 378. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

19.3 AI ADVANCED PREVIEW CONTROL FUNCTION/AI CONTOUR CONTROL 
FUNCTION 380. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

19.4 LOOK–AHEAD BELL–SHAPED ACCELERATION/DECELERATION BEFORE 
INTERPOLATION TIME CONSTANT CHANGE FUNCTION 398. . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.AXIS CONTROL FUNCTIONS 403. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
20.1 SIMPLE SYNCHRONOUS CONTROL 404. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.2 ROTARY AXIS ROLL–OVER 407. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.3 ANGULAR AXIS CONTROL 408. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.4 TANDEM CONTROL 410. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

III.  OPERATION

1. GENERAL 413. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.1 MANUAL OPERATION 414. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.2 TOOL MOVEMENT BY PROGRAMMING– AUTOMATIC OPERATION 416. . . . . . . . . . . . . . . . . . 

1.3 AUTOMATIC OPERATION 417. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4 TESTING A PROGRAM 419. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.4.1 Check by Running the Machine 419. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.4.2 How to View the Position Display Change without Running the Machine 420. . . . . . . . . . . . . . . . . . . . . . 

1.5 EDITING A PART PROGRAM 421. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.6 DISPLAYING AND SETTING  DATA 422. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7 DISPLAY 425. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.7.1 Program Display 425. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.7.2 Current Position Display 426. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.7.3 Alarm Display 426. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.7.4 Parts Count Display, Run Time Display 427. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.7.5 Graphic Display 427. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.8 DATA INPUT/OUTPUT 428. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2. OPERATIONAL DEVICES 429. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.1 SETTING AND DISPLAY UNITS 430. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.1.1 7.2″ Monochrome/8.4″ Color LCD/MDI Unit (Horizontal Type) 431. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.1.2 7.2″ Monochrome/8.4″ Color LCD/MDI Unit (Vertical Type) 432. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.1.3 Key Location of MDI (Horizontal Type LCD/MDI Unit) 433. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.1.4 Key Location of MDI (Vertical Type LCD/MDI Unit) 434. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2 EXPLANATION OF THE KEYBOARD 435. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3 FUNCTION KEYS AND SOFT KEYS 437. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01Table of Contents

c–6

2.3.1 General Screen Operations 437. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.3.2 Function Keys 438. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.3.3 Soft Keys 439. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.3.4 Key Input and Input Buffer 455. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.3.5 Warning Messages 456. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4 EXTERNAL I/O DEVICES 457. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.4.1 FANUC Handy File 459. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.5 POWER ON/OFF 460. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.5.1 Turning on the Power 460. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.5.2 Screen Displayed at Power–on 461. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.5.3 Power Disconnection 462. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3. MANUAL OPERATION 463. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
3.1 MANUAL REFERENCE POSITION RETURN 464. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.2 JOG FEED 466. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.3 INCREMENTAL FEED 468. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.4 MANUAL HANDLE FEED 469. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.5 MANUAL ABSOLUTE ON AND OFF 472. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4. AUTOMATIC OPERATION 477. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4.1 MEMORY OPERATION 478. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.2 MDI OPERATION 481. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.3 DNC OPERATION 485. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.4 PROGRAM RESTART 487. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.5 SCHEDULING FUNCTION 494. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.6 SUBPROGRAM CALL FUNCTION (M198) 499. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.7 MANUAL HANDLE INTERRUPTION 501. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.8 MIRROR IMAGE 504. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.9 MANUAL INTERVENTION AND RETURN 506. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.10 DNC OPERATION WITH MEMORY CARD 508. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4.10.1 Specification 508. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4.10.2 Operations 509. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.10.2.1 DNC Operation 509. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.10.2.2 Subprogram Call (M198) 510. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.10.3 Limitation and Notes 511. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4.10.4 Parameter 511. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4.10.5 Procedure for Fixing the Memory Card 511. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5. TEST OPERATION 513. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
5.1 MACHINE LOCK AND AUXILIARY FUNCTION LOCK 514. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.2 FEEDRATE OVERRIDE 516. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.3 RAPID TRAVERSE OVERRIDE 517. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4 DRY RUN 518. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.5 SINGLE BLOCK 519. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6. SAFETY FUNCTIONS 521. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
6.1 EMERGENCY STOP 522. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01 ����� �� ��	
�	
�

c–7

6.2 OVERTRAVEL 523. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6.3 STORED STROKE CHECK 524. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6.4 STROKE LIMIT CHECK PRIOR TO PERFORMING MOVEMENT 528. . . . . . . . . . . . . . . . . . . . . . . 

7. ALARM AND SELF–DIAGNOSIS FUNCTIONS 531. . . . . . . . . . . . . . . . . . . . . . . . . . . . 
7.1 ALARM DISPLAY 532. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2 ALARM HISTORY DISPLAY 534. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.3 CHECKING BY SELF–DIAGNOSTIC SCREEN 535. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8. DATA INPUT/OUTPUT 538. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.1 FILES 539. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.2 FILE SEARCH 541. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.3 FILE DELETION 543. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.4 PROGRAM INPUT/OUTPUT 544. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.4.1 Inputting a Program 544. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.4.2 Outputting a Program 547. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.5 OFFSET DATA INPUT AND OUTPUT 549. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.5.1 Inputting Offset Data 549. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.5.2 Outputting Offset Data 550. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.6 INPUTTING AND OUTPUTTING PARAMETERS AND PITCH ERROR 
COMPENSATION DATA 551. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.6.1 Inputting Parameters 551. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.6.2 Outputting Parameters 552. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.6.3 Inputting Pitch Error Compensation Data 553. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.6.4 Outputting Pitch Error Compensation Data 554. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.7 INPUTTING/OUTPUTTING CUSTOM MACRO COMMON VARIABLES 555. . . . . . . . . . . . . . . . . 
8.7.1 Inputting Custom Macro Common Variables 555. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.7.2 Outputting Custom Macro Common Variable 556. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.8 DISPLAYING DIRECTORY OF FLOPPY CASSETTE 557. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.1 Displaying the Directory 558. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.2 Reading Files 561. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.3 Outputting Programs 562. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.4 Deleting Files 563. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.9 OUTPUTTING A PROGRAM LIST FOR A SPECIFIED GROUP 565. . . . . . . . . . . . . . . . . . . . . . . . . 

8.10 DATA INPUT/OUTPUT ON THE ALL IO SCREEN 566. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.10.1 Setting Input/Output–Related Parameters 567. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.10.2 Inputting and Outputting Programs 568. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.10.3 Inputting and Outputting Parameters 573. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.10.4 Inputting and Outputting Offset Data 575. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.10.5 Outputting Custom Macro Common Variables 577. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.10.6 Inputting and Outputting Floppy Files 578. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.11 DATA INPUT/OUTPUT USING A MEMORY CARD 583. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9. EDITING PROGRAMS 595. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1 INSERTING, ALTERING AND DELETING A WORD 596. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.1.1 Word Search 597. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.2 Heading a Program 599. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.3 Inserting a Word 600. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.4 Altering a Word 601. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.5 Deleting a Word 602. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01Table of Contents

c–8

9.2 DELETING BLOCKS 603. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.2.1 Deleting a Block 603. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.2.2 Deleting Multiple Blocks 604. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.3 PROGRAM NUMBER SEARCH 605. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.4 SEQUENCE NUMBER SEARCH 606. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.5 DELETING PROGRAMS 608. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.1 Deleting One Program 608. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.2 Deleting All Programs 608. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.3 Deleting More Than One Program by Specifying a Range 609. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.6 EXTENDED PART PROGRAM EDITING FUNCTION 610. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.6.1 Copying an Entire Program 611. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.6.2 Copying Part of a Program 612. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.6.3 Moving Part of a Program 613. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.6.4 Merging a Program 614. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.6.5 Supplementary Explanation for Copying, Moving and Merging 615. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.6.6 Replacement of Words and Addresses 617. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.7 EDITING OF CUSTOM MACROS 619. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.8 BACKGROUND EDITING 620. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.9 PASSWORD FUNCTION 621. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.CREATING PROGRAMS 623. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.1 CREATING PROGRAMS USING THE MDI PANEL 624. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2 AUTOMATIC INSERTION OF SEQUENCE NUMBERS 625. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.3 CREATING PROGRAMS IN TEACH IN MODE (PLAYBACK) 627. . . . . . . . . . . . . . . . . . . . . . . . . . 

10.4 CONVERSATIONAL PROGRAMMING WITH GRAPHIC FUNCTION 630. . . . . . . . . . . . . . . . . . . . 

11.SETTING AND DISPLAYING DATA 634. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1 SCREENS DISPLAYED BY FUNCTION KEY 
POS

642. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1.1 Position Display in the Work Coordinate System 643. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.2 Position Display in the Relative Coordinate System 644. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.3 Overall Position Display 646. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.4 Presetting the Workpiece Coordinate System 647. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.5 Actual Feedrate Display 648. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.6 Display of Run Time and Parts Count 650. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.7 Operating Monitor Display 651. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.2 SCREENS DISPLAYED BY FUNCTION KEY 
PROG

 

(IN MEMORY MODE OR MDI MODE) 653. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.1 Program Contents Display 654. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.2 Current Block Display Screen 655. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.3 Next Block Display Screen 656. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.4 Program Check Screen 657. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.5 Program Screen for MDI Operation 658. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.3 SCREENS DISPLAYED BY FUNCTION KEY 
PROG

 (IN THE EDIT MODE) 659. . . . . . . . . . . . . . . 

11.3.1 Displaying Memory Used and a List of Programs 659. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.3.2 Displaying a Program List for a Specified Group 662. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.4 SCREENS DISPLAYED BY FUNCTION KEY 
OFS/SET

665. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.4.1 Setting and Displaying the Tool Offset Value 666. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01 ����� �� ��	
�	
�

c–9

11.4.2 Tool Length Measurement 668. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.3 Displaying and Entering Setting Data 670. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.4 Sequence Number Comparison and Stop 672. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.5 Displaying and Setting Run Time, Parts Count, and Time 674. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.6 Displaying and Setting the Workpiece Origin Offset Value 676. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.7 Direct Input of Measured Workpiece Origin Offsets 677. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.8 Displaying and Setting Custom Macro Common Variables 679. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.9 Displaying Pattern Data and Pattern Menu 680. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.10 Displaying and Setting the Software Operator’s Panel 682. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.11 Displaying and Setting Tool Life Management Data 684. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.12 Displaying and Setting Extended Tool Life Management 687. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.5 SCREENS DISPLAYED BY FUNCTION KEY 
SYSTEM

692. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.5.1 Displaying and Setting Parameters 693. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.5.2 Displaying and Setting Pitch Error Compensation Data 695. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.6 DISPLAYING THE PROGRAM NUMBER, SEQUENCE NUMBER, AND STATUS, 
AND WARNING MESSAGES FOR DATA SETTING OR INPUT/OUTPUT OPERATION 698. . . . . 

11.6.1 Displaying the Program Number and Sequence Number 698. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.6.2 Displaying the Status and Warning for Data Setting or Input/Output Operation 699. . . . . . . . . . . . . . . . . . 

11.7 SCREENS DISPLAYED BY FUNCTION KEY 
MESSAGE

701. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.7.1 External Operator Message History Display 701. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.8 CLEARING THE SCREEN 703. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.8.1 Erase Screen Display 703. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.8.2 Automatic Erase Screen Display 704. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.GRAPHICS FUNCTION 705. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
12.1 GRAPHICS DISPLAY 706. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.2 DYNAMIC GRAPHIC DISPLAY 712. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
12.2.1 Path Drawing 712. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
12.2.2 Solid Graphics 721. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.HELP FUNCTION 733. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.SCREEN HARDCOPY 738. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

IV.  MANUAL GUIDE 0i

1. MANUAL GUIDE 0i 743. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.1 OVERVIEW 744. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.2 INTRODUCTION 745. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3 PROGRAM CREATING OPERATIONS 746. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.1 Start Up 746. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.2 Start Up 747. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.3 Creating a New Part Program 748. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.4 Process Assistance 750. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.5 G–code Assistance 752. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.3.6 M–code Assistance 755. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4 CANNED CYCLE MACHINING 757. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.4.1 Operation 758. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.4.2 Data for Each Canned Cycle 760. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.5 CONTOUR PROGRAMMING 775. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



B–64124EN/01Table of Contents

c–10

1.5.1 Operations of Contour Programming 776. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.5.2 Detail of Contour Figure Data 785. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.5.3 Detail of Contour Calculation 787. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.5.4 Details of Auxiliary Calculation 798. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.5.5 Others 808. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.6 PARAMETER 810. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7 ALARMS 811. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

V.  MAINTENANCE

1. METHOD OF REPLACING BATTERY 815. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.1 BATTERY FOR MEMORY BACKUP (3VDC) 816. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.2 BATTERY FOR SEPARATE ABSOLUTE PULSE CODERS (6VDC) 820. . . . . . . . . . . . . . . . . . . . . . 

1.3 BATTERY FOR ABSOLUTE PULSE CODER BUILT INTO THE MOTOR (6VDC) 821. . . . . . . . . . 

APPENDIX

A. TAPE CODE LIST 825. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

B. LIST OF FUNCTIONS AND TAPE FORMAT 828. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

C. RANGE OF COMMAND VALUE 833. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D. NOMOGRAPHS 836. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
D.1 INCORRECT THREADED LENGTH 837. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D.2 SIMPLE CALCULATION OF INCORRECT THREAD LENGTH 839. . . . . . . . . . . . . . . . . . . . . . . . . 

D.3 TOOL PATH AT CORNER 841. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D.4 RADIUS DIRECTION ERROR AT CIRCLE CUTTING 844. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

E. STATUS WHEN TURNING POWER ON, WHEN CLEAR AND 
WHEN RESET 845. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

F. CHARACTER–TO–CODES CORRESPONDENCE TABLE 847. . . . . . . . . . . . . . . . . . 

G. ALARM LIST 848. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 



I.  GENERAL



GENERALB–64124EN/01 1. GENERAL

3

1 GENERAL
This manual consists of the following parts:

I. GENERAL
Describes chapter organization, applicable models, related manuals,
and notes for reading this manual.

II. PROGRAMMING
Describes each function:  Format used to program functions in the NC
language, characteristics, and restrictions.  When a program is created
through conversational automatic programming function, refer to the
manual for the conversational automatic programming function
(Table 1).

III. OPERATION
Describes the manual operation and automatic operation of a machine,
procedures for inputting and outputting data, and procedures for
editing a program.

IV. MANUAL GUIDE 0i
Describes MANUAL GUIDE 0i.

V. MAINTENANCE
Describes procedures for replacing batteries.

APPENDIX
Lists tape codes, valid data ranges, and error codes.

Some functions described in this manual may not be applied to some
products.  For detail, refer to the DESCRIPTIONS manual(B–64112EN).

This manual does not describe parameters in detail.  For details on
parameters mentioned in this manual, refer to the manual for parameters
(B–64120EN).

This manual describes all optional functions.  Look up the options
incorporated into your system in the manual written by the machine tool
builder.

The models covered by this manual, and their abbreviations are:

Product name Abbreviations

FANUC Series 0i–MC 0i–MC Series 0i

����� ���� 	
��
�



GENERAL1. GENERAL B–64124EN/01

4

This manual uses the following symbols:

Indicates a combination of axes such as X__ Y__ Z (used in
PROGRAMMING.).

Indicates the end of a block.  It actually corresponds to the ISO code LF
or EIA code CR.

The following table lists the manuals related to Series 0i–C and 0i
Mate–C. This manual is indicated by an asterisk(*).

Manual name Specificationnumber

DESCRIPTIONS B–64112EN

CONNECTION MANUAL (HARDWARE) B–64113EN

CONNECTION MANUAL (FUNCTION) B–64113EN–1

Series 0i–TC OPERATOR’S MANUAL B–64114EN

Series 0i–MC OPERATOR’S MANUAL B–64124EN *

Series 0i Mate–TC OPERATOR’S MANUAL B–64134EN

Series 0i Mate–MC OPERATOR’S MANUAL B–64144EN

MAINTENANCE MANUAL B–64115EN

PARAMETER MANUAL B–64120EN

PROGRAMMING MANUAL

Macro Compiler/Macro Executor 
PROGRAMMING MANUAL

B–61803E–1

FANUC MACRO COMPILER (For Personal Computer)
PROGRAMMING MANUAL

B–66102E

PMC

PMC Ladder Language PROGRAMMING MANUAL B–61863E

PMC C Language PROGRAMMING MANUAL B–61863E–1

Network

Profibus–DP Board OPERATOR’S MANUAL B–62924EN

Ethernet Board/DATA SERVER Board 
OPERATOR’S MANUAL

B–63354EN

FAST Ethernet Board/FAST DATA SERVER 
OPERATOR’S MANUAL

B–63644EN

DeviceNet Board OPERATOR’S MANUAL B–63404EN

OPEN CNC

FANUC OPEN CNC OPERATOR’S MANUAL
(Basic Operation Package (For Windows 95/NT))

B–62994EN

FANUC OPEN CNC OPERATOR’S MANUAL
(Operation Management Package)

B–63214EN

Special symbols

� PI _

� ;

Related manuals of
Series 0i–C/0i Mate–C



GENERALB–64124EN/01 1. GENERAL

5

The following table lists the manuals related to Servo Motor αis/αi/βis
series.

Manual name Specificationnumber

FANUC AC SERVO MOTOR αis/αi series 
DESCRIPTIONS

B–65262EN

FANUC AC SERVO MOTOR βis series DESCRIPTIONS B–65302EN

FANUC AC SERVO MOTOR αis/αi/βis series
PARAMETER MANUAL

B–65270EN

FANUC AC SPINDLE MOTOR αi series DESCRIPTIONS B–65272EN

FANUC AC SPINDLE MOTOR βi series DESCRIPTIONS B–65312EN

FANUC AC SPINDLE MOTOR αi/βi series
PARAMETER MANUAL

B–65280EN

FANUC SERVO AMPLIFIER αi series DESCRIPTIONS B–65282EN

FANUC SERVO AMPLIFIER βi series DESCRIPTIONS B–65322EN

FANUC AC SERVO MOTOR αis/αi series
FANUC AC SPINDLE MOTOR αi series
FANUC SERVO AMPLIFIER αi series 
MAINTENANCE MANUAL

B–65285EN

FANUC AC SERVO MOTOR βi series
FANUC AC SPINDLE MOTOR βi series
FANUC SERVO AMPLIFIER βi series 
MAINTENANCE MANUAL

B–65325EN

Related manuals of
Servo Motor αis/αi/βis
series



GENERAL1. GENERAL B–64124EN/01

6

When machining the part using the CNC machine tool, first prepare the
program, then operate the CNC machine by using the program.

1) First, prepare the program from a part drawing to operate the CNC
machine tool.
How to prepare the program is described in the Chapter II.
PROGRAMMING.

2) The program is to be read into the CNC system.  Then, mount the
workpieces and tools on the machine, and operate the tools according
to the programming.  Finally, execute the machining actually.
How to operate the CNC system is described in the Chapter III.
OPERATION.

Part 
drawing

Part 
programming

CHAPTER II  PROGRAMMING CHAPTER III  OPERATION

CNC MACHINE TOOL

Before the actual programming, make the machining plan for how to
machine the part.
Machining plan
1. Determination of workpieces machining range
2. Method of mounting workpieces on the machine tool
3. Machining sequence in every machining process
4. Machining tools and machining
Decide the machining method in every machining process.

Machining process 1 2 3Machining process

Machining procedure Feed cutting Side cutting
Hole 

machining

1.  Machining method
: Rough
  Semi
  Finish

2.  Machining tools

3.  Machining conditions
: Feedrate
  Cutting depth

4.  Tool path

1.1
GENERAL FLOW 
OF OPERATION OF 
CNC MACHINE 
TOOL



GENERALB–64124EN/01 1. GENERAL

7

Tool

Side cutting

Face cutting

Hole machining

Prepare the program of the tool path and machining condition
according to the workpiece figure, for each machining.



GENERAL1. GENERAL B–64124EN/01

8

CAUTION
1 The function of an CNC machine tool system depends not

only on the CNC, but on the combination of the machine
tool, its magnetic cabinet, the servo system, the CNC, the
operator ’s panels, etc.  It is too difficult to describe the
function, programming, and operation relating to all
combinations.  This manual generally describes these from
the stand–point of the CNC.  So, for details on a particular
CNC machine tool, refer to the manual issued by the
machine tool builder, which should take precedence over
this manual.

2 Headings are placed in the left margin so that the reader can
easily access necessary information.  When locating the
necessary information, the reader can save time by
searching though these headings.

3 This manual describes as many reasonable variations in
equipment usage as possible.  It cannot address every
combination of features, options and commands that
should not be attempted.
If a particular combination of operations is not described, it
should not be attempted.

CAUTION
Machining programs, parameters, variables, etc. are stored
in the CNC unit internal non–volatile memory.  In general,
these contents are not lost by the switching ON/OFF of the
power.  However, it is possible that a state can occur where
precious data stored in the non–volatile memory has to be
deleted, because of deletions from a maloperation, or by a
failure restoration.  In order to restore rapidly when this kind
of mishap occurs, it is recommended that you create a copy
of the various kinds of data beforehand.

1.2
CAUTIONS ON
READING THIS
MANUAL

1.3
CAUTIONS ON
VARIOUS KINDS OF
DATA



II.  PROGRAMMING



PROGRAMMINGB–64124EN/01 1. GENERAL

11

1 GENERAL



PROGRAMMING1. GENERAL B–64124EN/01

12

The tool moves along straight lines and arcs constituting the workpiece
parts figure (See II–4).

The function of moving the tool along straight lines and arcs is called the
interpolation.

Program
G01 X_ _ Y_ _ ;
X_ _ ;

Tool

Workpiece

Fig. 1.1 (a)  Tool movement along a straight line

Program
G03X_ _Y_ _R_ _;

Workpiece
Tool

Fig. 1.1 (b)  Tool movement along an arc

1.1
TOOL MOVEMENT 
ALONG WORKPIECE 
PARTS FIGURE–
INTERPOLATION

Explanations

� Tool movement along a
straight line

� Tool movement along an
arc



PROGRAMMINGB–64124EN/01 1. GENERAL

13

Symbols of the programmed commands G01, G02, ... are called the
preparatory function and specify the type of interpolation conducted in
the control unit.

(a) Movement along straight line

G01 Y_ _;
X– –Y– – – –;

(b) Movement along arc

G03X––Y––R––;

Control unit

X axis

Y axis

Tool 
move-
ment

Interpolation

a)Movement 
along straight 
line

b)Movement 
along arc

Fig. 1.1 (c)  Interpolation function

NOTE
Some machines move tables instead of tools but this
manual assumes that tools are moved against workpieces.



PROGRAMMING1. GENERAL B–64124EN/01

14

Movement of the tool at a specified speed for cutting a workpiece is called
the feed.

Tool

Workpiece

Table

F

mm/min

Fig. 1.2  Feed function

Feedrates can be specified by using actual numerics.  For example, to feed
the tool at a rate of 150 mm/min, specify the following in the program:
F150.0
The function of deciding the feed rate is called the feed function (See
II–5).

1.2
FEED–FEED 
FUNCTION



PROGRAMMINGB–64124EN/01 1. GENERAL

15

A CNC machine tool is provided with a fixed position. Normally, tool
change and programming of absolute zero point as described later are
performed at this position. This position is called the reference position.

Reference position

Tool

Workpiece

Table

Fig. 1.3.1  Reference position

The tool can be moved to the reference position in two ways:

(1)Manual reference position return (See III–3.1)
Reference position return is performed by manual button operation.

(2)Automatic reference position return (See II–6)
In general, manual reference position return is performed first after the
power is turned on. In order to move the tool to the reference position
for tool change thereafter, the function of automatic reference position
return is used.

1.3
PART DRAWING AND
TOOL MOVEMENT

1.3.1
Reference Position
(Machine–Specific 
Position)

���
�
�����



PROGRAMMING1. GENERAL B–64124EN/01

16

Z

Y

X

Part drawing

Z

�



Coordinate system

Z

Y

X

Tool

Workpiece

Machine tool

Program

Command

CNC

Fig. 1.3.2 (a) Coordinate system

The following two coordinate systems are specified at different locations:
(See II–7)

(1)Coordinate system on part drawing
The coordinate system is written on the part drawing.  As the program
data, the coordinate values on this coordinate system are used.

(2)Coordinate system specified by the CNC
The coordinate system is prepared on the actual machine tool table.
This can be achieved by programming the distance from the current
position of the tool to the zero point of the coordinate system to be set.

230

300
Program
zero point

Distance to the zero point of a coor-
dinate system to be set

Present tool position

Y

X

Fig. 1.3.2 (b)  Coordinate system specified by the CNC

1.3.2
Coordinate System on
Part Drawing and
Coordinate System
Specified by CNC –
Coordinate System

Explanations

� Coordinate system



PROGRAMMINGB–64124EN/01 1. GENERAL

17

The positional relation between these two coordinate systems is
determined when a workpiece is set on the table.

Y Y

Table

Workpiece

X

X

Coordinate system spe-
cified by the CNC estab-
lished on the table

Coordinate system on
part drawing established
on the workpiece

Fig. 1.3.2 (c)  Coordinate system specified by CNC and coordinate
  systemon part drawing

The tool moves on the coordinate system specified by the CNC in
accordance with the command program generated with respect to the
coordinate system on the part drawing, and cuts a workpiece into a shape
on the drawing.
Therefore, in order to correctly cut the workpiece as specified on the
drawing, the two coordinate systems must be set at the same position.

To set the two coordinate systems at the same position, simple methods
shall be used according to workpiece shape, the number of machinings.

(1)Using a standard plane and point of the workpiece.

Program 
zero point

Y

X

Workpiece’s 
standard pointFixed distance

Bring the tool center to the workpiece standard point.  
And set the coordinate system specified by CNC at this position.

Fixed distance

� Methods of setting the
two coordinate systems
in the same position



PROGRAMMING1. GENERAL B–64124EN/01

18

(2)Mounting a workpiece directly against the jig

Jig

Program zero point

Meet the tool center to the reference position.  And set the coordinate system
specified by CNC at this position.  (Jig shall be mounted on the predetermined
point from the reference position.)

 

(3)Mounting a workpiece on a pallet, then mounting the workpiece and
pallet on the jig

ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ
ÂÂÂÂÂÂÂ

Pallet

(Jig and coordinate system shall be specified by the same as (2)).

Jig

Workpiece

  



PROGRAMMINGB–64124EN/01 1. GENERAL

19

Command for moving the tool can be indicated by absolute command or
incremental command (See II–8.1).

The tool moves to a point at “the distance from zero point of the
coordinate system” that is to the position of the coordinate values.

B(10.0,30.0,20.0)

Y



Tool

�

Command specifying movement from
point A to point B

�

G90 X10.0 Y30.0 Z20.0 ;

Coordinates  of point B

Specify the distance from the previous tool position to the next tool
position.

Y



�

�

�

X=40.0

Z=–10.0

G91 X40.0 Y–30.0 Z–10.0 ;

Distance and direction for 
movement along each axis

Tool

Command specifying movement from
point A to point B

Y=–30.0

1.3.3
How to Indicate
Command Dimensions 
for Moving the Tool – 
Absolute, Incremental 
Commands

Explanations

� Absolute command

� Incremental command



PROGRAMMING1. GENERAL B–64124EN/01

20

The speed of the tool with respect to the workpiece when the workpiece
is cut  is called the cutting speed.
As for the CNC, the cutting speed can be specified by the spindle speed
in min-1 unit.

min-1 � D mm

m/min

Tool

V: Cutting speed

Workpiece

Spindle speed N
Tool diameter

  

<When a workpiece should be machined with a tool 100 mm in
diameter at a cutting speed of 80 m/min. >
The spindle speed is approximately 250 min-1, which is obtained from 
N=1000v/πD. Hence the following command is required:

S250;
Commands related to the spindle speed are called the spindle speed
function (See II–9) .

1.4
CUTTING SPEED – 
SPINDLE SPEED 
FUNCTION

Examples



PROGRAMMINGB–64124EN/01 1. GENERAL

21

When drilling, tapping, boring, milling or the like, is performed, it is
necessary to select a suitable tool. When a number is assigned to each tool
and the number is specified in the program, the corresponding tool is
selected.

01

02

Tool number

ATC magazine

 

<When No.01 is assigned to a drilling tool>
When the tool is stored at location 01 in the ATC magazine, the tool
can be selected by specifying T01. This is called the tool function (See
II–10).

1.5
SELECTION OF TOOL
USED FOR VARIOUS 
MACHINING – TOOL 
FUNCTION

Examples



PROGRAMMING1. GENERAL B–64124EN/01

22

When machining is actually started, it is necessary to rotate the spindle,
and feed coolant. For this purpose, on–off operations of spindle motor and
coolant valve should be controlled.

Workpiece

Tool

Coolant

  

The function of specifying the on–off operations of the components of the
machine is called the miscellaneous function.  In general, the function is
specified by an M code (See II–11).
For example, when M03 is specified, the spindle is rotated clockwise at
the specified spindle speed.

1.6
COMMAND FOR 
MACHINE 
OPERATIONS – 
MISCELLANEOUS
FUNCTION



PROGRAMMINGB–64124EN/01 1. GENERAL

23

A group of commands given to the CNC for operating the machine is
called the program.  By specifying the commands, the tool is moved along
a straight line or an arc, or the spindle motor is turned on and off.
In the program, specify the commands in the sequence of actual tool
movements.

Block

⋅

⋅

⋅

⋅

Program

Tool movement sequence

Block

Block

Block

Block

Fig. 1.7 (a)  Program configuration

A group of commands at each step of the sequence is called the block.
The program consists of a group of blocks for a series of machining.  The
number for discriminating each block is called the sequence number, and
the number  for discriminating each program is called the program
number (See II–12).

1.7
PROGRAM 
CONFIGURATION



PROGRAMMING1. GENERAL B–64124EN/01

24

 The block and the program have the following configurations.

�����     ���       ���� ������        ���      ���       � ��  ;

� �����

Sequence 
number

Preparatory 
function

Dimension word Miscel-
laneous 
function

Spindle 
function

Tool 
func-
tion

End of 
block

Fig. 1.7 (b)  Block configuration

A block starts with a sequence number to identify  the block and ends with
an end–of–block code.
This manual indicates the end–of–block code by ; (LF in the ISO code and
CR in the EIA code).
The contents of the dimension word depend on the preparatory function.
In this manual, the portion of the dimension word may be represent as IP_.

;
O����;

⋅

⋅

⋅

M30 ;

Program number

Block

Block

Block

End of program

⋅

⋅

⋅

Fig. 1.7 (c)  Program configuration

Normally, a program number is specified after the end–of–block (;) code
at the beginning of the program, and a program end code (M02 or M30)
is specified at the end of the program.

Explanations

� Block

� Program



PROGRAMMINGB–64124EN/01 1. GENERAL

25

When machining of the same pattern appears at many portions of a
program, a program for the pattern is created.  This is called the
subprogram. On the other hand, the original program is called the main
program. When a subprogram execution command appears during
execution of the main program, commands of the subprogram are
executed. When execution of the subprogram is finished, the sequence
returns to the main program.

Main program

M98P1001

⋅
⋅

M98P1002

M98P1001

⋅

⋅

⋅

⋅

⋅

⋅

⋅

⋅

⋅

Subprogram #1

Subprogram #2

O1001

M99

Program for 
hole #1

Program for
hole #2

O1002

M99

  

Hole #1

Hole #2

Hole #1

Hole #2

� Main program and
subprogram



PROGRAMMING1. GENERAL B–64124EN/01

26

Usually, several tools are used for machining one workpiece.  The tools
have different tool length. It is very troublesome to change the program
in accordance with the tools.
Therefore, the length of each tool used should be measured in advance.
By setting the difference between the length of the standard tool and the
length of each tool in the CNC (data display and setting : see III–11),
machining can be performed without altering the program even when the
tool is changed. This function is called tool length compensation.

H1 H2 H3 H4

ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇ

ÂÂ
ÂÂ
ÂÂ
ÂÂ
ÂÂ

Standard
tool

Workpiece

 

Because a cutter has a radius, the center of the cutter path goes around the
workpiece with the cutter radius deviated.

Workpiece

Cutter path using cutter 
compensation

Machined part
figure

Cutter

  

If radius of cutters are stored in the CNC (Data Display and Setting : see
III–11), the tool can be moved by cutter radius apart from the machining
part figure.  This function is called cutter  compensation.

1.8
TOOL FIGURE AND
TOOL MOTION BY
PROGRAM

Explanations

� Machining using the end
of cutter – Tool length
compensation function
(See II–14.1)

� Machining using the side
of cutter – Cutter
compensation function
(See II–14.4,14.5,14.6)



PROGRAMMINGB–64124EN/01 1. GENERAL

27

Limit switches are installed at the ends of each axis on the machine to
prevent tools from moving beyond the ends. The range in which tools can
move is called the stroke.

ÇÇÇÇÇÇ
ÇÇÇÇÇÇ
ÇÇÇÇÇÇ

Motor

Limit switch

Table

Machine zero point

Specify these distances.

Tools cannot enter this area. The area is specified by data in memory or
a program.

  

Besides strokes defined with limit switches, the operator can define an
area which the tool cannot enter using a program or data in memory.  This
function is called stroke check  (see III–6.3).

1.9
TOOL MOVEMENT
RANGE – STROKE



PROGRAMMING2. CONTROLLED AXES B–64124EN/01

28

2  CONTROLLED AXES



PROGRAMMING 2. CONTROLLED AXESB–64124EN/01

29

Item 0i–MC

No. of basic controlled axes 3 axes

Controlled axes expansion (total) Max. 4 axes (included in Cs axis)

Basic simultaneously controlled axes 3 axes

Simultaneously controlled axes 
expansion (total)

Max. 4 axes

NOTE
The number of simultaneously controllable axes for manual
operation jog feed, manual reference position return, or
manual rapid traverse) is 1 or 3 (1 when bit 0 (JAX) of
parameter 1002 is set to 0 and 3 when it is set to 1).

The names of three basic axes are always X, Y, and Z.  The name of an
additional axis can be set to A, B, C, U, V, or W by using parameter 1020.
Parameter No. 1020 is used to determine the name of each axis.

When this parameter is set to 0 or a character other than the valid
characters is specified, an axis name from 1 to 4 is assigned by default.
When a default axis name (1 to 4) is used, operation in the MEM mode
and MDI mode is disabled.

If a duplicate axis name is specified in the parameter, operation is enabled
only for the axis specified first.

2.1
CONTROLLED AXES

2.2
AXIS NAME

Limitations

� Default axis name

� Duplicate axis names



PROGRAMMING2. CONTROLLED AXES B–64124EN/01

30

The increment system consists of the least input increment (for input) and
least command increment (for output).  The least input increment is the
least increment for programming the travel distance.  The least command
increment is the least increment for moving the tool on the machine.  Both
increments are represented in mm, inches, or deg.
Set bit 1 (ISC) of parameter No. 1004 to select which increment system
to use.  The setting of bit 1 (ISC) of parameter No. 1004 is applied to all
the axes.  For example, when IS–C is selected, the increment system for
all the axes is IS–C.

Name of 
increment system

Least input 
increment

Least command
increment

Maximum 
stroke

IS–B
0.001mm
0.0001inch
0.001deg

0.001mm
0.0001inch
0.001deg

99999.999mm
9999.9999inch
99999.999deg

IS–C
0.0001mm
0.00001inch
0.0001deg

0.0001mm
0.00001inch
0.0001deg

9999.9999mm
999.99999inch
9999.9999deg

The least command increment is either metric or inch depending on the
machine tool. Set metric or inch to the parameter INM (No.100#0).
For selection between metric and inch for the least input increment, G
code (G20 or G21) or a setting parameter selects it.

Combined use of the inch system and the metric system is not allowed.
There are functions that cannot be used between axes with different unit
systems (circular interpolation, cutter compensation, etc.).  For the
increment system, see the machine tool builder’s manual.

Maximum stroke = Least command increment�99999999
See table 2.4 Incremen System.

Table 2.4 Maximum strokes

Increment system Maximum stroke

IS–B

Metric machine system ± 99999.999 mm
± 99999.999 deg

IS–B
Inch machine system ± 9999.9999 inch

± 99999.999 deg

IS–C

Metric machine system ± 9999.9999 mm
± 9999.9999 deg

IS–C
Inch machine system ± 999.99999 inch

± 9999.9999 deg

NOTE
1 A command exceeding the maximum stroke cannot be

specified.
2 The actual stroke depends on the machine tool.

2.3
INCREMENT SYSTEM

2.4
MAXIMUM STROKE



PROGRAMMINGB–64124EN/01
3. PREPARATORY FUNCTION

(G FUNCTION)

31

3 PREPARATORY FUNCTION (G FUNCTION)
A number following address G determines the meaning of the command
for the concerned block.
G codes are divided into the following two types.

Type Meaning

One–shot G code The G code is effective only in the block in which it is
specified.

Modal G code The G code is effective until another G code of the
same group is specified.

(Example )
G01 and G00 are modal G codes in group 01.

G01X ;
Z ;
X ;

G00Z ;

G01 is effective in this range.



PROGRAMMING
3. PREPARATORY FUNCTION

(G FUNCTION) B–64124EN/01

32

1. When the clear state (bit 6 (CLR) of parameter No. 3402) is set at
power–up or reset, the modal G codes are placed in the states 
described below.

(1) The modal G codes are placed in the states marked with   as
indicated in Table 3.

(2) G20 and G21 remain unchanged when the clear state is set at
power–up or reset.

(3) Which status G22 or G23 at power on is set by parameter G23 (No.
3402#7). However, G22 and G23 remain unchanged when the
clear state is set at reset.

(4) The user can select G00 or G01 by setting bit 0 (G01) of parameter
No. 3402.

(5) The user can select G90 or G91 by setting bit 3 (G91) of parameter
No. 3402. 

(6) The user can select G17, G18, or G19 by setting bit 1 (parameterG18)
and bit 2 (parameter G19) of parameter No. 3402.

2.G codes other than G10 and G11 are one–shot G codes.
3.When a G code not listed in the G code list is specified, or a G code

that has no corresponding option is specified, P/S alarm No. 010 is
output.

4.Multiple G codes can be specified in the same block if each G code
belongs to a different group.  If multiple G codes that belong to the
same group are specified in the same block, only the last G code
specified is valid.

5.If a G code belonging to group 01 is specified in a canned cycle, the
canned cycle is cancelled.  This means that the same state set by
specifying G80 is set.  Note that the G codes in group 01 are not
affected by a G code specifying a canned cycle.

6.G codes are indicated by group.
7.The group of G60 is switched according to the setting of the MDL bit

(bit 0 of parameter 5431).  (When the MDL bit is set to 0, the 00 group
is selected.  When the MDL bit is set to 1, the 01 group is selected.)

Explanations



PROGRAMMINGB–64124EN/01
3. PREPARATORY FUNCTION

(G FUNCTION)

33

Table 3 G code list (1/3)

G code Group Function

G00

 01

Positioning

G01
 01

Linear interpolation

G02
 01

Circular interpolation/Helical interpolation CW

G03 Circular interpolation/Helical interpolation CCW

G04

 00

Dwell, Exact stop

G05.1

 00

AI advanced control/AI contour control

G07.1 (G107)

 00

Cylindrical interpolation

G08  00 Advanced preview control

G09 Exact stop

G10 Programmable data input

G11 Programmable data input mode cancel

G15
17

Polar coordinates command cancel

G16
17

Polar coordinates command

G17

02

XpYp plane selection Xp: X axis or its parallel axis

G18 02 ZpXp plane selection Yp: Y axis or its parallel axis

G19 YpZp plane selection Zp: Z axis or its parallel axis

G20
06

Input in inch

G21
06

Input in mm

G22
04

Stored stroke check function on

G23
04

Stored stroke check function off

G27

00

Reference position return check

G28

00

Return to reference position

G29 00 Return from reference position

G30 2nd, 3rd and 4th reference position return

G31 Skip function

G33 01 Thread cutting

G37
00

Automatic tool length measurment

G39
00

Corner offset circular interpolation

G40

07

Cutter compensation cancel/Three dimensional compensation cancel

G41 07 Cutter compensation left/Three dimensional compensation

G42 Cutter compensation right

G40.1 (G150)

19

Normal direction control cancel mode

G41.1 (G151) 19 Normal direction control left side on

G42.1 (G152) Normal direction control right side on

G43
08

Tool length compensation + direction

G44
08

Tool length compensation – direction

G45

00

Tool offset increase

G46
00

Tool offset decrease

G47
00

Tool offset double increase

G48 Tool offset double decrease



PROGRAMMING
3. PREPARATORY FUNCTION

(G FUNCTION) B–64124EN/01

34

Table 3 G code list (2/3)

G code Group Function

G49 08 Tool length compensation cancel

G50
11

Scaling cancel

G51
11

Scaling

G50.1
22

Programmable mirror image cancel

G51.1
22

Programmable mirror image

G52
00

Local coordinate system setting

G53
00

Machine coordinate system selection

G54

14

Workpiece coordinate system 1 selection

G54.1

14

Additional workpiece coordinate system selection

G55

14

Workpiece coordinate system 2 selection

G56 14 Workpiece coordinate system 3 selection

G57 Workpiece coordinate system 4 selection

G58 Workpiece coordinate system 5 selection

G59 Workpiece coordinate system 6 selection

G60 00/01 Single direction positioning

G61

15

Exact stop mode

G62
15

Automatic corner override

G63
15

Tapping mode

G64 Cutting mode

G65 00 Macro call

G66
12

Macro modal call

G67
12

Macro modal call cancel

G68
16

Coordinate rotation/Three dimensional coordinate conversion

G69 16 Coordinate rotation cancel/Three dimensional coordinate conversion
cancel

G73
09

Peck drilling cycle

G74
09

Counter tapping cycle

G75 01 Plunge grinding cycle (for grinding machine)

G76 09 Fine boring cycle

G77

01

Direct constant–dimension plunge grinding cycle(for grinding machine)

G78 01 Continuous–feed surface grinding cycle(for grinding machine)

G79 Intermittent–feed surface grinding cycle(for grinding machine)

G80 Canned cycle cancel/external operation function cancel

G81 Drilling cycle, spot boring cycle or external operation function

G82 Drilling cycle or counter boring cycle

G83 Peck drilling cycle

G84 09 Tapping cycle

G85 Boring cycle

G86 Boring cycle

G87 Back boring cycle

G88 Boring cycle

G89 Boring cycle



PROGRAMMINGB–64124EN/01
3. PREPARATORY FUNCTION

(G FUNCTION)

35

Table 3 G code list (3/3)

G code Group Function

G90
03

Absolute command

G91
03

Increment command

G92
00

Setting for work coordinate system or clamp at maximum spindle speed

G92.1
00

Workpiece coordinate system preset

G94
05

Feed per minute

G95
05

Feed per rotation

G96
13

Constant surface speed control

G97
13

Constant surface speed control cancel

G98
10

Return to initial point in canned cycle

G99
10

Return to R point in canned cycle

G160
20

In-feed control function cancel (for grinding machine)

G161
20

In-feed control function (for grinding machine)



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

36

4 INTERPOLATION FUNCTIONS



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

37

The G00 command moves a tool to the position in the workpiece system
specified with an absolute or an incremental command at a rapid traverse
rate.
In the absolute command, coordinate value of the end point is
programmed.
In the incremental command the distance the tool moves is programmed.

  _: For an absolute command, the coordinates of an end 
 position, and for an incremental commnad, the distance
 the tool moves.

G00    _;IP

IP

Either of the following tool paths can be selected according to bit 1 of
parameter LRP No. 1401.

� Nonlinear interpolation positioning
The tool is positioned with the rapid traverse rate for each axis
separately.  The tool path is normally straight.

� Linear interpolation positioning
The tool path is the same as in linear interpolation (G01).  The tool is
positioned within the shortest possible time at a speed that is not more
than the rapid traverse rate for each axis.  However, the tool path is not
the same as in linear interpolation (G01).

End position Non linear interpolation positioning

Start position

Linear interpolation positioning

The rapid traverse rate in G00 command is set to the parameter No. 1420
for each axis independently by the machine tool builder.  In the
posiitoning mode actuated by G00, the tool is accelerated to a
predetermined speed at the start of a block and is decelerated at the end
of a block.  Execution proceeds to the next block after confirming the
in–position. 
“In–position ” means that the feed motor is within the specified range.
This range is determined by the machine tool builder by setting to
parameter (No. 1826).
In–position check for each block can be disabled by setting bit 5 (NCI)
of parameter No.1601 accordingly.

4.1
POSITIONING
(G00)

Format

Explanations



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

38

The rapid traverse rate cannot be specified in the address F.
Even if linear interpolation positioning is specified, nonlinear
interpolation positioning is used in the following cases.  Therefore, be
careful to ensure that the tool does not foul the workpiece.

� G28 specifying positioning between the reference and intermediate
positions.

� G53

Limitations



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

39

For accurate positioning without play of the machine (backlash), final
positioning from one direction is available.

Start position

Temporary stop
End position

Overrun

Start position

  _ : For an absolute command, the coordinates of an end 
position, and for an incremental commnad, the distance
the tool moves.

G60   _;IP

IP

An overrun and a positioning direction are set by the parameter (No.
5440).  Even when a commanded positioning direction coincides with
that set by the parameter, the tool stops once before the end point.
G60, which is an one–shot G–code, can be used as a modal G–code in
group 01 by setting 1 to the parameter (No. 5431 bit 0 MDL).
This setting can eliminate specifying a G60 command for every block.
Other specifications are the same as those for an one–shot G60 command.
When an one–shot G code is sepcified in the single direction positioning
mode, the one–shot G command is effective like G codes in group 01.

When one–shot 
G60 commands are used.

G90;
G60 X0Y0;
G60 X100;
G60 Y100;
G04 X10;
G00 X0Y0;

When modal 
G60 command is used.

G90G60;
X0Y0;
X100;
Y100;
G04X10;
G00X0Y0;

Single direction
 positioning

Single direction
 positioning

Single direction
 positioning
mode cancel

Single direction
 positioning mode start

4.2
SINGLE DIRECTION
POSITIONING (G60)

Format

Explanations

Examples



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

40

� During canned cycle for drilling, no single direction positioning is
effected in Z axis.

� No single direction positioning is effected in an axis for which no
overrun has been set by the parameter.

� When the move distance 0 is commanded, the single direction
positioning is not performed.

� The direction set to the parameter is not effected by mirror image.

� The single direction positioning does not apply to the shift motion in
the canned cycles of G76 and G87.

Restrictions



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

41

Tools can move along a line

F_:Speed of tool feed (Feedrate)

  _:For an absolute command, the coordinates of an end point ,
 and for an incremental commnad, the distance the tool moves.

G01    _F_;IP

IP

A tools move along a line to the specified position at  the feedrate
specified in F.
The feedrate specified in F is effective until a new value is specified. It
need not be specified for each block.
The feedrate commanded by the F code is measured along the tool path.
If the F code is not commanded, the feedrate is regarded as zero.
The feedrate of each axis direction is as follows.

F� � �
L
� f

F� �
�

L
� f

F
�
�

�

L
� f

Feed rate of α axis direction :

F� �
�

L
� f

L � �2 � �2 � �2 � �2�

G01ααββγγζζ Ff ;

Feed rate of γ axis direction :

Feed rate of β axis direction :

Feed rate of ζ axis direction :

The feed rate of the rotary axis is commanded in the unit of deg/min (the
unit is decimal point position).

When the straight line axis α(such as X, Y, or Z) and the rotating axisβ
(such as A, B, or C) are linearly interpolated, the feed rate is that in which
the tangential feed rate in the αandβ cartesian coordinate system is
commanded by F(mm/min). 
β–axis feedrate is obtained ; at first, the time required for  distribution is
calculated by using the above fromula, then the β –axis feedrate unit is
changed to deg 1min.

4.3
LINEAR
INTERPOLATION
(G01)

Format

Explanations



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

42

A calcula;tion example is as follows.
G91 G01 X20.0B40.0 F300.0 ;
This changes the unit of the C axis from 40.0 deg to 40mm with metric
input.  The time required for distribution is calculated as follows:

202 � 402�

300

40
0.14907

The feed rate for the C axis is

0.14907 (min)�

268.3 deg�min�

In simultaneous 3 axes control, the feed rate is calculated the same way
as in 2 axes control.

100.0

200.00

�G91� G01X200.0Y100.0F200.0 �

Y axis

(End position)

X axis
(Start position)

90°
(Start point)

(End point)
Feedrate is 300 deg/min

  G91G01C–90.0 G300.0 ;Feed rate of 300deg/min

Examples

� Linear interpolation

� �����
�� ��� ���

���
���� 
���



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

43

The command below will move a tool along a circular arc.

���
G03

 Arc in the XpYp plane

��� �� ��� ZpXp ��
��

G18

��� �� ��� YpZp ��
��

Xp_Yp_
G02

G03

G02

G03
G02G19

Xp_ p_

Yp_ Zp_

I_ J_

R_
F_ ;

I_ K_
R_

F_

J_ K_

R_
F_

Table 4.4 Description of the command format

Command Description

G17 Specification of arc on XpYp plane

G18 Specification of arc on ZpXp plane

G19 Specification of arc on YpZp plane

G02 Circular Interpolation   Clockwise direction (CW)

G03 Circular Interpolation   Counterclockwise direction (CCW)

Xp_ Command values of X axis or its parallel axis 
(set by parameter No. 1022)

Yp_ Command values of Y axis or its parallel axis 
(set by parameter No. 1022)

Zp_ Command values of Z axis or its parallel axis 
(set by parameter No. 1022)

I_ Xp axis distance from the start point to the center of an arc
with sign

J_ Yp axis distance from the start point to the center of an arc
with sign

k_ Zp axis distance from the start point to the center of an arc
with sign

R_ Arc radius (with sign)

F_ Feedrate along the arc

4.4
CIRCULAR
INTERPOLATION
(G02,G03)

Format



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

44

“Clockwise”(G02) and “counterclockwise”(G03) on the XpYp plane
(ZpXp plane or YpZp plane) are defined when the XpYp plane is viewed
in the positive–to–negative direction of the Zp axis (Yp axis or Xp axis,
respectively) in the Cartesian coordinate system. See the figure below.

G02

G03

Xp
G17 G18 G19

G02

G03

G02

G03

Yp Xp Zp

Zp Yp

The end point of an arc is specified by address Xp, Yp or Zp, and is
expressed as an absolute or incremental value according to G90 or G91.
For the incremental value, the distance of the end point which is viewed
from the start point of the arc is specified.  

The arc center is specified by addresses I, J, and K for the Xp, Yp, and Zp
axes, respectively.  The numerical value following I, J, or K, however, is
a vector component in which the arc center is seen from the start point,
and is always specified as an incremental value irrespective of G90 and
G91, as shown below.
I, J, and K must be signed according to the direction.

End point (x,y)

Center

Start
point

End point (z,x) End point (y,z)

Start
point

Start
point

��	
�� Center

i
x

y x
z

k

z
y

j

j i k

I0,J0, and K0 can be omitted. When Xp, Yp , and Zp  are omitted (the end
point is the same as the start point) and the center is specified with I, J,
and K, a 360° arc (circle) is specified.
G021;  Command for a circle
If the difference between the radius at the start point and that at the
end point exceeds the permitted value in a parameter (No.3410), an P/S
alarm (No.020) occurs.

Explanations

� ��������� �� ��� ������
�

��������
����

� ����
��� 	���� �� 
�


��

� ����
��� ���	 ��� ��
��

����� �� ��� ������ �� 
��



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

45

The distance between an arc and the center of a circle that contains the arc
can be specified using the radius, R, of the circle instead of I, J, and K.
In this case, one arc is less than 180°, and the other is more than 180° are
considered.  When an arc exceeding 180° is commanded, the radius must
be specified with a negative value.  If  Xp, Yp, and Zp are all omitted, if
the end point is located at the same position as the start point and when
R is used, an arc of 0° is programmed 
G02R ; (The cutter does not move.)

r=50mm

End point

Start point r=50mm

1

2

For arc �(1)(less than 180°)
G91 G02 XP60.0 YP20.0 R50.0 F300.0 ;

For arc (2)(greater than 180°)
G91 G02 XP60.0 YP20.0 R–50.0 F300.0 ;

Y

X

The feedrate in circular interpolation is equal to the feed rate specified by
the F code, and the feedrate along the arc (the tangential feedrate of the
arc) is controlled to be the specified feedrate.
The error between the specified feedrate and the actual tool feedrate is
±2% or less.  However, this feed rate is measured along the arc after the
cutter compensation is applied

If I, J, K, and R addresses are specified simultaneously, the arc specified
by address R takes precedence and the other are ignored.
If an axis not comprising the specified plane is commanded, an alarm is
displayed.
For example, if axis U is specified as a parallel axis to X axis when plane
XY is specified, an P/S alarm (No.028)is displayed.
When an arc having a center angle approaching 180° is specified, the
calculated center coordinates may contain an error.  In such a case, specify
the center of the arc with I, J, and K.

� ��� �
����

� �����
��

Restrictions



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

46

100

60

40

0
90 120 140 200

60R

50R

Y axis

X axis

The above tool path can be programmed as follows ;
��� �� ���	
�� ��	��������
��������� �	��� 
� �

��� ��� �	��� ���������� ������

��� ����� ���������� �

or
��������� �	���
� �

��� ��� �	��� ����������� ������

��� ����� ����������� �

��� �� ��������
 ��	��������
�� ��� ������ ����� ����� ������

��� ������ ��	��� ����� �

or
�� ��� ������ ����� ������ ����� �

��� ������ ��	��� ������ �

Examples



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

47

Helical interpolation which moved helically is enabled by specifying up
to two other axes which move synchronously with the circular
interpolation by circular commands.

G03

 Synchronously with arc of XpYp plane

Synchronously with arc of ZpXp plane

G18

Synchronously with arc of YpZp plane

Xp�Yp�
G02

G03

G02

G03

G02G19

Xp�Zp�

Yp�Zp�

I�J�

R_
α�(β�)F��

I�K�
��

J�K�

R�

G17

α��β�)F_;

α��β�)F�;

α,β: Any one axis where circular interpolation is not applied.
Up to two other axes can be specified.

The command method is to simply or secondary add a move command
axis which is not circular interpolation axes. An F command specifies a
feed rate along a circular arc.  Therefore, the feed rate of the linear axis
is as follows:

F×
Length of linear axis

Length of circular arc

Determine the feed rate so the linear axis feed rate does not exceed any
of the various limit values.Bit 0 (HFC) of parameter No. 1404 can be used
to prevent the linear axis feedrate from exceeding various limit values.

Z

Tool path

The feedrate along the circumference of two cir-
cular interpolated axes is the specified feedrate.

YX

Cutter compensation is applied only for a circular arc.
Tool offset and tool length compensation cannot be used in a block in
which a helical interpolation is commanded.

4.5
HELICAL
INTERPOLATION
(G02,G03)

Format

Explanations

Restrictions



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

48

The amount of travel of a rotary axis specified by an angle is once
internally converted to a distance of a linear axis along the outer surface
so that linear interpolation or circular interpolation can be performed with
another axis.  After interpolation, such a distance is converted back to the
amount of travel of the rotary axis.
The cylindrical interpolation function allows the side of a cylinder to be
developed for programming.  So programs such as a program for
cylindrical cam grooving can be created very easily.

G07.1    r ; Starts the cylindrical interpolation mode 
(enables cylindrical interpolation).

G07.1    0 ; The cylindrical interpolation mode is cancelled.

:
:
:

   : An address for the rotation axis
r : The radius of the cylinder

Specify G07.1     r ; and G07.1     0; in separate blocks.
G107 can be used instead of G07.1.

IP

IP

IP

IP IP

Use parameter (No. 1022) to specify whether the rotation axis is the X–,
Y–, or Z–axis, or an axis parallel to one of these axes.  Specify the G code
to select a plane for which the rotation axis is the specified linear axis.
For example, when the rotation axis is an axis parallel to the X–axis, G17
must specify an Xp–Yp plane, which is a plane defined by the rotation axis
and the Y–axis or an axis parallel to the Y–axis.
Only one rotation axis can be set for cylindrical interpolation.

A feedrate specified in the cylindrical interpolation mode is a speed on the
developed cylindrical surface.

In the cylindrical interpolation mode, circular interpolation is possible
with the rotation axis and another linear axis.  Radius R is used in
commands in the same way as described in II–4.4.  
The unit for a radius is not degrees but millimeters (for metric input) or
inches (for inch input).
  < Example  Circular interpolation between the Z axis and C axis >

For the C axis of parameter (No.1022), 5 (axis parallel with the X axis)
is to be set. In this case, the command for circular interpolation is

G18 Z__C__;
G02 (G03) Z__C__R__;

For the C axis of parameter (No.1022), 6 (axis parallel with the Y axis)
may be specified instead.  In this case, however, the command for
circular interpolation is 

G19 C__Z__;
G02 (G03) Z__C__R__;

4.6
CYLINDRICAL
INTERPOLATION
(G07.1)

Format

Explanations
� Plane selection

(G17, G18, G19)

� �����
��

� Circular interpolation
(G02,G03)



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

49

To perform tool offset in the cylindrical interpolation mode, cancel any
ongoing cutter compensation mode before entering the cylindrical
interpolation mode.  Then, start and terminate tool offset within the
cylindrical interpolation mode.

In the cylindrical interpolation mode, the amount of travel of a rotary axis
specified by an angle is once internally converted to a distance of a linear
axis on the outer surface so that linear interpolation or circular
interpolation can be performed with another axis.  After interpolation,
such a distance is converted back to an angle.  For this conversion, the
amount of travel is rounded to a least input increment.
So when the radius of a cylinder is small, the actual amount of travel can
differ from a specified amount of travel.  Note, however, that such an error
is not accumulative.
If manual operation is performed in the cylindrical interpolation mode
with manual absolute on, an error can occur for the reason described
above.

Specified valueThe actual amount
of travel 2×2πR

MOTION REV �
MOTION REV

MOTION REV � The amount of travel per rotation of the rotation axis (Set-
ting value of parameter No. 1260)

R :

:Rounded to the least input increment

Workpiece radius

� �
2×2πR

In the cylindrical interpolation mode, an arc radius cannot be specified
with word address I, J, or K.

If the cylindrical interpolation mode is started when cutter compensation
is already applied, circular interpolation is not correctly performed in the
cylindrical interpolation mode.

In the cylindrical interpolation mode, positioning operations (including
those that produce rapid traverse cycles such as G28, G53, G73, G74,
G76, G80 through G89) cannot be specified.  Before positioning can be
specified, the cylindrical interpolation mode must be cancelled.
Cylindrical interpolation (G07.1) cannot be performed in the positioning
mode (G00).

In the cylindrical interpolation mode, a workpiece coordinate system
(G92, G54 through G59) or local coordinate system (G52) cannot be
specified.

In the cylindrical interpolation mode, the cylindrical interpolation mode
cannot be reset.  The cylindrical interpolation mode must be cancelled
before the cylindrical interpolation mode can be reset.

A tool offset must be specified before the cylindrical interpolation mode
is set.  No offset can be changed in the cylindrical interpolation mode.

Cylindrical interpolation cannot be specified when the index table index
function is being used.

� Tool offset

� Cylindrical interpolation
accuracy

Limitations

� Arc radius specification
in the cylindrical
interpolation mode

� Circular interpolation
and cutter compensation

� Positioning

� Coordinate system
setting

�  !�������
� ��������
����

	��� ������"

� #��� ������

� Index table indexing
function



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

50

Example of a Cylindrical Interpolation Program

O0001 (CYLINDRICAL INTERPOLATION ); 
N01 G00 G90 Z100.0 C0 ; 
N02 G01 G91 G18 Z0 C0 ; 
N03 G07.1 C57299 ;
N04 G90 G01 G42 Z120.0 D01 F250 ; 
N05 C30.0 ; 
N06 G03 Z90.0 C60.0 R30.0 ; 
N07 G01 Z70.0 ; 
N08 G02 Z60.0 C70.0 R10.0 ; 
N09 G01 C150.0 ;
N10 G02 Z70.0 C190.0 R75.0 ;
N11 G01 Z110.0 C230.0 ; 
N12 G03 Z120.0 C270.0 R75.0 ; 
N13 G01 C360.0 ;
N14 G40 Z100.0 ;
N15 G07.1 C0 ;
N16 M30 ;

Examples

C

RZ

C
2301901500

mm

Z

deg

110

90

70

120

30 60 70 270

N05

N06

N07

N08 N09 ���

���

��� ���

360

60



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

51

Straight threads with a constant lead can be cut.  The position coder
mounted on the spindle reads the spindle speed in real–time.  The read
spindle speed is converted to the feedrate per minute to feed the tool.

G33   _ F_ ;PI

F : Long axis direction lead

$��%�����

Z

X

In general, thread cutting is repeated along the same tool path in rough
cutting through finish cutting for a screw.  Since thread cutting starts when
the position coder mounted on the spindle outputs a 1–turn signal,
threading is started at a fixed point and the tool path on the workpiece is
unchanged for repeated thread cutting.  Note that the spindle speed must
remain constant from rough cutting through finish cutting.  If not,
incorrect thread lead will occur.
In general, the lag of the servo system, etc. will produce somewhat
incorrect leads at the starting and ending points of a thread cut.  To
compensate for this, a thread cutting length somewhat longer than
required should be specified.
Table 4.7 lists the ranges for specifying the thread lead.

Table. 4.7  Ranges of lead sizes that can be specified

Least command
increment Command value range of the lead

mm input
0.001 mm F1 to F50000 (0.01 to 500.00mm)

mm input 0.0001 mm F1 to F50000 (0.01 to 500.00mm)

Inch input

0.0001 inch F1 to F99999 
(0.0001 to 9.9999inch)

Inch input 0.00001 inch F1 to F99999
 (0.0001 to 9.9999inch)

4.7
THREAD CUTTING 
(G33)

Format

Explanations



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

52

1 The spindle speed is limited as follows :

1 � spindle speed � 

Spindle speed : min-1
Thread lead : mm or inch
Maximum feedrate : mm/min or inch/min ; maximum command–specified feedrate for
feed–per–minute mode or maximum feedrate that is determined based on mechanical
restrictions including those related to motors, whichever is smaller

2 Cutting feedrate override is not applied to the converted feedrate in all machining process from
rough cutting to finish cutting. The feedrate is fixed at 100%

3 The converted feedrate is limited by the upper feedrate specified.
4 Feed hold is disabled during threading. Pressing the feed hold key during thread cutting causes

the machine to stop at the end point of the next block after threading (that is, after the G33 mode
is terminated)

Thread lead
Maximum feedrate

NOTE

Thread cutting at a pitch of 1.5mm
G33 Z10. F1.5;

Examples



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

53

Linear interpolation can be commanded by specifying axial move
following the G31 command, like G01.  If an external skip signal is input
during the execution of this command, execution of the command is
interrupted and the next block is executed.
The skip function is used when the end of machining is not programmed
but specified with a signal from the machine, for example, in grinding. It
is used also for measuring the dimensions of a workpiece.

G31    _ ;

G31: One–shot G code (If is effective only in the block in which it
is specified)

IP

The coordinate values when the skip signal is turned on can be used in a
custom macro because they are stored in the custom macro system
variable #5061 to #5064, as follows:

#5061 1st axis coordinate value
#5062 2nd axis coordinate value
#5063 3rd axis coordinate value
#5064 4th axis coordinate value

WARNING
Disable feedrate override, dry run, and automatic
acceleration/deceleration  (however, these become
available by setting the parameter SKF No.6200#7 to 1.)
when the feedrate per minute is specified, allowing for an
error in the position of the tool when a skip signal is input.
These functions are enabled when the feedrate per rotation
is specified.

NOTE
If G31 command is issued while cutter compensation C is
applied, an P/S alarm of No.035 is displayed.  Cancel the
cutter compensation with the G40 command before the G31
command is specified.

4.8
SKIP 
FUNCTION(G31)

Format

Explanations



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

54

G31 G91X100.0 F100;
Y50.0;

50.0

100.0

Skip signal is input here

Actual motion

Motion without skip signal

Y

X

Fig. 4.8 (a) The next block is an incremental command

 

G31 G90X200.00 F100;
Y100.0; Y100.0

X200.0

Skip signal is input here

Actual motion

Motion without skip signal

Fig. 4.8 (b) The next block is an absolute command for 1 axis

(300,100)

Y

X
100 200 300

100

G31 G90X200.0 F100;
X300.0 Y100.0;

Actual motion

Motion without skip signal

Skip signal is input here

Fig. 4.8 (c) The next block is an absolute command for 2 axes

Examples

� The next block to G31 is
an incremental
command

� The next block to G31 is
an absolute command
for 1 axis

� The next block to G31 is
an absolute command
for 2 axes



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

55

The skip function operates based on a high–speed skip signal (connected
directly to the NC; not via the PMC) instead of an ordinary skip signal.
In this case, up to eight signals can be input.  
Delay and error of skip signal input is 0 – 2 msec at the NC side (not
considering those at the PMC side).  
This high–speed skip signal input function keeps this value to 0.1 msec
or less, thus allowing high precision measurement.

For details, refer to the appropriate manual supplied from the machine
tool builder.

G31 IP_ ;

G31: One–shot G code (If is effective only in the block in which it is 
specified)

IP

4.9
HIGH SPEED SKIP 
SIGNAL (G31)

Format



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

56

In a block specifying P1 to P4 after G31, the multistage skip function
stores coordinates in a custom macro variable when a skip signal (4–point
or 8–point ; 8–point when a high–speed skip signal is used) is turned on.
Parameters No. 6202 to No. 6205 can be used to select a 4–point or
8–point (when a high–speed skip signal is used) skip signal.   One skip
signal can be set to match multiple Pn or Qn (n=1,2,3,4) as well as to
match a Pn or Qn on a one–to–one basis.  Parameters DS1 to DS8 (No.
6206 #0A#7) can be used for dwell.
A skip signal from equipment such as a fixed–dimension size measuring
instrument can be used to skip programs being executed.
In plunge grinding, for example, a series of operations from rough
machining to spark–out can be performed automatically by applying a
skip signal each time rough machining, semi–fine machining,
fine–machining, or spark–out operation is completed.

Move command
G31 IP __ F __ P __ ;

G04 X (U, P)__ (Q__)
;

Dwell

   _ : End point
F_ : Feedrate
P_ : P1–P4

X(U, P)_ : Dwell time
Q_ : Q1 – Q4

IP

IP

Multistage skip is caused by specifying P1, P2, P3, or P4 in a G31 block.
For an explanation of selecting (P1, P2, P3, or P4), refer to the manual
supplied by the machine tool builder.
Specifying Q1, Q2, Q3, or Q4 in G04 (dwell command) enables dwell
skip in a similar way to specifying G31.  A skip may occur even if Q is
not specified.  For an explanation of selecting (Q1, Q2, Q3, or Q4), refer
to the manual supplied by the machine tool builder.

Parameter Nos. 6202 to 6205 can be used to specify whether the 4–point
or 8–point skip signal is used (when a high–speed skip signal is used).
Specification is not limited to one–to–one correspondence.  It is possible
to specify that one skip signal correspond to two or more Pn’s or Qn’s
(n=1, 2, 3, 4).  Also, bits 0 (DS1) to 7 (DS8) of parameter No. 6206 can
be used to specify dwell.

CAUTION
Dwell is not skipped when Qn is not specified and
parameters DS1–DS8 (No. 6206#0–#7) are not set.

4.10
MULTISTAGE SKIP
(G31)

Format

Explanations

� Correspondence to skip
signals



PROGRAMMINGB–64124EN/01 4. INTERPOLATION FUNCTIONS

57

With the motor torque limited (for example, by a torque limit command,
issued through the PMC window), a move command following G31 P99
(or G31 P98) can cause the same type of cutting feed as with G01 (linear
interpolation).
With the issue of a signal indicating a torque limit has been reached
(because of pressure being applied or for some other reason), a skip
occurs.
For details of how to use this function, refer to the manuals supplied by
the machine tool builder.

G31: One–shot G code (G code effective only in the block in which it
         is issued)

G31 P99 IP_ F_ ;

G31 P98 IP_ F_ ;

If the motor torque limit is reached, or a SKIP signal is received during
execution of G31 P99, the current move command is aborted, and the next
block is executed.

If the motor torque limit is reached during execution of G31 P98, the
current move command is aborted, and the next block is executed.  The
SKIP signal <X0004#7> does not affect G31 P98.
Entering a SKIP signal during the execution of G31 P98 does not cause
a skip.

If a torque limit is not specified before the execution of G31 P99/98, the
move command continues; no skip occurs even if a torque limit is
reached.

When G31 P99/98 is specified, the custom macro variables hold the
coordinates at the end of a skip.  (See Section 4.8.)
If a SKIP signal causes a skip with G31 P99, the custom macro system
variables hold the coordinates based on the machine coordinate system
when it stops, rather than those when the SKIP signal is entered.

Only one axis can be controlled in each block with G31 P98/99.
If two or more axes are specified to be controlled in such blocks, or no axis
command is issued, P/S alarm No. 015 is generated.

When a signal indicating that a torque limit has been reached is input
during execution of G31 P99/98, and the degree of servo error exceeds
32767, P/S alarm No. 244 is generated.

With G31 P99, a SKIP signal can cause a skip, but not a high–speed skip.

4.11
TORQUE LIMIT SKIP
(G31 P99)

Format

Explanations

� G31 P99

� G31 P98

� Torque limit command

� Custom macro system
variable

Limitations

� Axis command

� Degree of servo error

� High–speed skip



PROGRAMMING4. INTERPOLATION FUNCTIONS B–64124EN/01

58

G31 P99/98 cannot be used for axes subject to simplified synchronization
or the X–axis or Z–axis when under slanted axis control.

Bit 7 (SKF) of parameter No. 6200 must be set to disable dry run,
override, and auto acceleration or deceleration for G31 skip commands.

Do not use G31 P99/98 in consecutive blocks.

WARNING
Always specify a torque limit before a G31 P99/98
command.  Otherwise, G31 P99/98 allows move
commands to be executed without causing a skip.

O0001 ;
:
:
M�� ;
:
:
G31 P99 X200. F100 ;
:
G01 X100. F500 ;
:
:
M�� ;
:
:
M30 ;
:
%

The PMC specifies the torque limit
through the window.

Torque limit skip command

Move command for which a torque
limit is applied

Torque limit canceled by the PMC

� Simplified
synchronization and
slanted axis control

� Speed control

� Consecutive commands

Examples



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

59

5 FEED FUNCTIONS



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

60

The feed functions control the feedrate of the tool.  The following two feed
functions are available:

1. Rapid traverse
When the positioning command (G00) is specified, the tool moves at
a rapid traverse feedrate set in the CNC (parameter No. 1420).

2. Cutting feed 
The tool moves at a programmed cutting feedrate.

Override can be applied to a rapid traverse rate or cutting feedrate using
the switch on the machine operator’s panel.

To prevent a mechanical shock, acceleration/deceleration is automatically
applied when the tool starts and ends its movement (Fig. 5.1 (a)).

FR

Rapid traverse rate

Time

T
 

TR

FR : Rapid traverse 
rate

: Acceleration/
deceleration time
constant for rap-
id traverse rate

0

Time

Feed rate

FCFC

�

TC TC

TR

TC

 : Feedrate
: Acceleration/

deceleration time
constant for a cut-
ting feedrate

Fig. 5.1 (a)  Automatic acceleration/deceleration (example)

5.1
GENERAL

� Feed functions

� Override

� Automatic acceleration/
deceleration



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

61

If the direction of movement changes between specified blocks during
cutting feed, a rounded–corner path may result (Fig. 5.1 (b)).

0

Programmed path

Actual tool path

�



Fig. 5.1 (b)  Example of tool path between two blocks

 In circular interpolation, a radial error occurs (Fig. 5.1 (c)).

0

�



�

∆��Error

Programmed path

Actual tool path

Fig. 5.1 (c)  Example of radial error in circular interpolation

The rounded–corner path shown in Fig. 5.1 (b) and the error shown in
Fig. 5.1 (c) depend on the feedrate.  So, the feedrate needs to be controlled
for the tool to move as programmed.

� Tool path in a cutting
feed



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

62

G00  IP_ ;

G00 : G code (group 01) for positioning (rapid traverse)
 IP_ ; Dimension word for the end point

IP

IP

The positioning command (G00) positions the tool by rapid traverse.  In
rapid traverse, the next block is executed after the specified feedrate
becomes 0 and the servo motor reaches a certain range set by the machine
tool builder (in–position check).
A rapid traverse rate is set for each axis by parameter No. 1420, so no rapid
traverse feedrate need be programmed.
The following overrides can be applied to a rapid traverse rate with the
switch on the machine operator’s panel:F0, 25, 50, 100%
F0:  Allows a fixed feedrate to be set for each axis by parameter No. 1421.
For detailed information, refer to the appropriate manual of the machine
tool builder.

5.2
RAPID TRAVERSE

Format

Explanations



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

63

Feedrate of linear interpolation (G01), circular interpolation (G02, G03),
etc. are commanded with numbers after the F code.  
In cutting feed, the next block is executed so that the feedrate change from
the previous block is minimized.
Four modes of specification are available:

1. Feed per minute (G94)
After F, specify the amount of feed of the tool per minute.

2. Feed per revolution (G95)
After F, specify the amount of feed of the tool per spindle revolution.

3. Inverse time feed (G93)
Specify the inverse time (FRN) after F.

4. F1–digit feed
Specify a desired one–digit number after F.  Then, the feedrate set with
the CNC for that number is set.

Feed per minute
G94 ; G code (group 05) for feed per minute
F_ ; Feedrate command (mm/min or inch/min)

Feed per revolution
G95 ; G code (group 05) for feed per revolution
F_ ; Feedrate command (mm/rev or inch/rev)

F1–digit feed
Fn ;
  n : Number from 1 to 9

Inverse time feed (G93)
G93 ; Inverse time feed command

G code (05 group)
F_ ; Feedrate command (1/min)

Cutting feed is controlled so that the tangential feedrate is always set at
a specified feedrate.

X

End point
Starting 
point

X

FF

Center End point
Start
point

Linear interpolation Circular interpolation

Y Y

Fig. 5.3 (a)   Tangential feedrate (F)

5.3
CUTTING FEED

Format

Explanations

� Tangential speed
constant control



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

64

After specifying G94 (in the feed per minute mode), the amount of feed
of the tool per minute is to be directly specified by setting a number after
F.  G94 is a modal code.  Once a G94 is specified, it is valid until G95 (feed
per revolution) is specified.  At power–on, the feed per minute mode is
set.
An override from 0% to 254% (in 1% steps) can be applied to feed per
minute with the switch on the machine operator’s panel.  For detailed
information, see the appropriate manual of the machine tool builder.

Workpiece

Table

Tool

Feed amount per minute
(mm/min or inch/min)

Fig. 5.3 (b)  Feed per minute

WARNING
No override can be used for some commands such as for
threading.

After specifying G95 (in the feed per revolution mode), the amount of
feed of the tool per spindle revolution is to be directly specified by setting
a number after F.  G95 is a modal code.  Once a G95 is specified, it is valid
until G94 (feed per minute) is specified. 
An override from 0% to 254% (in 1% steps) can be applied to feed per
revolution with the switch on the machine operator’s panel.  For detailed
information, see the appropriate manual of the machine tool builder.

F
Feed amount per spindle revolution
(mm/rev or inch/rev)

Fig. 5.3 (c)  Feed per revolution

CAUTION
When the speed of the spindle is low, feedrate fluctuation
may occur. The slower the spindle rotates, the more
frequently feedrate fluctuation occurs.

� Feed per minute (G94)

� Feed per revolution
(G95)



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

65

When G93 is specified, the inverse time specification mode (G93 mode)
is set.  Specify the inverse time (FRN) with an F code.

A value from 0.001 to 9999.999 can be specified as FRN, regardless of
whether the input mode is inches or metric, or the increment system is
IS–B or IS–C.

F code specification value FRN

 F1  0.001

 F1  *1  1.000

 F1.0  1.000

 F9999999  9999.999

 F9999  *1  9999.000

 F9999.999  9999.999

NOTE
*1 Value specified in fixed–point format with bit 0 (DPI) of parameter

No. 3401 set to 1

For linear interpolation (G01)
feedrate
distance

FRN=
1

time (min)
= Feedrate:mm/min (for metric input)

inch/min(for inch input)
Distance:mm (for metric input)

inch(for inch input)

� To end a block in 1 (min)

FRN =
1

=
1

1 (min)
= 1

time (min)
Specify F1.0.

� To end a block in 10 (sec)

FRN =
1

time (sec) / 60
=

1
10/60 (sec)

= 6 Specify F6.0.

� To find the movement time required when F0.5 is specified
1

FRN
=

1
0.5

= 2Time (min) = 2 (min) is required.

� To find the movement time required when F10.0 is specified

Time (sec) =
1�60
FRN

=
60
10

= 6 6 (sec) is required.

For circular interpolation (G01)

FRN=
1

=time (min)
feedrate

arc radius
Feedrate: mm/min (for metric input)

inch/min(for inch input)
Arc radius: mm (for metric input)

inch(for inch input)

NOTE
In the case of circular interpolation, the feedrate is
calculated notfrom the actual amount of movement in the
block but from the arcradius.

� Inverse time feed (G93)

Explanations



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

66

G93 is a modal G code and belongs to group 05 (includes G95 (feed per
revolution) and G94 (feed per minute)).

When an F value is specified in G93 mode and the feedrate exceeds the
maximum cutting feedrate, the feedrate is clamped to the maximum
cutting feedrate.

In the case of circular interpolation, the feedrate is calculated not from the
actual amount of movement in the block but from the arc radius.  This
means that actual machining time is longer when the arc radius is longer
than the arc distance and shorter when the arc radius is shorter than the arc
distance.  Inverse time feed can also be used for cutting feed in a canned
cycle.Notes 

NOTE
1 In the G93 mode, an F code is not handled as a modal code and

therefore needs to be specified in each block.  If an F code is not
specified, P/S alarm (No. 11 (indicating that cutting feedrate
specification is missing)) is issued.

2 When F0 is specified in G93 mode, P/S alarm (No. 11 (indicating
that cutting feedrate specification is missing)) is issued.

3 Inverse time feed cannot be used when PMC axis control is in
effect.

4 If the calculated cutting feedrate is smaller than the allowable
range, P/S alarm (No. 11 (indicating that cutting feedrate
specification is missing)) is issued.



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

67

When a one–digit number from 1 to 9 is specified after F, the feedrate
set for that number in a parameter (Nos. 1451 to 1459) is used.  When
F0 is specified, the rapid traverse rate is applied.
The feedrate corresponding to the number currently selected can be
increased or decreased by turning on the switch for changing F1–digit
feedrate on the machine operator’s panel, then by rotating the manual
pulse generator.
The increment/decrement, ∆F, in feedrate per scale of the manual pulse
generator is as follows:

F � Fmax
100X

∆

Fmax : feedrate upper limit for F1–F4 set by parameter (No.1460), or
feedrate upper limit for F5–F9 set by parameter (No.1461)

X  :any value of 1–127 set by parameter (No.1450)
The feedrate set or altered is kept even while the power is off.  The current
feed rate is displayed on the CRT screen.

A common upper limit can be set on the cutting feedrate along each axis
with parameter No. 1422.  If an actual cutting feedrate (with an override
applied) exceeds a specified upper limit, it is clamped to the upper limit.
Parameter No. 1430 can be used to specify the maximum cutting feedrate
for each axis only for linear interpolation and circular interpolation.
When the cutting feedrate along an axis exceeds the maximum feedrate
for the axis as a result of interpolation, the cutting feedrate is clamped to
the maximum feedrate.

NOTE
An upper limit is set in mm/min or inch/min. CNC calculation
may involve a feedrate error of ±2% with respect to a
specified value. However, this is not true for
acceleration/deceleration.  To be more specific, this error is
calculated with respect to a measurement on the time the
tool takes to move 500 mm or more during the steady state:

See Appendix C for range of feedrate command value.

� One–digit F code feed

� Cutting feedrate clamp

Reference



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

68

Cutting feedrate can be controlled, as indicated in Table 5.4.

Table 5.4  Cutting Feedrate Control

Function name G code Validity of G code Description

Exact stop
G09

This function is valid for specified
blocks only.

The tool is decelerated at the end point
of a block, then an in–position check is
made. Then the next block is executed.

Exact stop mode
G61

Once specified, this function is 
valid until G62, G63, or G64 is
specified.

The tool is decelerated at the end point
of a block, then an in–position check is
made. Then the next block is executed.

Cutting mode
G64

Once specified, this function is 
valid until G61, G62, or G63 is 
specified.

The tool is not decelerated at the end
point of a block, but the next block is
executed.

Tapping mode

G63

Once specified, this function is 
valid until G61, G62, or G64 is 
specified.

The tool is not decelerated at the end
point of a block, but the next block is
executed.
When G63 is specified, feedrate override
and feed hold are invalid.

Auto–
matic 

Automatic override for
inner corners

G62

Once specified, this function is 
valid until G61, G63, or G64 is 
specified.

When the tool moves along an inner 
corner during cutter compensation, over-
ride is applied to the cutting feedrate to
suppress the amount of cutting per unit
of time so that a good surface finish can
be produced.

Internal circular cutting
feedrate change _

This function is valid in the cutter
compensation mode, regardless of
the G code.

The internal circular cutting feedrate is
changed.

NOTE
1 The purpose of in–position check is to check that the servo

motor has reached within a specified range (specified with
a parameter by the machine tool builder).
In–position check is not performed when bit 5 (NCI) of
parameter No. 1601 is set to 1.

2 Inner corner angle θ: 2°< θ � α � 178°
(α is a set value)

5.4
CUTTING FEEDRATE
CONTROL

θ

Workpiece

Tool



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

69

Exact stop G09 IP_ ;
Exact stop mode G61 ;

Cutting mode G64 ;

Tapping mode G63 ;

Automatic corner override G62 ;

IP

The inter–block paths followed by the tool in the exact stop mode, cutting
mode, and tapping mode are different (Fig. 5.4.1).

0

Y

!�"

!�"
Position check

Tool path in the exact stop mode

Tool path in the cutting mode or
 tapping mode

X

Fig. 5.4.1  Example of tool paths from block (1) to block (2)

CAUTION
The cutting mode (G64 mode) is set at power–on or system
clear.

Format

5.4.1
Exact Stop (G09, G61)
Cutting Mode (G64)
Tapping Mode (G63)

Explanations



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

70

When cutter compensation is performed, the movement of the tool is
automatically decelerated at an inner corner and internal circular area.
This reduces the load on the cutter and produces a smoothly machined
surface.

When G62 is specified, and the tool path with cutter compensation
applied forms an inner corner, the feedrate is automatically overridden
at both ends of the corner. 
There are four types of inner corners (Fig. 5.4.2.1 (a)).
2,�θ�θp�178, in Fig. 5.4.2.1 (a)
θp is a value set with parameter No. 1711. When θ is approximately
equal to θp, the inner corner is determined with an error of 0.001,or
less.

θ

:Cutter center path

:Tool

:Programmed path

θ

θ

θ

1. Straight line–straight line 2. Straight line–arc

3. Arc–straight line 4. Arc–arc

Fig. 5.4.2.1 (a)  Inner corner

5.4.2
Automatic Corner
Override

5.4.2.1 
Automatic Override for
Inner Corners (G62)

Explanations
� Override condition



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

71

When a corner is determined to be an inner corner, the feedrate is
overridden before and after the inner corner. The distances Ls and Le,
where the feedrate is overridden, are distances from points on the cutter
center path to the corner (Fig. 5.4.2.1 (b), Fig. 5.4.2.1 (c), Fig. 5.4.2.1 (d)).
Ls and Le are set with parameter Nos. 1713 and 1714.

Programmed path

Le
a b

Ls

Cutter center path

The feedrate is overridden from point a to point b.

FIg. 5.4.2.1 (b) Override Range (Straight Line to Straight Line)

When a programmed path consists of two arcs, the feedrate is overridden
if the start and end points are in the same quadrant or in adjacent quadrants
(Fig. 5.4.2.1 (c)).

a

Le

Ls

b

Programmed path

The feedrate is overridden from point a to b.

Cutter center path

Fig. 5.4.2.1 (c)  Override Range (Arc to Arc)

Regarding program (2) of an arc, the feedrate is overridden from point a
to point b and from point c to point d (Fig. 5.4.2.1 (d)).

c

d a

LsLe

b

Ls Le

(2)

Programmed path

Cutter center path
Tool

Fig. 5.4.2.1 (d)  Override Range (Straight Line to Arc, Arc to Straight Line)

Override range



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

72

An override value is set with parameter No. 1712.  An override value is
valid even for dry run and F1–digit specification.
In the feed per minute mode, the actual feedrate is as follows:

F × (automatic override for inner corners) × (feedrate override)

Override for inner corners is disabled during acceleration/deceleration
before interpolation.

Override for inner corners is disabled if the corner is preceded by a
start–up block or followed by a block including G41 or G42.

Override for inner corners is not performed if the offset is zero.

For internally offset circular cutting, the feedrate on a programmed path
is set to a specified feedrate (F) by specifying the circular cutting feedrate
with respect to F, as indicated below (Fig. 5.4.2.2).  This  function is valid
in the cutter compensation mode, regardless of the G62 code.

F � Rc
Rp

Rc : Cutter center path radius
Rp : Programmed radius

It is also valid for the dry run and the one–digit F command.

Rc

Rp

Programmed path

Cutter center
path

Fig. 5.4.2.2  Internal circular cutting feedrate change

If Rc is much smaller than Rp, Rc/Rp�0; the  tool stops. A minimum
deceleration ratio (MDR) is to be specified with parameter No. 1710.
When  Rc/Rp�MDR, the  feedrate of the tool is (F×MDR).

NOTE
When internal circular cutting must be performed together with override for inner corners, the
feedrate of the tool is as follows:

(override for the inner corners)×(feedrate override)F �
Rc
Rp

�

Override value

Limitations

� Acceleration/deceleratio
n before interpolation

� Start–up/G41, G42

� Offset

5.4.2.2 
Internal Circular Cutting
Feedrate Change



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

73

This function automatically controls the feedrate at a corner according to
the corner angle between the machining blocks or the feedrate difference
between the blocks along each axis.
This function is effective when ACD, bit 6 of parameter No. 1601, is set
to 1, the system is in G64 mode (machining mode), and a cutting–feed
block (block A) is followed by another cutting–feed block (block B).
The feedrate between machining blocks is controlled according to the
corner angle between the blocks or the feedrate difference between the
blocks along each axis.  These two methods can be switched with CSD,
bit 4 of parameter No. 1602.

This function decelerates the feedrate when the angle between blocks A
and B on the selected plane is smaller than the angle specified in parameter
No. 1740.  The function executes block B when the feedrates along both
the first and second axes are smaller than the feedrate specified in
parameter No. 1741.  In this case, the function determines that the number
of accumulated pulses is zero.

The flowchart for feedrate control is shown below.

START

Yes

Yes

END

No

No

Is the corner angle smaller than
the angle specified in parameter
(No. 1740)?

Are the feedrates along the X–
and Y–axes smaller than that
specified in parameter 
(No. 1741)?

Further decelerates the 
feedrate in block A

The number of accumulated
pulses is determined to be zero 
and block B is executed

5.4.3
Automatic Corner
Deceleration

5.4.3.1 
Corner Deceleration
According to the Corner
Angle

Explanations

� Flowchart for feedrate
control



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

74

When the corner angle is smaller than the angle specified in the
parameter, the relationship between the feedrate and time is as shown
below.  Although accumulated pulses equivalent to the hatched area
remain at time t, the next block is executed because the feedrate of the
automatic acceleration/deceleration circuit is smaller than the
parameter–set value.  This function is effective only for movement on
the selected plane.

ÍÍÍÍ
ÍÍÍÍ



Feedrate V

Block A Block B

Parameter–set feedrate

Time t

The angle between two blocks (blocks A and B) is assumed to be angle
θ, as shown below.

1.  Between linear movements

θ

θ
θ

θ

2.  Between linear and circular movements
(angle between the linear movement 
and tangent to the circular movement)

3.  Between circular movements
(angle between the tangents to 
the circular movements)

The machining angle is compared with the angle specified in parameter
(No. 1740) for movements on the selected plane only.  Machining
feedrates are compared with that specified in parameter (No. 1741) for
movement along the first and second axes on the selected plane only.  This
means, when movement occurs along three or more axes, only that
movement along the first and second axes on the selected plane is
considered.

Corner roundness is determined by the angle and feedrate specified in
parameter (Nos. 1740 and 1741).  To always make a sharp corner, set
the angle to zero and the feedrate to 180000 (equivalent to 180
degrees).

When G90 (exact stop) is specified, exact stop is performed irrespective
of the angle and feedrate specified in parameter (Nos. 1740 and 1741).

This function cannot be enabled for a single block or during dry run.

� Feedrate and time

� Angle between two
blocks

� Selected plane

� Corner roundness

� Exact stop

Limitations



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

75

This function decelerates the feedrate when the difference between the
feedrates at the end point of block A and the start point of block B along
each axis is larger than the value specified in parameter No. 1781.  The
function executes block B when the feedrates along all axes are smaller
than the feedrate specified in parameter No. 1741.  In this case, the
function determines that the number of accumulated pulses is zero.

The flowchart for feedrate control is shown below.

START

Yes

Yes

END

No

No

Is the feedrate difference between
blocks along each axis larger than
the value specified in parameter
(No. 1781)?

Are the feedrates along all axes
smaller than that specified in
parameter (No. 1741)? Further decelerates the

feedrate in block A

The number of accumulated pulses
is determined to be zero and block
B is executed.

When the feedrate difference between blocks along each axis is larger than
the value specified in parameter No. 1781, the relationship between the
feedrate and time is as shown below.  Although accumulated pulses
equivalent to the hatched area remain at time t, the next block is executed
because the feedrate of the automatic acceleration/deceleration circuit is
smaller than the feedrate specified in parameter No. 1741.

ÍÍÍÍ
ÍÍÍÍ


Feedrate V

Block A Block B

Parameter–set feedrate

Time t

5.4.3.2 
Corner Deceleration
According to the
Feedrate Difference
between Blocks Along
Each Axis

Explanations

� Flowchart for feedrate
control

� Feedrate and time



PROGRAMMING5. FEED FUNCTIONS B–64124EN/01

76

The allowable feedrate difference can be specified for each axis in
parameter No. 1783.

The feedrate difference is also checked during dry–run operation or
during deceleration caused by an external signal, using feedrate
commands specified in a program.

When G90 (exact stop) is specified, exact stop is performed irrespective
of the parameter settings.

If an override is changed during operation, the feedrate difference will
not be checked correctly.

This function is not effective for feed–per–rotation commands, one digit
F code feed commands, rigid tapping, and a single block.

� Setting the allowable
feedrate difference along
each axis

� Checking the feedrate
difference

� Exact stop

� Override

Limitations



PROGRAMMINGB–64124EN/01 5. FEED FUNCTIONS

77

Dwell G04 X_ ; or G04 P_ ;
 X_ : Specify a time (decimal point permitted)
 P_ : Specify a time (decimal point not permitted)

By specifying a dwell, the execution of the next block is delayed by the
specified time. In addition, a dwell can be specified to make an exact
check in the cutting mode (G64 mode).
When neither P nor X is specified, exact stop is performed.
Bit 1 (DWL) of parameter No. 3405 can specify dwell for each rotation
in feed per rotation mode (G95).

Table 5.5 (a)   Command value range of the dwell time 
(Command by X)

Increment system Command value range Dwell time unit

IS–B 0.001 to 99999.999
s or rev

IS–C 0.0001 to 9999.9999
s or rev

Table 5.5 (b)   Command value range of the dwell time 
(Command by P)

Increment system Command value range Dwell time unit

IS–B 1 to 99999999 0.001 s or rev

IS–C 1 to 99999999 0.0001 s or rev

5.5
DWELL (G04)

Format

Explanations



PROGRAMMING6. REFERENCE POSITION B–64124EN/01

78

6 REFERENCE POSITION
A CNC machine tool has a special position where, generally, the tool is
exchanged or the coordinate system is set, as described later.  This
position is referred to as a reference position.



PROGRAMMINGB–64124EN/01 6. REFERENCE POSITION

79

The reference position is a fixed position on a machine tool to which the
tool can easily be moved by the reference position return function.
For example, the reference position is used as a position at which tools
are automatically changed.  Up to four reference positions can be
specified by setting coordinates in the machine coordinate system in
parameters (No. 1240 to 1243).

Reference position

Machine zero point

3rd reference position

2nd reference position

4th reference 
position

Fig. 6.1 (a)   Machine zero point and reference positions

�



6.1
REFERENCE
POSITION RETURN

General

� Reference position



PROGRAMMING6. REFERENCE POSITION B–64124EN/01

80

Tools are automatically moved to the reference position via an
intermediate position along a specified axis.  Or, tools are automatically
moved from the reference position to a specified position via an
intermediate position along a specified axis.  When reference position
return is completed, the lamp for indicating the completion of return goes
on.

A (Start position for 
reference position return)

B (Intermediate 
position)

C (Destination of return from the
reference position)

R (Reference position)
Reference position return A→B→R
Return from the reference positionR→B→C

Fig. 6.1 (b)  Reference position return and return form the reference 
position

The reference position return check (G27) is the function which checks
whether the tool has correctly returned to the reference position as
specified in the program.  If the tool has correctly returned to the reference
position along a specified axis, the lamp for the axis goes on.

�&' # �PI

�() *& # �

Reference position return

3rd reference position return

4th reference position return

2nd reference position return

: Command specifying the intermediate position 
(Absolute/incremental command)

�() *( # �

�() *+ # �

(P2 can 
be omitted.)

PI

PI

PI

P_I

�&, # �

: Command specifying the destination of return from reference 
position  (Absolute/incremental command)

PI

P_I

�&7 # �

: Command specifying the reference position 
(Absolute/incremental command)

PI

P_I

� Reference position
return and movement
from the reference
position

� Reference position
return check

���	
�

� Reference position
return

� Return from reference
position

� Reference  position
return check



PROGRAMMINGB–64124EN/01 6. REFERENCE POSITION

81

Positioning to the intermediate or reference positions are performed at the
rapid traverse rate of each axis.
Therefore, for safety, the cutter compensation, and tool length
compensation should be cancelled before executing this command.
The coordinates for the intermediate position are stored in the CNC only
for the axes for which a value is specified in a G28 block.  For the other
axes, the previously specified coordinates are used. 
Example N1  G28  X40.0  ; Intermediate position (X40.0) 

N2  G28  Y60.0  ; Intermediate position (X40.0,  Y60.0)

In a system without an absolute–position detector, the first, third, and
fourth reference position return functions can be used only after the
reference position return (G28) or manual reference position return (see
III–3.1) is made.  The G30 command is generally used when the automatic
tool changer (ATC) position differs from the reference position.

In general, it is commanded immediately following the G28 command or
G30.  For incremental programming, the command value specifies the
incremental value from the intermediate point.
Positioning to the intermediate or reference points are performed at the
rapid traverse rate of each axis.
When the workpiece coordinate system is changed after the tool reaches
the  reference position through the intermediate point by the G28
command, the intermediate point also shifts to a new coordinate system.
If G29 is then commanded, the tool moves to to the commanded position
through the intermediate point which has been shifted to the new
coordinate system.
The same operations are performed also for G30 commands.

G27 command positions the tool at rapid traverse rate.  If the tool reaches
the reference position, the reference position return lamp lights up. 
However, if the position reached by the tool is not the reference position,
an alarm (No. 092) is displayed.

Before a machine coordinate system is established with the first reference
position return after power–on, the manual and automatic reference
position return feedrates and automatic rapid traverse rate conform to the
setting of parameter No. 1428 for each axis.  Even after a machine
coordinate system is established lupon the completion of reference
position return, the manual reference postiion return feedrate conforms to
the setting of the parameter.

���
�
�����

� Reference position
return (G28)

� 2nd, 3rd, and 4th
reference position return
(G30)

� Return from the
reference position (G29)

� Reference position
return check (G27)

� Setting of the reference
position return feedrate



PROGRAMMING6. REFERENCE POSITION B–64124EN/01

82

NOTE
1 To this feedrate, a rapid traverse override (F0,25,50,100%)

is applied, for which the setting is 100%.
2 After a machine coordinate system has been established

upon the completion of reference position return, the
automatic reference position return feedrate will conform to
the ordinary rapid traverse rate.

3 For the manual rapid traverse rate used before a machine
coordinate system is estavlished upon the completion of
reference position return a jog feedrate or manual rapid
traverse rate can be selected usting RPD (bit 0 of parameter
No. 1401).

Before a coordinate
system is established

After a coordinate
system is established

Automatic reference posi-
tion return (G28)

No. 1428 No.1420

Automatic rapid traverse
(G00)

No.1428 No.1420

Manual reference position
return

No.1428 No.1428

Manual rapid traverse rate No.1423 *1 No.1424

NOTE
When parameter No. 1428 is set to 0, the feedrates conform
to the parameter settings shown below.

Before a coordinate
system is established

After a coordinate
system is established

Automatic reference posi-
tion return (G28)

No. 1420 No.1420

Automatic rapid traverse
(G00)

No.1420 No.1420

Manual reference position
return

No.1424 No.1424

Manual rapid traverse rate No.1423 *1 No.1424

1420 : Rapid traverse rate
1423 : Jog feedrate
1424 : Manual rapid traverse rate

*1 Setting of parameter No.1424 when RPD (bit 0 of parameter No.1401)
is set to 1.



PROGRAMMINGB–64124EN/01 6. REFERENCE POSITION

83

The lamp for indicating the completion of return does not go on when the
machine lock is turned on, even when the tool has automatically returned
to the reference position.  In this case, it is not checked whether the tool
has returned to the reference position even when a G27 command is
specified.

When the G28 command is specified when manual return to the reference
position has not been performed after the power has been turned on, the
movement from the intermediate point is the same as in manual return to
the reference position.
In this case, the tool moves in the direction for reference position return
specified in parameter ZMIx (bit 5 of No. 1006).  Therefore the specified
intermediate position must be a position to which reference position
return is possible.

In an offset mode, the position to be reached by the tool with the G27
command is the position obtained by adding the offset value.  Therefore,
if the position with the offset value added is not the reference position, the
lamp does not light up, but an alarm is displayed instead.  Usually, cancel
offsets before G27 is commanded.

When the machine tool system is an inch system with metric input, the
reference position return lamp may also light up even if the programmed
position is shifted from the reference position by the least setting
increment.  This is because the least setting increment of the machine tool
system is smaller than its least command increment.

See III–3.1.

G28G90X1000.0Y500.0  ; (Programs movement  from A to B)
T1111 ; (Changing the tool at the reference position)
G29X1300.0Y200.0 ; (Programs movement from B to C)

A

B

C

R
Reference 
position

200

300

500

200 1000 1300

Y

X

The tool is changed at the reference position

Fig. 6.1 (c)  Reference position return and return from the reference 
position

Restrictions

� Status the machine lock
being turned on

� First return to the
reference position after
the power has been
turned on (without an
absolute position
detector)

� Reference position
return check in an offset
mode

� Lighting the lamp when
the programmed position
does not coincide with
the reference position

���������

� Manual reference
position return

Examples



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

84

7 COORDINATE SYSTEM
By teaching the CNC a desired tool position, the tool can be moved to the
position.  Such a tool position is represented by coordinates in a
coordinate system.  Coordinates are specified using program axes.
When three program axes, the X–axis, Y–axis, and Z–axis, are used,
coordinates are specified as follows:
 X_Y_Z_

This command is referred to as a dimension word.

Z

Y

X

40.0

50.0

25.0

Fig. 7  Tool position specified by X40.0Y50.0Z25.0

Coordinates are specified in one of following three coordinate systems:

(1)Machine coordinate system

(2)Workpiece coordinate system

(3)Local coordinate system

The number of the axes of a coordinate system varies from one machine
to another.  So, in this manual, a dimension word is represented as IP_.



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

85

The point that is specific to a machine and serves as the reference of the
machine is referred to as the machine zero point.  A machine tool builder
sets a machine zero point for each machine.
A coordinate system with a machine zero point set as its origin is referred
to as a machine coordinate system.
A machine coordinate system is set by performing manual reference
position return after power–on (see III–3.1).  A machine coordinate
system, once set, remains unchanged until the power is turned off.

(G90)G53 IP _ ;

IP _; Absolute dimension word

IP

IP

When a command is specified the position on a machine coordinate
system, the tool moves to the position by rapid traverse.  G53, which is
used to select a machine coordinate system, is a one–shot G code; that is,
it is valid only in the block in which it is specified on a machine coordinate
system.  Specify an absolute command (G90) for G53.  When an
incremental command (G91) is specified, the G53 command is ignored.
When the tool is to be moved to a machine–specific position such as a tool
change position, program the movement in a machine coordinate system
based on G53.

When the G53 command is specified, cancel the cutter compensation, tool
length offset, and tool offset.

Since the machine coordinate system must be set before the G53
command is specified, at least one manual reference position return or
automatic reference position return by the G28 command must be
performed after the power is turned on.  This is not necessary when an
absolute–position detector is attached.

When manual reference position return is performed after power–on, a
machine coordinate system is set so that the reference position is at the
coordinate values of (α, β) set using parameter No.1240.

β

Machine zero

α

Machine coordinate system

Reference position

  

7.1
MACHINE
COORDINATE 
SYSTEM

Format

Explanations

� Selecting a machine
coordinate system (G53)

Restrictions

� Cancel of the
compensation function

� G53 specification
immediately after
power–on

Reference



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

86

A coordinate system used for machining a workpiece is referred to as a
workpiece coordinate system.  A workpiece coordinate system is to be set
with the CNC beforehand (setting a workpiece coordinate system).
A machining program sets a workpiece coordinate system (selecting a
workpiece coordinate system).
A set workpiece coordinate system can be changed by shifting its origin
(changing a workpiece coordinate system).

A workpiece coordinate system can be set using one of three methods:

(1)  Method using G92
A workpiece coordinate system is set by specifying a value after G92
in the program.

(2) Automatic setting 
If bit 0 of parameter SPR No. 1201 is set beforehand, a workpiece
coordinate system is automatically set when manual reference
position return is performed (see Part III–3.1.).

(3)  Input using the CRT/MDI panel
Six workpiece coordinate systems can be set beforehand using the
MDI panel (see Part III–11.4.6.).
When using an absolute command, establish the workpiece
coordinate system in any of the above ways.

(G90) G92 IP_IP

A workpiece coordinate system is set so that a point on the tool, such as
the tool tip, is at specified coordinates.  If a coordinate system is set using
G92 during tool length offset, a coordinate system in which the position
before offset matches the position specified in G92 is set.
Cutter compensation is cancelled temporarily with G92.

25.2 X

Z

23.0

0 X

Z

600.0

1200.0
If an absolute command is is-
sued, the base point moves to
the commanded position.  In
order to move the tool tip to the
commanded position, the  dif-
ference from the tool tip to the
base point is compensated by
tool length offset.

Setting the coordinate system by the
G92X25.2Z23.0; command
(The tool tip is the start point for the program.)

Setting the coordinate system by the G92X600.0Z1200.0; command 
(The base point on the tool holder is the start point for the program.)

Base point

Example 1 Example 2

0

  

7.2
WORKPIECE 
COORDINATE 
SYSTEM

7.2.1
Setting a Workpiece
Coordinate System

Format

� Setting a workpiece
coordinate system by G92

Explanations

Examples



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

87

The user can choose from set workpiece coordinate systems as described
below.  (For information about the methods of setting, see II– 7.2.1.)
(1)Once a workpiece coordinate system is selected by G92 or automatic

workpiece coordinate system setting, absolute commands work with
the workpiece coordinate system.

(2)Choosing from six workpiece coordinate systems set using the
CRT/MDI panel
By specifying a G code from G54 to G59, one of the workpiece
coordinate systems 1 to 6 can be selected.

G54 Workpiece coordinate system 1
G55 Workpiece coordinate system 2
G56 Workpiece coordinate system 3
G57 Workpiece coordinate system 4
G58 Workpiece coordinate system 5
G59 Workpiece coordinate system 6

Workpiece coordinate system 1 to 6 are established after reference
position return after the power is turned on. When the power is turned
on, G54 coordinate system is selected.

X

Y

100.0

40.0

In this example, positioning is made to
positions (X=40.0, Y=100.0) in workpiece
coordinate system 2.

G90 G55 G00 X40.0 Y100.0 ;

Workpiece coordinate system 2 (G55)

Fig. 7.2.2  

7.2.2
Selecting a Workpiece
Coordinate System

Examples



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

88

The six workpiece coordinate systems specified with G54 to G59 can
be changed by changing an external workpiece zero point offset value
or workpiece zero point offset value.  
Three methods are available to change an external workpiece zero
point offset value or workpiece zero point offset value.
(1) Inputting from the MDI panel (see III–11.4.6)
(2) Programming by G10 or G92
(3) Using the external data input function

An external workpiece zero point offset value can be changed by
input signal to CNC. Refer to machine tool builder’s manual for
details

ZOFS2 ZOFS3
ZOFS4

ZOFS5

ZOFS1

ZOFS6

EXOFS : External workpiece zero point offset value
ZOFS1 to ZOFS6 : Workpiece zero point offset value

EXOFS

Workpiece 
coordinate 
system 1  (G54)

Workpiece 
coordinate 
system 2  (G55)

Workpiece 
coordinate 
system 3  (G56)

Workpiece 
coordinate 
system 4  (G57)

Workpiece 
coordinate 
system 5  (G58)

Workpiece 
coordinate 
system 6  (G59)

Machine zero

Fig. 7.2.3  Changing an external workpiece zero point offset value or workpiece zero point offset value

G10 L2 Pp I    _;
p=0   : External workpiece zero point offset value
p=1 to 6  : Workpiece zero point offset value correspond to workpiece

coordinate system 1 to 6
IP_ : For an absolute command (G90), workpiece zero point offset for 

each axis.
For an incremental command (G91), value to be added to the set
workpiece zero point offset for each axis (the result of addition 
becomes the new workpiece zero point offset).

IP

G92 IP _;IP

7.2.3
Changing Workpiece
Coordinate System

Format

� Changing by G10

� Changing by G92



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

89

With the G10 command, each workpiece coordinate system can be
changed separately.

By specifying G92IP_;, a workpiece coordinate system (selected with a
code from G54 to G59) is shifted to set a new workpiece coordinate
system so that the current tool position matches the specified coordinates
( IP _).
Then, the amount of coordinate system shift is added to all the workpiece
zero point offset values.  This means that all the workpiece coordinate
systems are shifted by the same amount.

WARNING
When a coordinate system is set with G92 after an external
workpiece zero point offset value is set, the coordinate
system is not affected by the external workpiece zero point
offset value.  When G92X100.0Z80.0; is specified, for
example, the coordinate system having its current tool
reference position at X = 100.0 and Z = 80.0 is set.

Explanations

� Changing by G10

� Changing by G92



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

90

X

X�

Y�Y

A

160 100

100

100

200

If G92X100Y100; is commanded when the tool
is positioned at (200, 160) in G54 mode, work-
piece coordinate system 1 (X’ – Y’) shifted by
vector A is created.

60

G54 workpiece coordinate system

Tool position

New workpiece coordinate system

Original workpiece coordinate system

 

1200.0

Z

Z

X�

X
600.0

600.0

1200.0

Z’

Z�

X

X

X’ – Z’ New workpiece coordinate system
X  – Z Original workpiece coordinate system
A : Offset value created by G92
B : Workpiece zero point offset value in theG54
C : Workpiece zero point offset value in the G55

A

B

C

A

G54 Workpiece 
coordinate system

G55 Workpiece 
coordinate system

Suppose that a G54 workpiece coordi-
nate system is specified.  Then, a G55
workpiece coordinate system where
the black circle on the tool (figure at the
left) is at (600.0,1200.0) can be set with
the following command if the relative
relationship between the G54 work-
piece coordinate system and G55
workpiece coordinate system is set cor-
rectly:G92X600.0Z1200.0;Also, sup-
pose that pallets are loaded at two dif-
ferent positions.  If the relative relation-
ship of the coordinate systems of the
pallets at the two positions is correctly
set by handling the coordinate systems
as the G54 workpiece coordinate sys-
tem and G55 workpiece coordinate
system, a coordinate system shift with
G92 in one pallet causes the same
coordinate system shift in the other pal-
let.  This means that workpieces on two
pallets can be machined with the same
program just by specifying G54 or G55.

 

�
	����



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

91

The workpiece coordinate system preset function presets a workpiece
coordinate system shifted by manual intervention to the pre–shift
workpiece coordinate system.  The latter system is displaced from the
machine zero point by a workpiece zero point offset value. 
There are two methods for using the workpiece coordinate system preset
function.  One method uses a programmed command (G92.1).  The other
uses MDI operations on the absolute position display screen, relative
position display screen, and overall position display screen (III–11.1.4).

G92.1 IP 0 ; 
IP 0 ; Specifies axis addresses subject to the workpiece 

coordinate system preset operation.  Axes that are 
not specified are not subject to the preset operation.

IP
IP

When manual reference position return operation is performed in the reset
state, a workpiece coordinate system is shifted by the workpiece zero
point offset value from the machine coordinate system zero point.
Suppose that the manual reference position return operation is performed
when a workpiece coordinate system is selected with G54.  In this case,
a workpiece coordinate system is automatically set which has its zero
point displaced from the machine zero point by the G54 workpiece zero
point offset value; the distance from the zero point of the workpiece
coordinate system to the reference position represents the current position
in the workpiece coordinate system.

G54 workpiece coordinate system

Reference position

Manual reference position return

Reference position

G54 workpiece zero 
    point offset value

If an absolute position detector is provided, the workpiece coordinate
system automatically set at power–up has its zero point displaced from
the machine zero point by the G54 workpiece zero point offset value.  The
machine position at the time of power–up is read from the absolute
position detector and the current position in the workpiece coordinate
system is set by subtracting the G54 workpiece zero point offset value
from this machine position.  The workpiece coordinate system set by
these operations is shifted from the machine coordinate system using the
commands and operations listed next page.

7.2.4
Workpiece coordinate
system preset (G92.1)

Format

Explanations



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

92

(a) Manual intervention performed when the manual absolute signal is off
(b) Move command executed in the machine lock state
(c) Movement by handle interrupt
(d) Operation using the mirror image function 
(e) Setting the local coordinate system using G52, or shifting the

workpiece coordinate system using G92

In the case of (a) above, the workpiece coordinate system is shifted by the
amount of movement during manual intervention.

Po

Pn

WZn

WZo

G54 workpiece coordinate 
     system before manual 
     intervention

Workpiece zero
     point offset 
     value

G54 workpiece coordinate
    system after manual intervention

Amount of movement
    during manual
    intervention

Machine zero point

In the operation above, a workpiece coordinate system once shifted can
be preset using G code specification or MDI operation to a workpiece
coordinate system displaced by a workpiece zero point offset value from
the machine zero point.  This is the same as when manual reference
position return operation is performed on a workpiece coordinate system
that has been shifted.  In this example, such G code specification or MDI
operation has the effect of returning workpiece coordinate system zero
point WZn to the original zero point WZo, and the distance from WZo to
Pn is used to represent the current position in the workpiece coordinate
system.

Bit 3 (PPD) of parameter No. 3104 specifies whether to preset relative
coordinates (RELATIVE) as well as absolute coordinates.

When using the workpiece coordinate system preset function, cancel
compensation modes: cutter compensation, tool length compensation,
and tool offset.  If the function is executed without cancelling these
modes, compensation vectors are temporarily cancelled.

The workpiece coordinate system preset function is not executed during
program restart.

Do not use the workpiece coordinate system preset function when the
scaling, coordinate system rotation, programmable image, or drawing
copy mode is set.

Limitations

� Cutter compensation,
tool length
compensation, tool
offset

� Program restart

� Prohibited modes



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

93

Besides the six workpiece coordinate systems (standard workpiece
coordinate systems) selectable with G54 to G59, 48 additional workpiece
coordinate systems (additional workpiece coordinate systems) can be
used.  Alternatively, up to 300 additional workpiece coordinate systems
can be used.

G54.1Pn ; or G54Pn ;

Pn : Codes specifying the additional workpiece coordinate systems
n : 1 to 48

G10L20 Pn IP _;

Pn : Codes specifying the workpiece coordinate system for setting 
the workpiece zero point offset value

n : 1 to 48
IP_ : Axis addresses and a value set as the workpiece zero point 

offset

IP

IP

When a P code is specified together with G54.1 (G54), the corresponding
coordinate system is selected from the additional workpiece coordinate
systems (1 to 48).
A workpiece coordinate system, once selected, is valid until another
workpiece coordinate system is selected.  Standard workpiece coordinate
system 1 (selectable with G54) is selected at power–on.

G54.1 P1 Additional workpiece coordinate system 1� � �
G54.1 P2 Additional workpiece coordinate system 2� � �

G54.1 P48 Additional workpiece coordinate system 48� �

As with the standard workpiece coordinate systems, the following
operations can be performed for a workpiece zero point offset in an
additional workpiece coordinate system:

(1)The OFFSET function key can be used to display and set a workpiece
zero point offset value.

(2)The G10 function enables a workpiece zero point offset value to be set
by programming (refer to II–7.2.3).

(3)A custom macro allows a workpiece zero point offset value to be
handled as a system variable.

(4)Workpiece zero point offset data can be entered or output as external
data.

(5)The PMC window function enables workpiece zero point offset data
to be read as program command modal data.

7.2.5
Adding Workpiece
Coordinate Systems
(G54.1 or G54)

Format

� Selecting the additional 
workpiece coordinate
systems

� Setting the workpiece
zero point offset value 
in the additional
workpiece coordinate
systems

Explanations

� Selecting the additional
workpiece coordinate
systems



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

94

When an absolute workpiece zero point offset value is specified, the
specified value becomes a new offset value.  When an incremental
workpiece zero point offset value is specified, the specified value is added
to the current offset value to produce a new offset value.

A P code must be specified after G54.1 (G54).  If G54.1 is not followed
by a P code in the same block, additional workpiece coordinate system
1 (G54.1P1) is assumed.
If a value not within the specifiable range is specified in a P code, an P/S
alarm ( No. 030) is issued.
P codes other than workpiece offset numbers cannot be specified in a
G54.1 (G54) block.

Example)  G54.1 (G54) G04 P1000 ;

� Setting the workpiece
zero point offset value in
the additional workpiece
coordinate systems

Limitations
� -�����!��" * �����



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

95

When a program is created in a workpiece coordinate system, a child
workpiece coordinate system can be set for easier programming.  Such a
child coordinate system is referred to as a local coordinate system.

G52 IP _;  Setting the local coordinate system

G52 IP 0 ; Canceling of the local coordinate system

IP _ : Origin of the local coordinate system

......
IP

IP

IP

By specifying G52 IP _;, a local coordinate system can be set in all the
workpiece coordinate systems (G54 to G59).  The origin of each local
coordinate system is set at the position specified by IP _  in the workpiece
coordinate system.
When a local coordinate system is set, the move commands in absolute
mode (G90), which is subsequently commanded, are the coordinate
values in the local coordinate system.  The local coordinate system can
be changed by specifying the G52 command with the zero point of a new
local coordinate system in the workpiece coordinate system. 
To cancel the local coordinate system and specify the coordinate value in
the workpiece coordinate system, match the zero point of the local
coordinate system with that of the workpiece coordinate system.

IP_

IP_

(G59 : Workpiece coordinate system 6)

(G54 : Workpiece coordinate system 1)

G55
G56 G57

G58

Reference point

Machine coordinate system origin

(Machine coordinate system)

(Local coordinate system)

(Local coordinate system)

IP

IP

Fig. 7.3  Setting the local coordinate system

7.3
LOCAL COORDINATE
SYSTEM

Format

Explanations



PROGRAMMING7. COORDINATE SYSTEM B–64124EN/01

96

WARNING
1 When an axis returns to the reference point by the manual reference point return function,the

zero point of the local coordinate system of the axis matches that of the work coordinate system.
The same is true when the following command is issued:

G52α0;
 α:Axis which returns to the reference point

2 The local coordinate system setting does not change the workpiece and machine coordinate
systems.

3 Whether the local coordinate system is canceled at reset depends on the parameter setting.
The local coordinate  system is canceled when either CLR, bit 6 of parameter No.3402 or RLC,
bit 3 of parameter No.1202 is set to 1.

4 If coordinate values are not specified for all axes when setting a workpiece coordinate system
with the G92 command, the local coordinate systems of axes for which coordinate values were
not specified are not cancelled, but remain unchanged.

5 G52 cancels the offset temporarily in cutter compensation.
6 Command a move command immediately after the G52 block in the absolute mode.



PROGRAMMINGB–64124EN/01 7. COORDINATE SYSTEM

97

Select the planes for circular interpolation, cutter compensation, and
drilling by G–code.  
The following table lists G–codes and the planes selected by them.

Table 7.4   Plane selected by G code

G code Selectedplane Xp Yp Zp

G17 Xp Yp plane
X–axis or an Y–axis or an Z–axis or an 

G18 Zp Xp plane
X–axis or an
axis parallel 

to it

Y–axis or an 
axis parallel

to it

Z–axis or an 
axis parallel 

to it
G19 Yp Zp plane

to it to it to it

Xp, Yp, Zp are determined by the axis address appeared in the block in
which G17, G18 or G19 is commanded.
When an axis address is omitted in G17, G18 or G19 block, it is assumed
that the addresses of basic three axes are omitted.
Parameter No. 1022 is used to specify that an optional axis be parallel to
the each axis of the X, Y–, and Z–axes as the basic three axes.
The plane is unchanged in the block in which G17, G18 or G19 is not
commanded.
When the power is turned on or the CNC is reset, G17 (XY plane), G18
(ZX plane), or G19 (YZ plane) is selected by bits 1 (G18) and 2 (G19) of
parameter 3402.
The movement instruction is irrelevant to the plane selection.

Plane selection when the X–axis is parallel with the U–axis. 
G17X_Y_ XY plane, 
G17U_Y_ UY plane
G18X_Z_ ZX plane
       X_Y_ Plane is unchanged (ZX plane)
G17 XY plane
G18 ZX plane
G17 U_ UY plane
G18Y_ ; ZX plane, Y axis moves regardless without any

relation to the plane.

7.4
PLANE  
SELECTION

Explanations

Examples



PROGRAMMING
8. COORDINATE VALUE
   AND DIMENSION B–64124EN/01

98

8 COORDINATE VALUE AND DIMENSION
This chapter contains the following topics.

8.1  ABSOLUTE AND INCREMENTAL PROGRAMMING (G90, G91)
8.2  POLAR COORDINATE COMMAND (G15, G16)
8.3  INCH/METRIC CONVERSION (G20, G21)
8.4  DECIMAL POINT PROGRAMMING



PROGRAMMINGB–64124EN/01
8. COORDINATE VALUE

AND DIMENSION

99

There are two ways to command travels of the tool; the absolute
command, and the incremental command. In the absolute command,
coordinate value of the end position is programmed; in the incremental
command, move distance of the position itself  is programmed.  G90 and
G91 are used to command absolute or incremental command,
respectively.

Absolute command

Incremental command

G90    _ ;

G91    _ ;

IP

IP

Absolute command

Incremental command

G90 X40.0 Y70.0 ;

G91 X–60.0 Y40.0 ;

Y

X

70.0

30.0

40.0 100.0

$	% &��'
'�	

�
��
 &��'
'�	

8.1
ABSOLUTE AND 
INCREMENTAL 
PROGRAMMING 
(G90, G91)

���	
�

�
	����



PROGRAMMING
8. COORDINATE VALUE
   AND DIMENSION B–64124EN/01

100

The end point coordinate value can be input in polar coordinates (radius
and angle). 
The plus direction of the angle is counterclockwise of the selected plane
first axis + direction, and the minus direction is clockwise.
Both radius and angle can be commanded in either absolute or
incremental command (G90, G91).

_

G�� G�� G16 ;

_ ;

G15 ;

G16 Polar coordinate command

G15

G��

G��

Starting the polar coordinate command (polar
coordinate mode)

Polar coordinate command

Canceling the polar coordinate command  (polar coordinate
mode)

Polar coordinate command cancel

Plane selection of the polar coordinate command 
(G17, G18 or G19)

G90 specifies the zero point of the work coordinate system as
the origin of the polar coordinate  system, from which a radius
is measured.
G91 specifies the current position as the origin of the polar
coordinate system, from which a radius is measured.

Specifying the addresses of axes constituting the plane se-
lected for the polar coordinate system, and their values 
First axis : radius of polar coordinate
Second axis : radius of polar coordinate

G�� IP

IP

Specify the radius (the distance between the zero point and the point) to
be programmed with an absolute command.  The zero point of the work
coordinate system is set as the origin of the polar coordinate system.
When a local coordinate system (G52) is used, the origin of the local
coordinate system becomes the center of the polar coordinates.

Radius
Command position

Actual positionAngle

 �%'(�

Angle

Command position

Actual position

When the angle is specified 
with an absolute command

When the angle is specified 
with an incremental command

8.2
POLAR COORDINATE
COMMAND 
(G15, G16)

���	
�

� Setting the zero point of
the workpiece 
coordinate system as the
origin of the polar
coordinate system



PROGRAMMINGB–64124EN/01
8. COORDINATE VALUE

AND DIMENSION

101

Specify the radius (the distance between the current position and the
point) to be programmed with an incremental command.  The current
position is set as the origin of the polar coordinate system.

Radius

Command position

Actual position

Angle

When the angle is specified 
with an absolute command

When the angle is specified 
with an incremental command

Command position

Actual position

Angle
Radius

���
 )��� �'����

Y

150°

30°

100mm

270°
X

– The zero point of the work coordinate 
system is set as the origin of the polar
coordinate system.

– The XY plane is selected.

N1 G17 G90 G16 ;
Specifying the polar coordinate command and selecting the XY plane
Setting the zero point of the work coordinate system as the origin of the
polar coordinate system

N2 G81 X100.0 Y30.0 Z–20.0 R–5.0 F200.0 ;
Specifying a distance of 100 mm and an angle of 30 degrees

N3 Y150.0 ;
Specifying a distance of 100 mm and an angle of 150 degrees

N4 Y270.0 ;
Specifying a distance of 100 mm and an angle of 270 degrees

N5 G15 G80 ;
Canceling the polar coordinate command

N1 G17 G90 G16;
Specifying the polar coordinate command and selecting the XY plane
Setting the zero point of the work coordinate system as the origin of the
polar coordinate system

�� �� ����� ����� 
����� ����� ������ �

Specifying a distance of 100 mm and an angle of 30 degrees
N3 G91 Y120.0 ;

Specifying a distance of 100 mm and an angle of +120 degrees
N4 Y120.0 ;

Specifying a distance of 100 mm and an angle of +120 degrees

� Setting the current
position as the origin of
the polar coordinate
system

�
	����

� Specifying angles and a
radius with absolute
commands

� Specifying angles with
incremental commands
and a radius with
absolute commands



PROGRAMMING
8. COORDINATE VALUE
   AND DIMENSION B–64124EN/01

102

N5 G15 G80 ;
Canceling the polar coordinate command

In the polar coordinate mode, specify a radius for circular interpolation
or helical cutting (G02, G03) with R.

Axes specified for the following commands are not considered part of the
polar coordinate command:

– Dwell (G04)
– Programmable data input (G10)
– Setting the local coordinate system (G52)
– Converting the workpiece coordinate system (G92) 
– Selecting the machine coordinate system (G53) 
– Stored stroke check (G22)
– Coordinate system rotation (G68)
– Scaling (G51)

Neither optional–angle chamfering nor corner rounding can be
commanded in polar coordinate mode.

Limitations

� Specifying a radius in
the polar coordinate
mode

� Axes that are not
considered part of a
polar coordinate
command in the polar
coordinate mode

� Optional–angle
chamfering/corner
rounding



PROGRAMMINGB–64124EN/01
8. COORDINATE VALUE

AND DIMENSION

103

Either inch or metric input can be selected  by G code.

G20 ;

G21 ;

Inch input

mm input

This G code must be specified in an independent block before setting the
coordinate system at the beginning of the program. After the G code for
inch/metric conversion is specified, the unit of input data is switched to
the least inch or metric input increment of increment system IS–B or IS–C
(II–2.3).  The unit of data input for degrees remains unchanged.The unit
systems for the following values are changed after inch/metric
conversion:

– Feedrate commanded by F code
– Positional command 
– Work zero point offset value 
– Tool compensation value
– Unit of scale for manual pulse generator
– Movement distance in incremental feed
– Some parameters
When the power is turned on, the G code is the same as that held before
the power was turned off.

WARNING
1 G20 and G21 must not be switched during a program.
2 When switching inch input (G20) to metric input (G21) and vice versa, the tool compensation

value must be re–set according to the least input increment.
However, when bit 0 (OIM) of parameter 5006 is 1, tool compensation values are automatically
converted and need not be re–set.

CAUTION
For the first G28 command after switching inch input to metric input or vice versa, operation from
the intermediate point is the same as that for manual reference position return.  The tool moves
from the intermediate point in the direction for reference position return, specified with bit 5
(ZMI) of parameter No. 1006.

NOTE
1 When the least input increment and the least command increment systems are different, the

maximum error is half of the least command increment.  This error is not accumulated.
2 The inch and metric input can also be switched using settings. (See III-11.4.3)

8.3
INCH/METRIC 
CONVERSION
(G20,G21)

���	
�



PROGRAMMING
8. COORDINATE VALUE
   AND DIMENSION B–64124EN/01

104

Numerical values can be entered with a decimal point.  A decimal point
can be used when entering a distance, time, or speed.  Decimal points can
be specified with the following addresses:
X, Y, Z, U, V, W, A, B, C, I, J, K, Q, R, and F.

There are two types of decimal point notation:  calculator–type notation
and standard notation.
When calculator–type decimal notation is used, a value without decimal
point is considered to be specified in millimeters inch,or deg.  When
standard decimal notation is used, such a value is considered to be
specified in least input increments.Select either calculator–type or
standard decimal notation by using the DPI bit (bit 0 of parameter
3401).Values can be specified both with and without decimal point in a
single program.

Program command
Pocket calculator
type decimal point

programming

Standard type decimal
point programming

X1000
Command value without
decimal point

1000mm
Unit : mm

1mm

Unit : Least input increment
(0.001 mm)

X1000.0
Command value with
decimal point

1000mm
Unit : mm

1000mm
Unit : mm

WARNING
In a single block, specify a G code before entering a value.  The position of decimal point may
depend on the command.
Examples:
G20; Input in inches
X1.0 G04; X1.0 is considered to be a distance and processed as X10000.  This command

is equivalent to G04 X10000.  The tool dwells for 10 seconds.
G04 X1.0; Equivalent to G04 X1000.  The tool dwells for one second.

NOTE
� Fractions less than the least input increment are truncated.

Examples:
X1.23456; Truncated to X1.234 when the least input increment is 0.001 mm.

Processed as X1.2345 when the least input increment is 0.0001 inch.
� When more than eight digits are specified, an alarm occurs.  If a value is entered with a decimal

point, the number of digits is also checked after the value is converted to an integer according
to the least input increment.
Examples:
X1.23456789; P/S alarm 0.003 occurs because more than eight digits are specified.
X123456.7; If the least input increment is 0.001 mm, the value is converted to integer 

123456700.   Because the integer has more than eight digits, an alarm occurs.

8.4
DECIMAL POINT 
PROGRAMMING

���
�
�����

�
	����



PROGRAMMINGB–64124EN/01
9. SPINDLE SPEED FUNCTION

 (S FUNCTION)

105

9 SPINDLE SPEED FUNCTION (S FUNCTION)
The spindle speed can be controlled by specifying a value following
address S.
This chapter contains the following topics.

9.1 SPECIFYING THE SPINDLE SPEED WITH A CODE
9.2 SPECIFYING THE SPINDLE SPEED VALUE DIRECTLY 
9.2 (S5–DIGIT  COMMAND)
9.3 CONSTANT SURFACE SPEED CONTROL (G96, G97)



PROGRAMMING
9. SPINDLE SPEED FUNCTION 

(S FUNCTION) B–64124EN/01

106

When a value is specified after address S, the code signal and strobe signal
are sent to the machine to control the spindle rotation speed.
A block can contain only one S code.  Refer to the appropriate manual
provided by the machine tool builder for details such as the number of
digits in an S code or the execution order when a move command and an
S code command are in the same block.

The spindle speed can be specified directly by address S followed by a
max.five–digit value (min-1).  The unit for specifying the spindle speed
may vary depending on the machine tool builder.  Refer to the appropriate
manual provided by the machine tool builder for details.

9.1
SPECIFYING THE
SPINDLE SPEED
WITH A CODE

9.2
SPECIFYING THE
SPINDLE SPEED
VALUE DIRECTLY
(S5–DIGIT
COMMAND)



PROGRAMMINGB–64124EN/01
9. SPINDLE SPEED FUNCTION

 (S FUNCTION)

107

Specify the surface speed (relative speed between the tool and workpiece)
following S.  The spindle is rotated so that the surface speed is constant
regardless of the position of the tool.

G96 S����� ;

↑ Surface speed (m/min or feet/min)

Note : This surface speed unit may change according to machine tool 
builder’s specification.

G97 S����� ;

↑ Spindle speed (min-1)

Note : This surface speed unit may change according to machine tool 
builder’s specification.

G96 Pα ; P0 : Axis set in the parameter (No. 3770)
P1 : X axis, P2 : Y axis, P3 : Z axis, P4 : 4th axis

G92 S_ ; The maximum spindle speed (min-1) follows S.

9.3
CONSTANT 
SURFACE SPEED
CONTROL (G96, G97)

���	
�

� Constant surface speed
control command

� Constant surface speed
control cancel command

� Constant surface speed
controlled axis
command

� Clamp of maximum
spindle speed



PROGRAMMING
9. SPINDLE SPEED FUNCTION 

(S FUNCTION) B–64124EN/01

108

G96 (constant surface speed control command) is a modal G code.  After
a G96 command is specified, the program enters the constant surface
speed control mode (G96 mode) and specified S values are assumed as a
surface speed.  A G96 command must specify the axis along which
constant surface speed control is applied.  A G97 command cancels the
G96 mode.When constant surface speed control is applied, a spindle
speed higher than the value specified in G92S_; (maximum spindle
speed) is clamped at the maximum spindle speed.  When the power is
turned on, the maximum spindle speed is not yet set and the speed is not
clamped.S (surface speed) commands in the G96 mode are assumed as S
= 0 (the surface speed is 0) until M03 (rotating the spindle in the positive
direction) or M04 (rotating the spindle in the negative direction) appears
in the program.

Fig. 9.3 (a) Relation between workpiece radius, spindle speed
and surface speed

The spindle speed (min-1) almost
coincides with the surface speed
(m/min) at approx. 160 mm (radius).

Surface speed

S is 600 m/min.

radius (mm)

Spindle speed (min-1)

To execute the constant surface speed control, it is necessary to set the
work coordinate system , and so the coordinate value at the center of the
rotary axis, for example, Z axis, (axis to which the constant surface speed
control applies) becomes zero.

X

Z

0

Fig. 9.3 (b) Example of the workpiece coordinate system for
 constant surface speed control

���
�
�����

� Constant surface speed
control command (G96)

� Setting the workpiece
coordinate system for
constant surface speed
control



PROGRAMMINGB–64124EN/01
9. SPINDLE SPEED FUNCTION

 (S FUNCTION)

109

G96 mode G97 mode

Specify the surface speed in m/min 
(or feet/min)

G97 command

Store the surface speed in m/min 
(or feet/min)

Command for
the spindle
speed

Specified

The specified
spindle speed
(min-1) is used

Not specified

The surface speed (m/min or
feet/min) is converted to the
spindle speed (min-1)

Commands other than G96

G96 command

The specified
surface
speed is used

Command
for the surface

speed

The stored surface speed (m/min or
feet/min) is used.  If no surface speed
is stored, 0 is assumed.

Specified

Not specified

The constant surface speed control is also effective during threading.
Accordingly, it is recommended that the constant surface speed control
be invalidated with G97 command before starting the scroll threading and
taper threading, because the response problem in the servo system may
not be considered when the spindle speed changes.

In a rapid traverse block specified by G00, the constant surface speed
control is not made by calculating the surface speed to a transient change
of the tool position, but is made by calculating the surface speed based on
the position at the end point of the rapid traverse block, on the condition
that cutting is not executed at rapid traverse.

� Surface speed specified
in the G96 mode

������������

� Constant surface speed
control for threading

� Constant surface speed
control for rapid traverse
(G00)



PROGRAMMING
10. TOOL FUNCTION 

(T FUNCTION) B–64124EN/01

110

10 TOOL FUNCTION (T FUNCTION)
Two tool functions are available. One is the tool selection function, and
the other is the tool life management function.

General



PROGRAMMINGB–64124EN/01
10. TOOL FUNCTION

 (T FUNCTION)

111

By specifying an up to 8–digit numerical value following address T, tools
can be selected on the machine.
One T code can be commanded in a block.  Refer to the machine tool
builder’s manual for the number of digits commandable with address T
and the correspondence between the T codes and machine operations.
When a move command and a T code are specified in the same block, the
commands  are executed in one of the following two ways:

(i) Simultaneous execution of the move command and T function
commands.

(ii)Executing T function commands upon completion of move command
execution.
The selection of either (i) or (ii) depends on the machine tool builder’s
specifications.  Refer to the manual issued by the machine tool builder
for details.

10.1
TOOL SELECTION 
FUNCTION



PROGRAMMING
10. TOOL FUNCTION 

(T FUNCTION) B–64124EN/01

112

Tools are classified into various groups, with the tool life (time or
frequency of use) for each group being specified.  The function of
accumulating the tool  life of each group in use and selecting and using
the next tool previously  sequenced in the same group, is called the tool
life management function.

Tool group number m

Tool lifeTool 
number

Code specifying
tool compensa-
tion value

�

	

The first tool life 
management data

The nth tool life 
management data

Fig. 10.2 (a)  Tool life management data (number of n tools)

By choosing a tool from a tool group specified by a machining program,
the tool life can be managed.

Tool life management data

Tool group number 1

Command for selecting
 tool group m

Tool change command
 (M06)

Machining program

Machine CNC

Tool 
selection

Machine and CNC operations

Tool group number m

Tool group number p

Places a se-
lected tool in
the wait state

Attaches the
tool in the wait
state to 
the spindle
(tool change).

Automatically selects, from
tool group m, a tool whose
life has not expired.

Starts counting the life of
the tool attached to the
spindle.l

Fig. 10.2 (b)  Tool Selection by machining program

10.2
TOOL LIFE 
MANAGEMENT 
FUNCTION



PROGRAMMINGB–64124EN/01
10. TOOL FUNCTION

 (T FUNCTION)

113

Tool life management data consists of tool group numbers, tool numbers,
codes specifying tool compensation values, and tool life value.

The Max. number of groups and the number of tools per group that can
be registered are set by parameter (GS1,GS2 No. 6800#0, #1) (Table
10.2.1).

Table 10.2.1  The Max. number of groups and tools that can be registered

GS1 
(No. 6800#0)

GS2 
(No. 6800#1) Number of group Number of tool

0 0 16 16

0 1 32 8

1 0 64 4

1 1 128 2

WARNING
When bits 0 or 1 of parameter GS1,GS2 No.6800 is
changed, re–register tool life management data with the
G10L3 command (for registering and deleting data for all
groups). Otherwise, new data pairs cannot be set.

Specify a four–digit number after T.

Codes specifying tool offset values are classified into H codes (for tool
length offset) and D codes (cutter compensation).  The maximum number
of the tool compensation value specification code which can be registered
is 255 when there are 400 tool compensation values.

NOTE
When codes specifying tool offset values are not used,
registration can be omitted.

Refer to II–10.2.2 and II–10.2.4.

10.2.1
Tool Life Management
Data

���
�
�����

� Tool group number

� Tool number

� Code specifying tool
compensation value

� Tool life value



PROGRAMMING
10. TOOL FUNCTION 

(T FUNCTION) B–64124EN/01

114

In a program, tool life management data can be registered in the CNC unit,
and registered tool life management data can be changed or deleted.

A different program format is used for each of the four types of operations
described below.

After all registered tool life management data is deleted, programmed tool
life management data is registered.

Programmed tool life management data for a group can be added or
changed.

Programmed tool life management data for a group can be deleted.

Count types (time or frequency can be registered for individual groups.

Whether tool life is to be indicated by time (minutes) or by frequency, it
is set by a parameter LTM (No. 6800 #2) .
Maximum value of tool life is as follows.

In case of minute:4300(minutes)
In case of frequency :9999(times)

10.2.2
Register, Change and
Delete of Tool Life
Management Data

���
�
�����

� Register with deleting
all groups

� Addition and change of
tool life management
data

� Deletion of tool life
management data

� Register of tool life count
type

� Life value



PROGRAMMINGB–64124EN/01
10. TOOL FUNCTION

 (T FUNCTION)

115

G10L3 ;
P L  ;
T H D  ;
T H D  ;

P L  ;
T H D  ;
T H D  ;

G11 ;
M02  (M30) ;

G10L3 :Register with deleting all groups
P :Group number
L :Life value
T :Tool number
H :Code specifying tool offset value 

 (H code)
D :Code specifying tool offset value

 (D code)
G11 :End of registration

Meaning of commandFormat
� Register with deleting

all groups

G10L3P1 ;
P L  ;
T H D  ;
T H D  ;

P L  ;
T H D  ;
T H D  ;

G11 ;
M02  (M30) ;

G10L3P1 :Addition and change of group
P :Group number
L :Life value
T :Tool number
H :Code specifying tool offset value

 (H code)
D :Code specifying tool offset value 

 (D code)
G11 :End of addition and change of

 group

� Addition and change of
tool life management
data

Meaning of commandFormat

G10L3P2 ;
P  ;
P  ;
P  ;
P  ;

G11 ;
M02  (M30) ;

G10L3P2 :Deletion of group
P :Group number
G11 :End of deletion of group

Meaning of commandFormat� Deletion of tool life
management data

Format



PROGRAMMING
10. TOOL FUNCTION 

(T FUNCTION) B–64124EN/01

116

G10L3
 or
G10L3P1);
P L Q  ;
T H D  ;
T H D  ;

P L Q  ;
T H D  ;
T H D  ;

G11 ;
M02  (M30) ;

⋅
⋅

Q_  :  Life count type (1:Frequency, 2:Time)

Meaning of commandFormat
� Setting a tool life cout

type for groups

CAUTION
1 When the Q command is omitted, the value set in bit 2 (LTM)

of parameter No.6800 is used as the life count type.
2 G10L3P1 and G10L3L2 can be commanded only when the

extended tool life management feature is enabled.
(Parameter EXT (No.6801#6) = 1)



PROGRAMMINGB–64124EN/01
10. TOOL FUNCTION

 (T FUNCTION)

117

The following command is used for tool life management:
T����; Specifies a tool group number.

The tool life management function selects, from a specified group, a
tool whose life has not expired, and outputs its T code.  In ����,
specify a number calculated by adding the tool life management cancel
number specified in parameter6810 to a group number. For example,
to set tool group 1 when the tool life management cancel number is
100, specify T101;.

NOTE
When ���� is less than a tool life management cancel
number, the T code is treated as an ordinary T code.

M06; Terminates life management for the previously used tools,

and begins counting the life of the new tools selected with

the T code.

WARNING
When an option for speciofying multiple M codes is
selected, specify this code by itself or as the first M code.

H99; Selects the H code of tool life management data for the tool

currently being used.

H00; Cancels tool length offset

D99; Selects the D code of tool life management data for the tool

currently being used.

D00; Cancels cutter compensation

WARNING
H99 or D99 must be specified after the M06 command.
When a code other than H99 or D99 is specified after the
M06 command, the H code and D code of tool life
management data are not selected.

10.2.3
Tool Life Management
Command in a 
Machining Program

���
�
�����

� Command



PROGRAMMING
10. TOOL FUNCTION 

(T FUNCTION) B–64124EN/01

118

For tool life management, the four tool change types indicated below are
available. The type used varies from one machine to another. For details,
refer to the appropriate manual of each machinde tool builder.

Table 10.2.3  Tool Change Type
Tool change

type A B C D

Tool group
number spe-
cified in the
same block
as the tool
change com-
mand (M06)

Previously
used tools

Tools to be used next

Tool life count
timing

Life counting is performed for a tool in the
specified tool group when M06 is specified
next.

Life counting
is performed
when a tool
in the tool
group speci-
fied in the
same block
as M06 is
specified.

Remarks Normally, when a tool group
number is specified by itself,
type B is used. However, no
alarm is raised even if the
tool group number is speci-
fied by itself as type C.

When only
M06 is speci-
fied, P/S
alarm No.
153 is
issued.

Parameter No. 6800#7
(M6T)=0

No.6801#7
(M6E)=0

No. 6800#7 (M6T)=1
No. 6801#7 (M6E)=0

No.6801#7
(M6E)=1

NOTE
When a tool group number is specified and a new tool is
selected, the new tool selection signal is output.

Suppose that the tool life management cancel number is 100.

T101; A tool whose life has not expired is selected from group 1.
(Suppose that tool number 010 is selected.)

M06; Tool life counting is performed for the tool in group 1.
(The life of tool number 010 is counted.)

T102; A tool whose life has not expired is selected from group 2.
(Suppose that tool number 100 is selected.)

M06T101; Tool life counting is performed for the tool in group 2.
(The life of tool number 100 is counted.)
The number of the tool currently used (in group 1) is

 output with a T code signal. (Tool number 010 is
 output.)

� Types

Examples

� Tool change type A



PROGRAMMINGB–64124EN/01
10. TOOL FUNCTION

 (T FUNCTION)

119

Suppose that the tool life management ignore number is 100.

T101; A tool whose life has not expired is selected from group 1.
(Suppose that tool number 010 is selected.)

M06T102;Tool life counting is performed for the tool in group 1.
(The life of tool number 010 is counted.)
A tool whose life has not expired is selected from group 2.
(Suppose that toolnumber 100 is selected.

M06T103;Tool life counting is lperformed for the tool in group 2.
(The life of tool number 100 is counted.)
A tool whose life has not expired is selected from group 3.
(Suppose that tool number 200 is selected.)

Suppose that the tool life management ignore number is 100.
T101M06;A tool whose life has not expired is selected from group 1.
 (Suppose that tool number 010 is selected.)

Tool life counting is performed for the tool in group 1.

 T102M06;A tool whose life has not expired is selected from group 2.
(Suppose that tool number 100 is selected.)
Tool life counting is performed for the tool in group 2.
(The life of tool number 100 is counted.) 

� Tool change type B 
and  C

� Tool change type D



PROGRAMMING
10. TOOL FUNCTION 

(T FUNCTION) B–64124EN/01

120

The life of a tool is specified by a usage frequency (count) or usage time
(in minutes).

The usage count is incremented by 1 for each tool used in a program.
In other words, the usage count is incremented by 1 only when the first
tool group number and tool change command are specified after the
CNC unit enters the automatic operation state from the reset state.

CAUTION
Even if the same tool group number is specified more than
once in a program, the usage count is only incremented by
1 and no new tools are selected.

When a tool change is specified (M06), tool life management is started
for the tools specified by the tool group number. In tool life
management, the time during which a tool is used in the cutting mode
is counted in four second increments., If the tool group is changed
before the incremental time of four seconds elapses, the time is not
counted. The time a tool is used for single block stop, feed hold, rapid
traverse, dwell, machine lock, and interlock is not counted.

NOTE
1 When a tool is selected from available tools, tools are

searched starting from the current tool towards the lasttool
to find a tool whose life has not expired. When thelast tool
is reached during this search, the search restartsfrom the
first tool. When it has been determined that there are no
tools whose life has not expired, the last tool is selected.
When the tool currently being used is changed by tool skip
signal, the next new tool is selected using the method
described  here.

2 When tool life is counted by time, the life counting can be
overridden using the tool life count override signal.  An
override from 0 to 99.9 can be applied. When 0 is specified,
time is not counted. Before the override capability can be
used, bit 2 of parameter LFV No.6801 must be set.

3 When tool life counting indicates that the life of the last tool
in a group has expired, the tool change signal is output.
When tool life is managed by time, the signal is output when
the life of the last tool in the group has expired. When tool
life is managed by usage frequency (count), the signal is
output when the CNC unit is reset or the tool life count
restart M code is specified.

10.2.4
Tool Life

Explanations

� Usage count

� Usage time



PROGRAMMINGB–64124EN/01 11. AUXILIARY FUNCTION

121

11 AUXILIARY FUNCTION
There are two types of auxiliary functions ; miscellaneous function (M
code) for specifying spindle start, spindle stop program end, and so on,
and secondary auxiliary function (B code) for specifying index table
positioning.
When a move command and miscellaneous  function are specified in the
 same block, the commands are executed in one of the following two
 ways:

i) Simultaneous execution of the move command and miscellaneous
function commands.

ii) Executing miscellaneous function commands upon completion of
move command execution.

The selection of either sequence depends on the machine tool builder’s
specification.  Refer to the manual issued by the machine tool builder for
details.

General



PROGRAMMING11. AUXILIARY FUNCTION B–64124EN/01

122

When a numeral is specified following address M, code signal and a
strobe signal are sent to the machine. The machine uses these signals to
turn on or off its functions.
Usually, only one M code can be specified in one block. In some cases,
however, up to three M codes can be specified for some types of machine
tools.
Which M code corresponds to which machine function is determined by
the machine tool builder.
The machine processes all operations specified by M codes except those
specified by M98, M99,M198 or called subprogram(Parameter No.6071
to 6079), or called custom macro (Parameter No.6080 to 6089). Refer to
the machine tool builder’s instruction manual for details.

The following M codes have special meanings.

This indicates the end of the main program
Automatic operation is stopped and the CNC unit is reset. 
This differs with the machine tool builder.
After a block specifying the end of the program  is executed,
control returns to the start of the program.
Bit 5 of parameter 3404 (M02)  or bit 4 of parameter 3404 (M30) can be
used to disable M02, M30 from returning control to the start of the
program.

Automatic  operation is stopped after a block containing M00 is executed.
When the program is stopped, all existing modal information remains
unchanged.  The automatic operation can be restarted by actuating the
cycle operation.  This differs with the machine tool builder.

Similarly to M00, automatic operation is stopped after a block containing
M01 is executed.  This code is only effective when the Optional Stop
switch on the machine operator’s panel has been pressed.

This code is used to call a subprogram. The code and strobe signals are
 not sent.  See the subprogram II– 12.3 for details . 

This code indicates the end of a subprogram.  
M99 execution returns control to the main program.  The code and  strobe
signals are not sent. See the subprogram  section 12.3 for details. 

This code is used to call a subprogram of a file in the external input/output
function.  See the description of the subprogram call function (III–4.6) for
details.

NOTE
The block following M00, M01, M02, or M30 is not pre–read
(buffered).  Similarly, ten M codes which do not buffer can
be set by parameters (Nos. 3411 to 3420).  Refer to the
machine tool builder’s instruction manual for these M codes.

11.1
AUXILIARY 
FUNCTION
(M FUNCTION)

Explanations

� .)&/.)(

��� �� ���"�
	�

� .))

�*��"�
	 �����

� .)�

�0�����
� �����

� .,'

� 
����" �� ���1

���"�
	)

� .,,

��� �� ������"�
	�

� M198 (Calling a
subprogram)



PROGRAMMINGB–64124EN/01 11. AUXILIARY FUNCTION

123

In general, only one M code can be specified in a block.  However, up to
three M codes can be specified at once in a block by setting bit 7 (M3B)
of parameter No. 3404 to 1.  Up to three M codes specified in a block are
simultaneously output to the machine.  This means that compared with
the conventional method of a single M command in a single block, a
shorter cycle time can be realized in machining.

CNC allows up to three M codes to be specified in one block.
However, some M codes cannot be specified at the same time due to
mechanical operation restrictions.  For detailed information about the
mechanical operation restrictions on simultaneous specification of
multiple M codes in one block, refer to the manual of each machine
tool builder.
M00, M01, M02, M30, M98, M99, or M198 must not be specified
together with another M code.
Some M codes other than M00, M01, M02, M30, M98, M99, and
M198 cannot be specified together with other M codes; each of those
M codes must be specified in a single block.  
Such M codes include these which direct the CNC to perform internal
operations in addition to sending the M codes themselves to the
machine. To be specified, such M codes are M codes for calling
program numbers 9001 to 9009 and M codes for disabling advance
reading (buffering) of subsequent blocks. Meanwhile, multiple of M
codes that direct the CNC only to send the M codes themselves
(without performing internal operations ) can be specified in a single
block.

One M command
 in a single  block

Multiple M commands
in a single block

M40 ;
M50 ;
M60 ;
G28G91X0Y0Z0 ;

:
:
:

M40M50M60 ;
G28G91X0Y0Z0 ;

:
:
:
:
:

11.2
MULTIPLE  M
COMMANDS 
IN A SINGLE BLOCK

Explanations

Examples



PROGRAMMING11. AUXILIARY FUNCTION B–64124EN/01

124

When a value is specified after address B, the code signal and strobe signal
are output.  The code is retained until a B code is specified next.
The functions are used for machine side operations such as indexing for
the rotation axis.  Each block can contain only one B code.  Setting
parameter No. 3460 enables the use of one of addresses A, C, V, and W,
instead of address B.  However, this address must be different from that
for the controlled axis.  For details, refer to the manual issued by the
machine tool builder.

0 to 99999999

1. To enable the use of a decimal point, set bit 0 (AUP) of parameter 
No.3450 to 1.

Command Output value
B10. 10000
B10 10

2. Use bit 0 (DPI) of parameter No. 3401 to specify whether the 
magnification for B output will be �1000 or �1 when a decimal 
point is omitted.

Command Output value
DPI=1 B1 1000
DPI=0 B1 1

3. Use bit 0 (AUX) of parameter No. 3405 to specify whether the 
magnification for B output will be �1000 or �10000 when a 
decimal point is omitted for the inch Input system 
(only when DPI=1).

Command Output value
AUX=1 B1 10000
AUX=0 B1 1000

The address (B or the address specified with parameter No. 3460) used
with the second auxiliary functions cannot be used for the controlled axis
name (parameter No. 1020).

11.3
THE SECOND
AUXILIARY
FUNCTIONS 
(B CODES)

Explanations

� Valid data range

� Specification

Restrictions



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

125

12 PROGRAM CONFIGURATION

There are two program types, main program and subprogram.  Normally,
the CNC operates according to the main program.  However, when a
command calling a subprogram is encountered in the main program,
control is passed to the subprogram.  When a command specifying a
return to the main program is encountered in a subprogram, control is
returned to the main program.

Follow the direction of the
subprogram

Main program �(�&��*��+

Instruction 1

Instruction 2

Instruction n

Instruction 1�

Instruction 2�

Instruction n+1

 �
(�	 
� 
)� +�'	 &��*��+

Fig. 12 (a)  Main program and subprogram

The CNC memory can hold up to 400 main programs and subprograms.
A main program can be selected from the stored main programs to operate
the machine. See III–9.3 or III–10 in OPERATION for the methods of
registering and selecting programs.

General

� Main program and
subprogram



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

126

A program consists of the following components:

Table 12  Program components

Components Descriptions

Tape start Symbol indicating the start of a program file

Leader section Used for the title of a program file, etc.

Program start Symbol indicating the start of a program

Program section Commands for machining

Comment section Comments or directions for the operator

Tape end Symbol indicating the end of a program file

Tape start % TITLE ;

O0001 ;

M30 ;

%

(COMMENT)Program section

Leader section

Program start

Comment section

Tape end

Fig. 12 (b)  Program configuration

A program section consists of several blocks.  A program section starts
with a program number and ends with a program end code.

*��"�
	 ������� *��"�
	 �������

�����"��
����

Program number O0001 ;
Block 1 N1 G91 G00 X120.0 Y80.0 ;
Block 2 N2 G43 Z–32.0 H01 ;
  :             :
Block n Nn Z0 ;
Program end M30 ;

A block contains information necessary for machining, such as a move
command or coolant on/off command.Specifying a  slash (/) at the start
of a block disables the execution of some blocks (see “optional block
skip” in II–12.2).

� Program components

� Program section
configuration



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

127

This section describes program components other than program sections.
See II–12.2 for a program section.

Fig. 12.1 (a)  Program configuration

The tape start indicates the start of a file that contains NC programs.
The mark is not required when programs are entered using SYSTEM P
or ordinary personal computers. The mark is not displayed on the screen.
However, if the file is output,the mark is automatically output at the start
of the file.

Table 12.1 (a)  Code of a tape start

Name ISO
code

EIA
code

Notation in this manual

Tape start % ER %

Data entered before the programs in a file constitutes a leader section. 
When machining is started, the label skip state is usually set by turning
on the power or resetting the system.  In the label skip state, all
information is ignored until the first end–of–block code is read.  When a
file is read into the CNC unit from an I/O device, leader sections are
skipped by the label skip function.
A leader section generally contains information such as a file header.
When a leader section is skipped, even a TV parity check is not made. So
a leader section can contain any codes except the EOB code.

The program start code is to be entered immediately after a leader section,
that is, immediately before a program section. 
This code indicates the start of a program, and is always required to
disable the label skip function.
With SYSTEM P or ordinary personal computers, this code can be entered
by pressing the return key.

Table 12.1 (b)  Code of a program start

Name ISO
code

EIA
code

Notation in this manual

Program start LF CR ;

12.1
PROGRAM
COMPONENTS
OTHER THAN
PROGRAM
SECTIONS

Explanations

� Tape start

� Leader section

� Program start

% TITLE ;

O0001 ;

M30 ;

%

(COMMENT)

Tape start

Program section

Leader section

Program start

Comment section

Tape end



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

128

NOTE
If one file contains multiple programs, the EOB code for
label skip operation must not appear before a second or
subsequent program number.

Any information enclosed by the control–out and control–in codes is
regarded as a comment.
The user can enter a header, comments, directions to the operator, etc. in
a comment section.

Table 12.1 (c)  Codes of a control–in and a control–out

Name ISO
code

EIA
code

Notation in this
manual

Meaning

Control–out ( 2–4–5 ( Start of comment section

Control–in ) 2–4–7 ) End of comment section

When a program is read into memory for memory operation, comment
sections, if any, are not ignored but are also read into memory.  Note,
however, that codes other than those listed in the code table in Appendix
A are ignored, and thus are not read into memory.  
When data in memory is output  on external I/O device(See III–8), the
comment sections are also output.
When a program is displayed on the screen, its comment sections are also
displayed.  However, those codes that were ignored when read into
memory are not output or displayed.
During memory operation or DNC operation, all comment sections are
ignored.
The TV check function can be used for a comment section by setting
parameter CTV (bit 1 of No. 0100).

CAUTION
If a long comment section appears in the middle of a
program section, a move along an axis may be suspended
for a long time because of such a comment section. So a
comment section should be placed where movement
suspension may occur or no movement is involved.

NOTE
1 If only a control–in code is read with no matching

control–out code, the read control–in code is ignored.
2 The EOB code cannot be used in a comment.

� Comment section



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

129

A tape end is to be placed at the end of a file containing NC programs.
If programs are entered using the automatic programming system, the
mark need not be entered. 
The mark is not displayed on the screen. However, when a file is output,
the mark is automatically output at the end of the file.
If an attempt is made to execute % when M02 or M03 is not placed at the
end of the program, the P/S alarm (No.  5010) is occurred.

Table 12.1 (d)  Code of a tape end

Name ISO
code

EIA
code

Notation in this
manual

Tape end % ER %

� Tape end



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

130

This section describes elements of a program section.  See II–12.1 for
program components other than program sections.

%

(COMMENT)

% TITLE;

O0001 ;
N1 …   ;

M30 ;

Program section Comment section

Program number

Sequence number

Program end

Fig. 12.2 (a)  Program configuration

A program number consisting of address O followed by a four–digit
number is assigned to each program at the beginning registered in
memory to identify the program.
In ISO code, the colon ( : ) can be used instead of O.
When no program number is specified at the start of a program, the
sequence number (N....) at the start of the program is regarded as its
program number. If a five–digit sequence number is used, the lower four
digits are registered as a program number. If the lower four digits are all
0, the program number registered immediately before added to 1 is
registered as a program number. Note, however, that N0 cannot be used
for a program number. 
If there is no program number or sequence number at the start of a
program, a program number must be specified using the MDI panel when
the program is stored in memory (See III–8.4 or III–10.1)

NOTE
Program numbers 8000 to 9999 may be used by machine
tool builders, and the user may not be able to use these
numbers.

12.2
PROGRAM SECTION
CONFIGURATION

� Program number



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

131

A program consists of several commands. One command unit is called a
block. One block is separated from another with an EOB of end of block
code.

Table 12.2 (a)  EOB code

Name ISO
code

EIA
code

Notation in this
manual

End of block (EOB) LF CR ;

At the head of a block, a sequence number consisting of address N
followed by a number not longer than five digits (1 to 99999) can be
placed. Sequence numbers can be specified in a random order, and any
numbers can be skipped.  Sequence numbers may be specified for all
blocks or only for desired blocks of the program.  In general, however, it
is convenient to assign sequence numbers in ascending order in phase
with the machining steps (for example, when a new tool is used by tool
replacement, and machining proceeds to a new surface with table
indexing.)

N300 X200.0 Z300.0 ; A sequence number is underlined.

Fig. 12.2 (b)  Sequence number and block (example)

NOTE
N0 must not be used for the reason of file compatibility with
other CNC systems.
Program number 0 cannot be used.  So 0 must not be used
for a sequence number regarded as a program number.

A parity check is made for a block on input tape vertically. If the number
of characters in one block (starting with the code immediately after an
EOB and ending with the next EOB) is odd, an P/S alarm (No.002) is
output.  No TV check is made only for those parts that are skipped by the
label skip function.  Bit 1 (CTV) of parameter No. 0100 is used to specify
whether comments enclosed in parentheses are counted as characters
during TV check.  The TV check function can be enabled or disabled by
setting on the MDI unit (See III–11.4.3.).

� Sequence number and
block

� TV check (Vertical parity
check along tape)



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

132

A block consists of one or more words.  A word consists of an address
followed by a number some digits long. (The plus sign (+) or minus sign
(–) may be prefixed to a number.)
Word = Address + number (Example : X–1000)
For an address, one of the letters (A to Z) is used ; an address defines the
meaning of a number that follows the address.  Table 12.2 (b) indicates
the usable addresses and their meanings.
The same address may have different meanings, depending on the
preparatory function specification.

Table 12.2 (b)  Major functions and addresses

Function Address Meaning

Program number O (1) Program number

Sequence number N Sequence number

Preparatory function G Specifies a motion mode (linear, arc,
etc.)

Dimension word X, Y, Z, U,
V, W, A, B,
C

Coordinate axis move command

I, J, K Coordinate of the arc center

R Arc radius

Feed function F Rate of feed per minute, 
Rate of feed per revolution

Spindle speed function S Spindle speed

Tool function T Tool number

Auxiliary function M On/off control on the machine tool

B Table indexing, etc.

Offset number D, H Offset number

Dwell P, X Dwell time

Program number 
designation

P Subprogram number

Number of 
repetitions

P Number of subprogram repetitions

Parameter P, Q Canned cycle parameter

NOTE
In ISO code, the colon ( : ) can also be used as the address
of a program number.

N_ G_ X_    Y_ F_ S_ T_ M_ ;

Sequence
number

Preparatory
function

Fig. 12.2 (c)  1 block (example)

Dimension
word

Feed–
function

Spindle
speed
function

Tool
function

Miscellaneous
function

� Block configuration
(word and address)



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

133

Major addresses and the ranges of values specified for the addresses are
shown below. Note that these figures represent limits on the CNC side,
which are totally different from limits on the machine tool side. For
example, the CNC allows a tool to traverse up to about 100 m (in
millimeter input) along the X axis.
However, an actual stroke along the X axis may be limited to 2 m for a
specific machine tool. 
Similarly, the CNC may be able to control a cutting federate of up to 240
m/min, but the machine tool may not allow more than 3 m/min. When
developing a program, the user should carefully read the manuals of the
machine tool as well as this manual to be familiar with the restrictions on
programming.

Table 12.2 (c)  Major addresses and ranges of command values

Function Address Input in mm Input in inch

Program number O (1) 1–9999 1–9999

Sequence number N 1–99999 1–99999

Preparatory function G 0–99 0–99

Dimen-
sion 
word

Increment
system IS–B

X, Y, Z,
U, V, W,
A, B, C,

± 99999.999mm ± 9999.9999inch

word
Increment
system IS–C

A, B, C,
I, J, K, R, ± 9999.9999mm ± 999.99999inch

Feed 
per 
minute

Increment
system IS–B

F 1–240000mm/min 0.01–9600.00
inch/min

minute
Increment
system IS–C

1–100000mm/min 0.01–4000.00
inch/min

Feed per revolution F 0.001–500.00
mm/rev

0.0001–9.9999
inch/rev

Spindle speed function S 0–20000 0–20000

Tool function T 0–99999999 0–99999999

Auxiliary function M 0–99999999 0–99999999

B 0–99999999 0–99999999

Offset number H, D 0–400 0–400

Dwell Increment
system IS–B

X, P 0–99999.999s 0–99999.999s

Increment
system IS–C

0–9999.9999s 0–9999.9999s

Designation of a pro-
gram number

P 1–9999 1–9999

Number of subprogram
repetitions

P 1–999 1–999

NOTE
In ISO code, the colon ( : ) can also be used as the address
of a program number.

� Major addresses and
ranges of command
values



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

134

When a slash followed by a number (/n (n=1 to 9)) is specified at the head
of a block, and optional block skip switch n on the machine operator panel
is set to on, the information contained in the block for which /n
corresponding to switch number n is specified is ignored in DNC
operation or memory operation.
When optional block skip switch n is set to off, the information contained
in the block for which /n is specified is valid. This means that the operator
can determine whether to skip the block containing /n.
Number 1 for /1 can be omitted.  However, when two or more optional
block skip switches are used for one block, number 1 for /1 cannot be
omitted.
Example)

(Incorrect) (Correct)
//3 G00X10.0; /1/3 G00X10.0;

This function is ignored when programs are loaded into memory. Blocks
containing /n are also stored in memory, regardless of how the optional
block skip switch is set.
Programs held in memory can be output, regardless of how the optional
block skip switches are set.
Optional block skip is effective even during sequence number search
operation.
Depending on the machine tool, all optional block skip switches (1 to 9)
may not be usable. Refer to manuals of the machine tool builder to find
which switches are usable.

WARNING
1 Position of a slash

A slash (/) must be specified at the head of a block. If a slash
is placed elsewhere, the information from the slash to
immediately before the EOB code is ignored.

2 Disabling an optional block skip switch
Optional block skip operation is processed when blocks are
read from memory or tape into a buffer. Even if a switch is
set to on after blocks are read into a buffer, the blocks
already read are not ignored.

NOTE
TV and TH check
When an optional block skip switch is on. TH and TV checks
are made for the skipped portions in the same way as when
the optional block skip switch is off.

� Optional block skip



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

135

The end of a program is indicated by programming one of the following
codes at the end of the program:

Table 12.2 (d)  Code of a program end

Code Meaning usage

M02 For main program

M30

M99 For subprogram

If one of the program end codes is executed in program execution, the
CNC terminates the execution of the program, and the reset state is set.
When the subprogram end code is executed, control returns to the
program that called the subprogram.

WARNING
A block containing an optional block skip code such as /M02
; , /M30 ; , or /M99 ; is not regarded as the end of a program,
if the optional block skip switch on the machine operator’s
panel is set to on.
(See “Optional block skip”.)

� Program end



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

136

If a program contains a fixed sequence or frequently repeated pattern, such
a sequence or pattern can be stored as a subprogram in memory to simplify
the program.
A subprogram can be called from the main program. 
A called subprogram can also call another subprogram.

O ���� ;

M99 ;

Subprogram number
 (or the colon (:) optionally in the case of ISO)

Program end

One subprogram

M99 need not constitute a separate block as indicated below.
Example) X100.0 Y100.0 M99 ;

M98 P ��� ���� ;
 ↑
Subprogram number

       ↑
Number of times
the subprogram is
called repeatedly

When no repetition data is specified, the subprogram is called just once.

When the main program calls a subprogram, it is regarded as a one–level
subprogram call. Thus, subprogram calls can be nested up to four levels
as shown below.

O0001 ;

M98P1000 ;

M30 ;

Main program

O3000 ;

M99 ;

O1000 ;

M98P2000 ;

M99 ;

O2000 ;

M98P3000 ;

M99 ;

Subprogram

(One–level nesting) (Two–level nesting) (Three–level nesting)

Subprogram Subprogram

O4000 ;

M99 ;
(Four–level nesting)

Subprogram

M98P4000 ;

A single call command can repeatedly call a subprogram up to 999 times.
For compatibility with automatic programming systems, in the first
block, Nxxxx can be used instead of a subprogram number that follows
O (or :).  A sequence number after N is registered as a subprogram number.

See III–10 for the method of registering a subprogram.

12.3
SUBPROGRAM
 (M98, M99)

Format

� Subprogram
configuration

� Subprogram call

Explanations

� Reference



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

137

NOTE
1 The M98 and M99 code signal and strobe signal are not

output to the machine tool.
2 If the subprogram number specified by address P cannot be

found, an alarm (No. 078) is output.

� M98 P51002 ;

� X1000.0 M98 P1200 ;

� Execution sequence of subprograms called from a main program

A subprogram can call another subprogram in the same way as a main pro-
gram calls a subprogram.

This command specifies “Call the subprogram (number 1002) five times in
succession.” A subprogram call command (M98P_) can be specified in the
same block as a move command.

This example calls the subprogram (number 1200) after an X movement.

1 2 3
Main program

N0010 0 ;
N0020 0 ;
N0030 M98 P21010 ;

N0040 0 ;
N0050 M98 P1010 ;

N0060 0 ;

Subprogram

O1010 0 ;
N1020 0 ;
N1030 0 ;
N1040 0 ;
N1050 0 ;
N1060 0 M99 ;

Examples



PROGRAMMING12. PROGRAM CONFIGURATION B–64124EN/01

138

If P is used to specify a sequence number when a subprogram is
terminated, control does not return to the block after the calling block, but
returns to the block with the sequence number specified by P.  Note,
however, that P is ignored if the main program is operating in a mode other
than memory operation mode.
This method consumes a much longer time than the normal return method
to return to the main program.

Subprogram

O0010 … ;
N1020 … ;
N1030 … ;
N1040 … ;
N1050 … ;
N1060 M99 P0060 ;

Main program

N0010 … ;
N0020 … ;
N0030 M98 P1010 ;

N0040 … ;
N0050 … ;
N0060 … ;

If M99 is executed in a main program, control returns to the start of the
main program. For example, M99 can be executed by placing /M99 ; at
an appropriate location of the main program and setting the optional block
skip function to off when executing the main program.  When M99 is
executed, control returns to the start of the main program, then execution
is repeated starting at the head of the main program.
Execution is repeated while the optional block skip function is set to off.
If the optional block skip function is set to on, the /M99 ; block is skipped
; control is passed to the next block for continued execution.
If/M99Pn ; is specified, control returns not to the start of the main
program, but to sequence number n. In this case, a longer time is required
to return to sequence number n.

N0010 … ;
N0020 … ;
N0030 … ;
N0040 … ;
N0050 … ;
N0060 M99 P0030 ;

N0070 … ;
N0080 M02 ;

/ Optional block skip
ON

Optional block skip
OFF

Special Usage

� Specifying the sequence
number for the return
destination in the main
program

� Using M99 in the main
program



PROGRAMMINGB–64124EN/01 12. PROGRAM CONFIGURATION

139

A subprogram can be executed just like a main program by searching for
the start of the subprogram with the MDI.
(See III–9.3 for information about search operation.)
In this case, if a block containing M99 is executed, control returns to the
start of the subprogram for repeated execution. If a block containing
M99Pn is executed, control returns to the block with sequence number n
in the subprogram for repeated execution.  To terminate this program, a
block containing /M02 ; or /M30 ; must be placed at an appropriate
location, and the optional block switch must be set to off ; this switch is
to be set to on first.

N1010 … ;
N1020 … ;
N1030 … ;
N1040 M02 ;

N1050 M99 P1020 ;

/ Optional block skipON

� Using a subprogram only



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

140

13 FUNCTIONS TO SIMPLIFY PROGRAMMING
This chapter explains the following items:

13.1 CANNED CYCLE
13.2 RIGID TAPPING
13.3 CANNED GRINDING CYCLE (FOR GRINDING MACHINE)
13.4 GRINDING–WHEEL WEAR COMPENSATION BY CONTINUOUS

DRESSING (FOR GRINDING MACHINE)
13.5 IN–FEED GRINDING ALONG THE Y AND Z AXES AT THE END

OF TABLE SWING (FOR GRINDING MACHINE)
13.6 OPTIONAL ANGLE CHAMFERING AND CORNER ROUNDING
13.7 EXTERNAL MOTION FUNCTION (G81)
13.8 INDEX TABLE INDEXING FUNCTION

General



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

141

Canned cycles make it easier for the programmer to create programs.
With a canned cycle, a frequently–used machining operation can be
specified in a single block with a G function; without canned cycles,
normally more than one block is required.  In addition, the use of canned
cycles can shorten the program to save memory.
Table 13.1 (a) lists canned cycles.

Table 13.1 (a)  Canned cycles

G code Drilling(–Z direction) Operation at thebottom of a hole Retraction(+Z direction) Application

G73 Intermittent feed – Rapid traverse High–speed peck drilling
cycle

G74 Feed Dwell→Spindle CW Feed Left–hand tapping cycle

G76 Feed Oriented spindle
stop

Rapid traverse Fine boring cycle

G80 – – – Cancel

G81 Feed – Rapid traverse Drilling cycle, spot drilling
cycle

G82 Feed Dwell Rapid traverse Drilling cycle, counter boring
cycle

G83 Intermittent feed – Rapid traverse Peck drilling cycle

G84 Feed Dwell→Spindle
CCW

Feed Tapping cycle

G85 Feed – Feed Boring cycle

G86 Feed Spindle stop Rapid traverse Boring cycle

G87 Feed Spindle CW Rapid traverse Back boring cycle

G88 Feed Dwell→spindle stop Manual Boring cycle

G89 Feed Dwell Feed Boring cycle

13.1
CANNED CYCLE



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

142

A canned cycle consists of a sequence of six operations (Fig. 13.1 (a))

Operation 1 Positioning of axes X and Y
(including also another axis)

Operation 2 Rapid traverse up to point R level
Operation 3 Hole machining
Operation 4 Operation at the bottom of a hole
Operation 5 Retraction to point R level
Operation 6 Rapid traverse up to the initial point

Operation 1

Operation 2

Operation 3

Operation 4

Operation 5

Operation 6

Rapid traverse
Feed

Initial level

Point R level

Fig. 13.1  Canned cycle operation sequence

The positioning plane is determined by plane selection code G17, G18,
or G19.  
The positioning axis is an axis other than the drilling axis.

Although canned cycles include tapping and boring cycles as well as
drilling cycles, in this chapter, only the term drilling will be used to refer
to operations implemented with canned cycles.
The drilling axis is a basic axis (X, Y, or Z) not used to define the
positioning plane, or any axis parallel to that basic axis.
The axis (basic axis or parallel axis) used as the drilling axis is determined
according to the axis address for the drilling axis specified in the same
block as G codes G73 to G89.
If no axis address is specified for the drilling axis, the basic axis is
assumed to be the drilling axis.

Table 13.1 (b)  Positioning plane and drilling axis

G code Positioning  plane Drilling axis

G17 Xp–Yp plane Zp

G18 Zp–Xp plane Yp

G19 Yp–Zp plane Xp

Xp : X axis or an axis parallel to the X axis
Yp : Y axis or an axis parallel to the Y axis
Zp : Z axis or an axis parallel to the Z axis

Explanations

� Positioning plane

� �������" 
���



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

143

Assume that the U, V and W axes be parallel to the X, Y, and Z axes
respectively.  This condition is specified by parameter No. 1022.

G17  G81 ………Z _ _ : The Z axis is used for drilling.
G17  G81 ………W _ _ : The W axis is used for drilling.
G18  G81 ………Y _ _ : The Y axis is used for drilling.
G18  G81 ………V _ _ : The V axis is used for drilling.
G19  G81 ………X _ _ : The X axis is used for drilling.
G19  G81 ………U _ _ : The U axis is used for drilling.

G17 to G19 may be specified in a block in which any of G73 to G89 is
not specified.

WARNING
Switch the drilling axis after canceling a canned cycle.

NOTE
A parameter FXY (No. 5101 #0) can be set to the Z axis
always used as the drilling axis.  When FXY=0, the Z axis
is always the drilling axis.

The travel distance along the drilling axis varies for G90 and G91 as
follows:

Z=0

R

Z

G90 (Absolute Command)

R

Z

G91 (Incremental Command)

Point R

Point Z

Point R

Point Z

G73, G74, G76, and G81 to G89 are modal G codes and remain in effect
until canceled.  When in effect, the current state is the drilling mode.
Once drilling data is specified in the drilling mode, the data is retained
until modified or canceled.
Specify all necessary drilling data at the beginning of canned cycles; when
canned cycles are being performed, specify data modifications only.

Examples

� Travel distance along the
drilling axis G90/G91

� Drilling mode



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

144

When the tool reaches the bottom of a hole, the tool may be returned to
point R or to the initial level.  These operations are specified with G98 and
G99.  The following illustrates how the tool moves when G98 or G99 is
specified.  Generally, G99 is used for the first drilling operation and G98
is used for the last drilling operation.
The initial level does not change even when drilling is performed in the
G99 mode.

G98(Return  to initial level ) G99(Return to point R level)

Initial level

Point R level

To repeat drilling for equally–spaced holes, specify the number of repeats
in K_. 
K is effective only within the block where it is specified.
Specify the first hole position in incremental mode (G91).  
If it is specified in absolute mode (G90), drilling is repeated at the same
position.

Number of repeats K      The maximum command value = 9999

If K0 is specified, drilling data is stored, but drilling is not performed.

To cancel a canned cycle, use G80 or a group 01 G code.

Group 01 G codes
G00 : Positioning (rapid traverse)
G01 : Linear interpolation
G02 : Circular interpolation or helical interpolation (CW)
G03 : Circular interpolation or helical interpolation (CCW)
G60 : Single direction positioning (when the MDL bit (bit 0 of 

parameter 5431) is set to 1)

Subsequent sections explain the individual canned cycles.  Figures in
these explanations use the following symbols:

DwellP

OSS

Positioning (rapid traverse G00)

Cutting feed (linear interpolation G01)

Manual feed

Shift (rapid traverse G00)

Oriented spindle stop 
(The spindle stops at a fixed rotation position)

� Return point level
G98/G99

� Repeat

� Cancel

� Symbols in figures



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

145

This cycle performs high–speed peck drilling.  It performs intermittent
cutting feed to the bottom of a hole while removing chips from the hole.

G73 (G98) G73 (G99)

G73 X_ Y_ Z_ R_ Q_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
Q_ : Depth of cut for each cutting feed
F_ : Cutting feedrate
K_ : Number of repeats (if required)

Initial level

q

q

q

d

d

q

q

q

d

d

Point R Point R levelPoint R

Point Z Point Z

13.1.1
High–speed Peck
Drilling Cycle 
(G73)

Format



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

146

The high–speed peck drilling cycle performs intermittent feeding along
the Z–axis.  When this cycle is used, chips can be removed from the hole
easily, and a smaller value can be set for retraction.  This allows, drilling
to be performed efficiently.  Set the clearance, d, in parameter 5114.  
The tool is retracted in rapid traverse.
Before specifying G73, rotate the spindle using a miscellaneous function
(M code).
When the G73 code and an M code are specified in the same block, the
M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify Q and P in blocks that perform drilling.  If they are specified in
a block that does not perform drilling, they cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G73 in a single block.
Otherwise, G73 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G73 X300. Y–250. Z–150. R–100. Q15. F120. ; 

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

���
�
�����

Limitations

� Axis switching

� Drilling

� Q/P

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

147

This cycle performs left–handed tapping.  In the left–handed tapping
cycle, when the bottom of the hole has been reached, the spindle rotates
clockwise.

G74 (G98) G74 (G99)

G74 X_ Y_ Z_ R_P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time
F_ : Cutting feedrate
K_ : Number of repeats (if required)

P

P

P

P

Initial level

Point R

Point Z

Spindle
CCW

Spindle
CCW

Point R level

Spindle CW
Spindle CW

Point Z

Point R

Tapping is performed by turning the spindle counterclockwise.  When the
bottom of the hole has been reached, the spindle is rotated clockwise for
retraction.  This creates a reverse thread.
Feedrate overrides are ignored during left–handed tapping.  A feed hold
does not stop the machine until the return operation is completed.
Before specifying G74, use a miscellaneous function (M code) to rotate
the spindle counterclockwise.
When the G74 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.2
Left–handed 
Tapping Cycle (G74)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

148

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify  P in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G74 in a single block.
Otherwise, G74 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M4 S100 ; Cause the spindle to start rotating.  
G90 G99 G74 X300. Y–250. Z–150. R–120. F120. ;

Position, tapping hole 1, then return to point R.
Y–550. ; Position, tapping hole 2, then return to point R.
Y–750. ; Position, tapping hole 3, then return to point R.
X1000. ; Position, tapping hole 4, then return to point R.
Y–550. ; Position, tapping hole 5, then return to point R.
G98 Y–750. ; Position, tapping hole 6, then return to the

initial level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Limitations

� Axis switching

� Drilling

� P

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

149

The fine boring cycle bores a hole precisely.  When the bottom of the hole
has been reached, the spindle stops, and the tool is moved away from the
machined surface of the workpiece and retracted.

G76 (G98) G76 (G99)

G76 X_ Y_ Z_ R_ Q_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
Q_ : Shift amount at the bottom of a hole
P_ : Dwell time at the bottom of a hole
F_ : Cutting feedrate
K_ : Number of repeats (if required)

q
q

Shift amount q

Oriented spindle stop

Tool

OSS OSS

Point R
 level

Point R

Point Z

Spindle CW

Initial level

Point Z

Point R

Spindle CW

PP

WARNING
Q (shift at the bottom of a hole) is a modal value retained
within canned cycles.  It must be specified carefully because
it is also used as the depth of cut for G73 and G83.

13.1.3
Fine Boring Cycle
(G76)

Format



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

150

When the bottom of the hole has been reached, the spindle is stopped at
the fixed rotation position, and the tool is moved in the direction opposite
to the tool tip and retracted.  This ensures that the machined surface is not
damaged and enables precise and efficient boring to be performed.
Before specifying G76, use a miscellaneous function (M code) to rotate
the spindle.
When the G76 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any additional axes, boring
is not performed.

Be sure to specify a positive value in Q.  If Q is specified with a negative
value, the sign is ignored.  Set the direction of shift in bits 4 (RD1) and
5 (RD2) of parameter 5101.  Specify P and Q in a block that performs
boring.  If they are specified in a block that does not perform boring, they
are not stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G76 in a single block.
Otherwise, G76 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S500 ; Cause the spindle to start rotating.
G90 G99 G76 X300. Y–250.Position, bore hole 1, then return to point R.
Z–150. R–120. Q5. Orient at the bottom of the hole, then shift

by 5 mm. 
P1000 F120. ;  Stop at the bottom of the hole for 1 s.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Explanations

Limitations

� Axis switching

� Boring

� P/Q

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

151

This cycle is used for normal drilling.  Cutting feed is performed to the
bottom of the hole.  The tool is then retracted from the bottom of the hole
in rapid traverse.

G81 (G98) G81 (G99)

G81 X_ Y_ Z_ R_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
F_ : Cutting feedrate
K_ : Number of repeats (if required)

Point R

Initial level

Point Z

Point R

Point Z

Point R level

After positioning along the X– and Y–axes, rapid traverse is performed
to point R. 
Drilling is performed from point R to point Z.  
The tool is then retracted in rapid traverse.
Before specifying G81, use a miscellaneous function (M code) to rotate
the spindle.
When the G81 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is performed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.4
Drilling Cycle, Spot
Drilling (G81)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

152

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G81 in a single block.
Otherwise, G81 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G81 X300. Y–250. Z–150. R–100. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

153

This cycle is used for normal drilling.  
Cutting feed is performed to the bottom of the hole.  At the bottom, a dwell
is performed, then the tool is retracted in rapid traverse.  
This cycle is used to drill holes more accurately with respect to depth.

G82 (G98) G82 (G99)

G82 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of a hole
F_ : Cutting feed rate
K_ : Number of repeats (if required)

P
P

Point R

Initial level

Point Z

Point R

Point Z

Point R level

After positioning along the X– and Y–axes, rapid traverse is performed
to point R. 
Drilling is then performed from point R to point Z.  
When the bottom of the hole has been reached, a dwell is performed.  The
tool is then retracted in rapid traverse. 
Before specifying G82, use a miscellaneous function (M code) to rotate
the spindle.
When the G82 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.5
Drilling Cycle Counter
Boring Cycle
(G82)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

154

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify P in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G83 in a single block.
Otherwise, G83 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G82 X300. Y–250. Z–150. R–100. P1000 F120. ;

Position, drill hole 2, and dwell for 1 s at the
bottom of the hole, then return to point R.

Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� P

� Cancel

� #��� ������

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

155

This cycle performs peck drilling. 
It performs intermittent cutting feed to the bottom of a hole while
removing shavings from the hole.

G83 (G98) G83 (G99)

G83 X_ Y_ Z_ R_ Q_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
Q_ : Depth of cut for each cutting feed
F_ : Cutting feedrate
K_ : Number of repeats (if required)

dq

dq

q

dq

dq

q

Initial level

Point R

Point Z

Point R levelPoint R

Point Z

Q represents the depth of cut for each cutting feed.  It must always be
specified as an incremental value.  
In the second and subsequent cutting feeds, rapid traverse is performed
up to a d point just before where the last drilling ended, and cutting feed
is performed again. d is set in parameter (No.5115).
Be sure to specify a positive value in Q.  Negative values are ignored.
Before specifying G83, use a miscellaneous function (M code) to rotate
the spindle.
When the G83 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.6
Peck Drilling Cycle
(G83)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

156

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify Q in blocks that perform drilling.  If they are specified in a block
that does not perform drilling, they cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G83 in a single block.
Otherwise, G83 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ;  Cause the spindle to start rotating.
G90 G99 G83 X300. Y–250. Z–150. R–100. Q15. F120. ; 

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Limitations

� Axis switching

� Drilling

� Q

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

157

An arbor with the overload torque detection function is used to retract the
tool when the overload torque detection signal (skip signal) is detected
during drilling.  Drilling is resumed after the spindle speed and cutting
feedrate are changed.  These steps are repeated in this peck drilling cycle.

The mode for the small–hole peck drilling cycle is selected when the M
code in parameter 5163 is specified.  The cycle can be started by
specifying G83 in this mode.  This mode is canceled when G80 is
specified or when a reset occurs.

G83(G98) G83(G99)

G83 X_ Y_ Z_ R_ Q_ F_ I_ K_ P_ ;

X_ Y_: Hole position data
Z_ : Distance from point R to the bottom of the hole
R_ : Distance from the initial level to point R
Q_ : Depth of each cut
F_ : Cutting feedrate
I_: Forward or backward traveling speed (same format as F above)

(If this is omitted, the values in parameters No.5172 and No.5173 are
assumed as defaults.)

K_ : Number of times the operation is repeated (if required)
P_ : Dwell time at the bottom of the hole 

(If this is omitted, P0 is assumed as the default.)

Q

 ∆

 ∆

 ∆

Q

 ∆

 ∆

 ∆

∆ : Initial clearance when the tool is retracted to point R and the clearance
from the bottom of the hole in the second or subsequent drilling 
(parameter 5174)

Q : Depth of each cut

(          )

Initial level

Point R Point R

Overload torque Overload torque
Point Z Point Z

Dwell Dwell

Path along which the tool travels at the rapid traverse rate

Path along which the tool travels (forward or backward) at the rapid
traverse rate during the cycle specified with parameters

Path along which the tool travels at the programmed cutting feedrate

13.1.7
Small–hole peck
drilling cycle (G83)

Format



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

158

*Positioning along the X–axis and Y–axis
*Positioning at point R along the Z–axis
*Drilling along the Z–axis  (first drilling, depth of cut Q, incremental)

Retraction (bottom of the hole → small clearance ∆, incremental)
Retraction (bottom of the hole → point R)
Advance (point R → point at a height of clearance ∆ from the bottom of 
the hole) 
Drilling (second or subsequent drilling, depth of cut Q + ∆ , incremental)

*Dwell
*Return to point R (or initial level) along the Z–axis, cycle end

Acceleration/deceleration during advancing and retraction is controlled
according to the cutting feed acceleration/deceleration time constant.
When retraction is performed, the position is checked at point R.

When the M code in parameter 5163 is specified, the system enters the
mode for the small–hole peck drilling cycle.
This M code does not wait for FIN.  Care must be taken when this M code
is specified with another M code in the same block.

(Example) M�� M03 ;  →  Waits for FIN.
M03 M�� ;  →  Does not wait for FIN.

When G83 is specified in the mode for the small–hole peck drilling cycle,
the cycle is started.
This continuous–state G code remains unchanged until another canned
cycle is specified or until the G code for cancelling the canned cycle is
specified.  This eliminates the need for specifying drilling data in each
block when identical drilling is repeated.

In this cycle, the signal indicating that the small–hole peck drilling cycle
is in progress is output after the tool is positioned at the hole position
along the axes not used for drilling.  Signal output continues during
positioning to point R along the drilling axis and terminates upon a return
to point R or the initial level.  For details, refer to the manual of the
machine tool builder.

A skip signal is used as the overload torque detection signal.  The skip
signal is effective while the tool is advancing or drilling and the tool tip
is between points R and Z.  (The signal causes a retraction).  For details,
refer to the manual of the machine tool builder.

Explanations

� Component operations
of the cycle

� Specifying an M code

� Specifying a G code

� Signal indicating that the
cycle is in progress

� Overload torque
detection signal



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

159

In a single G83 cycle, drilling conditions are changed for each drilling
operation (advance → drilling → retraction).  Bits 1 and 2 of parameter
OLS, NOL No. 5160 can be specified to suppress the change in drilling
conditions.

1. Changing the cutting feedrate
The cutting feedrate programmed with the F code is changed for each
of the second and subsequent drilling operations.  In parameters
No.5166 and No.5167, specify the respective rates of change applied
when the skip signal is detected and when it is not detected in the
previous drilling operation.

Cutting feedrate =F×α

,-'��
 %�'��'	*. α����
,����	% �� �(���/(�	
 %�'��'	*. α�α×β	���0 1)��� β '� 
)� ��
� ��
�)�	*� ��� ���) %�'��'	* �&���
'�	

2)�	 
)� ��'& �'*	�� '� %�
��
�% %(�'	* 
)� &��3'�(� %�'��'	* �&���
'�	

�β���4!parameter No. 5166"
2)�	 
)� ��'& �'*	�� '� 	�
 %�
��
�% %(�'	* 
)� &��3'�(� %�'��'	*

�&���
'�	�β���4!&���+�
�� ��� 5�67"

If the rate of change in cutting feedrate   becomes smaller than the rate
specified in parameter 5168, the cutting feedrate is not changed. 
The cutting feedrate can be increased up to the maximum cutting
feedrate.

2. Changing the spindle speed
The spindle speed programmed with the S code is changed for each of
the second and subsequent advances.  In parameters 5164 and 5165,
specify the rates of change applied when the skip signal is detected and
when it is not detected in the previous drilling operation.

Spindle speed =S×γ

,-'��
 %�'��'	*. γ����
,����	% �� �(���/(�	
 %�'��'	*. γ�γ×δ	���0 1)��� δ '� 
)� ��
� ��
�)�	*� ��� ���) %�'��'	* �&���
'�	

2)�	 
)� ��'& �'*	�� '� %�
��
�% %(�'	* 
)� &��3'�(� %�'��'	* �&���
'�	

�β���4!parameter No. 5164"
2)�	 
)� ��'& �'*	�� '� 	�
 %�
��
�% %(�'	* 
)� &��3'�(� %�'��'	*

�&���
'�	�β���4!parameter No. 5165"

When the cutting feedrate reaches the minimum rate, the spindle speed
is not changed.  The spindle speed can be increased up to a value
corresponding to the maximum value of S analog data.

Advancing and retraction of the tool are not executed in the same manner
as rapid–traverse positioning.  Like cutting feed, the two operations are
carried out as interpolated operations.  The speed is subjected to exponen–
tial acceleration/deceleration.  Note that the tool life management func–
tion excludes advancing and retraction from the calculation of the tool
life.

� Changing the drilling
conditions

� Advance and retraction



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

160

The forward or backward traveling speed can be specified with address
I in the same format as address F, as shown below:

G83 I1000 ; (without decimal point)

G83 I1000. ; (with decimal point)

Both commands indicate a speed of 1000 mm/min.

Address I specified with G83 in the continuous–state mode continues to
be valid until G80 is specified or until a reset occurs.

In this canned cycle mode, the following functions can be specified:
⋅ Hole position on the X–axis, Y–axis, and additional axis
⋅ Operation and branch by custom macro
⋅ Subprogram (hole position group, etc.) calling 
⋅ Switching between absolute and incremental modes
⋅ Coordinate system rotation
⋅ Scaling (This command will not affect depth of cut Q or small clearance

d1.)
⋅ Dry run
⋅ Feed hold

When single–block operation is enabled, drilling is stopped after each
retraction.

The feedrate override function works during cutting, retraction, and
advancing in the cycle.

The number of retractions made during cutting and the number of
retractions made in response to the overload signal received during
cutting can be output to custom macro common variables (#100 to #149)
specified in parameters No.5170 and No.5171.  Parameters No.5170 and
No.5171 can specify variable numbers within the range of #100 to #149.

Parameter No.5170 : Specifies the number of the common variable to
which the number of retractions made during
cutting is output.

Parameter No.5171: Specifies the number of the common variable to
which the number of retractions made in response
to the overload signal received during cutting is
output.

� Specifying address I

� Functions that can be
specified

� Single block

� Feedrate override

� Custom macro interface



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

161

N01M03 S___ ;
N02M�� ;
N03G83 X_ Y_ Z_ R_ Q_ F_ I_ K_ P_ ; 
N04X_ Y_ ;

:
:

N10G80 ;

<Description of each block>
N01: Specifies forward spindle rotation and spindle speed.
N02: Specifies the M code to execute G83 as the small–hole peck drilling cycle.

The M code is specified in parameter No.5163.
N03: Specifies the small–hole peck drilling cycle.  Drilling data (except K and P)

is stored and drilling is started.
N04: Drills a small, deep hole at another position with the same drilling data as

for N03.
N10: Cancels the small–hole peck drilling cycle.  The M code specified in N02

is also canceled.

This cycle performs tapping. 
In this tapping cycle, when the bottom of the hole has been reached, the
spindle is rotated in the reverse direction.

G84 (G98) G84 (G99)

G84 X_ Y_ Z_ R_P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time
F_ : Cutting feedrate
K_ : Number of repents (if required)

P

P P

P

Point R

Spindle CW

Initial level

Point R level

Point Z

Point R

Point Z

Spindle CCWSpindle CCW

Spindle CW

Examples

13.1.8
Tapping Cycle 
(G84)

Format



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

162

Tapping is performed by rotating the spindle clockwise.  When the bottom
of the hole has been reached, the spindle is rotated in the reverse direction
for retraction.  This operation creates threads.
Feedrate overrides are ignored during tapping.  A feed hold does not stop
the machine until the return operation is completed.
Before specifying G84, use a miscellaneous function (M code) to rotate
the spindle.
When the G84 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When the K is used to specify number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify P in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G84 in a single block.
Otherwise, G84 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G84 X300. Y–250. Z–150. R–120. P300 F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Explanations

Limitations

� Axis switching

� Drilling

� P

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

163

This cycle is used to bore a hole.

G85 (G98) G85 (G99)

G85 X_ Y_ Z_ R_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
F_ : Cutting feed rate
K_ : Number of repeats (if required)

Point R

Initial level

Point R level

Point Z Point Z

Point R

After positioning along the X– and Y– axes, rapid traverse is performed
to point R. 
Drilling is performed from point R to point Z.  
When point Z has been reached, cutting feed is performed to return to
point R.
Before specifying G85, use a miscellaneous function (M code) to rotate
the spindle.
When the G85 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.9
Boring Cycle 
(G85)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

164

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G85 in a single block.
Otherwise, G85 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G85 X300. Y–250. Z–150. R–120. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Limitations

� Axis switching

� Drilling

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

165

This cycle is used to bore a hole.

G86 (G98) G86 (G99)

G86 X_ Y_ Z_ R_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
F_ : Cutting feed rate
K_ : Number of repeats (if required)

Point R

Initial level

Point R level

Point Z

Spindle stop

Spindle CW

Spindle CW

Point R

Point Z

Spindle stop

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  
Drilling is performed from point R to point Z.  
When the spindle is stopped at the bottom of the hole, the tool is retracted
in rapid traverse.
Before specifying G86, use a miscellaneous function (M code) to rotate
the spindle.
When the G86 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  
The system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.10
Boring Cycle
(G86)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

166

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G86 in a single block.
Otherwise, G86 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G86 X300. Y–250. Z–150. R–100. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Limitations

� Axis switching

� Drilling

� Cancel

� Tool offset

�
	����



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

167

This cycle performs accurate boring.

G87 (G98) G87 (G99)

G87 X_ Y_ Z_ R_ Q_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from the bottom of the hole to point Z
R_ : The distance from the initial level to point R 

(the bottom of the hole) level
Q_ : Tool shift amount
P_ : Dwell time
F_ : Cutting feed rate
K_ : Number of repeats (if required)

q

OSS

OSS

P

Point R

Not used

Point Z

Spindle CW

Spindle CW

Oriented spindle stop

Tool

Shift amount q

WARNING
Q (shift at the bottom of a hole) is a modal value retained in
canned cycles.  It must be specified carefully because it is
also used as the depth of cut for G73 and G83.

13.1.11
Back Boring Cycle
(G87)

Format



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

168

After positioning along the X– and Y–axes, the spindle is stopped at the
fixed rotation position.  The tool is moved in the direction opposite to the
tool tip, positioning (rapid traverse) is performed to the bottom of the hole
(point R). 
The tool is then shifted in the direction of the tool tip and the spindle is
rotated clockwise.  Boring is performed in the positive direction along the
Z–axis until point Z is reached. 
At point Z, the spindle is stopped at the fixed rotation position again, the
tool is shifted in the direction opposite to the tool tip, then the tool is
returned to the initial level.  The tool is then shifted in the direction of the
tool tip and the spindle is rotated clockwise to proceed to the next block
operation.
Before specifying G87, use a miscellaneous function (M code) to rotate
the spindle.
When the G87 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  
The system then proceeds to the next drilling operation.  When K is used
to specify the number of repeats, the M code is executed for the first hole
only; for the second and subsequent holes, the M code is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any additional axes, boring
is not performed.

Be sure to specify a positive value in Q.  If Q is specified with a negative
value, the sign is ignored.  Set the direction of shift in bits 4 (RD1) and
5 (RD2) of parameter No.5101. Specify P and Q in a block that performs
boring.  If they are specified in a block that does not perform boring, they
are not stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G87 in a single block.
Otherwise, G87 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S500 ; Cause the spindle to start rotating.
G90 G87 X300. Y–250. Position, bore hole 1.

Z–120. R–150. Q5. Orient at the initial level, then shift by 5 mm.
P1000 F120. ; Stop at point Z for 1 s.
Y–550. ; Position, drill hole 2.
Y–750. ; Position, drill hole 3.
X1000. ; Position, drill hole 4.
Y–550. ; Position, drill hole 5.
Y–750. ; Position, drill hole 6
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Explanations

Restrictions

� Axis switching

� Boring

� P/Q

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

169

This cycle is used to bore a hole.

G88 (G98) G88 (G99)

G88 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of a hole
F_ : Cutting feed rate
K_ : Number of repeats (if required)

P P

Point R

Initial level

Point R level

Point Z

Spindle stop
after dwell

Spindle CW

Spindle CW

Point Z

Point R

Spindle stop
after dwell

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  Boring is performed from point R to point Z.  When boring
is completed, a dwell is performed, then the spindle is stopped.    The tool
is manually retracted from the bottom of the hole (point Z) to point R.
At point R, the spindle is rotated clockwise, and rapid traverse is
performed to the initial level.
Before specifying G88, use a miscellaneous function (M code) to rotate
the spindle.
When the G88 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.12
Boring Cycle
(G88)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

170

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify P in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G88 in a single block.
Otherwise, G88 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G88 X300. Y–250. Z–150. R–100. P1000 F120. ;

Position, drill hole 1, return to point R 
then stop at the bottom of the hole for 1 s.

Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Limitations

� Axis switching

� Drilling

� P

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

171

This cycle is used to bore a hole.

G89 (G98) G89 (G99)

G89 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of a hole
F_ : Cutting feed rate
K_ : Number of repeats (if required)

P P

Point R

Initial level

Point R level

Point Z

Point R

Point Z

This cycle is almost the same as G85.  The difference is that this cycle
performs a dwell at the bottom of the hole.
Before specifying G89, use a miscellaneous function (M code) to rotate
the spindle.
When the G89 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.13
Boring Cycle
(G89)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

172

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify P in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G89 in a single block.
Otherwise, G89 will be canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G89 X300. Y–250. Z–150. R–120. P1000 F120. ;

Position, drill hole 1, return to point R
then stop at the bottom of the hole for 1 s.

Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Limitations

� Axis switching

� Drilling

� P

� Cancel

� Tool offset

Examples



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

173

G80 cancels canned cycles.

G80 ;

All canned cycles are canceled to perform normal operation.  Point R and
point Z are cleared.  This means that R = 0 and Z = 0 in incremental mode.
Other drilling data is also canceled (cleared).

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G88 X300. Y–250. Z–150. R–120. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial level.
G80 G28 G91 X0 Y0 Z0  ;

Return to the reference position return, 
canned cycle cancel

M5 ; Cause the spindle to stop rotating.

13.1.14
Canned Cycle Cancel
(G80)

Format

Explanations

Examples



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

174

400 150 250 250 150

Y

X

X

Z

T 11 T 15 T 31

#1 #11

#7

#3

#2

#8

#13

#12

#10

#9

#6

#5

#4

# 11 to 16 Drilling of a 10mm diameter hole
# 17 to 10 Drilling of a 20mm diameter hole
# 11 to 13 Boring of a 95mm diameter hole(depth 50 mm)

190200 150

250

100

100

100

100

350

200

Reference position

Retract position

Initial level

50
50
30
20

Program example using tool length offset and canned cycles



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

175

Offset value +200.0 is set in offset No.11, +190.0 is set in offset No.15, and +150.0 is set in offset No.31

Program example
;
N001 G92X0Y0Z0; Coordinate setting at reference position
N002 G90  G00  Z250.0  T11  M6; Tool change
N003 G43  Z0  H11; Initial level, tool length offset
N004 S30  M3 Spindle start
N005 G99  G81X400.0  R  Y–350.0

Z–153,0R–97.0  F120; Positioning, then #1 drilling
N006 Y–550.0; Positioning, then #2 drilling and point R level return
N007 G98Y–750.0; Positioning, then #3 drilling and initial level return
N008 G99X1200.0; Positioning, then #4 drilling and point R level return
N009 Y–550.0; Positioning, then #5 drilling and point R level return
N010 G98Y–350.0; Positioning, then #6 drilling and initial level return
N011 G00X0Y0M5; Reference position return, spindle stop
N012 G49Z250.0T15M6; Tool length offset cancel, tool change
N013 G43Z0H15; Initial level, tool length offset
N014 S20M3; Spindle start
N015 G99G82X550.0Y–450.0 Positioning, then #7 drilling, point R level return

Z–130.0R–97.0P300F70;
N016 G98Y–650.0; Positioning, then #8 drilling, initial level return
N017 G99X1050.0; Positioning, then #9 drilling, point R level return
N018 G98Y–450.0; Positioning, then #10 drilling, initial level return
N019 G00X0Y0M5; Reference position return, spindle stop
N020 G49Z250.0T31M6; Tool length offset cancel, tool change
N021 G43Z0H31; Initial level, tool length offset
N022 S10M3; Spindle start
N023 G85G99X800.0Y–350.0 Positioning, then #11 drilling, point R level return

Z–153.0R47.0F50;
N024 G91Y–200.0K2; Positioning, then #12, 13 drilling. point R level return
N025 G28X0Y0M5; Reference position return, spindle stop
N026 G49Z0; Tool length offset cancel
N027 M0; Program stop



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

176

The tapping cycle (G84) and left–handed tapping cycle (G74) may be
performed in standard mode or rigid tapping mode.  
In standard mode, the spindle is rotated and stopped along with a
movement along the tapping axis using miscellaneous functions M03
(rotating the spindle clockwise), M04 (rotating the spindle
counterclockwise), and M05 (stopping the spindle) to perform tapping.In
rigid mode, tapping is performed by controlling the spindle motor as if
it were a servo motor and by interpolating between the tapping axis and
spindle.
When tapping is performed in rigid mode, the spindle rotates one turn
every time a certain feed (thread lead) which takes place along the tapping
axis.  This operation does not vary even during acceleration or
deceleration.
Rigid mode eliminates the need to use a floating tap required in the
standard tapping mode, thus allowing faster and more precise tapping.

13.2
RIGID TAPPING



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

177

When the spindle motor is controlled in rigid mode as if it were a servo
motor, a tapping cycle can be sped up.

G84(G98) G84(G99)

G84 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole and the

position of the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of the hole and at point R when a

return is made
F_ : Cutting feedrate
K_ : Number of repeats (Only for necessity of repeat)

P P

Point R level

Point Z

Spindle CW

Point R Point R

Spindle stop

Spindle CCW Spindle CCWSpindle stopSpindle stop

Point Z

Spindle stop

Spindle stop

Initial level

Operation5

Operation4

Operation3

Operation1

Operation2
Operation6

Spindle
stop

Spindle CW
P P

G84.2 X_ Y_ Z_ R_ P_ F_ L_ ;    (FS10/11 format)

L_ : Number of repeats (only for necessity of repeat)

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  
Tapping is performed from point R to point Z.  When tapping is
completed,  the spindle is stopped and a dwell is performed .  The spindle
is then rotated in the reverse direction, the tool is retracted to point R, then
the spindle is stopped.  Rapid traverse to initial level is then performed.
While tapping is being performed, the feedrate override and spindle
override are assumed to be 100%.
However, the speed for extraction (operation 5) can be overridden by up
to 2000% depending on the setting at bit 4 (DOV) of parameter No.5200,
bit 3 (OVU) of parameter No.5201, and parameter No.5211.

Rigid mode can be specified using any of the following methods:
⋅Specify M29 S***** before a tapping command.
⋅Specify M29 S***** in a block which contains a tapping
 command.
⋅Specify G84 for rigid tapping (parameter G84 No. 5200 #0 set to 1).

13.2.1
Rigid Tapping
(G84)

Format

Explanations

� Rigid mode



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

178

In feed–per–minute mode, the thread lead is obtained from the
expression, feedrate × spindle speed.  In feed–per–revolution mode, the
thread lead equals the feedrate speed.

If a tool length compensation (G43, G44, or G49) is specified in the
canned cycle, the offset is applied at the time of positioning to point R.

Rigid tapping can be performed using FS10/11–format commands.
These commands are used according to the sequence (including data
transfer to and from the PMC), limitations, and other rigid tapping
conditions for the FS 0i.

Before the drilling axis can be changed, the canned cycle must be
canceled.  If the drilling axis is changed in rigid mode, P/S alarm (No.
206) is issued.

If a speed higher than the maximum speed for the gear being used is
specified, P/S alarm (No. 200) is issued.
The S command, which is specified at rigid tapping, is cleared at
commanding Rigid Tapping Cancel and the condition is the same that S0
is commanded.

For an analog spindle control circuit:
Upon specifying a speed command requiring more than 4096 pulses, in
detection units, within 8 ms, a P/S alarm (No.202) is issued because the
result of such an operation is unpredictable.

For a serial spindle:
Upon specifying a speed command requiring more than 32767 pulses, in
detection units, within 8 ms, a P/S alarm (No.202) is issued because the
result of such an operation is unpredictable.

If a value exceeding the upper limit of cutting feedrate is specified,  P/S
alarm  (No. 011) is issued.

Metric input Inch input Remarks

G94 1 mm/min 0.01 inch/min Decimal point programming
allowed

G95 0.01 mm/rev 0.0001 inch/rev Decimal point programming
allowed

If an S command and axis movement are specified between M29 and G84,
P/S alarm (No. 203) is issued.  If M29 is specified in a tapping cycle, P/S
alarm (No. 204) is issued.

Specify P in a block that performs drilling.  If R is specified in a
non–drilling block, it is not stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G84 in a single block.
Otherwise, G84 will be canceled.

In the canned cycle mode, tool offsets are ignored.

� Thread lead

� Tool length
compensation

� FS10/11–format
command

Limitations

� Axis switching

� S command

� Distribution amount for
the spindle

� F command

� Unit of F command

� M29

� P

� Cancel

� Tool offset



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

179

Any program cannot be resumed during rigid tapping.

Z–axis feedrate  1000 mm/min
Spindle speed  1000 min-1

Thread lead    1.0 mm 
<Programming of feed per minute>
G94 ; Specify a feed–per–minute command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G84 Z–100.0 R–20.0 F1000 ; Rigid tapping
<Programming of feed per revolution>
G95 ; Specify a feed–per–revolution command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G84 Z–100.0 R–20.0 F1.0 ; Rigid tapping

� Program restart

Examples



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

180

When the spindle motor is controlled in rigid mode as if it were a servo
motor, tapping cycles can be sped up.

G74 (G98) G74 (G99)

G74 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole and 

the position of the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of the hole and at point R when

return is made.
F_ : Cutting feedrate
K_ : Number of repeats (Only for necessity of repeat)

P P
Point Z

Point R level

Spindle
CCW

Spindle stop

Spindle stop

Initial level

Operation5

Operation4

Operation3

Operation1
Operation2 Operation6

Spindle
stop

Spindle CW Spindle stop Spindle CW

Point R level

Point Z

Spindle
CCW

Point R Point R

Spindle stop

P P
Spindle
stop

G84.3 X_ Y_ Z_ R_ P_ F_ L_ ;  (FS15 format)
L_ : Number of repeats (Only for necessity of repeat)

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  
Tapping is performed from point R to point Z.  When tapping is
completed, the spindle is stopped and a dwell is performed.  The spindle
is then rotated in the normal direction, the tool is retracted to point R, then
the spindle is stopped.  Rapid traverse to initial level is then performed.
While tapping is being performed, the feedrate override and spindle
override are assumed to be 100%.
However, the speed for extraction (operation 5) can be overridden by up
to 2000% depending on the setting at bit 4 (DOV) of parameter 5200, bit
3 (OVU) of parameter No.5201, and parameter 5211.

Rigid mode can be specified using any of the following methods:
⋅ Specify M29 S***** before a tapping command.
⋅ Specify M29 S***** in a block which contains a tapping command.
⋅ Specify G84 for rigid tapping. (parameter G84 No. 5200#0 set to1).

13.2.2
Left–handed Rigid
Tapping Cycle 
(G74)

Format

Explanations

� Rigid mode



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

181

In feed–per–minute mode, the thread lead is obtained from the
expression, feedrate × spindle speed.  In feed–per–revolution mode, the
thread lead equals the feedrate.

If a tool length offset (G43, G44, or G49) is specified in the canned cycle,
the offset is applied at the time of positioning to point R.

Rigid tapping can be performed using FS10/11–format commands.
These commands are used according to the sequence (including data
transfer to and from the PMC), limitations, and other rigid tapping
conditions for the FS 0i.

Before the drilling axis can be changed, the canned cycle must be
canceled.  If the drilling axis is changed in rigid mode,P/S  alarm (No.
206) is issued.

Specifying a rotation speed exceeding the maximum speed for the gear
used causes P/S alarm (No. 200).
The S command, which is specified at rigid tapping, is cleared at
commanding Rigid Tapping Cancel and the condition is the same that S0
is commanded.

For an analog spindle control circuit:
Upon specifying a speed command requiring more than 4096 pulses, in
detection units, within 8 ms, a P/S alarm (No.202) is issued because the
result of such an operation is unpredictable.

For a serial spindle:
Upon specifying a speed command requiring more than 32767 pulses, in
detection units, within 8 ms, a P/S alarm (No.202) is issued because the
result of such an operation is unpredictable.

Specifying a value that exceeds the upper limit of cutting feedrate  causes
P/S alarm (No. 011).

Metric input Inch input Remarks

G94 1 mm/min 0.01 inch/min Decimal point 
programming allowed

G95 0.01 mm/rev 0.0001 inch/rev Decimal point 
programming allowed

Specifying an S command or axis movement between M29 and G74
causes P/S alarm (No. 203).
Then, specifying M29 in the tapping cycle causes P/S alarm (No. 204).

Specify P in a block that performs drilling.  If R is specified in a
non–drilling block, it ss not stored as modal data.

Do not specify a G code of the 01 group (G00 to G03 or G60 (when the
MDL bit (bit 0 of parameter 5431) is set to 1)) and G74 in a single block.
Otherwise, G74 will be canceled.

In the canned cycle mode, tool offsets are ignored.

� Thread lead

� Tool length 
compensation

� FS10/11–format
command

Limitations

� Axis switching

� S command

� Distribution amount for
the spindle

� F command

� Unit of F command

� M29

� P

� Cancel

� Tool offset



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

182

Z–axis feedrate  1000 mm/min
Spindle speed  1000 min-1

Thread lead    1.0 mm 
<Programming for feed per minute>
G94 ; Specify a feed–per–minute command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G84 Z–100.0 R–20.0 F1000 ; Rigid tapping
<Programming for feed per revolution>
G95 ; Specify a feed–per–revolution command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G74 Z–100.0 R–20.0 F1.0 ; Rigid tapping

�
	����



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

183

Tapping a deep hole in rigid tapping mode may be difficult due to chips
sticking to the tool or increased cutting resistance.  In such cases, the peck
rigid tapping cycle is useful.  
In this cycle, cutting is performed several times until the bottom of the
hole is reached.  Two peck tapping cycles are available:  High–speed peck
tapping cycle and standard peck tapping cycle.  These cycles are selected
using the PCP bit (bit 5) of parameter 5200.

G84, G74 (G98) G84, G74 (G99)

G84 (or G74) X_ Y_ Z_ R_ P_ Q_ F_ K_ ;

X_ Y_: Hole position data
Z_ : The distance from point R to the bottom of the hole and the

position of the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of the hole and at point R when a

return is made
Q_ : Depth of cut for each cutting feed 
F_ : The cutting feedrate
K_ : Number of repeats

⋅ High–speed peck tapping cycle
(Parameter PCP(No.5200#5=0))

d
q

q

q

d

(1)
(2) d

q

q

q

d

(1)
(2)

d
q

q

q

d

(1)
(2)

⋅ Peck tapping cycle
(Parameter PCP(No.5200#5=1))

(3)

d
q

q

q

d

(1)
(2)

(3)

!�" The tool operates at a normal 
cutting feedrate.  The normal time
constant is used.

!�" Retraction can be overridden. 
The retraction time constant is
used.

!�" The tool operates at a normal 
cutting feedrate.  The normal time
constant is used.

!�" Retraction can be overridden. 
The retraction time constant is
used.

!�" Retraction can be overridden.
The normal time constant is used.

Point Z

Initial level

Point R

Point Z

Point R Point R level

d=retraction distance

Point R level

d=cutting start distance

Initial level

Point R

Point Z Point Z

Point R Point R levelPoint R level

During a rigid tapping cycle, in–position
check is performed at the end of each
operation of (1) and (2) in the peck tap-
ping cycle.

13.2.3
Peck Rigid Tapping
Cycle (G84 or G74)

Format



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

184

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  From point R, cutting is performed with depth Q (depth of cut
for each cutting feed), then the tool is retracted by distance d.  The DOV
bit (bit 4) of parameter 5200 specifies whether retraction can be
overridden or not.  When point Z has been reached, the spindle is stopped,
then rotated in the reverse direction for retraction.
Set the retraction distance, d, in parameter 5213.

After positioning along the X– and Y–axes, rapid traverse is performed
to point R level.  From point R, cutting is performed with depth Q (depth
of cut for each cutting feed), then a return is performed to point R.  The
DOV bit (bit 4) of parameter 5200 specifies whether the retraction can be
overridden or not.  The moving of cutting feedrate F is performed from
point R to a position distance d from the end point of the last cutting,
which is where cutting is restarted.  For this moving of cutting feedrate
F, the specification of the DOV bit (bit 4) of parameter 5200 is also valid.
When point Z has been reached, the spindle is stopped, then rotated in the
reverse direction for retraction.
Set d (distance to the point at which cutting is started) in parameter 5213.

Before the drilling axis can be changed, the canned cycle must be
canceled.  If the drilling axis is changed in rigid mode, P/S alarm (No.
206) is issued.

Specifying a rotation speed exceeding the maximum speed for the gear
used causes P/S alarm (No. 200).
The S command, which is specified at rigid tapping, is cleared at
commanding Rigid Tapping Cancel and the condition is the same that S0
is commanded.

For an analog spindle control circuit:
Upon specifying a speed command requiring more than 4096 pulses, in
detection units, within 8 ms, a P/S alarm (No.202) is issued because the
result of such an operation is unpredictable.

For a serial spindle:
Upon specifying a speed command requiring more than 32767 pulses, in
detection units, within 8 ms, a P/S alarm (No.202) is issued because the
result of such an operation is unpredictable.

Specifying a value that exceeds the upper limit of cutting feedrate  causes
alarm (No. 011).

Metric input Inch input Remarks

G94 1 mm/min 0.01 inch/min Decimal point programming
allowed

G95 0.01 mm/rev 0.0001 inch/rev Decimal point programming
allowed

Specifying an S command or axis movement between M29 and G84
causes P/S alarm (No. 203).
Then, specifying M29 in the tapping cycle causes P/S alarm (No. 204).

Explanations

� High–speed peck
tapping cycle

� Peck tapping cycle

Limitations

� Axis switching

� S command

� Distribution amount for
the spindle

� F command

� Unit of F

� M29



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

185

Specify P and Q in a block that performs drilling.  If they are specified in
a block that does not perform drilling, they are not stored as modal data.
When Q0 is specified, the peck rigid tapping cycle is not performed.

Do not specify a group 01 G code (G00 to G03) and G73 in the same block.
If they are specified together, G73 is canceled.

In the canned cycle mode, tool offsets are ignored.

The rigid tapping canned cycle is canceled.  For how to cancel this cycle,
see II–13.1.14.

NOTE
When Rigid Tapping Cancel is commanded, the S
command, which is used at rigid tapping, is also cleared. (It
is the same that S0 is commanded.)
Therefore, the S command, which is specified for rigid
tapping, can not be used at blocks after Rigid Tapping
Cancel. Please re–specify S command after Rigid Tapping
Cancel if necessary.

� P/Q

� Cancel

� Tool offset

13.2.4
Canned Cycle Cancel
(G80)



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

186

Canned grinding cycles make it easier for the programmer to create
programs that include grinding.  With a canned grinding cycle, repetitive
operation peculiar to grinding can be specified in a single block with a G
function; without canned grinding cycles, normally more than one block
is required.  In addition, the use of canned grinding cycles shortens the
program to save memory.  The following four canned grinding cycles are
available:
⋅Plunge grinding cycle (G75)
⋅Direct constant–dimension plunge grinding cycle (G77)
⋅Continuous–feed surface grinding cycle (G78)
⋅Intermittent–feed surface grinding cycle (G79)

13.3
CANNED GRINDING
CYCLE 
(FOR GRINDING
MACHINE)



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

187

A plunge grinding cycle is performed.

��2

G75 I_ J_ K_ X(Z)_ R_ F_ P_ L_ ;

I_: Depth–of–cut 1 (A sign in the command specifies the direction
 of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut (A sign in the command specifies the direction
of cutting.)

X(Z)_ : Range of grinding (A sign in the command specifies the 
direction of grinding.)

R_ : Feedrate for I and J
F_ : Feedrate for X (Z)
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous dressing)

I

J

X(Z)

(1) (R)

(2) P

(3) (F)

(5) P

X(Z)

Y

(6) (F)

(4) (R)

The plunge grinding cycle consists of six operation sequences.
Operations (1) to (6) are repeated until the depth reaches the total depth
of cut specified at address K.  In the single block stop mode, operations
(1) to (6) are performed every cycle start.

(1)Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by I (depth of cut 1).  The feedrate is specified by R.

(2)Dwell is performed for the time specified by P.

(3)Cutting feed is performed for the amount specified by X (or Z).  The
feedrate is specified by F.

(4)Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by J (depth of cut 2).  The feedrate is specified by R.

(5)Dwell is performed for the time specified by P.

(6)Feeding is performed in the reverse direction for the amount specified
by X (or Z) at a feedrate specified by F.

13.3.1
Plunge Grinding Cycle
(G75)

Format

Explanations

� Grinding wheel cutting

� Dwell

� Grinding

� Grinding wheel cutting

� �3���

� Grinding 
(return direction)



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

188

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

When the total depth of cut is reached during cutting using I or J, the
subsequent operation sequences (up to �) are executed, then the cycle
terminates.  In this case, no further cutting is performed after the total
depth of cut is reached.

� Chart of operation in which the total depth of cut is reached by cutting
specified by I and J:

I

J
K

I
K

�

	




�

�

�

	 


�

�

�

� Chart of operation in which the total depth of cut is reached during
cutting specified by I and J:

I

J
K

I
K

� 	
�

�

�

	



�

�
�




Limitations

� X(Z), I, J, K

� Clear

� Operation performed
when the total depth of
cut is reached



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

189

A direct constant–dimension plunge grinding cycle is performed.

G77

G77 I_ J_ K_ X(Z)_ R_ F_ P_ L_ ;

I_: Depth–of–cut 1 (A sign in the command specifies the direction
of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut  (A sign in the command specifies the direction
of cutting.)

X(Z)_ : Range of grinding (A sign in the command specifies the direction
of grinding.)

R_ : Feedrate for I and J
F_ : Feedrate for X (Z)
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous 

dressing)

I

J

X(Z)

 (R)

P

 (F)

P

X(Z)

Y

(F)

 (R)

�

	




�

��

The constant–dimension plunge grinding cycle consists of six operation
sequences.  Operations � to � are repeated until the depth reaches the
total depth of cut specified at address K.

� Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by I (depth of cut 1).  The feedrate is specified by R.

	 Dwell is performed for the time specified by P.


 Cutting feed is performed for the amount specified by X (or Z).  The
feedrate is specified by F.

� Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by J (depth of cut 2).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Feeding is performed in the reverse direction for the amount specified
by X (or Z) at a feedrate specified by F.

13.3.2
Direct
Constant–Dimension
Plunge Grinding Cycle
(G77)

Format

Explanations

� Grinding wheel cutting

� Dwell

� Grinding

� Grinding wheel cutting

� �3���

� Grinding 
(return direction)



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

190

When the cycle is performed using G77, a skip signal can be input to
terminate the cycle.  When a skip signal is input, the current operation
sequence is interrupted or completed, then the cycle is terminated.
The following shows how the system operates when the skip signal is
input during each operation sequence.

� When the skip signal is input during operation sequence 1 or 4 (cutting
feed specified by I or J), cutting is stopped immediately and the tool
returns to the X (Z) coordinate at which the cycle started.

Skip Signal

Skip Signal(End)

(End)

� When the skip signal is input during operation sequence 2 or 5 (dwell),
dwell is stopped immediately and the tool returns to the X (Z)
coordinate at which the cycle started.

� When the skip signal is input during operation sequence 3 or 6
(movement), the tool returns to the X (Z) coordinate at which the cycle
started after the movement specified by X (Z) is completed.

Skip Signal
(End)

(End)

Skip Signal

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

� -%�� ��"�
�

Limitations

� X(Z), I, J, K

� Clear



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

191

A continuous–feed surface grinding cycle is performed.

G78

G78 I_ (J_) K_ X_ F_ P_ L_ ;

I

I(J)

X

P(Dwell)
 (F)

 
P(Dwell) (F)

X

Z

I_ : Depth–of–cut 1 
(A sign in the command specifies the direction of cutting.)

J_ : Depth–of–cut 2
(A sign in the command specifies the direction of cutting.)

K_ : Total depth of cut 
(A sign in the command specifies the direction of cutting.)

X(Z)_ : Range of grinding
(A sign in the command specifies the direction of grinding.)

R_ : Feedrate for I and J
F_ : Feed rate
P_ : Dwell time
L_ : Grinding–wheel wear compensation

(Only for continuous dressing)

�

�
	




The continuous–feed surface grinding cycle consists of four operation
sequences.  Operations � to � are repeated until the depth reaches
the total depth of cut specified in address K.  In the single block stop mode,
operations � to � are performed every cycle start.
� Dwell
	 Grinding

 Dwell
� Grinding (in reverse direction)

13.3.3
Continuous–Feed
Surface Grinding Cycle
(G78)

Format

Explanations



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

192

When J is omitted, it is assumed to be 1.  J is valid only in the block where
it is specified.

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

When the total depth of cut is reached during cutting using I or J, the
subsequent operation sequences (up to �) are executed, then the cycle
terminates.  In this case, no further cutting is performed after the total
depth of cut is reached.

� Chart of operation in which the total depth of cut is reached by cutting
specified by I and J:

I

J

K

I

K

�

�
	




�
	




�

� Chart of operation in which the total depth of cut is reached during
cutting specified by I and J:

I

J

K

I

K

�

�
	




�

�
	




Restrictions

� 4

� I, J, K, X

�  ��
�

� Operation performed
when the total depth of
cut is reached



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

193

An intermittent–feed surface grinding cycle is performed.

G79

G79 I_ J_ K_ X_ R_ F_ P_ L_ ;

I

J

X

(R)

 P

 (F)

� P

X

Z

� (F)

 (R)

I_: Depth–of–cut 1 (A sign in the command specifies the direction
of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut (A sign in the command specifies the direction
of cutting.)

X(Z)_ : Range of grinding (A sign in the command specifies the 
direction of grinding.)

R_ : Feedrate for I and J
F_ : Feedrate for X (Z)
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous dressing)

�	


 �

The intermittent–feed surface grinding cycle consists of six operation
sequences.  Operations � to � are repeated until the depth reaches the
total depth of cut specified at address K.  In the single block stop mode,
operations � to � are performed every cycle start.

� Cutting is performed along the Z–axis in cutting feed mode for the
amount specified by I (depth of cut 1).  The feedrate is specified by R.

	 Dwell is performed for the time specified by P.


 Cutting feed is performed for the amount specified by X (or Z).  The
feedrate is specified by F.

� Cutting is performed along the Z–axis in cutting feed mode for the
amount specified by J (depth of cut 2).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Feeding is performed in the reverse direction for the amount specified
by X at a feedrate specified by F.

13.3.4
Intermittent–Feed
Surface Grinding Cycle
(G79)

Format

Explanations

� Grinding wheel cutting

� Dwell

� Grinding

� Grinding wheel cutting

� �3���

� Grinding 
(return direction)



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

194

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

������������

� 5/ 6/ 4/ 7

�  ��
�



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

195

This function enables continuous dressing.  
When G75, G77, G78, or G79 is specified, grinding wheel cutting and
dresser cutting are compensated continuously according to the amount of
continuous dressing during grinding.

Specify an offset number (grinding–wheel wear compensation number)
at address L in the block containing G75.  The compensation amount set
in the offset memory area corresponding to the specified number is used
as the amount of dressing.
Up to 400 offset numbers (L1 to L400) can be specified.  Compensation
amounts must be set beforehand in offset memory corresponding to offset
numbers from the MDI panel.
When L is omitted or L0 is specified in a surface grinding canned cycle
block, compensation is not performed.

Compensation is performed for every grinding operation (every
movement along the X–axis) in the operation sequences of a canned
grinding cycle.  While the tool moves along the X–axis, compensation is
performed along the Y–axis (grinding wheel cutting) and the V–axis
(dresser cutting) for simultaneous three–axis interpolation.
The travel distance (compensation amount) along the Y–axis is the same
as specified dressing amount, and the travel distance along the V–axis is
twice as long (diameter).

13.4
GRINDING–WHEEL
WEAR
COMPENSATION BY
CONTINUOUS
DRESSING 
(FOR GRINDING
MACHINE)

Explanations

� Specification

� Compensation



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

196

Compensation amounts set in offset memory can be modified by using the
external tool compensation function or programming (by changing
offsets using custom macro variables).
With these functions, the compensation amount for the diameter of the
dressed grinding wheel can be changed.
If the compensation amount associated with the offset number specified
in the H code is smaller than the minimum grinding wheel diameter
specified in parameter 5030 when programmed compensation (using G43
or G44) is performed, a signal is output to the PMC.

X

Workpiece

2a

a
X

YV

Dresser

Grinding
wheel

a : Amount of dressing

  

Checking the Minimum
Grinding Wheel Diameter
(For Grinding Machine)



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

197

Every time an external signal is input, cutting is performed by a fixed
amount according to the programmed profile in the specified Y–Z plane.

G161 R_ ;

G160 ;

profile  program

Specify the start of an operation mode and profile program.  Also specify
the depth of cut in R.

Program a workpiece figure in the Y–Z plane using linear interpolation
(G01) and/or circular interpolation (G02 or G03).  One or more blocks can
be specified.

Cancel the operation mode (end of the profile program).

Do not specify codes other than G01, G02, and G03 within the profile
program.

70.0 70.080.0

N1

N2

N3

R=67.000

α

�

�

O0001 ;
    :
N0 G161 R10.0 ;
N1 G91 G01 Z–70.0 F100 ;
N2 G19 G02 Z–80.0 R67.0 ;
N3 G01 Z–70.0 ;
N4 G160 ;
    :

In the above program, every time the in–feed cutting start signal is input,
the tool is moved by 10.000 along the machining profile shown above.
  α= Travel distance for each in–feed control cutting start signal input
The feedrate is programmed with an F code.

13.5
IN–FEED GRINDING
ALONG THE Y AND Z
AXES AT THE END
OF TABLE SWING 
(FOR GRINDING
MACHINE)

Format

Explanations

� G161 R_

� Profile program

� G160

Restrictions

� Profile program

Examples



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

198

Chamfering and corner rounding blocks can be inserted automatically
between the following:
⋅Between linear interpolation and linear interpolation blocks
⋅Between linear interpolation and circular interpolation blocks 
⋅Between circular interpolation and linear interpolation blocks
⋅Between circular interpolation and circular interpolationblocks

, C_

, R_

Chamfering

 ����� �

When the above specification is added to the end of a block that specifies
linear interpolation (G01) or circular interpolation (G02 or G03), a
chamfering or corner rounding block is inserted.
Blocks specifying chamfering and corner rounding can be specified
consecutively.

After C, specify the distance from the virtual corner point to the start and
end points.  The virtual corner point is the corner point that would exist
if chamfering were not performed.

C

C

Hypothetical corner intersection

Inserted chamfering block

(1) G91 G01 X100.0 ,C10.0 ;
(2) X100.0 Y100.0 ;

After R, specify the radius for corner rounding.

(1) G91 G01 X100.0 ,R10.0 ;
(2) X100.0 Y100.0 ;

Center of a circle with radius R

R

13.6
OPTIONAL ANGLE
CHAMFERING AND
CORNER ROUNDING

Format

Explanations

� Chamfering

� Corner R



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

199

N001 G92 G90 X0 Y0 ;
N002 G00 X10.0 Y10.0 ;
N003 G01 X50.0 F10.0 ,C5.0 ;
N004 Y25.0 ,R8.0 ;
N005 G03 X80.0 Y50.0 R30.0 ,R8.0 ;
N006 G01 X50.0 ,R8.0 ;
N007 Y70.0 ,C5.0 ;
N008 X10.0 ,C5.0 ;
N009 Y10.0 ;
N010 G00 X0 Y0 ;
N011 M0 ;

0
10.0 20.0 30.0 40.0 50.0 80.070.060.0

10.0

20.0

30.0

40.0

50.0

60.0

70.0

Y

XN001

N002
N003

N005

N004

N006

N007

N008

N009

N010
N011

Examples



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

200

Chamfering and corner rounding can be performed only in the plane
specified by plane selection (G17, G18, or G19).  These functions cannot
be performed for parallel axes.

A block specifying chamfering or corner rounding must be followed by
a block that specifies a move command using linear interpolation (G01)
or circular interpolation (G02 or G03).  If the next block does not contain
these specifications, P/S alarm No. 052 is issued.

A chamfering or corner rounding block can be inserted only for move
commands which are performed in the same plane.  In a block that comes
immediately after plane switching (G17, G18, or G19 is specified),
neither chamfering nor corner rounding can be specified.

If the inserted chamfering or corner rounding block causes the tool to go
beyond the original interpolation move range, P/S alarm No.055 is issued.

CC

G91 G01 X30.0 ;
G03 X7.5 Y16.0 R37.0 ,C28.0 ;
G03 X67.0 Y–27.0 R55.0 ;

The tool path without 
chamfering is indicated
with a solid line.

Chamfering block to
be inserted

In a block that comes immediately after the coordinate system is changed
(G92, or G52 to G59) or a return to the reference position (G28 to G30)
is specified, neither chamfering nor corner rounding can be specified.

When two linear interpolation operations are performed, the chamfering
or corner rounding block is regarded as having a travel distance of zero
if the angle between the two straight lines is within +1 .  When linear
interpolation and circular interpolation operations are performed, the
corner rounding block is regarded as having a travel distance of zero if the
angle between the straight line and the tangent to the arc at the intersection
is within +1 .  When two circular interpolation operations are performed,
the corner rounding block is regarded as having a travel distance of zero
if the angle between the tangents to the arcs at the intersection is within
+1 .

The following G codes cannot be used in a block that specifies chamfering
or corner rounding.  They also cannot be used between chamfering and
corner rounding blocks that define a continuous figure.
⋅G codes of group 00 (except G04)
⋅G68 of group 16

Corner rounding cannot be specified in a threading block.

DNC operation cannot be applied to optional–angle chamfering or corner
rounding.

Restrictions

� Plane selection

� Next block

� Plane switching

� Exceeding the move
range

� Coordinate system

� Travel distance 0

� Unavailable G codes

� Threading

� DNC operation



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

201

Upon completion of positioning in each block in the program, an external
operation function signal can be output to allow the machine to perform
specific operation.
Concerning this operation, refer to the manual supplied by the machine
tool builder.

G81 IP_ ;  ( IP_ Axis move command )IPIP

Every time positioning for the IP_ move command is completed, the CNC
sends a external operation function signal to the machine.  An external
operation signal is output for each positioning operation until canceled by
G80 or a group 01 G code.

No external operation signals are output during execution of a block that
contains neither X nor Y.

G81 can also be used for a drilling canned cycle (II–13.1.4).  Whether G81
is to be used for an external motion function or for a drilling canned cycle
is psecified with EXC, bit 1 of parameter No.5101.

13.7
EXTERNAL MOTION
FUNCTION (G81)

Format

Explanations

Restrictions

� A block without X or Y
axis

� Relationship with canned
cycle G81



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

202

By specifying indexing positions (angles) for the indexing axis (one
rotation axis, A, B, or C), the index table of the machining center can be
indexed.
Before and after indexing, the index table is automatically unclamped or
clamped .

Specify an indexing position with address A, B, or C (set to bit 0 of
parameter ROTx No.1006).
The indexing position is specified by either of the following (depending
on bit 4 of parameter G90 No.5500):

1. Absolute value only

2. Absolute or incremental value depending on the specified G code:
G90 or G91

A positive value indicates an indexing position in the counterclockwise
direction.  A negative value indicates an indexing position in the
clockwise direction.
The minimum indexing angle of the index table is the value set to
parameter 5512.  Only multiples of the least input increment can be
specified as the indexing angle.  If any value that is not a multiple is
specified, an P/S alarm (No. 135) occurs.  Decimal fractions can also be
entered.  When a decimal fraction is entered, the 1’s digit corresponds to
degree units.

0°
–45°

+60°
G90 B–45.0 ; or
G91 B–105.0;

A Value specified for rotation from A to B
(case 2 described above)

B

 

The direction of rotation and angular displacement are determined by
either of the following two methods.  Refer to the manual written by the
machine tool builder to find out which method is applied.

1. Using the miscellaneous function specified in parameter No. 5511
(Address) (Indexing position) (Miscellaneous function); 
Rotation in the negative direction
(Address) (Indexing position); 
Rotation in the positive direction (No miscellaneous functions are
specified.)
An angular displacement greater than 360° is rounded down to the
corresponding angular displacement within 360° when bit 2 of
parameter ABS No. 5500 specifies this option.
For example, when G90 B400.0 (miscellaneous function); is specified
at a position of 0 , the table is rotated by 40°in the negative direction.

13.8
INDEX TABLE
INDEXING FUNCTION

Explanations

� Indexing position

� ��������� 
�� �
��� ��

���
����



PROGRAMMINGB–64124EN/01
13. FUNCTIONS TO SIMPLIFY

 PROGRAMMING

203

2. Using no miscellaneous functions
By setting to bits 2, 3, and 4 of parameter ABS, INC,G90 No.5500,
operation can be selected from the following two options.
Select the operation by referring to the manual written by the machine
tool builder.

(1)Rotating in the direction in which an angular displacement
becomes shortest
This is valid only in absolute mode.  A specified angular
dis–placement greater than 360° is rounded down to the
correspond–ing angular displacement within 360° when bit 2 of
parameter ABS No.5500 specifies this option. 
For example, when G90 B400.0; is specified at a position of 0, the
table is rotated by 40° in the positive direction.

(2)Rotating in the specified direction
In the absolute mode, the value set in bit 2 of parameter ABS
No.5500 determines whether an angular displacement greater than
360° is rounded down to the corresponding angular displacement
within 360°. 
In the incremental mode, the angular displacement is not rounded
down.  
For example, when G90 B720.0; is specified at a position of 0, the
table is rotated twice in the positive direction, when the angular
displacement is not rounded down.

The table is always rotated around the indexing axis in the rapid traverse
mode. 
Dry runs cannot be executed for the indexing axis.

WARNING
If a reset is made during indexing of the index table, a
reference position return must be made before each time
the index table is indexed subsequently.

NOTE
1 Specify the indexing command in a single block.  If the

command is specified in a block in which another controlled
axis is specified, P/S alarm (No.136) occurs.

2 The waiting state which waits for completion of clamping or
unclamping of the index table is indicated on diagnostic
screen 12.

3 The miscellaneous function specifying a negative direction
is processed in the CNC.  
The relevant M code signal and completion signal are sent
between the CNC and the machine.

4 If a reset is made while waiting for completion of clamping
or unclamping, the clamp or unclamp signal is cleared and
the CNC exits the completion wait state.

� �����
��



PROGRAMMING
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING B–64124EN/01

204

Table 13.8  Index indexing function and other functions

Item Explanation

Relative position display
This value is rounded down when bit 1 of parameter REL No. 5500
specifies this option.

Absolute position display
This value is rounded down when bit 2 of parameterABS No. 5500
specifies this option.

Automatic return from the reference position (G29)
2nd reference position return (G30)

Impossible to return

Movement in the machine coordinate system Impossible to move

Single direction positioning Impossible to specify

2nd auxiliary function (B code) Possible with any address other than B that of the indexing axis.

Operations while moving the indexing axis
Unless otherwise processed by the machine, feed hold, interlock
and emerrgency stop can be executed. Machine lock can be
executed after indexing is completed.

SERVO OFF signal
Disabled
The indexing axis is usually in the servo–off state.

Incremental commands for indexing the index
table

The workpiece coordinate system and machine coordinate system
must always agree with each other on the indexing axis (the work-
piece zero point offset value is zero.).

Operations for indexing the index table

Manual operation is disabled in the JOG, INC, or HANDLE mode.  
A manual reference position return can be made.  If the axis selec-
tion signal is set to zero during manual reference position return,
movement is stopped and the clamp command is not executed.

� 6������" �������� 
��

����� ���������



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

205

14  0.*8-�#608 �98 #608
This chapter describes the following compensation functions:

14.1 TOOL LENGTH OFFSET (G43, G44, G49)
14.2 AUTOMATIC TOOL LENGTH MEASUREMENT (G37)
14.3 TOOL OFFSET (G45–G48)
14.4 OVERVIEW OF CUTTER COMPENSATION C (G40–G42)
14.5 DETAILS OF CUTTER COMPENSATION C
14.6 TOOL COMPENSATION VALUES, NUMBER OF

COMPENSATION VALUES, AND ENTERING VALUES FROM
THE PROGRAM (G10)

14.7 SCALING (G50, G51)
14.8 COORDINATE SYSTEM ROTATION (G68, G69)
14.9 NORMAL DIRECTION CONTROL 

(G40.1, G41.1, G42.1 OR G150, G151, G152)
14.10 PROGRAMMABLE MIRROR IMAGE (G50.1, G51.1)

�����
�



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

206

This function can be used by setting the difference between the tool length
assumed during programming and the actual tool length of the tool used
into the offset memory.  It is possible to compensate the difference without
changing the program.
Specify the direction of offset with G43 or G44.  Select a tool length offset
value from the offset memory by entering the corresponding address and
number (H code).

ÇÇ
ÇÇ
ÇÇ
ÇÇ

ÇÇ
ÇÇ
ÇÇ

Tool assumed dur-
ing programming

Actual tool

Specify this distance
as the value of tool
length offset.

Fig. 14.1  Tool length offset

The following three methods of tool length offset can be used, depending
on the axis along which tool length offset can be made.
⋅Tool length offset A
    Compensates for the difference in tool length along the Z–axis.
⋅Tool length offset B
    Compensates for the difference in tool length along the X–,Y–,or 
    Z–axis.
⋅Tool length offset C
    Compensates for the difference in tool length along a specified axis.

G43 Z_ H_ ;

G44 Z_ H_ ;

Tool length offset A

G17 G43 Z_ H_ ;

G17 G44 Z_ H_ ;

G18 G43 Y_ H_ ;

G18 G44 Y_ H_ ;

G19 G43 X_ H_ ;

Tool length offset B

G43 α_ H_ ;
G44 α_ H_ ;

Tool length offset C

G49 ; or H0 ;Tool length offset
cancel

G43 : Positive offset
G44 : Negative offset
G17 : XY plane selection
G18 : ZX plane selection
G19 : YZ plane selection
α : Address of a specified 

axis
H : Address for specifying 

the tool length offset 
value

Explanation of each address

G19 G44 X_ H_ ;

14.1
TOOL LENGTH
OFFSET (G43, G44,
G49)

14.1.1
General

Format



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

207

Select tool length offset A, B, or C, by setting bits 0 and 1 of parameter
TLC,TLB No. 5001.

When G43 is specified, the tool length offset value (stored in offset
memory) specified with the H code is added to the coordinates of the end
position specified by a command in the program.  When G44 is specified,
the same value is subtracted from the coordinates of the end position.  The
resulting coordinates indicate the end position after compensation,
regardless of whether the absolute or incremental mode is selected.
If movement along an axis is not specified, the system assumes that a
move command that causes no movement is specified.  When a positive
value is specified for tool length offset with G43, the tool is moved
accordingly in the positive direction.  When a positive value is specified
with G44, the tool is moved accordingly in the negative direction.  When
a negative value is specified, the tool is moved in the opposite direction.
G43 and G44 are modal G codes.  They are valid until another G code
belonging to the same group is used.

The tool length offset value assigned to the number (offset number)
specified in the H code is selected from offset memory and added to or
subtracted from the moving command in the program.

(1)  Tool length offset A/B
When the offset numbers for tool length offset A/B are specified or
modified, the offset number validation order varies, depending on the
condition, as described below.

O××××;
 H01 ;
     :
G43Z_ ; (1)
     :
G44Z_H02 ; (2)
     :
H03 ; (3)
     :

(1) Offset number H01 is valid.
(2) Offset number H02 is valid.
(3) Offset number H03 is valid.

O××××;
 H01 ;
     :
G43Z_ ; (1)
     :
G44Z_H02 ; (2)
     :
H03 ; (3)
     :

(1) Offset number H00 is valid.
(2) Offset number H02 is valid.
(3) Offset number H02 is valid.

���
�
�����

� Selection of tool length
offse�

� Direction of the offset

� Specification of the tool
length offset value

� When OFH (bit 2 of
parameter No. 5001) = 0

� When OFH (bit 2 of
parameter No. 5001) = 1



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

208

(2)  Cutter compensation C

When the offset numbers for cutter compensation C are specified or
modified, the offset number validation order varies, depending on the
condition, as described below.

O××××;
  H01 ;
     :
G43P_ ; (1)
     :
G44P_H02 ; (2)
     :
H03 ; (3)
     :

(1)Offset number H01 is valid.
(2)Offset number H02 is valid.
(3)Offset number H03 is valid only for

the axis to which compensation
was applied most recently.

O××××;
H01 ;
     :
G43P_ ; (1)
     :
G44P_H02 ; (2)
     :
H03 ; (3)
     :

(1) Offset number H00 is valid.
(2) Offset number H02 is valid.
(3) Offset number H02 is valid.

(However, the H number displayed
is changed to 03.)

The tool length offset value may be set in the offset memory through the
CRT/MDI panel.
The range of values that can be set as the tool length offset value is as
follows.

Metric input Inch input

Tool length offset value 0 to ±999.999mm 0 to ±99.9999inch

WARNING
When the tool length offset value is changed due to a
change of the offset number, the offset value changes to the
new tool length offset value, the new tool length offset value
is not added to the old tool length offset value. 
    H1 : tool length offset value 20.0
    H2 : tool length offset value 30.0 
    G90 G43 Z100.0 H1 ; Z will move to 120.0
    G90 G43 Z100.0 H2 ; Z will move to 130.0

CAUTION
When the tool length offset is used and set a parameter
OFH (No. 5001#2) to 0, specify the tool length offset with H
code and the cutter compensation with D code.

� When OFH (bit 2 of
parameter No. 5001) = 0

� When OFH (bit 2 of
parameter No. 5001) = 1



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

209

NOTE
The tool length offset value corresponding to offset No. 0,
that is, H0 always means 0.  It is impossible to set any other
tool length offset value to H0.

Tool length offset B can be executed along two or more axes when the axes
are specified in two or more blocks.

Offset in X and Y axes.
G19 G43 H _ ; Offset in X axis 
G18 G43 H _ ; Offset in Y axis

(Offsets in X and Y axes are performed)

If the TAL bit (bit 3 of parameter No. 5001) is set to 1, an alarm will not
occur even when tool length offset C is executed along two or more axes
at the same time.

To cancel tool length offset, specify G49 or H0.  After G49 or H0 is
specified, the system immediately cancels the offset mode.

NOTE
 After tool length offset B is executed along two or more

axes, offset along all the axes is canceled by specifying
G49.  If H0 is specified, only offset along an axis
perpendicular to the specified plane is canceled.

 In the case of the offset in three axes or more, if the offset
is canceled by G49 code, the P/S alarm 015 is generated.
Cancel the offset by using G49 and H0.

� Performing tool length
offset along two or more
axes

� Tool length offset cancel



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

210

Actual position

Programmed 
position

offset
value
ε=4mm

t1

20

30

30

120

t3

t2

+Y

+X

30 50 +Z

335

30
18 22

8

���� ��	*
) �����
 !'	 ���'	* )���� ����0 �0 �	% �"

(1)

(2)

(3)

(4)

(5)

(6)

(7) (8)

(9)(13)

(10)

(11)

(12)

⋅8��*��+
H1=–4.0 !���� ��	*
) �����
 3��(�"
N1 G91 G00 X120.0 Y80.0 ; (1)
N2 G43 Z–32.0 H1 ; (2)
N3 G01 Z–21.0 F1000 ; (3)
N4 G04 P2000 ; (4)
N5 G00 Z21.0 ; (5)
N6 X30.0 Y–50.0 ; (6)
N7 G01 Z–41.0 ; (7)
N8 G00 Z41.0 ; (8)
N9 X50.0 Y30.0 ; (9)
N10 G01 Z–25.0 ; (10)
N11 G04 P2000 ; (11)
N12 G00 Z57.0 H0 ; (12)
N13 X–200.0 Y–60.0 ; (13)
N14 M2 ;

�
	����



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

211

This section describes the tool length offset cancellation and restoration
performed when G53, G28, or G30 is specified in tool length offset mode.
Also described is the timing of tool length offset. 

(1)Tool length offset vector cancellation and restoration, performed when
G53, G28, or G30 is specified in tool length offset mode

(2)Specification of the G43/G44 command for tool length offset A/B/C,
and independent specification of the H command

When G53, G28, or G30 is specified in tool length offset mode, tool
length offset vectors are canceled as described below.  However, the
previously specified modal G code remains displayed; modal code
display is not switched to G49.

(1)  When G53 is specified

Command Specified axis Common to type A/B/C

G53P_; Tool length offset
axis

Canceled upon movement being
performed according to a speci-
fied value

Other than tool
length offset axis

Not canceled

NOTE
When tool length offset is applied to multiple axes, all
specified axes are subject to cancellation.

When tool length offset cancellation is specified at the same time, tool
length offset vector cancellation is performed as indicated below.

Command Specified axis Common to type A/B/C

G49G53P_;
Tool length offset
axis

Canceled upon movement being
performed according to a speci-
fied value

Other than tool
length offset axis

Canceled upon movement being
performed according to a speci-
fied value

(2)  When G28, or G30 is specified

Command Specified axis Common to type A/B/C

G28P_; Tool length offset
axis

Canceled upon movement to a
reference position being per-
formed

Other than tool
length offset axis

Not canceled

14.1.2
G53, G28, and G30
Commands in Tool
Length Offset Mode

Explanations

� Tool length offset vector
cancellation



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

212

NOTE
When tool length offset is applied to multiple axes, all
specified axes involved in reference position return are
subject to cancellation.

When tool length offset cancellation is specified at the same time, tool
length offset vector cancellation is performed as indicated below.

Command Specified axis Common to type A/B/C

G49G28P_;
Tool length offset
axis

Canceled upon movement to an
intermediate position being per-
formed

Other than tool
length offset axis

Canceled upon movement to an
intermediate position being per-
formed

Tool length offset vectors, canceled by specifying G53, G28, or G30 in
tool length offset mode, are restored as described below.

(1) When OFH (bit 2 of parameter No. 5001) = 0

Type EVO (bit 6 of pa-
rameter No. 5001)

Restoration block

A/B

1 Block to be buffered next

A/B 0 Block containing an H command
or G43/44 command

C
Ignored Block containing an H command

Block containing a
G43P_/G44P_ command

(2)When OFH (bit 2 of parameter No. 5001) = 1
In a mode other than tool length offset mode

Type EVO (bit 6 of pa-
rameter No. 5001)

Restoration block

A/B

1 Block to be buffered next

A/B 0 Block containing an H command
or G43/44 command

C
Ignored Block containing an H command

Block containing a
G43P_/G44P_ command

� Tool length offset vector
restoration



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

213

In tool length offset mode

Type EVO (bit 6 of pa-
rameter No. 5001)

Restoration block

A/B

1 Block containing a G43/G44
block

A/B
0 Block containing an H command

and G43/44 command

C
Ignored Block containing a

G43P_H_/G44P_H_ command

WARNING
When tool length offset is applied to multiple axes, all axes
for which G53, G28, and G30 are specified are subject to
cancellation.  However, restoration is performed only for that
axis to which tool length offset was applied last; restoration
is not performed for any other axes.

NOTE
In a block containing G40, G41, or G42, the tool length
offset vector is not restored.



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

214

By issuing G37 the tool starts moving to the measurement position and
keeps on moving till the approach end signal from the measurement
device is output.  Movement of the tool is stopped when the tool tip
reaches the measurement position.
A difference is determined between a coordinate value obtained when the
tool reaches the measurement position and a coordinate value specified
by G37.  The difference is then added to the wear compensation value for
the H code of an offset number currently used.

Ç
Ç

Z

X0

Rapid
traverse

Measurement
feedrate

A (Start position)
Measurement position is commanded
with G37

B (Deceleration position)

C (Measurement position)
The tool stops when the approach end
signal goes on.

Compensation value = (Current compensation value) + [(Coordinates of the
point at which the tool is stopped) – (Coordinates of the programmed measure-
ment position)]

Fig. 14.2 (a)  Automatic tool length measurement

G92 _ ; Sets the workpiece coordinate system.  (It can be set
with G54 to G59.  See Chapter II–7, “Coordinate System.”)

H��; Specifies an offset number for tool length offset.

G90 G37  _ ; Absolute command
G37 is valid only in the block in which it is specified.

_ indicates the X–, Y–, Z–, or fourth axis.

IP

IP

IP

Set the workpiece coordinate system so that a measurement can be made
after moving the tool to the measurement position.  The coordinate system
must be the same as the workpiece coordinate system for programming.

Specify the absolute coordinates of the correct measurement position.
Execution of this command moves the tool at the rapid traverse rate
toward the measurement position, reduces the federate halfway, then
continuous to move it until the approach end signal from the measuring
instrument is issued.  When the tool tip reaches the measurement position,
the measuring instrument sends an approach end signal to the CNC which
stops the tool.

14.2
AUTOMATIC  TOOL
LENGTH
MEASUREMENT
(G37)

Format

Explanations

� Setting the workpiece
coordinate system

� Specifying G37



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

215

The difference between the coordinates of the position at which the tool
reaches for measurement and the coordinates specified by G37 is added
to the current tool length offset value.
Offset value = 
(Current compensation value) + [(Coordinates of the position at which the
tool reaches for measurement) – (Coordinates specified by G37)]
These offset values can be manually changed from MDI.

When automatic tool length measurement is executed, the tool moves as
shown in Fig. 14.2 (b).  If the approach end signal goes on while the tool
is traveling from point B to point C, an alarm occurs.  Unless the approach
end signal goes on before the tool reaches point F, the same alarm occurs.
The P/S alarm number is 080.

Start 
position

Rapid
traverse Approach end signal ON

Position commanded
by G37

Permitted range of approach end signal

A B D E F

Deceleration
feedrate
(measurement
feedrate)

C

Fig. 14.2 (b)  Tool movement to the measurement position

� Changing the offset
value

� ��
�	



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

216

WARNING
When a manual movement is inserted into a movement at
a measurement federate, return the tool to the!position
before the inserted manual movement for restart.

NOTE
1 When an H code is specified in the same block as G37, an

alarm is generated.  Specify H code before the block!of
G37.

2 The measurement speed (parameter No. 6241),
deceleration position (parameter No. 6251), and permitted
range of the approach end signal (parameter No. 6254) are
specified by the machine tool builder.

3 The approach end signal is monitored usually every 2 ms.
The following measuring error is generated:
ERRmax. : Fm×1/60×TS/1000  where

TS : Sampling period, for usual 2 (ms)
ERRmax. : maximum measuring error (mm)
Fm : measurement federate (mm/min.)

For example, when Fm = 1000 mm/min., ERRmax. = 0.003m
4 The tool stops a maximum of 16 ms after the approach end

signal is detected.  But the value of the position!at which the
approach end signal was detected (note the value when the
tool stopped) is used to determine the
offset amount.  The overrun for 16 ms is:

Qmax. = Fm × 1/60 ×16/1000
Qmax.: maximum overrun (mm)
Fm    : measurement federate (mm/min.)



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

217

G92 Z760.0 X1100.0 ; Sets a workpiece coordinate system with
respect to the programmed absolute zero point.

G00 G90 X850.0 ; Moves the tool to X850.0.
That is the tool is moved to a position that is a
specified distance from the measurement
position along the Z–axis.

H01 ; Specifies offset number 1.  
G37 Z200.0 ; Moves the tool to the measurement position.
G00 Z204.0 ; Retracts the tool a small distance along the

Z–axis.

For example, if the tool reaches the measurement position with Z198.0;,
the compensation value must be corrected.  Because the correct
measurement position is at a distance of 200 mm, the compensation value
is lessened by 2.0 mm (198.0 – 200.0 = –2.0).

ÇÇ
ÇÇ
ÇÇ

200

760

850 1100 X

Z

ÇÇ
ÇÇ

Measurement
position along Z axis

0

�
	����



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

218

The programmed travel distance of the tool can be increased or decreased
by a specified tool offset value or by twice the offset value.
The tool offset function can also be applied to an additional axis.

ÇÇÇ
ÇÇÇ
ÇÇÇ

Programmed pathTool center path
Tool

Workpiece

: Command for moving the tool

G45    _D_ ; Increase the travel distance by the tool offset value

Decrease the travel distance by the tool offset value

Increase the travel distance by twice the tool offset value

Decrease the travel distance by twice the tool offset value

D  : Code for specifying the tool offset value

G45 to G48 : One–shot G code for increasing or decreasing the travel
distance

G46    _D_ ;

G47    _D_ ;

G48    _D_ ;

IP_

IP

IP

IP

IP

14.3
TOOL  OFFSET
(G45–G48)

Format



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

219

As shown in Table 14.3 (a), the travel distance of the tool is increased or
decreased by the specified tool offset value.
In the absolute mode, the travel distance is increased or decreased as the
tool is moved from the end position of the previous block to the position
specified by the block containing G45 to G48.

G code When a positive tool offset val-
ue is specified

When a negative tool offset
value is specified

Start position End position

G45

G46

G47

G48

Programmed movement distance
Tool offset value

Actual movement position

Table 14.3 (a)  Increase and decrease of the tool travel distance

Start position End position

Start position End positionStart position End position

Start position End position Start position End position

Start position End position Start position End position

If a move command with a travel distance of zero is specified in the
incremental command (G91) mode, the tool is moved by the distance
corresponding to the specified tool offset value.
If a move command with a travel distance of zero is specified in the
absolute command (G90) mode, the tool is not moved.

Once selected by D code, the tool offset value remains unchanged until
another tool offset value is selected.
Tool offset values can be set within the following range:

Table 14.3 (b)  Range of tool offset values

Metric input inch input

Tool offset value 0 to ±999.999mm 0 to ±99.9999inch

0 to ±999.999deg 0 to ±999.999deg

D0 always indicates a tool offset value of zero.

Explanations

� Increase and decrease

� #��� ������ �
���



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

220

WARNING
1 When G45 to G48 is specified to n axes (n=1–6) simultaneously in a motion block, offset is

applied to all n axes.
When the cutter is offset only for cutter radius or diameter in taper cutting, overcutting or
undercutting occurs.  
Therefore, use cutter compensation (G40 or G42) shown in II–14.4 or 14.5.

2 G45 to G48 (tool offset) must not be used in the G41 or G42 (cutter compensation) mode.

ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇ
ÇÇ

Shape actually cut

Desired
shape

Overcutting

Y axis

Undercutting

G01 X_ F_ ;
G47 X_ Y_ D_ ;
        Y_ ;

G01 G45 X_ F_ D_;
                X_ Y_ ;
G45 Y_ ;

X axis

Desired shape

Shape actually cut

Y axis

X axis



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

221

NOTE
1 When the specified direction is reversed by decrease as shown in the figure below, the tool

moves in the opposite direction.

2 Tool offset can be applied to circular interpolation (G02, G03) with the G45 to G48 commands
only for 1/4 and 3/4 circles using addresses I, J and K by the parameter setting, providing that
the coordinate rotation be not specified at the same time.  This function is provided for
compatibility with the conventional CNC tape without any cutter compensation. The function
should not be used when a new CNC program is prepared.

3 D code should be used in tool offset mode (G45 to G48).  However, H code can be used by
setting the parameter TPH (No. 500195" because of compatibility with conventional CNC tape
format.  The H code must be used under tool length offset cancel (G49).

4 G45 to G48 are ignored in canned cycle mode.  Perform tool offset by specifying G45 to G48
before entering canned cycle mode and cancel the offset after releasing the canned cycle
mode.

G46 X2.50 ;
Tool offset value
+3.70

Equivalent command
X–1.20 ;

Movement of the tool Program command
Start
position End  

position

Tool offset value

Example

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇ
ÇÇ
ÇÇ

N1

N2

N3
N4

Program

N1 G46 G00 X_ Y_ D_ ;
N2 G45 G01 Y_ F_ ;
N3 G45 G03 X_ Y_ I_ ;
N4 G01 X_ ;

Tool offset for circular interpolation

Programmed tool path

Actual tool path



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

222

ÇÇÇ
ÇÇÇ
ÇÇÇ

Tool diameter : 20φ
Offset No. : 01
Tool offset value : +10.0

80 50

40

50

40

30R

N1 N2

N3

N4

N5

N6 N7

N8

N9
N10

N11

N12

N13

N14
30 3040

X axis

Y axis

Program using tool offset

Origin

30R

Program

N1 G91 G46 G00 X80.0 Y50.0 D01 ;
N2 G47 G01 X50.0 F120.0 ;
N3 Y40.0 ;
N4 G48 X40.0 ;
N5 Y–40.0 ;
N6 G45 X30.0 ;
N7 G45 G03 X30.0 Y30.0 J30.0 ;
N8 G45 G01 Y20.0 ;
N9 G46 X0 ; Decreases toward the positive direction for

movement amount “0”.  The tool moves in the –X
 direction by theoffset value.

N10 G46 G02 X–30.0 Y30.0 J30.0 ;
N11 G45 G01 Y0 ; Increase toward the positive direction for movement

amount “0”.  The tool moves in the +Y direction by
 the offset value.
N12 G47 X–120.0 ;
N13 G47 Y–80.0 ;
N14 G46 G00 X80.0 Y–50.0 ;

�
	����



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

223

When the tool is moved, the tool path can be shifted by the radius of the
tool (Fig. 14.4 (a)).  
To make an offset as large as the radius of the tool, CNC first creates an
offset vector with a length equal to the radius of the tool (start–up).  The
offset vector is perpendicular to the tool path.  The tail of the vector is on
the workpiece side and the head positions to the center of the tool.  
If a linear interpolation or circular interpolation command is specified
after start–up, the tool path can be shifted by the length of the offset vector
during machining.  
To return the tool to the start position at the end of machining, cancel the
cutter compensation mode.

ÇÇÇ
ÇÇÇ
ÇÇÇ

Start–up

Cutter 
compensation 
cancel

Fig. 14.4 (a)  Outline of cutter compensation C

14.4
OVERVIEW OF
CUTTER
COMPENSATION C
(G40–G42)



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

224

� Start up
(Tool compensation
start)

G00(or G01)G41(or G42) P_ D_ ;

G41

G42
P_

D_

: Cutter compensation left (Group07)

: Cutter compensation right (Group07)

: Command for axis movement
: Code for specifying as the cutter compensation value(1–3digits)
  (D code)

� Cutter compensation
cancel
(offset mode cancel)

G40 ;

G40 : Cutter compensation cancel(Group 07)
   (Offset mode cancel)
: Command for axis movement

� Selection of the offset
plane

Offset plane

XpYp

ZpXp

YpZp

Command for plane selection

G17 ;

G18 ;

G19 ;

   _

Xp_Yp_

Xp_Zp_

Yp_Zp_

IP

IP

P_IP

IP

At the beginning when power is applied the control is in the cancel mode.
In the cancel mode, the vector is always 0, and the tool center path
coincides with the programmed path.

When a cutter compensation command (G41 or G42, nonzero dimension
words in the offset plane, and D code other than D0) is specified in the
offset cancel mode, the CNC enters the offset mode.
Moving the tool with this command is called start–up.
Specify positioning (G00) or linear interpolation (G01) for start–up.  If
circular interpolation (G02, G03) is specified, P/S alarm 34 occurs.
When processing the start–up block and subsequent blocks, the CNC
prereads two blocks.

In the offset mode, compensation is accomplished by positioning (G00),
linear interpolation (G01), or circular interpolation (G02, G03).  If two or
more blocks that do not move the tool (miscellaneous function, dwell,
etc.) are processed in the offset mode, the tool will make either an
excessive or insufficient cut.  If the offset plane is switched in the offset
mode, P/S alarm 37 occurs and the tool is stopped.

Format

Explanations

� Offset cancel mode

� Start Up

� Offset mode



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

225

In the offset mode, when a block which satisfies any one of the following
conditions is executed, the CNC enters the offset cancel mode, and the
action of this block is called the offset cancel.
  1. G40 has been commanded. 
  2. 0 has been commanded as the offset number for cutter
      compensation.
When performing offset cancel, circular arc commands (G02 and G03) are
not available.  If a circular arc is commanded, an P/S alarm (No. 034) is
generated and the tool stops.
In the offset cancel, the control executes the instructions in that block and
the block in the cutter compensation buffer.  In the meantime, in the case
of a single block mode, after reading one block, the control executes it and
stops.  By pushing the cycle start button once more, one block is executed
without reading the next block.
Then the control is in the cancel mode, and normally, the block to be
executed next will be stored in the buffer register and the next block is not
read into the buffer for cutter compensation.

Offset cancel mode Offset mode

Start up

Offset modecancel

(G41/G42)

(G40/D0)

Fig. 14.4 (b)  Changing the offset mode

In general, the cutter compensation value shall be changed in the cancel
mode, when changing tools.  If the cutter compensation value is changed
in offset mode, the vector at the end point of the block is calculated for
the new cutter compensation value.

Calculated from the cutter
compensation value in the block
N6

Calculated from the cutter
compensation value in the block N7

N7

N6
N8

Fig. 14.4 (c)  Changing the cutter compensation value

Programmed path

� Offset mode cancel

� Change of the 
Cutter compensation
value



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

226

If the offset amount is negative (–), distribution is made for a figure in
which G41’s and G42’s are all replaced with each other on the program.
Consequently, if the tool center is passing around the outside of the
workpiece, it will pass around the inside, and vice versa.
The figure below shows one example.  Generally, the offset amount is
programmed to be positive (+).
When a tool path is programmed as in ((1)), if the offset amount is made
negative (–), the tool center moves as in ((2)), and vice versa.
Consequently, the same tape permits cutting both male and female
shapes, and any gap between them can be adjusted by the selection of the
offset amount. Applicable if start–up and cancel is A type.  (See II– 14.5.2
and 14.5.4)

Assign a cutter compensation values to the D codes on the MDI panel.
The table below shows the range in which cutter compensation values can
be specified.

mm input inch input

Cutter compensation value 0 to ±999.999mm 0 to ±99.9999inch

NOTE
1 The cutter compensation value corresponding to offset No.

0, that is, D0 always means 0.  It is impossible to set D0 to
any other offset amount.

2 Cutter compensation C can be specified by H code with
parameter OFH (No. 5001 #2) set to 1.

The offset vector is the two dimensional vector that is equal to the cutter
compensation value assigned by D code.  It is calculated inside the control
unit, and its direction is up–dated in accordance with the progress of the
tool in each block.
The offset vector is deleted by reset.

Specify a cutter compensation value with a number assigned to it.  The
number consists of 1 to 3 digits after address D (D code).  The D code is
valid until another D code is specified.  The D code is used to specify the
tool offset value as well as the cutter compensation value.

� Positive/negative cutter
compensation value and
tool center path

� Cutter compensation
value setting

� 0����� ������

� Specifying a cutter
compensation value

Fig. 14.4 (d) Tool center paths when positive and negative 
cutter compensation values are specified

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇ
ÇÇ
ÇÇ

!�" !�"

Programmed path

Tool center path



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

227

Offset calculation is carried out in the plane determined by G17, G18 and
G19, (G codes for plane selection).  This plane is called the offset plane.
Compensation is not executed for the coordinate of a position which is not
in the specified plane.  The programmed values are used as they are.
In simultaneous 3 axes control, the tool path projected on the offset plane
is compensated. 
The offset plane is changed during the offset cancel mode.  If it is
performed during the offset mode, a P/S alarm (No. 37) is displayed and
the machine is stopped.

� Plane selection and
vector



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

228

ÇÇÇ
ÇÇÇ
ÇÇÇ

Y axis

X axis Unit : mm

N1

Start position

650R

C2  (1550,1550)

650R

C3 (–150,1150)

250R

C1(700,1300)

P4(500,1150) P5(900,1150)

P6(950,900)

P9(700,650)
P8

(1150,550)

P7
(1150,900)

P1
(250,550)

P3(450,900)
P2
(250,900)

N2

N3

N4

N5

N6

N7

N8

N9N10

N11

G92 X0 Y0 Z0 ; Specifies absolute coordinates.. . . . . . . . . . . . . . . . . . . . . . 
The tool is positioned at the start position (X0, Y0, Z0).

N1 G90 G17 G00 G41 D07 X250.0 Y550.0 ; Starts cutter compensation (start–up).  The tool is shifted to the
left of the programmed path by the distance specified in D07.
In other words the tool path is shifted by the radius of the tool
(offset mode) because D07 is set to 15 beforehand (the radius of
the tool is 15 mm). 

N2 G01 Y900.0 F150 ; Specifies machining from P1 to P2.. . . . . . . . . . . . . . . . . . 
N3 X450.0 ; Specifies machining from P2 to P3.. . . . . . . . . . . . . . . . . . . . . . . . . . . 
N4 G03 X500.0 Y1150.0 R650.0 : Specifies machining from P3 to P4.. . . . . . . . . 
N5 G02 X900.0 R–250.0 ; Specifies machining from P4 to P5.. . . . . . . . . . . . . . . 
N6 G03 X950.0 Y900.0 R650.0 ; Specifies machining from P5 to P6.. . . . . . . . . . 
N7 G01 X1150.0 ; Specifies machining from P6 to P7.. . . . . . . . . . . . . . . . . . . . . . 
N8 Y550.0 ; Specifies machining from P7 to P8.. . . . . . . . . . . . . . . . . . . . . . . . . . . 
N9 X700.0 Y650.0 ; Specifies machining from P8 to P9.. . . . . . . . . . . . . . . . . . 
N10 X250.0 Y550.0 ; Specifies machining from P9 to P1.. . . . . . . . . . . . . . . . . 
N11 G00 G40 X0 Y0 ; Cancels the offset mode.. . . . . . . . . . . . . . . . 

The tool is returned to the start position (X0, Y0, Z0).

�
	����



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

229

This section provides a detailed explanation of the movement of the tool
for cutter compensation C outlined in Section 14.4.
This section consists of the following subsections:

14.5.1 General
14.5.2 Tool Movement in Start–up
14.5.3 Tool Movement in Offset Mode
14.5.4 Tool Movement in Offset Mode Cancel
14.5.5 Interference Check
14.5.6 Overcutting by Cutter Compensation
14.5.7 Input Command from MDI
14.5.8 G53,G28,G30 and G29 Commands in Cutter 

Compensation C Mode
14.5.9 Corner Circular Interpolation (G39)

When an angle of intersection created by tool paths specified with move
commands for two blocks is over 180°, it is referred to as “inner side.”
When the angle is between 0° and 180°, it is referred to as “outer side.”

αWorkpiece α

Programmed path

Inner side

180°�α 0°�α<180°

Outer side

Workpiece

Programmed path

The following symbols are used in subsequent figures:
– S indicates a position at which a single block is executed once.
– SS indicates a position at which a single block is executed twice.
– SSS indicates a position at which a single block is executed three times.
– L indicates that the tool moves along a straight line.
– C indicates that the tool moves along an arc.
– r indicates the cutter compensation value.
– An intersection is a position at which the programmed paths of two

blocks intersect with each other after they are shifted by r. 
–  indicates the center of the tool.
 

14.5
DETAILS OF CUTTER
COMPENSATION C

14.5.1
General

� Inner side and outer side

� .�
���" �� �!	����



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

230

When the offset cancel mode is changed to offset mode, the tool moves
as illustrated below (start–up):

α

LS

G42
r

L

α

S

r

L
C

G42

Tool center pathStart position

Programmed path

Work-
piece

Linear→Circular

Start position

Workpiece

Tool center path

Linear→Linear

14.5.2
Tool Movement in
Start–up

Explanations

� Tool movement around
an inner side of a corner
��')°�α�



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

231

Tool path in start–up has two types A and B, and they are selected by
parameter SUP (No. 5003#0).

Linear→Linear

α

Programmed path

Tool center pathLS

G42

r

L

Linear→Circular

r

Type
    A

Type
   B

α

L
S

G42

L

Workpiece

Start position

r

L

Linear→Linear

Linear→Circular

Workpiece

Start position

Start position

Work-
piece

Programmed path

Tool center path

Tool center path

Intersection

Intersection

Work-
piece

Programmed path

Start position

C

G42

L

r

S

α

Tool center path

L

L

α

S

C

G42

r

L

r

Programmed path

Work-
piece

� Tool movement around
the outside of a corner at
an obtuse angle
�,)°�α<�')°�



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

232

Tool path in start–up has two types A and B, and they are selected by
parameter SUP (No.5003#0).

α

LS

G42

r

L

S C

Type
   A

Type
   B

r

G42
L

G42

L

L L

L

S

r

r

G42

L

L

L

S

r

r

C

L

L

Linear→Linear

Linear→Circular

Linear→Linear

Linear→Circular

Workpiece

Work-
piece

Workpiece

Work-
piece

Start position

Start position

Start position

Start position

Programmed path

Programmed path

Programmed path

Programmed path

Tool center path

Tool center path

Tool center path

Tool center path

α

α

α

r

G41

G41

L

L

S

Start position

Tool center path

Programmed path

Less than 1 deg

� Tool movement around
the outside of an acute
angle (α<,)°)

� Tool movement around
the outside linear→linear
at an acute angle less
than 1 degree
�α<�°�



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

233

If the command is specified at start–up, the offset vector is not created.

S

N9

N6

N7

N8

SS

G91 G40 … ;
        :
N6 X100.0 Y100.0 ;
N7 G41 X0 ;
N8 Y–100.0 ;
N9 Y–100.0 X100.0 ;

Programmed path

Tool center path

r

NOTE
For the definition of blocks that do not move the tool, see
II–14.5.3.

� A block without tool
movement specified at
start–up



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

234

In the offset mode, the tool moves as illustrated below:

α

L

L

α

C

S

L

S

C

L

S

CSC

Linear→Circular

Linear→Linear

Programmed path

Intersection
Tool center path

Workpiece

Work-
piece

Tool center path

Intersection

Programmed path

Workpiece

Programmed path

Tool center pathIntersection

Circular→Linear

Circular→Circular

Work-
piece

Tool center path
Programmed path

Intersection

α

α

14.5.3
#��� .���	��� ��

0����� .���

Explanations

� Tool movement around
the inside of a corner
(�')°�α)



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

235

r

r
S

r

Intersection

Programmed path

Tool center path

Intersection

Also in case of arc to straight line, straight line to arc and arc to arc, the
reader should infer in the same procedure.

� Tool movement around
the inside �α<�°� with an
abnormally long vector,
linear → linear



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

236

α

L

r

C

S

L

S

C

L

S

L

L

r

L

L
L

S

r
r

 

Linear→Linear

Linear→Circular

Programmed path

Tool center pathIntersection

Workpiece

Circular→Linear

Circular→Circular

Intersection

Tool center path Programmed path

Work-
piece

Intersection
Tool center path

Programmed path

Workpiece

Work-
piece

Programmed path

Intersection

Tool center path

α

α

α

C

C

� Tool movement around
the outside corner at an
obtuse angle 
(90°�α<180°)



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

237

α

L

L L

L

S r

r

L

L

r

r

C

L

L

L

L L

L

r

r

L

S

L

S

r

r

L

C

CL

Linear→Linear

Programmed path

Tool center path

Workpiece

Linear→Circular

Circular→Linear

Circular→Circular

Programmed path

Work-
piece

Tool center path

Workpiece

Programmed path

Tool center path

Work-
piece

Tool center path Programmed path

α

α

α

S

C

� Tool movement around
the outside corner at an
acute angle
(α<90°)



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

238

If the end of a line leading to an arc is programmed as the end of the arc
by mistake as illustrated below, the system assumes that cutter
compensation has been executed with respect to an imaginary circle that
has the same center as the arc and passes the specified end position.  Based
on this assumption, the system creates a vector and carries out
compensation.  The resulting tool center path is different from that created
by applying cutter compensation to the programmed path in which the
line leading to the arc is considered straight.  

rr

Center of the arc

Imaginary circle

Leading of the arc End the arc

L

L
L

r C
S

Programmed path

Tool center path

Work-
piece

The same description applies to tool movement between two circular
paths.

If the cutter compensation value is sufficiently small, the two circular tool
center paths made after compensation intersect at a position (P).
Intersection P may not occur if an excessively large value is specified for
cutter compensation.  When this is predicted, P/S alarm No.033 occurs
at the end of the previous block and the tool is stopped.  In the example
shown below, tool center paths along arcs A and B intersect at P when a
sufficiently small value is specified for cutter compensation.  If an
excessively large value is specified, this intersection does not occur.  

When the cutter compensation value
is large

Arc B
P

When the cutter compensa-
tion value is small

Alarm(No.033)occurs and the tod stops

Programmed path

Center of the arc B Center of the arc A

Arc A

r r

� When it is exceptional

End position for the arc is not
on the arc

There is no inner intersection



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

239

If the center of the arc is identical with the start position or end point, P/S
alarm (No. 038) is displayed, and the tool will stop at the end position of
the preceding block.

N5 N6

N7

r

Alarm(No.038)is displayed and the tool
stops

(G41)
N5 G01 X100.0 ;
N6 G02 X100.0 I0 J0 ;
N7 G03 Y–100.0 J–100.0 ;Tool center path

Programmed path

The offset direction is decided by G codes (G41 and G42) for cutter radius
and the sign of cutter compensation value as follows.

Sign of offset amount

Gcode
+ –

G41 Left side offset Right side offset

G42 Right side offset Left side offset

The offset direction can be changed in the offset mode. If the offset
direction is changed in a block, a vector is generated at the intersection
of the tool center path of that block and the tool center path of a preceding
block.  However, the change is not available in the start–up block and the
block following it.

#�� ������ �� ��� 
�� �� ������:

�
� 3��� ��� ��
�� �������� ��

��� ��� ��������

� Change in the offset
direction in the offset
mode



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

240

L

L

L

S

r r

G42

G41

G41
G42

r

r

S

C

r

r

LC

S

S

G41

G41

G42

G42

C

C

r

r

Linear→Linear

Linear→Circular

Programmed path

Tool center path

Workpiece

Programmed path

Tool center path

Workpiece

Workpiece

Workpiece

Workpiece

Programmed path

Tool center path

Circular→Linear

Circular→Circular

Tool center path

Programmed path

Workpiece

Workpiece

Workpiece

Tool center path with an inter-
section



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

241

When changing the offset direction in block A to block B using G41 and
G42, if intersection with the offset path is not required, the vector normal
to block B is created at the start point of block B.

G41(G42) (G42)

L

L

L

A B

r

r

S

G42

G41

L S

L

S

(G41) G42

A

B

L

S

r

L L

G41

C

C

r

r r

(G42)

S

S

Center

(G42)

Linear→Linear

Linear→Circular

Programmed path

Tool center path

Programmed path

Tool center path

Workpiece

Workpiece

Tool center path

Programmed path

Circular→Circular

An arc whose end position
is not on the arc

Programmed path

Tool center path
Center

C

(G41)

Tool center path without an in-
tersection



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

242

Normally there is almost no possibility of generating this situation.
However, when G41 and G42 are changed, or when a G40 was
commanded with address I, J, and K this situation can occur.
In this case of the figure, the cutter compensation is not performed with
more than one circle circumference: an arc is formed from P1 to P2 as
shown.  Depending on the circumstances, an alarm may be displayed due
to the “Interference Check” described later.   To execute a circle with more
than one circumference, the circle must be specified in segments.

N5

N6

N7

P1 P2

(G42)

N5 G01 G91 X500.0 Y–700.0 ;

N6 G41 G02 J–500.0 ;

N7 G42 G01 X500.0 Y700.0 ;

Programmed pathTool center path

The length of tool center path
larger than the circumference
of a circle



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

243

If the following command is specified in the offset mode, the offset mode
is temporarily canceled then automatically restored.   The offset mode can
be canceled and started as described in II–14.5.2 and 14.5.4.

If G28 is specified in the offset mode, the offset mode is canceled at an
intermediate position.  If the vector still remains after the tool is returned
to the reference position, the components of the vector are reset to zero
with respect to each axis along which reference position return has been
made.

(G42 G00)
S

S

S

S

G28

G00 r
r

Intermediate position

Reference  position

If G29 is commanded in the offset mode, the offset will be cancelled at
the intermediate point, and the offset mode will be restored automatically
from the subsequent block.

G29 specified immediately after G28

(G42 G00)
S

S

S

G28

G00
r

r

(G42 G00)

S

S
G00r

r

S

S

G29

G29

Tool center path

Programmed path

Reference  position

Intermediate position

Intermediate position

Tool center path

Programmed path

G29 specified not immediately after G28

G29

� Temporary cutter
compensation cancel

Specifying G28 (automatic re-
turn to the reference position)
in the offset mode

Specifying G29 (automatic re-
turn from the reference posi-
tion) in the offset mode



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

244

The offset vector can be set to form a right angle to the moving direction
in the previous block, irrespective of machining inner or outer side, by
commanding the cutter compensation G code (G41, G42) in the offset
mode, independently.  If this code is specified in a circular command,
correct circular motion will not be obtained.
When the direction of offset is expected to be changed by the command
of cutter compensation G code (G41, G42), refer to “change in the offset
direction in the offset mode” in this Subsec.14.5.3.

Linear→Linear

r

A block specified by G42G42 mode

r

C
Intersection

S
L

L

S

L

Circular→Linear

A block specified by G42

Intersection

Programmed path

G42 mode

Tool center path

During offset mode, if G92 (absolute zero point programming) is
commanded,the offset vector is temporarily cancelled and thereafter
offset mode is automatically restored.
In this case, without movement of offset cancel, the tool moves directly
from the intersecting point to the commanded point where offset vector
is canceled.  Also when restored to offset mode, the tool moves directly
to the intersecting point.

S

L
L L

L

S

SN5 N6

N7

N8

G92 block(G41)
N5 G91 G01 X300.0 Y700.0 ;
N6 X–300.0 Y600.0 ;
N7 G92 X100.0 Y200.0 ;
N8 G90 G01 X400.0 Y800.0 ;

Tool center path

Programmed path

� Cutter compensation G
code in the offset mode

� Command cancelling the
offset vector temporarily



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

245

The following blocks have no tool movement.  In these blocks, the tool
will not move even if cutter compensation is effected.

M05 ; M code output. 
S21 ; S code output. 
G04 X10.0 ; Dwell
G10 L11 P01 R10.0 ; Cutter compensation value setting
(G17) Z200.0 ; Move command not included in the 

offset plane.
G90 ; G code only. 
G91 X0 ; Move distance is zero.

Commands (1)
to (6)  are of no 
movement.

When a single block without tool movement is commanded in the offset
mode, the vector and tool center path are the same as those when the block
is not commanded.  This block is executed at the single block stop point.

L

N6

N7 N8

L

SS

N6 G91 X100.0 Y100.0 ;
N7 G04 X100.0 ;
N8 X100.0 ;

Tool center path

Programmed path

Block N7 is executed here.

However, when the move distance is zero, even if the block is commanded
singly, tool motion becomes the same as that when more than one block
of without tool movement are commanded, which will be described
subsequently.

L

N6

N7 N8

L
SS

N6 G91 X100.0 Y100.0 ;
N7 X0 ;
N8 X100.0 ;

Programmed path

Tool center path

Two blocks without tool movement should not be commanded
consecutively.  If commanded, a vector whose length is equal to the offset
value is produced in a normal direction to tool motion in earlier block, so
overcutting may result.

L

N6

N7 N8

L
SSS

N6 G91 X100.0 Y100.0 ;
N7 S21 ;
N8 G04 X10.0 ;
N9 X100.0 ;

Blocks N7 and N8 are executed
here.

N9
Programmed path

Tool center path

� A block without tool
movement

A block without tool move-
ment specified in offset mode



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

246

When two or more vectors are produced at the end of a block, the tool
moves linearly from one vector to another.  This movement is called the
corner movement. 
If these vectors almost coincide with each other, the corner movement
isn’t performed and the latter vector is ignored.

r

�Vx

�VY

This vector is ignored, if
 ∆Vx�∆V Limit, and 
∆VY�∆V Limit

r

Programmed path

Tool center path

If ∆Vx�∆Vlimit and ∆Vy�∆Vlimit, the latter vector is ignored.  The
∆Vlimit is set in advance by parameter (No. 5010).
If these vectors do not coincide, a move is generated to turn around the
corner.  This move belongs to the latter block.

This move belongs to block N7, thus, the feedrate
is equal to that in block N7.
If the block N7 is G00 mode, the tool is moved at
G00 mode, while if it is G01, G02, G03, the tool is
moved at G01 mode.

S

N6 N7

However, if the path of the next block is semicircular or more, the above
function is not performed.
The reason for this is as follows:

� Corner movement



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

247

N4 G41 G91 G01 X150.0 Y200.‘0 ;
N5 X150.0 Y200.0 ;
N6 G02 J–600.0 ; 
N7 G01 X150.0 Y–200.0 ; 
N8 G40 X150.0 Y–200.0 ; P1

P2 P3 P4P5

P6

N5

N6

N4

N7

N8

Programmed pathTool center path

If the vector is not ignored, the tool path is as follows:
P1 → P2 → P3 → (Circle) → P4 → P5 → P6 
But if the distance between P2 and P3 is negligible, the point P3 is
ignored.  Therefore, the tool path is as follows: 
P2 → P4 
Namely, circle cutting by the block N6 is ignored.

For manual operation during the cutter compensation, refer to Section
III–3.5, “ Manual Absolute ON and OFF.”

� Interruption of manual
operation



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

248

α

S

r

L
C

α

L S

G40
r

L

Workpiece

G40

L

Programmed path

Programmed path Tool center path

Tool center path

Work-
piece

Linear→Linear

Circular→Linear

14.5.4
#��� .���	��� ��

0����� .���  
����

Explanations

� Tool movement around
an inside corner
(180°�α)



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

249

Tool path has two types, A and B; and they are selected by parameter SUP
(No. 5003#0).

α

L S

G40

r

L

α

S

r

C

Type
    A

Type
    B

α

L
S

G40

L

Intersection

r

α

S
C

r
r

L
L

G40

L

G40

L

Programmed path

Workpiece

Tool center path

Linear→Linear

Circular→Linear

Linear→Linear

Work-
piece

Programmed path Tool center path

Workpiece

Programmed path

Tool center path

Circular→Linear

Work-
piece

Programmed path Tool center path
Intersection

� Tool movement around
an outside corner at an
obtuse angle
�,)°�α<�')°�



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

250

Tool path has two types, A and B : and they are selected by parameter SUP
(No. 5003#0)

α

L S

G40

r

L

S
C

Type
    A

Type
    B

r

α

G40

L

LL

Lr

r

L

L

S

r

r

C

L

L

G42

α
G40

L

G42

L

α

S

Linear→Linear

Circular→Linear

Programmed path

Tool center path

Workpiece

Work-
piece

Tool center pathProgrammed path

Linear→Linear

Circular→Linear

Workpiece

Programmed path

Tool center path

Programmed path
Tool center path

Work-
piece

� Tool movement around
an outside corner at an
acute angle
(α<90°)



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

251

Start position

r

G40

(G42)

L

L

S

1°or less

Programmed path

Tool center path

When a block without tool movement is commanded together with an
offset cancel, a vector whose length is equal to the offset value is produced
in a normal direction to tool motion in the earlier block, the vector is
cancelled in the next move command.

L

N6

N7 N8

L
SS

N6 G91 X100.0 Y100.0
;
N7 G40 ;
N8 X100.0 Z0 ;

Tool center path

Programmed path

� Tool movement around
the outside linear→linear
at an acute angle less
than 1 degree (α<1°)

� A block without tool
movement specified
together with offset
cancel



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

252

If a G41 or G42 block precedes a block in which G40 and I_, J_, K_ are
specified, the system assumes that the path is programmed as a path from
the end position determined by the former block to a vector determined
by (I,J), (I,K), or (J,K).  The direction of compensation in the former block
is inherited.

E(a, b)

r

N1 (G42 mode) ;
N2 G40 Xa Yb I_ J_ ;

(I, J)

r

X

S

N2

N1

(G42)

Workpiece

Programmed path

Tool center path

In the N1 block, the tool center moves towards X.
In the N2 block, the tool moves towards E.

G40

In this case, note that the CNC obtains an intersection of the tool path
irrespective of whether inner or outer side machining is specified

r

X

S

(G42)

E

G40

r

(I, J)

Tool center path

Programmed path

When an intersection is not obtainable, the tool comes to the normal
position to the previous block at the end of the previous block.

E

(I, J)

r

S

G40
X

r

Tool center path

Programmed path(G42)

� Block containing G40
and I_J_K_

The previous block contains
G41 or G42



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

253

In the example shown below, the tool does not trace the circle more than
once.  It moves along the arc from P1 to P2.  The interference check
function described in II–14.5.5 may raise an alarm.

(I, J)

N5

N6

N7

P1

P2

(G41)
N5 G01 G91 X100.0 ;
N6 G02 J–60.0 ;
N7 G40 G01 X50.0 Y50.0 I–10.0 J–10.0 ;

Tool center path

Programmed path

To make the tool trace a circle more than once, program two or more arcs.

The length of the tool center
path larger than the circumfer-
ence of a circle



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

254

Tool overcutting is called interference. The interference check function
checks for tool overcutting in advance. However, all interference cannot
be checked by this function. The interference check is performed even if
overcutting does not occur.

(1) The direction of the tool path is different from that of the programmed
path (from 90 degrees to 270 degrees between these paths).

Tool center path Programmed path

Programmed path

Tool center path

The directions of
these two paths are
different (180°).

The directions of
these two paths are
different (180°).

14.5.5
Interference  Check

Explanations

� Criteria for detecting
interference



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

255

(2) In addition to the condition (1), the angle between the start point and
end point on the tool center path is quite different from that between
the start point and end point on the programmed path in circular
machining(more than 180 degrees).

Center

N5
N6

N7

r1
r2

Tool center path

Programmed path

(G41)
N5 G01 G91 X800.0 Y200.0 D1 ;
N6 G02 X320.0 Y–160.0 I–200.0 J–800.0 D2 ;
N7 G01 X200.0 Y–500.0 ;
(Tool compensation value corresponding to D1 : r1 = 200.0)
(Tool compensation value corresponding to D2 : r2 = 600.0)

In the above example, the arc in block N6 is placed in the one quadrant.
But after cutter compensation, the arc is placed in the four quadrants.



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

256

(1) Removal of the vector causing the interference 
When cutter compensation is performed for blocks A, B and C and
vectors V1, V2, V3 and V4 between blocks A and B, and V5, V6, V7
and V8 between B and C are produced, the nearest vectors are checked
first. If interference occurs, they are ignored. But if the vectors to be
ignored due to interference are the last vectors at the corner, they
cannot be ignored.
Check between vectors V4 and V5
    Interference ––– V4 and V5 are ignored.
Check between V3 and V6 
   Interference ––– V3 and V6 are ignored 
Check between V2 and V7 
   Interference ––– V2 and V7 are Ignored 
Check between V1 and V8 
   Interference ––––– V1 and V8 are cannot be ignored 
If while checking, a vector without interference is detected,
subsequent vectors are not checked.  If block B is a circular
movement, a linear movement is produced if the vectors are
interfered.

(Example 1)  The tool moves linearly from V1 to V8

Tool
center path C C

C

r r

V1
V2

V3

V4V5

V6

V7
V8

A

O1 O2

B

Programmed 
path

V4, V5 : Interference
V3, V6 : Interference
V2, V7 : Interference
V1, V8 : No Interference

� Correction of
interference in advance



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

257

(Example 2)  The tool moves linearly from V1, V2, V7,  to V8

V6 V3

V5

C
C

C

r r

V1
V2

V4

V7
V8

A

O1 O2

B

V4, V5 : Interference
V3, V6 : Interference
V2, V7 : No Interference

Programmed path

Tool center
path

(2) If the interference occurs after correction (1), the tool is stopped with
an alarm.
If the interference occurs after correction (1) or if there are only one
pair of vectors from the beginning of checking and the vectors
interfere, the P/S alarm (No.41) is displayed and the tool is stopped
immediately after execution of the preceding block.  If the block is
executed by the single block operation, the tool is stopped at the end
of the block.

C

V6

A

B

V5 V2

V1

Stopped

Tool center
path

Programmed path

After ignoring vectors V2 and V5 because of interference, interference
also occurs between vectors V1 and V6.  The alarm is displayed and
the tool is stopped.



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

258

(1) Depression which is smaller than the cutter compensation value

Tool center path

A
B

C

Stopped

Programmed path

There is no actual interference, but since the direction programmed in
block B is opposite to that of the path after cutter compensation the tool
stops and an alarm is displayed.

(2) Groove which is smaller than the cutter compensation value

A B C

Programmed pathTool center path

Stopped

Like (1), P/S alarm is displayed because of the interference as the
direction is reverse in block B.

� When interference is
assumed although actual
interference does not
occur



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

259

When the radius of a corner is smaller than the cutter radius, because the
inner offsetting of the cutter will result in overcuttings, an alarm is
displayed and the CNC stops at the start of the block.  In single block
operation, the overcutting is generated because the tool is stopped after
the block execution.

Tool center path

ÇÇÇÇ
ÇÇÇÇ

Programmed path

Workpiece

An alarm is generated
and the operation
stops

An alarm is generated and
the operation stops here in
single block operation

If the CNC does not
stop, overcutting occurs

ÇÇ
ÇÇ
ÇÇ
ÇÇ

Since the cutter compensation forces the path of the center of the tool to
move in the reverse of the programmed direction, overcutting will result.
In this case an alarm is displayed and the CNC stops at the start of the
block.

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

Tool center path

Programmed path

Workpiece

An alarm is displayed and the operation
stops

Overcutting if the operation would not stop

14.5.6
0���������" �!  �����

 �	����
����

Explanations

� Machining an inside
corner at a radius
smaller than the cutter
radius

� Machining a groove
smaller than the tool
radius



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

260

When machining of the step is commanded by circular machining in the
case of a program containing a step smaller than the tool radius, the path
of the center of tool with the ordinary offset becomes reverse to the
programmed direction.  In this case, the first vector is ignored, and the tool
moves linearly to the second vector position.  The single block operation
is stopped at this point.  If the machining is not in the single block mode,
the cycle operation is continued.  If the step is of linear, no alarm will be
generated and cut correctly.  However uncut part will remain.

ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ

S
The first vector is ignored

Tool center path

Programmed path

Workpiece

Center of the circu-
lar machining

An overcutting will result if the first vector is not ignored.
However, tool moves linearly.

Linear movement Stop position after execution of a  single
block

It is usually used such a method that the tool is moved along the Z axis
after the cutter compensation is effected at some distance from the
workpiece at the start of the machining.
In the case above, if it is desired to divide the motion along the Z axis into
rapid traverse and cutting feed, follow the procedure below.

ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ

Work-
piece

N1

N1 G91 G00 G41 X500.0 Y500.0 D1 ;
N3 G01 Z–300.0 F100 ;
N6 Y1000.0 F200 ;

N6

(500, 500)
N3:Move command in Z axis

After compensation

In the program example above, when executing block N1, blocks N3 and
N6 are also entered into the buffer storage, and by the relationship among
them the correct compensation is performed as in the figure above.
Then, if the block N3 (move command in Z axis) is divided as follows:
As there are two move command blocks not included in the selected plane
and the block N6 cannot be entered into the buffer storage, the tool center
path is calculated by the information of N1 in the figure above.  That is,
the offset vector is not calculated in start–up and the overcutting may
result.

� Machining a step smaller
than the tool radius

� Starting compensation
and cutting along the
Z–axis



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

261

The above example should be modified as follows:

ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ

N1

N1 G91 G00 G41 X500.0 Y500.0 D1 ;
N3 G01 Z–250.0 ;
N5 G01 Z–50.0 F100 ;
N6 Y1000.0 F200 ;

N6

(500, 500)
N3, N5:Move command for the Z axis

After compensation

Workpiece

The move command in the same direction as that of the move command
after the motion in Z axis should be programmed.

ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ

ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ

N1

N1 G91 G00 G41 X500.0 Y400.0 D1 ;
N2 Y100.0 ;
N3 Z–250.0 ;
N5 G01 Z–50.0 F100 ;
N6 Y1000.0 F200 ;

N6

N2

Workpiece

After compensation

N3, N5 : Move command for the Z
axis (2blocks)
(500, 500)

As the block with sequence No. N2 has the move command in the same
direction as that of the block with sequence No. N6, the correct
compensation is performed.



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

262

Cutter compensation C is not performed for commands input from the
MDI.
However, when automatic operation using the absolute commands is
temporarily stopped by the single block function, MDI operation is
performed, then automatic operation starts again, the tool path is as
follows :
In this case, the vectors at the start position of the next block are translated
and the other vectors are produced by the next two blocks.  Therefore,
from next block but one, cutter compensation C is accurately performed.

VB2

VB1

VC1’

VC1

VC2

VB1’

VB2’

PB

PA

PB’

PC

PD

Command
for MDI

When position PA, PB, and PC are programmed in an absolute command,
tool is stopped by the single  block function after executing the block from
PA to PB and the tool is moved by MDI operation.  Vectors VB1 and VB2
are translated to VB1’ and VB2’ and offset vectors are recalculated for the
vectors VC1 and VC2 between block PB–PC and PC–PD.
However, since vector VB2 is not calculated again, compensation is
accurately performed from position PC.

14.5.7
Input Command from
MDI



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

263

A function has been added which performs positioning by automatically
canceling a cutter compensation vector when G53 is specified in cutter
compensation C mode, then automatically restoring that cutter
compensation vector with the execution of the next move command.
The cutter compensation vector restoration mode is of FS16/21/0i type
when CCN (bit 2 of parameter No. 5003) is set to 0; it is of FS15 type when
CCN is set to 1.
 
When G28 or G30 is specified in cutter compensation C mode, automatic
reference position return is performed by automatically canceling a cutter
compensation vector, that cutter compensation vector automatically
being restored with the execution of the next move command.  In this case,
the timing and format of cutter compensation vector
cancellation/restoration, performed when CCN (bit 2 of parameter No.
5003) is set to 1, are changed to FS15 type.
When CCN (bit 2 of parameter No. 5003) is set to 0, the conventional
specification remains applicable.

 When G29 is specified in cutter compensation C mode, the cutter
compensation vector is automatically canceled/restored.  In this case, the
timing and format of cutter compensation vector cancellation/restoration,
performed when CCN (bit 2 of parameter No. 5003) is set to 1, are
changed to FS15 type.
When CCN (bit 2 of parameter No. 5003) is set to 0, the conventional
specification remains applicable.

When G53 is specified in cutter compensation C mode, the previous block
generates a vector that is perpendicular to the move direction and which
has the same magnitude as the offset value.  Then, the offset vector is
canceled when movement to a specified position is performed in the
machine coordinate system.  In the next block, offset mode is
automatically resumed.

Note that cutter compensation vector restoration is started when CCN (bit
2 of parameter No. 5003) is set to 0; when CCN is set to 1, an intersection
vector is generated (FS15 type).

14.5.8
G53,G28,G30 and G29
Commands in Cutter
Compensation C Mode

Explanations

� G53 command in cutter
compensation C mode



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

264

(1)G53 specified in offset mode
When CCN (bit 2 of parameter No.5003)=0
 

Oxxxx;
G90G41_ _;

G53X_Y_;
 

G00

[Type A] Start–up

rr

s s(G41G00)
G53

s

G00

[Type B]

Start–up

rr

s s
G53

s

G00

G00

When CCN (bit 2 of parameter No.5003)=1

G00

[FS15 Type]

r

s s(G41G00)

G53

s

G00

 (2) Incremental G53 specified in offset mode
When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _;

G53X_Y_;
 

G90G00

[Type A] Start–up

r
r

s
s

(G91G41G00)
G53

G00

G90G00

[Type B]

r

r

s
s

(G91G41G00)
G53

G00

r
Start–up



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

265

When CCN (bit2 of parameter No.5003)=1

G90G00

[FS15 Type]

r

s

s

(G91G41G00)
G53

G00

(3)G53 specified in offset mode with no movement specified 
When CCN (bit2 of parameter No.5003)=0

Oxxxx;
G90G41_ _;

G00X20.Y20. ;
G53X20.Y20. ;
 

G00

[Type A]

Start–up
r

r

s

s(G41G00)
G53

G00

G00

[Type B]

r

r
s

s

(G41G00)
G53

G00

Start–up

When CCN (bit2 of parameter No.5003)=1

G00

[FS15 Type]

r
s

s

(G41G00)
G53

G00



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

266

WARNING
1 When cutter compensation C mode is set and all–axis machine lock is applied, the G53

command does not perform positioning along the axes to which machine lock is applied.  The
vector, however, is preserved.  When CCN (bit 2 of parameter No. 5003) is set to 0, the vector
is canceled.  (Note that even if the FS15 type is used, the vector is canceled when each–axis
machine lock is applied.)

Example 1: When CCN (bit 2 of parameter No. 5003) = 0, 
type A is used, and all–axis machine lock is applied

Example 2: When CCN (bit 2 of parameter No. 5003) = 1 
and all–axis machine lock is applied [FS15 type]

Example 3: When CCN (bit 2 of parameter No. 5003) = 1 
and specified–axis machine lock is applied [FS15 type] 

2 When G53 is specified for a compensation axis in cutter compensation mode, the vectors along
the other axes are also canceled. (This also applies when CCN (bit 2 of parameter No.5003)
is set to 1.  When the FS15 type is used, only the vector along a specified axis is canceled.
Note that the FS15 type cancellation differs from the actual FS15 specification in this point.)

Example:  When CCN (bit 2 of parameter No.5003)=1[FS 15 type]

G53

(G41G00)

�

s
G00

s

�

G00

G53

(G41G00)

�

s
G00

s

�

G00

G53

(G41G00)

�

s G00

s

�

G00

G53Z_

(G41X_Z_)
�

s

G00

s

G00s



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

267

NOTE
1 When a G53 command specifies an axis that is not in the cutter compensation C plane, a

perpendicular vector is generated at the end point of the previous block, and the tool does not
move.  In the next block, offset mode is automatically resumed (in the same way as when two
or more continuous blocks do not specify any move commands).

Example: When CCN (bit 2 of parameter No. 5003) = 0, and type A is used

2 When a G53 block is specified to become a start–up block, the next block actually becomes
the start–up block.  When CCN (bit 2 of parameter No. 5003) is set to 1, an intersection vector
is generated.

Example: When CCN (bit 2 of parameter No. 5003) = 0 and type A is used

s

G53Z_

G00

(G41G00X_Y_)

�

�

s

sG00

G00

Start–up

s

G00

G41G53
�

s

sG00

G00Start–up



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

268

When G28 or G30 is specified in cutter compensation C mode, an
operation of FS15 type is performed if CCN (bit 2 of parameter No. 5003)
is set to 1.

This means that an intersection vector is generated in the previous block,
and a perpendicular vector is generated at an intermediate position.  Offset
vector cancellation is performed when movement is made from the
intermediate position to the reference position.  As part of restoration, an
intersection vector is generated between a block and the next block.

(1)G28 or G30, specified in offset mode (with movement to both an
intermediate position and reference position performed)

(a) For return by G29
When CCN (bit 2 of parameter No. 5003) = 0

Oxxxx;
G91G41_ _ _;

G28X40.Y0 ;
G29X45.Y15. ;
 

G29

[Type A] Intermediate
position
G28/30

r

rs
(G42G01)

G01s
s Return posiiton

Reference position

G29

[Type B]
Intermediate
position
G28/30

s
(G42G01)

G01s
s

s

s

r

Return posiiton

Reference position

When CCN (bit 2 of parameter No. 5003) = 1

G29

[FS15 Type] Intermediate 
position
G28/30
s

(G42G01)
G01

s
s

�

s

Return posiiton

Reference position

� G28 or G30 command in
cutter compensation C
mode



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

269

(b) For return by G00
When CCN (bit 2 of parameter No. 5003) = 0

G00

[Type A]

(G42G01)

G01s

��

s

s

Oxxxx;
G91G41_ _ _;

G28X40.Y0 ;

G00

[Type B]

s

(G42G01)

G01s

��

s

s

Reference position

Reference position

s

Intermediate position
G28/30

Intermediate position
G28/30

When CCN (bit 2 of parameter No. 5003) = 1

G00

[FS15 Type]

s

(G42G01)

G01s

��

s

s

Reference position

Intermediate position
G28/30

(2)G28 or G30, specified in offset mode (with movement to an
intermediate position not performed)

(a) For return by G29
When CCN (bit 2 of parameter No. 5003) = 0

O××××;
G91G41_ _ _;

G28X0Y0 ;
G29X0Y0 ;
 G29

[Type A]

r

s(G42G01) G01

G29

[Type B]

G28/30

s(G42G01) G01 s

s

s

G28/30
G01

r

s

G01

Intermediate position = return position

Intermediate position = return position

Reference position

Reference position



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

270

When CCN (bit 2 of parameter No. 5003) = 1

G29

[FS15 Type]

G28/30

s(G42G01) G01 s

r

s

G01

Intermediate position = return position

Reference position

(b)For return by G00
When CCN (bit 2 of parameter No.5003)=0

Intermediate
position

Oxxxx;
G91G41_ _ _;

G28X0Y0 ;

G00

[Type A]

r
s(G42G01)

[Type B]

G28/30

s(G42G01)

s

s

s

G28/30

G01

r

s G01

r

Start–up

G00

r

Reference position

Intermediate
position

Start–up

Reference position

When CCN (bit 2 of parameter No.5003)=1

G00

[FS15 Type]

G28/30

s

(G41G01) G01s

r

s

Reference position

Intermediate
position



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

271

(3)G28 or G30, specified in offset mode 
(with movement to a reference position not performed)
(a) For return by G29

When CCN (bit 2 of parameter No.5003)=0

Oxxxx;
G91G41_ _ _;

G28X40.Y–40.;
G29X40.Y40.;

G29

[Type A]

r
s(G42G01)

[Type B]

G28/30

s

(G42G01) s

s

s
G28/30

G01

r
s G01

r

r
G29

Reference position
=Intermediate position

 Return position

 Return position

Reference position
=Intermediate position

When CCN (bit 2 of parameter No.5003)=1

G29

[FS15 Type]

G28/30
s(G42G01) G01

r
s

s

 Return position

Reference position
=Intermediate position

(b)For return by G00
When CCN (bit 2 of parameter No.5003)=0

Oxxxx;
G91G41_ _ _;

G28X40.Y–40.;
G00

[Type A]

r
s(G41G01)

[Type B]

G28/30 s

(G41G01) s

s
s

G28/30

G01

r

s G01

r

Start–up

r

G00

Start–up

Reference position
=Intermediate position

Reference position
=Intermediate position

When CCN (bit 2 of parameter No.5003)=1

G00

[FS15 Type]

G28/30
s(G41G01) G01

r
s

s

Reference position
=Intermediate position



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

272

(4)G28 or G30 specified in offset mode (with no movement performed)

(a) For return by G29
When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G28X0Y0;
G29X0Y0;

[Type A]

r

s
(G41G01)

[Type B]
G28/30/G29

(G41G01)

G28/30/G29

G01

r

s G01

G01

G01

Reference position
=Intermediate position
=return position

Intersection vector

Reference position
=Intermediate position
=return position

Intersection vector

When CCN (bit 2 of parameter No.5003)=1

G01

[FS15 Type]
G28/30/G29

s

(G42G01) r

G01Reference position
=Intermediate position
=return position

Intersection vector

(b)For return by G00
When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G28X0Y0;
G00

[Type A]

r
s

(G41G01)

[Type B]

G28/30

(G41G01)
s

s

G28/30

G01

r
s

G01

Start–up

r
G00

Start–up

Reference position
=Intermediate position

Reference position
=Intermediate position



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

273

When CCN (bit 2 of parameter No.5003)=1

G00

[FS15 Type]

G28/30

(G41G01)

G01

r

s
Reference position
=Intermediate position

WARNING
1 When a G28 or G30 command is specified during all–axis machine lock, a perpendicular offset

vector is applied at the intermediate position, and movement to the reference position is not
performed; the vector is preserved.  Note, however, that even if the FS15 type is used, the
vector is canceled only when each–axis machine lock is applied.  
(The FS15 type preserves the vector even when each–axis machine lock is applied.)

Example1: When CCN (bit 2 of parameter No.5003)=1 
and all–axis machine lock is applied

Example2: When CCN (bit 2 of parameter No.5003)=1 
and each–axis machine lock is applied

2 When G28 or G30 is specified for a compensation axis in cutter compensation mode, the
vectors along the other axes are also canceled.  (This also applies when CCN (bit 2 of
parameter No. 5003) is set to 1.  When the FS15 type is used, only the vector along a specified
axis is canceled.  Note that the FS15 type cancellation differs from the actual FS15 specification
in this point.)

Example: When CCN (bit 2 of parameter No.5003)=1

G28

(G42G01)
r

s

G01

s G01

[FS15Type ]

s

r

s
Reference position or floating
reference positionIntermediate position

G28Z_

s s

s

r

G00

G00
(G41G00X_Z_)

Intermediate position
Reference position or floating
reference position

(G42G01)

r

s

s

[FS15Type]

s

G01

G01G28
s

Reference position or floating
reference positionIntermediate position



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

274

NOTE
1 When a G28 or G30 command specifies an axis that is not in the cutter compensation C plane,

a perpendicular vector is generated at the end point of the previous block, and the tool does
not move.  In the next block, offset mode is automatically resumed (in the same way as when
two or more continuous blocks do not specify any move commands).

Example: When CCN (bit 2 of parameter No. 5003) = 1

2 When a G28 or G30 block is specified such that the block becomes a start–up block, a vector
perpendicular to the move direction is generated at an intermediate position, then subsequently
canceled at the reference position. In the next block, an intersection vector is generated.

Example: When CCN (bit 2 of parameter No.5003)=1

s

G28(G30/30.1)Z__

G01
(G41G01X_Y_)

r

s

s

[FS15 Type]

G01

[FS15 Type] G01

r

s

G42G28

s

s G01

G01

s

Reference position or floating
reference position

Intermediate position



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

275

When G29 is specified in cutter compensation C mode, an operation of
FS15 type is performed if CCN (bit 2 of parameter No. 5003) is set to 1.

This means that an intersection vector is generated in the previous block,
and vector cancellation is performed when a movement to an intermediate
position is performed.  When movement from the intermediate position
to the return position is performed, the vector is restored; an intersection
vector is generated between the block and the next block.

(1)G29 specified in offset mode (with movement to both an intermediate
position and reference position performed)

(a) For specification made immediately after automatic reference
position return 
When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G28X40.Y0;
G29X45.Y15.;
 

G29

[Tlype A]

r

s

(G42G01)

G01

G29

[Type B]

G28/30

s

(G42G01)

G01
s

s

s
G28/30

ss

s

Return position

Reference position

Reference position

Intermediate position

Return position
Intermediate
position

When CCN (bit 2 of parameter No.5003)=1

G29

[FS15Type]

G28/30

(G42G01)

G01

s

r
ss

s

Return position

Reference position

Intermediate 
position

� G29 command in cutter
compensation C mode



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

276

(b)For specification made other than immediately after automatic
reference position return

When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G29X40.Y40.;
 

[Type A]

G29

[Type B]

(G42G01)
G01

s

s
r

ss

ss
r

(G42G01)
r

r

G01

Return position

Intermediate 
position

G29

Intermediate 
position

Return position

Start–up

Start–up

When CCN (bit 2 of parameter No.5003)=1

G29

[FS15 Type]

(G42G01)
G01s

ss

Intermediate
position

Return position

(2)G29 specified in offset mode (with movement to an intermediate
position not performed)

(a) For specification made immediately after automatic reference
position return

When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G28X40.Y–40.;
G29X40.Y40.;
 

[Type A]

(G42G01)

G29

[Type B]

s

(G42G01)

s
G28/30 r

s

r

s
G28/30

s
G29

s
r

G01

G01

Reference position
=Intermediate position

Return position

Return position

Reference position
=Intermediate position



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

277

When CCN (bit 2 of parameter No.5003)=1

G29

[FS15 Type]

G28/30
(G42G01) G01s

r
s

s
Return position

Reference position
=Intermediate position

(b)For specification made other than immediately after automatic
reference position return

When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G29X40.Y–40.;

[Type A]

(G42G01)

G29

[Type B]

s

(G42G01)

s

r
s

r
G01

G01

s
r

G29 G01

s
r r

s G01

Intermediate position

Return position

Intermediate position

Return position

Start–up

Start–up

When CCN (bit 2 of parameter No.5003)=1

G29

[FS15 Type]

(G42G01)

G01

s
r

s

s G01

Return position

Intermediate position



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

278

(3)G29 specified in offset mode (with movement to a reference position
not performed)

(a) For specification made immediately after automatic reference
position return

When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G28X0Y0;
G29X0Y0;
 

[Type A]

(G42G01)

G29

s s

G28/30

s

r

[Type B]

(G42G01)

G29

s s

G28/30

s

r G01

G01

G01

G01

Intermediate position
=Return position

Reference position

Intermediate position
=Return position

Reference position

When CCN (bit 2 of parameter No.5003)=1

G29

[FS15 Type]

G28/30

(G42G01) G01 s

r

s

s

G01

Intermediate position
=Return position

Reference position



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

279

(b)For specification made other than immediately after automatic
reference position return

O××××;
G91G41_ _ _;

G29X0Y0;
 

[Type A]

(G42G01)

G29

[Type B]

s

(G42G01)

s

s

r

s

s

G29

s G01

G01

G01

G01

Intermediate position
=Return position

Intermediate  position
=Return position

When CCN (bit 2 of parameter No.5003)=1

[FS15 Type]

(G42G01)
s

s

G29

s G01

G01

Intermediate position
=Return position



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

280

(4)G29 specified in offset mode (with movement to an intermediate
position and reference position not performed)

(a) For specification made immediately after automatic reference
position return 

When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G28X0Y0;
G29X0Y0;
 

[Type A]

(G41G01)

s

s

G28/30,G29

r

[Type B]

(G41G01)

s s

r

G01

G01
G01

G01

s

G28/30,G29

Reference position
=Intermediate  position
=return position

Intersection vector

Intersection vector

Reference position
=Intermediate  position
=return position

When CCN (bit 2 of parameter No.5003)=1

[FS15 Type]

G28/30,G29

(G42G01)
G01

r

s s
G01

Intersection vector

Reference position 
=Intermediate position
=return position



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

281

(b)For specification made other than immediately after automatic
reference position return

When CCN (bit 2 of parameter No.5003)=0

O××××;
G91G41_ _ _;

G29X0Y0;

[Type A]

(G41G01)

s

r

[Type B]

(G41G01)
s

s
r G01

G01 G01

G01

s
G29

G29

Intermediate position=return position

Intermediate position=return position

When CCN (bit 2 of parameter No.5003)=1

[FS15 Type]

(G41G01)
G01r

s

s

G01
G29

Intermediate position=return position

NOTE
When a G29 command is specified for an axis that is not in the cutter compensation C plane
in cutter compensation C mode, a perpendicular vector is generated at the end point of the
previous block, and the tool does not move.  In the next block, an intersection vector is
generated (in the same way as when two or more continuous blocks do not specify any move
commands).

s
G29Z__

(G41G01X_Y_)

r

s

G01G01



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

282

By specifying G39 in offset mode during cutter compensation C, corner
circular interpolation can be performed.  The radius of the corner circular
interpolation equals the  compensation value.

 In offset mode

or

G39  ;

;
I_J_
I_K_
J_K_

G39

When the command indicated above is specified, corner circular
interpolation in which the radius equals compensation value can be
performed.  G41 or G42 preceding the command determines whether the
arc is clockwise or counterclockwise.  G39 is a one–shot G code.

When G39; is programmed, the arc at the corner is formed so that the
vector at the end point of the arc is perpendicular to the start point of the
next block.

When G39 is specified with I, J, and K, the arc at the corner is formed so
that the vector at the end point of the arc is perpendicular to the vector
defined by the I, J, and K values.

In a block containing G39, no move command can be specified.

Two or more consecutive non–move blocks must not be specified after a
block containing G39 without I, J, or K.  (A single block specifying a
travel distance of zero is assumed to be two or more consecutive
non–move blocks.)  If the non–move blocks are specified, the offset
vector is temporarily lost.  Then, offset mode is automatically restored.

14.5.9
Corner Circular
Interpolation (G39)

Format

Explanations

� Corner circular
interpolation

� G39 without I, J, or K

� G39 with I, J, and K

Limitations

� Move command

� Non–move command



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

283

X axis

Y axis

(0.0, 10.0)

(–10.0, 10.0)

Block N1 Offset vector

Block N2

Block N3

Programmed path

Tool center path

(In offset mode)
N1 Y10.0  ; 
N2 G39 ; 
N3 X-10.0 ; 

.

.

.

.

.

.

.

.

X axis

Y axis

(In offset mode)
N1 Y10.0  ; 
N2 G39 I–1.0 J2.0 ; 
N3 X-10.0 Y20.0 ;

.

.

.

.

.

.

.

.

Block N1 Offset vector
Block N2

Block N3

Programmed
path

Tool center
path

!:�;���0 <����"

(0.0, 10.0)

(–10.0, 20.0)

Examples

� G39 without I, J, or K

� G39 with I, J, and K



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

284

Tool compensation values include tool geometry compensation
values and tool wear compensation (Fig. 14.6 (a)).

OFSG

OFSW
OFSG:Geometric compensation value

OFSW:Wear compensation value

ÇÇ
ÇÇ
ÇÇ
ÇÇ

ÇÇ
Reference position

Fig. 14.6 (a)  Geometric compensation and wear compensation

Tool compensation values can be entered into CNC memory from the 
CRT/MDI panel (see section III–11.4.1) or from a program.
A tool compensation value is selected from the CNC memory when the
corresponding code is specified after address H or D in a program. 
The value is used for tool length compensation, cutter compensation, or
the tool offset.

Table 14.6 (a) shows the valid input range of tool compensation values.

Table 14.6 (a)  The valid input range of  tool compensation value

Increment
system

Geometric compensation value Wear compensation valueIncrement
system Metric input Inch input Metric input Inch input

IS–B 
999.999 mm 
99.9999inch 
99.999 mm 
9.9999 inch

IS–C 
999.9999 mm 
99.99999inch 
99.9999 mm 
9.99999 inch

The memory can hold 400 tool compensation value (option).
Address D or H is used in the program.  The address used depends on
which of the following functions is used: tool length compensation(see
II–14.1), tool offset (see II–14.3), or cutter compensation C (see II–14.5).
The range of the number that comes after the address (D or H) : 0 to 400.

14.6
TOOL COMPENSA–
TION VALUES,
NUMBER OF
COMPENSATION
VALUES, AND
ENTERING VALUES
FROM THE
PROGRAM (G10)

Explanations

� Valid range of tool
compensation values

� Number of tool
compensation values
and the addresses to be
specified



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

285

Tool compensation memory C can be used.
The tool compensation values are as following that are entered (set) (Table
14.6 (b)).

Table 14.6 (b)  Setting contents tool compensation memory 
and tool compensation value

Tool compensation value Tool compensation memory C

Tool geometry compensation value
for address D

set

Tool geometry compensation value
for address H

set

Tool wear compensation for value ad-
dress D

set

Tool wear compensation 
value for address H

set

The programming format depends on which tool compensation value is
used.

Table 14.6 (c)  Setting range of Tool compensation memory
and Tool compensation value

Tool compensation value Format

C

Geometry compensation value for H code G10L10P_R_;

C
Geometry compensation value for D code G10L12P_R_;

C
Wear compensation value for H code G10L11P_R_;

Wear compensation value for D code G10L13P_R_;

P : Number of tool compensation
R : Tool compensation value in the absolute command(G90) mode

Value to be added to the specified tool compensation value in the
incremental command(G91) mode (the sum is also a tool
compensation value.)

NOTE
To provide compatibility with the format of older CNC
programs, the system allows L1 to be specified instead of
L11.

� Tool compensation
memory and the tool
compensation value to
be entered

Format

� Input of tool
compensation value by
programing



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

286

A programmed figure can be magnified or reduced (scaling).
The dimensions specified with X_, Y_, and Z_ can each be scaled up or
down with the same or different rates of magnification.
The magnification rate can be specified in the program.
Unless specified in the program, the magnification rate specified in the
parameter is applied.

Y

X

P4

P4’

P1

P1’

P3’

P2’

P2

P3

P0

P0:Scaling center
0

Fig. 14.7 (a)  Scaling(P1 P2 P3 P4�P1’P2’P3’P4’)

G51X_Y_Z_P_ ; Scaling start

   Scaling is effective.
   (Scaling mode)

Format Meaning of command

X_Y_Z _ : Absolute command for 
center coordinate value
of scaling

P_ : Scaling magnification

G50 ; Scaling cancel

SCALING UP OR DOWN ALONG ALL AXES
AT THE SAME RATE OF MAGNIFICATION

G51_X_Y_Z_I_J_K_;Scaling start X_Y_Z_ Absolute command for 
center coordinate value
of scaling

I_J_K_ Scaling magnification for
X axis Y axis and Z axis 
respectivelyG50 Scaling cancel

Format Meaning of command

   Scaling is effective.
   (Scaling mode)

Scaling up or down along each axes at a different
rate of magnification (mirror image)

WARNING
Specify G51 in a separate block. After the figure is enlarged
or reduced, specify G50 to cancel the scaling mode.

14.7
SCALING
(G50, G51)

Format



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

287

Least input increment of scaling magnification is: 0.001 or 0.00001 It is
depended on parameter SCR (No. 5400#7) which value is selected.  Then,
set parameter SCLx (No.5401#0) that enables scaling for each axis.  If
scaling P is not specified on the block of scaling (G51X_Y_Z_P_ ;), the
scaling magnification set to parameter (No. 5411) is applicable. If X,Y,Z
are omitted, the tool position where the G51 command was specified
serves as the scaling center.

Each axis can be scaled by different  magnifications. Also when a negative
magnification is specified, a mirror image is applied.  First of all, set a
parameter XSC (No. 5400#6) which validates each axis scaling (mirror
image).
Then, set parameter SCLx (No. 5401#0) to enable scaling along each axis.
Least input increment of scaling magnification of each axis (I, J, K) is
0.001 or 0.00001( set parameter SCR (No. 5400#7)).
Magnification is set to parameter 5421 within the range +0.00001 to
+9.99999 or +0.001 to +999.999
If a negative value is set, mirror image is effected.
If magnification I, J or K is not commanded, a magnification value set to
parameter (No. 5421) is effective.  However, a value other than 0 must be
set to the parameter.

NOTE
Decimal point programming can not be used to specify the
rate of magnification (I, J, K).

Y axis

X axis

b

a

d

a/b : Scaling magnification of X axis
c/d : Scaling magnification of Y axis

0 : Scaling center

Programmed figure

Scaled figure

0
c

Fig. 14.7 (b)  Scaling of each axis

Explanations

� Scaling up or down
along all axes at the
same rate of
magnification

� Scaling of each axis,
programmable mirror
image
(negative magnification)



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

288

Even if different magnifications are applie to each axis in circular
interpolation, the tool will not trace an ellipse.
When different magnifications are applied to axes and a circular
interpolation is specified with radius R, it becomes as following figure
14.7 (c) (in the example shown below, a magnification of  2 is applied to
the X–component and a magnification of  1 is applied to the Y–
component.).

G90 G00 X0.0 Y100.0 ;
G51 X0.0 Y0.0 Z0.0 I2000 J1000;
G02 X100.0 Y0.0 R100.0 F500 ;

Above commands are equivalent to the following command:

G90 G00 X0.0 Y100.0 Z0.0 ;
G02 X200.0 Y0.0 R200.0 F500 ;

Magnification of radius R depends on I, or J whichever is larger.

(0,0) (100.0) (200.0)

Y

X

Scaled shape

Fig. 14.7 (c)  Scaling for circular interpolation1

When different magnifications are applied to axes and a circular
interpolation is specified with I, J and K, it becomes as following figure
14.7 (d) (In the example shown below, a magnification of 2 is applied to
the X–component and a magnification of 1 is applied to the
Y–component.).

G90 G00 X0.0 Y0.0 ;
G51 X0.0 Y0.0 I2000 J1000;
G02 X100.0 Y0.0 I0.0 J–100.0 F500 ;

Above commands are equivalent to the following commands.

G90 G00 X0.0 Y100.0;
G02 X200.0 Y0.0 I0.0 J–100.0 F500 ;

In this case, the end point does not beet the radius, a linear section is
included.

(0,0) (100.0) (200.0)

Y

X

Scaled shape

(100.0)

(200.0)

Fig. 14.7 (d)  Scaling for circular interpolation 2

� Scaling of circular
interpolation



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

289

This scaling is not applicable to cutter compensation values, tool length
offset values, and tool offset values (Fig. 14.7 (e)).

Cutter compensation values are not scaled.

Programmed figure

Scaled figure

Fig. 14.7 (e)  Scaling during cutter compensation

Scaling is not applicable to the Z–axis movement in case of the following
canned cycle.
⋅Cut–in value Q and retraction value d of peck drilling cycle (G83, G73).
⋅Fine boring cycle (G76)
⋅Shift value Q of X and Y axes in back boring cycle (G87).
In manual operation, the travel distance cannot be increased or decreased
using the scaling function.

In scaling mode, G27, G28, G29, G30, or commands related to the
coordinate system (G52 to G59, G92) must not be specified.  When any
of these G codes is necessary, specify it after canceling scaling mode.

WARNING
1 If a parameter setting value is employed as a scaling magnification without specifying P, the

setting value at G51 command time is employed as the scaling magnification, and a change
of this value, if any, is not effective.

2 Before specifying the G code for reference position return (G27, G28, G29, G30) or coordinate
system setting (G52 to G59, G92), cancel the scaling mode.

3 If scaling results are rounded by counting fractions of 5 and over as  a unit and disregarding
the rest, the move amount may become zero.  In this case, the block is!regarded as a no
movement block, and therefore, it may affect the tool movement by!cutter compensation C. See
the description of blocks that do not move the tool at II–14.5.3.

� Tool compensation

� Invalid scaling

� Commands related to
reference position return
and coordinate system



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

290

NOTE
1 The position display represents the coordinate value after scaling.
2 When a mirror image was applied to one axis of the specified plane, the following!results:

(1)Circular command Direction of rotation is reversed.
(2)Cutter compensation C Offset direction is reversed.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
(3)Coordinate system rotation Rotation angle is reversed.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

Example of a mirror image program
Subprogram
O9000 ;
G00 G90 X60.0 Y60.0;
G01 X100.0 F100; 
G01 Y100.0;
G01 X60.0 Y60.0;
M99;
Main program
N10 G00 G90;
N20M98P9000;
N30 G51 X50.0 Y50.0 I–1000 J1000;
N40 M98 P9000;
N50 G51 X50.0 Y50.0 I–1000 J–1000;
N60 M98 P9000;
N70 G51 X50.0 Y50.0 I1000 J–1000
N80 M98 P9000;
N90 G50;

60
50

100

50 60 100

Y

X

40

400

Fig. 14.7 (f)  Example of a mirror image program

Examples



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

291

A programmed shape can be rotated.  By using this function it becomes
possible, for example, to modify a program using a rotation command
when a workpiece has  been placed with some angle rotated from the
programmed position on the machine.Further, when there is a pattern
comprising some identical shapes in the positions rotated from a shape,
the time required for programming and the length  of the program can be
reduced by preparing a subprogram of the shape and calling it after
rotation.

Angle of rotation

Center of rotation

�


�

Fig. 14.8 (a)  Coordinate system rotation

G68 α_β_R_ ; Start rotation of a coordinate system.

G17 (G18 or G19) : Select the plane in which contains the figure to be 
rotated.

α_β_ Absolute command for two of the x_,y_,and Z_ axes
 that correspond to the current plane selected by a 
command (G17, G18, or G19).  The command 
specifies the coordinates of the center of rotation for
the values 
specified subsequent to G68.

R_ Angular displacement with a positive value indicates
counter clockwise rotation.  Bit 0 of parameter 5400 
selects whether the specified angular displacement is
alwarys considered an absolute value or is considered
an absolute or incremental value depending on the
specified G code (G90 or G91).

Least input increment:   0.001 deg  
Valid data range : –360,000 A360,000

Coordinate system rotation mode 
(The coordinate system is rotated.)

G69 ; Coordinate system rotation cancel command

Format

Meaning of command

G17
G18
G19

14.8
COORDINATE
SYSTEM ROTATION
(G68, G69)

Format



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

292

(α, β)

X

Z

Center of
rotation

Angle of rotation R (incremental value)
Angle of rotation (absolute value)

Fig. 14.8 (b)  Coordinate system rotation

NOTE
When a decimal fraction is used to specify angular
displacement (R_), the 1’s digit corresponds to degree
units.

The G code for selecting a plane (G17,G18,or G19) can be specified
before the block containing the G code for coordinate system rotation
(G68).  G17, G18 or G19 must not be designated in the mode of coordinate
system rotation.

The center of rotation for an incremental command programmed after
G68 but before an absolute command is the tool position when G68 was
programmed (Fig. 14.8 (c)).

When α_β_ is not programmed, the tool position when G68 was
programmed is assumed as the center of rotation.

When R_ is not specified, the value specified in parameter 5410 is
assumed as the angular displacement.

The G code used to cancel coordinate system rotation (G69) may be
specified in a block in which another command is specified.

Cutter compensation, tool length compensation, tool offset, and other
compensation operations are executed after the coordinate system is
rotated.

Explanations

� G code for selecting a
plane: G17,G18 or G19

� Incremental command in
coordinate system
rotation mode

� Center of rotation

� Angular displacement

� Coordinate system
rotation cancel
command

� Tool compensation



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

293

In coordinate system rotation mode, G codes related to reference position
return (G27, G28, G29, G30, etc.) and  those for changing the coordinate
system (G52 to G59, G92, etc.) must not be specified.  If any of these G
codes is necessary, specify it only after canceling coordinate system
rotation mode.

The first move command after the coordinate system rotation cancel
command (G69) must be specified with absolute values.  If an incremental
move command is specified, correct movement will not be performed.

N1 G92 X�500.0 Y�500.0 G69 G17 ;
N2 G68 X700.0 Y300.0 R60.0 ;
N3 G90 G01 X0 Y0 F200 ;

(G91X500.0Y500.0)
N4 G91 X1000.0 ;
N5 G02 Y1000.0 R1000.0 ;
N6 G03 X�1000.0 I�500.0 J�500.0 ;
N7 G01 Y�1000.0 ;
N8 G69 G90 X�500.0 Y�500.0 M02 ;

Tool path when the incremental 
command is designated in the N3
block (in parenthesis)

Originally programmed tool path

Center of rotation
(700.0,300.0)

Tool path after rotation

6��

(–500.0,–500.0)

!�0�"

Fig. 14.8 (c)  Absolute/incremental command during 
coordinate system rotation

Limitations

� Commands related to
reference position return
and the coordinate
system

� Incremental command

Explanations

Absolute/Incremental
position commands



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

294

N1 G92 X0 Y0 G69 G01 ;
N2 G42 G90 X1000 Y1000 F1000 D01 ;
N3 G68 R�30000 ;
N4 G91 X2000 ;
N5 G03 Y1000 R1000 J500 ;
N6 G01 X�2000 ;
N7 Y�1000 ;
N8 G69 G40 G90 X0 Y0 M30 ;

It is possible to specify G68 and G69 in cutter compensation C mode.
The rotation plane must coincide with the plane of cutter compensa-
tion C.

Programmed shape before 
coordinate system  rotation

Programmed shape 
after coordinate 
system  rotation

Tool path

30°

(0, 0)

Fig. 14.8 (d)  Cutter compensation C and coordinate system rotation

If a coordinate system rotation command is executed in the scaling mode
(G51 mode), the coordinate value (α,β,) of the rotation center will also be
scaled,   but not the rotation angle (R).  When a move command is issued,
the scaling  is applied first and then the coordinates are rotated.
A coordinate system rotation command (G68) should not be issued in
cutter compensation C mode (G41, G42) on scaling mode (G51).  The
coordinate system rotation command should always be specified prior to
setting the cutter compensation C mode.

1. When the system is not in cutter compensation mode C, specify the
commands in the following order :

G51 ; scaling mode start
G68 ; coordinate system rotation mode start

G69 ; coordinate system rotation mode cancel
G50 ; scaling mode cancel

Examples

� Cutter compensation C
and coordinate system
rotation

� Scaling and coordinate 
system rotation



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

295

2. When the system is in cutter compensation model C, specify the
commands in the following order (Fig. 14.8 (e)) :
(cutter compensation C cancel)

G51 ; scaling mode start
G68 ; coordinate system rotation start

: 
G41 ;cutter compensation C mode start

:

When only coordinate 
system rotation is applied

When scaling and coordinate
system rotation are applied

When only scaling
is applied

Cutting program

0

100.0

200.0

200.0 400.0
X

Y

G92 X0 Y0 ;
G51 X300.0 Y150.0 P500 ;
G68 X200.0 Y100.0 R45.0 ;
G01 X400.0 Y100.0 ;
Y100.0 ;
X–200.0 ;
Y–100.0 ;
X200.0 ;

Fig. 14.8 (e)  Scaling and coordinate system rotation
in cutter compensation C mode



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

296

It is possible to store one program as a subprogram and recall subprogram
by changing the angle.

Programmed path

When offset is
applied(0, –10.0)

Subprogram

(0, 0)

Sample program for when the RIN bit (bit 0 of parameter 5400) is set
to 1.  
The specified angular displancement is treated as an absolute or
incremental value depending on the specified G code (G90 or G91).

G92 X0 Y0 G69 G17;
G01 F200 H01 ;
M98 P2100 ;
M98 P072200 ;
G00 G90 X0 Y0 M30 ;

O 2200 G68 X0 Y0 G91 R45.0 ;
G90 M98 P2100 ;
M99 ;

O 2100 G90 G01 G42 X0 Y–10.0 ;
X4.142 ;
X7.071 Y–7.071 ;
G40 ; 
M99 ;

Fig. 14.8 (f)  Coordinate system rotation command

� Repetitive commands for
coordinate system
rotation



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

297

When a tool with a rotation axis (C–axis) is moved in the XY plane during
cutting, the normal direction control function can control the tool so that
the C–axis is always perpendicular to the tool path (Fig. 14.9 (a)). 

Tool

Tool

Programmed tool pat)

Normal direction (in
which the tool moves)

C–axi�

C–axi�

Fig. 14.9 (a)  Sample Movement of the tool

G code Function Explanation

G41.1 or G151 Normal direction 
control left

If the workpiece is to the right of the
tool path looking toward the direc-
tion in which the tool advances,
the normal direction control left
(G41.1 or G151) function is speci-

G42.1 or G152 Normal direction 
control right

(G41.1 or G151) function is speci-
fied.  
After G41.1 (or G151) or G42.1 (or
G152) is specified, the normal
direction control function is en-
abled (normal direction control

G40.1 or G150 Normal direction 
control cancel

abled (normal direction control
mode).  
When G40.1 (or G150) is speci-
fied, the normal direction control
mode is canceled.

14.9
NORMAL DIRECTION
CONTROL
(G40.1, G41.1, G42.1
OR G150, G151,
G152)

���	
�



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

298

Center of the arc

Fig. 14.9 (c)  Normal direction control right (G42.1)

Programmed path

Cutter center path

Fig. 14.9 (b)  Normal direction control left (G41.1)

Cutter center path

Programmed path

  

When viewed from the center of rotation around the C–axis, the angular
displacement about the C–axis is determined as shown in Fig. 14.9 (d).
The positive side of the X–axis is assumed to be 0 , the positive side of
the Y–axis is 90°,  the negative side of the X–axis is 180°, and the negative
side of the Y–axis is 270°.

Center of rotation

+Y

180° +X

270°

0°

90°

Fig. 14.9 (d)  Angle of the C axis

When the cancel mode is switched to the normal direction control mode,
the C–axis becomes perpendicular to the tool path at the beginning of the
block containing G41.1 or G42.1.
In the interface between blocks in the normal direction control mode, a
command to move the tool is automatically inserted so that the C–axis
becomes perpendicular to the tool path at the beginning of each block.
The tool is first oriented so that the C–axis becomes perpendicular to the
tool path specified by the move command, then it is moved along the X–
and Y axes.
In the cutter compensation mode, the tool is oriented so that the C–axis
becomes perpendicular to the tool path created after compensation.
In single–block operation, the tool is not stopped between a command for
rotation of the tool and a command for movement along the X– and
Y–axes.  A single–block stop always occurs after the tool is moved along
the X– and Y–axes.

Explanations

� ��"�� �� ���  
���

� Normal direction control
of the C axis



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

299

S

N1

N2

S

N3

S

Programmed path

S : Single block stop point

Cutter center path

Fig. 14.9 (e)  Point at which a Single–Block Stop Occurs 
in the Normal Direction Control Mode

Before circular interpolation is started, the C–axis is rotated so that the
C–axis becomes normal to the arc at the start point.  During circular
interpolation, the tool is controlled so that the C–axis is always
perpendicular to the tool path determined by circular interpolation.

Center of the arc
Programmed path

Tool center path

The tool is controlled so that the C–
axis
is always normal to the tool path de-
termined by circular interpolation.

A rotation command is inserted
so that the C–axis becomes nor-
mal to the arc at the start point.

Fig. 14.9 (f)  Normal direction control of the circular interpolation

NOTE
During normal direction control, the C axis always rotates
through an angle less than 180 deg.  I.e., it rotates in
whichever direction provides the shorter route.



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

300

Movement of the tool inserted at the beginning of each block is executed
at the feedrate set in parameter 5481.  If dry run mode is on at that time,
the dry run feedrate is applied.  If the tool is to be moved along the X–and
Y–axes in rapid traverse (G00) mode, the rapid traverse feedrate is
applied.

The federate of the C axis during circular interpolation is defined by the
following formula.

Amount of movement of the C axis (deg)

Length of arc (mm or inch)
(deg/min)F×

F : Federate (mm/min or inch/min) specified by the corresponding
block of the arc

Amount of movement of the C axis : The difference in angles at the
beginning and the end of the
block.

NOTE
If the federate of the C axis exceeds the maximum cutting
speed of the C axis specified to parameter No. 1422, the
federate of each of the other axes is clamped to keep the
federate of the C axis below the maximum cutting speed of
the C axis.

A C–axis to which normal–direction control is applied can be assigned
to any axis with parameter No. 5480.

When the rotation angle to be inserted, calculated by normal–direction
control, is smaller than the value set with parameter No. 5482, the
corresponding rotation block is not inserted for the axis to which
normal–direction control is applied.  This ignored rotation angle is added
to the next rotation angle to be inserted, the total angle being subject to
the same check at the next block.
If an angle of 360 degrees or more is specified, the corresponding rotation
block is not inserted.
If an angle of 180 degrees or more is specified in a block other than that
for circular interpolation with a C–axis rotation angle of 180 degrees or
more, the corresponding rotation block is not inserted.

� C axis feedrate

� Normal direction control
axis

� Angle for which figure
insertion is ignored



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

301

Specify the maximum distance for which machining is performed with
the same normal direction as that of the preceding block.

� Linear movement
When distance N2, shown below, is smaller than the set value,
machining for block N2 is performed using the same direction as that
for block N1.

N1

N2

N3

Tool–center path

Distance

Programmed path

� Circular movement
When the diameter of block N2, shown below, is smaller than the set
value, machining for block N2 is performed using the same normal
direction as that for block N1.  The orientation of the axis to which
normal–direction control is applied, relative to the normal direction of
block N2, does not change as machining proceeds along the arc.

N1

N2

N3

Tool–center path

Programmed path

Diameter

NOTE
1 Do not specify any command to the C axis during normal

direction control.  Any command specified at this time is
ignored.

2 Before processing starts, it is necessary to correlate the
workpiece coordinate of the C axis with the actual position
of the C axis on the machine using the coordinate system
setting (G92) or the like.

3 The helical cutting option is required to use this function.
Helical cutting cannot be specified in the normal direction
control mode.

4 Normal direction control cannot be performed by the G53
move command.

5 The C–axis must be a rotation axis.

� Movement for which arc
insertion is ignored



PROGRAMMING14. COMPENSATION FUNCTION B–64124EN/01

302

A mirror image of a programmed command can be produced with respect
to a programmed axis of symmetry (Fig. 14.10).

Y

10060

50

5� X

60

100
(1)(2)

(3) (4)

(1) Original image of a programmed command

Axis of symmetry (X=50)

Axis of symmetry
(Y=50)

(2) Image symmetrical about a line parallel to the Y–axis and crossing
 the X–axis at 50

(3) Image symmetrical about point (50, 50)

(4) Image symmetrical about a line parallel to the X–axis and crossing
the Y–axis at 50

40

0

400

Fig. 14.10  Programmable Mirror image

G51.1 _ ;   Setting a programmable image
A mirror image of a command specified in these
blocks is produced with respect to the axis of 
symmetry specified by G51.1    _;.

G50.1 _ ;  Canceling a programmable mirror image

_ : Point (position) and axis of symmetry for producing
a mirror image when specified with G51.1.
Axis of symmetry for producing a mirror image when
specified with G50.1. Point of symmetry is not speci–
fied.

IP

IP

IP

IP

14.10
PROGRAMMABLE
MIRROR IMAGE
(G50.1, G51.1)

Format



PROGRAMMINGB–64124EN/01 14. COMPENSATION FUNCTION

303

If the programmable mirror image function is specified when the
command for producing a mirror image is also selected by a CNC external
switch or CNC setting (see III–4.8), the programmable mirror image
function is executed first.

Applying a mirror image to one of the axes on a specified plane changes
the following commands as follows :

Command Explanation

Circular command G02 and G03 are interchanged.

Cutter compensation G41 and G42 are interchanged.

Coordinate rotation CW and CCW (directions of rotation) are interchanged.

Processing proceeds from program mirror image to scaling and
coordinate rotation in the stated order. The commands should be specified
in this order, and, for cancellation, in the reverse order. Do not specify
G50.1 or G51.1 during scaling or coordinate rotation mode.

In programmable mirror image mode, G codes related to reference
position return (G27, G28, G29, G30, etc.) and those for changing the
coordinate system (G52 to G59, G92, etc.) must not be specified.  If any
of these G codes is necessary, specify it only after canceling the
programmable mirror image mode.

Explanations

� Mirror image by setting

� Mirror image on a single
axis in a specified plane

Limitations

� Scaling/coordinate
system rotation

� Commands related to
reference position return
and coordinate system



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

304

15 CUSTOM MACRO
Although subprograms are useful for repeating the same operation, the
custom macro function also allows use of variables, arithmetic and logic
operations, and conditional branches for easy development of general
programs such as pocketing and user–defined canned cycles.A machining
program can call a custom macro with a simple command, just like a
subprogram.

O0001 ;
    :
    :
    :
G65 P9010 R50.0 L2 ;
    :
    :
M30 ;

Machining program Custom macro

O9010 ;
#1=#18/2 ;
G01 G42 X#1 Y#1 F300 ;
G02 X#1 Y–#1 R#1 ;
    :
    :
    :
M99 ;



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

305

An ordinary machining program specifies a G code and the travel distance
directly with a numeric value; examples are G00 and X100.0.
With a custom macro, numeric values can be specified directly or using
a variable number.  When a variable number is used, the variable value
can be changed by a program or using operations on the MDI panel.

#1=#2+100 ;

G01 X#1 F300 ;

When specifying a variable, specify a number sign (#) followed by a
variable number.  General–purpose programming languages allow a name
to be assigned to a variable, but this capability is not available for custom
macros.

Example:  #1

An expression can be used to specify a variable number.  In such a case,
the expression must be enclosed in brackets.

Example:  #[#1+#2–12]

Variables are classified into four types by variable number.

Table 15.1  Types of variables

Variable
number

Type of
variable

Function

#0 Always
null

This variable is always null.  No value can
be assigned to this variable.

#1 – #33 Local
variables

Local variables can only be used within a
macro to hold data such as the results of
operations.  When the power is turned off,
local variables are initialized to null.  When
a macro is called, arguments are assigned
to local variables.

#100 – #199
#500 – #999

Common
variables

Common variables can be shared among
different macro programs.  When the pow-
er is turned off, variables #100 to #199 are
initialized to null.  Variables #500 to #999
hold data even when the power is turned
off.

#1000 – System
variables

System variables are used to read and
write a variety of NC data items such as
the current position and tool compensation
values.

Local and common variables can have value 0 or a value in the following
ranges :
–1047 to –10–29

10–29 to 1047

If the result of calculation turns out to be invalid, an P/S alarm No. 111
is issued.

15.1
VARIABLES

���
�
����

� Variable representation

� Types of variables

� Range of variable values



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

306

When a variable value is defined in a program, the decimal point can be
omitted.

Example:
When #1=123; is defined, the actual value of  variable #1 is 123.000.

To reference the value of a variable in a program, specify a word address
followed by the variable number.  When an expression is used to specify
a variable, enclose the expression in brackets.

Example:  G01X[#1+#2]F#3;

A referenced variable value is automatically rounded according to the
least input increment of the address.

Example:  
When G00X#1; is executed on a 1/1000–mm CNC with 12.3456
assigned to variable #1, the actual command is interpreted as
G00X12.346;.

To reverse the sign of a referenced variable value, prefix a minus sign (–)
to #.

Example:  G00X–#1;

When an undefined variable is referenced, the variable is ignored up to an
address word.

Example:
When the value of variable #1 is 0, and the value of variable #2 is null,
execution of G00X#1Y#2; results in G00X0;.

When the value of a variable is not defined, such a variable is referred to
as a “null” variable.  Variable #0 is always a null variable.  It cannot be
written to, but it can be read.

(a) Quotation
When an undefined variable is quotated, the address itself is also
ignored.

[Example] When #1 is 0 and #2 is null, the result of executing G00
X#1 Y#2; will be the same as when G00 X0; is executed.

(b)Operation
< vacant > is the same as 0 except when replaced by < vacant>

When #1 = < vacant > When #1 = 0

#2 = #1
�

#2 = < vacant >

#2 = #1
�

#2 = 0

#2 = #1*5
�

#2 = 0

#2 = #1*5
�

#2 = 0

#2 =  #1+#1
�

#2 = 0

#2 = #1 + #1
�

#2 = 0

� Omission of the decimal
point

� Referencing variables

� Undefined variable



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

307

(c) Conditional expressions
< vacant > differs from 0 only for EQ and NE.

When #1 = < vacant > When #1 = 0

#1 EQ #0
�

Established

#1 EQ #0
�

Not established

#1 NE 0
�

Established

#1 NE 0
�

Not established

#1 GE #0
�

Established

#1 GE #0
�

Established

#1 GT 0
�

Not established

#1 GT 0
�

Not established

 VARIABLE                            O1234 N12345

   NO.        DATA         NO.        DATA

   100        123.456      108

   101          0.000      109

   102                     110

   103                     111

   104                     112

   105                     113

   106                     114

   107                     115

 ACTUAL POSITION (RELATIVE)

    X        0.000           Y       0.000

    Z        0.000           B       0.000

 MEM **** *** ***         18:42:15

[ MACRO ] [ MENU ] [  OPR  ] [     ] [ (OPRT) ]

� When the value of a variable is blank, the variable is null.

� The mark ******** indicates an overflow (when the absolute
value of a variable is greater than 99999999) or an underflow (when
the absolute value of a variable is less than 0.0000001).

Program numbers, sequence numbers, and optional block skip numbers
cannot be referenced using variables.

Example:
Variables cannot be used in the following ways:
O#1;
/#2G00X100.0;
N#3Y200.0;

;�	��
�����



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

308

System variables can be used to read and write internal NC data such as
tool compensation values and current position data.  Note, however, that
some system variables can only be read.  System variables are essential
for automation and general–purpose program development.

Signals can be exchanged between the programmable machine controller
(PMC) and custom macros.

Table 15.2 (a)  System variables for interface signals

(When the parameter MIF (bit 0 of No. 6001) is set to 0.)

Variable
number

Function

#1000 to #1015
#1032

A 16–bit signal can be sent from the PMC to a custom macro.
Variables #1000 to #1015 are used to read a signal bit by bit.
Variable #1032 is used to read all 16 bits of a signal at one
time.

#1100 to #1115
#1132

A 16–bit signal can be sent from a custom macro to the PMC.
Variables #1100 to #1115 are used to write a signal bit by bit.
Variable #1132 is used to write all 16 bits of a signal at one
time.

#1133 Variable #1133 is used to write all 32 bits of a signal at one
time from a custom macro to the PMC. Note, that values from
–99999999 to +99999999 can be used for #1133.

(When the parameter MIF (bit 0 of No. 6001) is set to 1.)

Variable
number

Function

#1000 to #1031 A 32–bit signal can be sent from the PMC to a custom macro.
Variables #1000 to #1031 are used to read a signal bit by bit.

#1100 to #1131 A 32–bit signal can be sent from a custom macro to the PMC.
Variables #1100 to #1131 are used to write a signal bit by bit.

#1032 to #1035 Variables #1032 to #1035 are used to output all 32 bits of a
signal at one time from the PMC to a custom macro. Note,
that values from –99999999 to +99999999 can be used for
#1032 to #1035.

#1132 to #1135 Variables #1132 to #1135 are used to write all 32 bits of a sig-
nal at one time from a custom macro to the PMC. Note, that
values from –99999999 to +99999999 can be used for
#1132 to #1135.

For detailed information, refer to the connection manual (B–64113EN–1).

15.2
SYSTEM VARIABLES

Explanations

� Interface signals



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

309

Tool compensation values can be read and written using system variables.
Usable variable numbers depend on the number of compensation pairs,
whether a distinction is made between geometric compensation and wear
compensation, and whether a distinction is made between tool length
compensation and cutter compensation.  When the number of
compensation is not greater than 200, variables #2001 to #2400 can also
be used.

Table 15.2 (b)  System variables for tool compensation memory C

Compensation

Tool length compensation (H) Cutter compensation
(D)

Compensation
number Geometric

compensation
Wear 

compensation
Geomet-
ric com-

pensation

Wear
com-

pensation

1
:

200
:

400

#11001(#2201)
:

#11201(#2400)
:

#11400

#10001(#2001)
:

#10201(#2200)
:

#10400

#13001
:

:
#13400

#12001
:

:
#12400

Table 15.2 (c)  System variable for macro alarms

Variable
number

Function

#3000 When a value from 0 to 200 is assigned to variable #3000,
the CNC stops with an alarm.  After an expression, an alarm
message not longer than 26 characters can be described.
The CRT screen displays alarm numbers by adding 3000 to
the value in variable #3000 along with an alarm message.

Example:
#3000=1(TOOL NOT FOUND);
→ The alarm screen displays “3001 TOOL NOT FOUND.”

Execution of the program can be stopped, and then a message can be
displayed.

Variable
number

Function

#3006 When “#3006=1 (MESSAGE);” is commanded in the macro,
the program executes blocks up to the immediately previous
one and then stops.

When a message of up to 26 characters, which is enclosed
by a control–in character (“(”) and control–out character (“)”),
is programmed in the same block, the message is displayed
on the external operator message screen.

� Tool compensation
values

� Macro alarms

� Stop with a message



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

310

Time information can be read and written.

Table 15.2 (d)  System variables for time information

Variable
number

Function

#3001 This variable functions as a timer that counts in 1–millisecond in-
crements at all times.  When the power is turned on, the value of
this variable is reset to 0.  When 2147483648 milliseconds is
reached, the value of this timer returns to 0.

#3002 This variable functions as a timer that counts in 1–hour incre-
ments when the cycle start lamp is on.  This timer preserves its
value even when the power is turned off.  When 9544.371767
hours is reached, the value of this timer returns to 0.

#3011 This variable can be used to read the current date (year/month/
day).  Year/month/day information is converted to an apparent
decimal number.  For example, September 28, 2001 is repre-
sented as 20010928.

#3012 This variable can be used to read the current time (hours/minutes/
seconds).  Hours/minutes/seconds information is converted to an
apparent decimal number.  For example, 34 minutes and 56 se-
conds after 3 p.m. is represented as 153456.

The control state of automatic operation can be changed.

Table 15.2 (e)  System variable (#3003) for automatic operation control

#3003 Single block Completion of an auxiliary
function

0 Enabled To be awaited

1 Disabled To be awaited

2 Enabled Not to be awaited

3 Disabled Not to be awaited

 When the power is turned on, the value of this variable is 0.

 When single block stop is disabled, single block stop operation is not
performed even if the single block switch is set to ON.

 When a wait for the completion of auxiliary functions (M, S, and T
functions) is not specified, program execution proceeds to the next
block before completion of auxiliary functions.  Also, distribution
completion signal DEN is not output.

� Time information

� Automatic operation
control



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

311

Table 15.2 (f)  System variable (#3004) for automatic operation control

#3004 Feed hold Feedrate Override Exact stop

0 Enabled Enabled Enabled

1 Disabled Enabled Enabled

2 Enabled Disabled Enabled

3 Disabled Disabled Enabled

4 Enabled Enabled Disabled

5 Disabled Enabled Disabled

6 Enabled Disabled Disabled

7 Disabled Disabled Disabled

 When the power is turned on, the value of this variable is 0.

 When feed hold is disabled:

(1) When the feed hold button is held down, the machine stops in the
single block stop mode.  However, single block stop operation is not
performed when the single block mode is disabled with variable
#3003.

(2) When the feed hold button is pressed then released, the feed hold lamp
comes on, but the machine does not stop; program execution continues
and the machine stops at the first block where feed hold is enabled.

 When feedrate override is disabled, an override of 100% is always
applied regardless of the setting of the feedrate override switch on the
machine operator’s panel.

 When exact stop check is disabled, no exact stop check (position
check) is made even in blocks including those which do not perform
cutting.

O0001 ;
N1 G00 G91 X#24 Y#25 ;
N2 Z#18 ;

G04 ;
N3 #3003=3 ;
N4 #3004=7 ;
N5 G01 Z#26 F#9 ;
N6 M04 ;
N7 G01
Z–[ROUND[#18]+ROUND[#26]] ;

G04 ;
N8 #3004=0 ;
N9 #3003=0 ;
N10M03 ;

M99 ;

Fig. 15.2  Example of using variable #3004 in a tapping cycle

N1

N2

N3, N4

N6

N7

N8, N9,
N10

N5



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

312

Settings can be read and written.  Binary values are converted to
decimals.

#9 (FCV) : Whether to use the FS15 tape format conversion capability
#5 (SEQ) : Whether to automatically insert sequence numbers
#2 (INI) : Millimeter input or inch input
#1 (ISO) : Whether to use EIA or ISO as the output code
#0 (TVC) : Whether to make a TV check

#15 #14 #13 #12 #11 #10 #9 #8

FCVSetting

#7 #6 #5 #4 #3 #2 #1 #0

SEQ INI ISO TVCSetting

#3005

The mirror–image status for each axis set using an external switch or
setting operation can be read through the output signal (mirror–image
check signal).  The mirror–image status present at that time can be
checked.  (See III–4.6)
The value obtained in binary is converted into decimal notation.

#7 #6 #5 #4 #3 #2 #1 #0

Setting

#3007

4th  axis 3th  axis 2th  axis 1th  axis

For each bit,
0 (mirror–image function is disabled)

or
1 (mirror–image function is enabled)

is indicated.

Example : If #3007 is 3, the mirror–image function is enabled for the first and second axes.

 When the mirror–image function is set for a certain axis by both the
mirror–image signal and setting, the signal value and setting value are
ORed and then output.

 When mirror–image signals for axes other than the controlled axes are
turned on, they are still read into system variable #3007.

 System variable #3007 is a write–protected system variable.  If an
attempt is made to write data in the variable, P/S 116 alarm “WRITE
PROTECTED VARIABLE” is issued.

The number (target number) of parts required and the number (completion
number) of machined parts can be read and written.

Table 15.2 (g)  System variables for the number of parts required and the
number of machined parts

Variable number Function

#3901 Number of machined parts (completion number)

#3902 Number of required parts (target number)

� -�����"�

� Mirror image

� Number of machined
parts



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

313

NOTE
Do not substitute a negative value.

Modal information specified in blocks up to the immediately preceding
block can be read.

Table 15.2 (h)  System variables for modal information

Variable number Function

#4001

#4002
#4003
#4004
#4005
#4006
#4007
#4008
#4009
#4010
#4011
#4012
#4013
#4014
#4015
#4016
:
#4022
#4102
#4107
#4109
#4111
#4113
#4114
#4115
#4119
#4120
#4130

G00, G01, G02, G03, G33, G75, G77, 
G78, G79 (Group 01)
G17, G18, G19 (Group 02)
G90, G91 (Group 03)
G22, G23 (Group 04)
G94, G95 (Group 05)
G20, G21 (Group 06)
G40, G41, G42 (Group 07)
G43, G44, G49 (Group 08)
G73, G74, G76, G80–G89 (Group 09)
G98, G99 (Group 10)
G50, G51 (Group 11)
G66, G67 (Group 12)
G96,G97 (Group 13)
G54–G59 (Group 14)
G61–G64 (Group 15)
G68, G69 (Group 16)
 : :        
G50.1, G51.1 (Group 22)
B code
D code
F code
H code
M code
Sequence number
Program number
S code
T code
P code (number of the currently selected addition-
al workpiece coordinate system)

Example:
When #1=#4002; is executed, the resulting value in #1 is 17, 18, or 19.
If the specified system variable for reading modal information
corresponds to a G code group which cannot be used, a P/S alarm is
issued.

� Modal  information



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

314

Position information cannot be written but can be read.

Table 15.2 (i)  System variables for position information

Variable
number

Position
information

Coordinate
system

Tool com-
pensation

value

Read
operation

during
movement

#5001–#5004 Block end point Workpiece
coordinate
system

Not 
included

Enabled

#5021–#5024 Current position Machine
coordinate
system

Included Disabled

#5041–#5044 Current position Workpiece
coordinate

#5061–#5064 Skip signal position
coordinate
system Enabled

#5081–#5084 Tool length offset
value

Disabled

#5101–#5104 Deviated servo
position

 The first digit (from 1 to 4) represents an axis number.

 The tool length offset value currently used for execution rather than the
immediately preceding tool offset value is held in variables #5081 to
5088.

 The tool position where the skip signal is turned on in a G31 (skip
function) block is held in variables #5061 to #5068.  When the skip
signal is not turned on in a G31 block, the end point of the specified
block is held in these variables.

 When read during movement is “disabled,” this means that expected
values cannot be read due to the buffering (preread) function.

� Current position



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

315

Workpiece zero point offset values can be read and written.

Table 15.2 (j)  System variables for workpiece zero point offset values

Variable
number Function

#5201
:
#5204

First–axis external workpiece zero point offset value
                  :
Fourth–axis external workpiece zero point offset value

#5221
:
#5224

First–axis G54 workpiece zero point offset value
                  :
Fourth–axis G54 workpiece zero point offset value

#5241
:
#5244

First–axis G55 workpiece zero point offset value
                  :
Fourth–axis G55 workpiece zero point offset value

#5261
:
#5264

First–axis G56 workpiece zero point offset value
                  :
Fourth–axis G56 workpiece zero point offset value

#5281
:
#5284

First–axis G57 workpiece zero point offset value
                  :
Fourth–axis G57 workpiece zero point offset value

#5301
:
#5304

First–axis G58 workpiece zero point offset value
                  :
Fourth–axis G58 workpiece zero point offset value

#5321
:
#5324

First–axis G59 workpiece zero point offset value
                  :
Fourth–axis G59 workpiece zero point offset value

#7001
:
#7004

First–axis workpiece zero point offset value (G54.1 P1)
                  :
Fourth–axis workpiece zero point offset value

#7021
:
#7024

First–axis workpiece zero point offset value (G54.1 P2)
                  :
Fourth–axis workpiece zero point offset value

:   :

#7941
:
#7944

First–axis workpiece zero point offset value (G54.1 P48)
                  :
Fourth–axis workpiece zero point offset value

� Workpiece coordinate
system compensation
values (workpiece zero
point offset values)



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

316

The following variables can also be used:

Axis Function Variable number

First axis External workpiece zero point offset

G54 workpiece zero point offset

G55 workpiece zero point offset

G56 workpiece zero point offset

G57 workpiece zero point offset

G58 workpiece zero point offset

G59 workpiece zero point offset

#2500

#2501

#2502

#2503

#2504

#2505

#2506

#5201

#5221

#5241

#5261

#5281

#5301

#5321

Second
axis

External workpiece zero point offset

G54 workpiece zero point offset

G55 workpiece zero point offset

G56 workpiece zero point offset

G57 workpiece zero point offset

G58 workpiece zero point offset

G59 workpiece zero point offset

#2600

#2601

#2602

#2603

#2604

#2605

#2606

#5202

#5222

#5242

#5262

#5282

#5302

#5322

Third axis External workpiece zero point offset

G54 workpiece zero point offset

G55 workpiece zero point offset

G56 workpiece zero point offset

G57 workpiece zero point offset

G58 workpiece zero point offset

G59 workpiece zero point offset

#2700

#2701

#2702

#2703

#2704

#2705

#2706

#5203

#5223

#5243

#5263

#5283

#5303

#5323

Fourth axis External workpiece zero point offset

G54 workpiece zero point offset

G55 workpiece zero point offset

G56 workpiece zero point offset

G57 workpiece zero point offset

G58 workpiece zero point offset

G59 workpiece zero point offset

#2800

#2801

#2802

#2803

#2804

#2805

#2806

#5204

#5224

#5244

#5264

#5284

#5304

#5324



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

317

The operations listed in Table 15.3 (a) can be performed on variables.  The
expression to the right of the operator can contain constants and/or
variables combined by a function or operator.  Variables #j and #K in an
expression can be replaced with a constant.  Variables on the left can also
be replaced with an expression.

Table 15.3 (a)  Arithmetic and logic operation

Function Format Remarks

Definition #i=#j

Sum
Difference
Product
Quotient

#i=#j+#k;
#i=#j–#k;
#i=#j*#k;
#i=#j/#k;

Sine
Arcsine
Cosine
Arccosine
Tangent
Arctangent

#i=SIN[#j];
#i=ASIN[#j];
#i=COS[#j];
#i=ACOS[#j];
#i=TAN[#j];
#i=ATAN[#j]/[#k];

An angle is specified in de-
grees.  90 degrees and 30
minutes is represented as
90.5 degrees.

Square root
Absolute value
Rounding off
Rounding down
Rounding up
Natural logarithm
Exponential function

#i=SQRT[#j];
#i=ABS[#j];
#i=ROUND[#j];
#i=FIX[#j];
#i=FUP[#j];
#i=LN[#j];
#i=EXP[#j];

OR
XOR
AND

#i=#j OR #k;
#i=#j XOR #k;
#i=#j AND #k;

A logical operation is per-
formed on binary numbers
bit by bit.

Conversion from BCD to BIN
Conversion from BIN to BCD

#i=BIN[#j];
#i=BCD[#j];

Used for signal exchange
to and from the PMC

The units of angles used with the SIN, COS, ASIN, ACOS, TAN, and
ATAN functions are degrees.  For example, 90 degrees and 30 minutes is
represented as 90.5 degrees.

 The solution ranges are as indicated below:
When the NAT bit (bit 0 of parameter 6004) is set to 0:  270� to 90�
When the NAT bit (bit 0 of parameter 6004) is set to 1:  –90� to 90�

 When #j is beyond the range of –1 to 1, P/S alarm No. 111 is issued.

 A constant can be used instead of the #j variable.

 The solution ranges from 180° to 0°.

 When #j is beyond the range of –1 to 1, P/S alarm No. 111 is issued.

 A constant can be used instead of the #j variable.

15.3
ARITHMETIC AND
LOGIC OPERATION

Explanations

� Angle units

� ARCSIN #i = ASIN[#j];

� ARCCOS #i = ACOS[#j];



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

318

 Specify the lengths of two sides, separated by a slash (/).

 The solution ranges are as follows:

When the NAT bit (bit 0 of parameter 6004) is set to 0:  0o to 360�

[Example]  When #1 = ATAN[–1]/[–1]; is specified, #1 is 225.0.

When the NAT bit (bit 0 of parameter 6004) is set to 1:  –180� to 180�

[Example]  When #1 = ATAN[–1]/[–1]; is specified, #1 is –135.0.0.

 A constant can be used instead of the #j variable.

 Note that the relative error may become 10–8 or greater.

 When the antilogarithm (#j) is zero or smaller, P/S alarm No. 111 is
issued.

 A constant can be used instead of the #j variable.

 Note that the relative error may become 10–8 or greater.

 When the result of the operation exceeds 3.65 � 1047 (j is about 110),
an overflow occurs and P/S alarm No. 111 is issued.

 A constant can be used instead of the #j variable.

 When the ROUND function is included in an arithmetic or logic
operation command, IF statement, or WHILE statement, the ROUND
function rounds off at the first decimal place.

Example:
When #1=ROUND[#2]; is executed where #2 holds 1.2345, the value
of variable #1 is 1.0.

 When the ROUND function is used in NC statement addresses, the
ROUND function rounds off the specified value according to the least
input increment of the address.

Example:
Creation of a drilling program that cuts according to the values of
variables #1 and #2, then returns to the original position 
Suppose that the increment system is 1/1000 mm, variable #1 holds
1.2345, and variable #2 holds 2.3456.  Then, 
G00 G91 X–#1; Moves 1.235 mm.
G01 X–#2 F300; Moves 2.346 mm.
G00 X[#1+#2]; Since 1.2345 + 2.3456 = 3.5801, the travel distance

is 3.580, which does not return the tool to the
original position. 

This difference comes from whether addition is performed before or
after rounding off.  G00X–[ROUND[#1]+ROUND[#2]] must be
specified to return the tool to the original position.

� ARCTAN #i =
ATAN[#j]/[#k];

� Natural logarithm #i =
LN[#j];

� Exponential function #i =
EXP[#j];

� ROUND  function



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

319

With CNC, when the absolute value of the integer produced by an
operation on a number is greater than the absolute value of the original
number, such an operation is referred to as rounding up to an integer.
Conversely, when the absolute value of the integer produced by an
operation on a number is less than the absolute value of the original
number, such an operation is referred to as rounding down to an integer.
Be particularly careful when handling negative numbers.

Example:
Suppose that #1=1.2 and #2=–1.2.
When #3=FUP[#1] is executed, 2.0 is assigned to #3.
When #3=FIX[#1] is executed, 1.0 is assigned to #3.
When #3=FUP[#2] is executed, –2.0 is assigned to #3.
When #3=FIX[#2] is executed, –1.0 is assigned to #3.

When a function is specified in a program, the first two characters of the
function name can be used to specify the function (See III–9.7).

Example:
ROUND → RO
FIX → FI

� Functions
	 Operations such as multiplication and division (*, /, AND)

 Operations such as addition and subtraction (+, –, OR, XOR)

Example) #1=#2+#3*SIN[#4];

and 
 indicate the order of operations.




	

 �

� 	,

Brackets are used to change the order of operations.  Brackets can be used
to a depth of five levels including the brackets used to enclose a function.
When a depth of five levels is exceeded, P/S alarm No. 118 occurs.

Example) #1=SIN [ [ [#2+#3] *#4 +#5] *#6] ;

� to � indicate the order of operations.
�

�

	




�

� Rounding up and down
to an integer

� Abbreviations of
arithmetic and logic
operation commands

� Priority of operations

� Bracket nesting



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

320

Brackets ([, ]) are used to enclose an expression.  Note that parentheses
are used for comments.

Errors may occur when operations are performed.

Table 15.3 (b)  Errors involved in operations

Operation Average
error

Maximum
error

Type of error

a = b*c 1.55×10–10 4.66×10–10

a  = b / c 4.66×10–10 1.88×10–9

1.24×10–9 3.73×10–9

a = b + c
a = b – c

2.33×10–10 5.32×10–10

a = SIN [ b ]
a = COS [ b ]

5.0×10–9 1.0×10–8

a = ATAN [ b ] / [ c ]
(*4)

1.8×10–6 3.6×10–6

NOTE
1 The relative error depends on the result of the operation.
2 Smaller of the two types of errors is used.
3 The absolute error is constant, regardless of the result of the

operation.
4 Function TAN performs SIN/COS.
5 When parameter No.6004#1 is set to 1, if the operation

result of an SIN, COS, or TAN function is less than 1.0 �
10–8 or does not fall to 0 due to the restraints of operation
precision, the operation result can be normalized to 0.

 The precision of variable values is about 8 decimal digits.  When very
large numbers are handled in an addition or subtraction, the expected
results may not be obtained.

Example:
When an attempt is made to assign the following values to variables
#1 and #2:  
   #1=9876543210123.456
   #2=9876543277777.777
the values of the variables become:
   #1=9876543200000.000
   #2=9876543300000.000
In this case, when #3=#2–#1; is calculated, #3=100000.000 results.
(The actual result of this calculation is slightly different because it is
performed in binary.)

;�	��
�����

� Brackets

� Operation error

�
a

a � b�

Relative error(*1)

�

b
Min

�
c”

 (*2)

ε

 Absolute error(*3)

degrees



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

321

 Also be aware of errors that can result from conditional expressions
using EQ, NE, GE, GT, LE, and LT.

Example:
IF[#1 EQ #2] is effected by errors in both #1 and #2, possibly resulting
in an incorrect decision.
Therefore, instead find the difference between the two variables with
IF[ABS[#1–#2]LT0.001].
Then, assume that the values of the two variables are equal when the
difference does not exceed an allowable limit (0.001 in this case).

 Also, be careful when rounding down a value.

Example:
When #2=#1*1000; is calculated where #1=0.002;, the resulting value
of variable #2 is not exactly 2 but 1.99999997.  
Here, when #3=FIX[#2]; is specified, the resulting value of variable
#1 is not 2.0 but 1.0.  In this case, round down the value after correcting
the error so that the result is greater than the expected number, or round
it off as follows:
#3=FIX[#2+0.001]
#3=ROUND[#2]

When a divisor of zero is specified in a division or TAN[90], P/S alarm
No. 112 occurs.

� Divisor



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

322

The following blocks are referred to as macro statements:
 Blocks containing an arithmetic or logic operation (=) 
 Blocks containing a control statement (such as GOTO, DO, END)
 Blocks containing a macro call command (such as macro calls by

G65, G66, G67, or other G codes, or by M codes)
Any block other than a macro statement is referred to as an NC statement.

 Even when single block mode is on, the machine does not stop.  Note,
however, that the machine stops in the single block mode when bit 5
of parameter SBM No. 6000 is 1.

 Macro blocks are not regarded as blocks that involve no movement in
the cutter compensation mode  (see II–15.7).

 NC statements that include a subprogram call command (such as
subprogram calls by M98 or other M codes, or by T codes) and not
include other command addresses except an O,N or L address have the
same property as macro statements.

 The blocks not include other command addresses except an O,N,P or
L address have the same property as macro statements.

15.4
MACRO
STATEMENTS AND
NC STATEMENTS

���
�
�����

� Differences from NC
statements

� NC statements that have
the same property as
macro statements



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

323

In a program, the flow of control can be changed using the GOTO
statement and IF statement.  Three types of branch and repetition
operations are used:

Branch and repetition GOTO statement (unconditional branch)

IF statement (conditional branch: if ..., then...)

WHILE statement (repetition while ...)

A branch to sequence number n occurs.  When a sequence number outside
of the range 1 to 99999 is specified, P/S alarm No. 128 occurs.  A sequence
number can also be specified using an expression.

GOTO n ;  n:  Sequence number (1 to 99999)

Example:  
GOTO1;
GOTO#10;

15.5
BRANCH AND
REPETITION

15.5.1
Unconditional Branch
(GOTO Statement)



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

324

Specify a conditional expression after IF.

If the specified conditional expression is satisfied, a branch to sequence
number n occurs.  If the specified condition is not satisfied, the next block
is executed.

IF [#1 GT 10] GOTO 2 ;

N2 G00 G91 X10.0  ;
               :

If the value of variable #1 is greater than 10, a branch to sequence number
N2 occurs.

If the condi-
tion is not sa-
tisfied Processing If the condition is satisfied

If the specified conditional expression is satisfied, a predetermined macro
statement is executed.  Only a single macro statement is executed.

IF [#1 EQ #2] THEN#3=0 ;

If the values of #1 and #2 are the same, 0 is assigned to #3.

A conditional expression must include an operator inserted between two
variables or between a variable and constant, and must be enclosed in
brackets ([, ]).  An expression can be used instead of a variable.

Operators each consist of two letters and are used to compare two values
to determine whether they are equal or one value is smaller or greater than
the other value.  Note that the inequality sign cannot be used.

Table 15.5.2  Operators

Operator Meaning

EQ Equal to(=)

NE Not equal to()

GT Greater than(>)

GE Greater than or equal to(�)

LT Less than(<)

LE Less than or equal to(�)

15.5.2
Conditional Branch
(IF Statement)

IF[<conditional
expression>]GOTOn

IF[<conditional
expression>]THEN

���
�
�����

� Conditional expression

� Operators



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

325

The sample program below finds the total of numbers 1 to 10.

O9500;
#1=0; Initial value of the variable to hold the sum. . . . . . . . . . . . . . . . . . . 
#2=1; Initial value of the variable as an addend. . . . . . . . . . . . . . . . . . . 
N1 IF[#2 GT 10] GOTO 2; Branch to N2 when the addend is greater . . 

than 10
#1=#1+#2; Calculation to find the sum. . . . . . . . . . . . . . . 
#2=#2+1; Next addend. . . . . . . . . . . . . . . . 
GOTO 1; Branch to N1. . . . . . . . . . . . . . . . 

N2 M30; End of program. . . . . . . . . . . . . . . . . . . 

Specify a conditional expression after WHILE.  While the specified
condition is satisfied, the program from DO to END is executed.  If the
specified condition is not satisfied, program execution proceeds to the
block after END.

WHILE [conditional expression] DO m ; (m=1,2,3)

END m  ;
     :

ProcessingIf the condi-
tion is not sa-
tisfied

If the condi-
tion is satis-
fied

While the specified condition is satisfied, the program from DO to END
after WHILE is executed.  If the specified condition is not satisfied,
program execution proceeds to the block after END.  The same format as
for the IF statement applies.  A number after DO and a number after END
are identification numbers for specifying the range of execution.  The
numbers 1, 2, and 3 can be used.  When a number other than 1, 2, and 3
is used, P/S alarm No. 126 occurs.

Sample program

15.5.3
Repetition
(While Statement)

���
�
�����



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

326

The identification numbers (1 to 3) in a DO–END loop can be used as
many times as desired.  Note, however, when a program includes crossing
repetition loops (overlapped DO ranges), P/S alarm No. 124 occurs.

1. The identification numbers
(1 to 3) can be used as many
times as required.

WHILE [ … ] DO 1 ;

END 1 ;
:

WHILE [ … ] DO 1 ;

END 1 ;

WHILE [ … ] DO 1 ;

END 1 ;
:

WHILE [ … ] DO 2 ;

END 2 ;

WHILE [ … ] DO 1 ;

WHILE [ … ] DO 2 ;
:

WHILE [ … ] DO 3 ;
:

END 3 ;
:

END 2 ;
:

END 1 ;

WHILE [ … ] DO 1 ;

END 1 ;

IF [ … ] GOTO n ;

Nn

WHILE [ … ] DO 1 ;

END 1 ;

IF [ … ] GOTO n ;

Nn … ;

:

2. DO ranges cannot overlap.

Processing

Processing

Processing

Processing

Processing

3. DO loops can be nested to
a maximum depth of three lev-
els.

4. Control can be transferred to
the outside of a loop.

5. Branches cannot be made to
a location within a loop.

When DO m is specified without specifying the WHILE statement, an
infinite loop ranging from DO to END is produced.

When a branch to the sequence number specified in a GOTO statement
occurs, the sequence number is searched for.  For this reason, processing
in the reverse direction takes a longer time than processing in the forward
direction.  Using the WHILE statement for repetition reduces processing
time.

In a conditional expression that uses EQ or NE, a <vacant> and zero have
different effects.  In other types of conditional expressions, a <vacant> is
regarded as zero.

� Nesting

;�	��
�����

� Infinite loops

� Processing time

� Undefined variable



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

327

The sample program below finds the total of numbers 1 to 10.

O0001;
#1=0;
#2=1;
WHILE[#2 LE 10]DO 1;
#1=#1+#2;
#2=#2+1;
END 1;
M30;

Sample program



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

328

A macro program can be called using the following methods:

Macro call Simple call (G65)
modal call (G66, G67)
Macro call with G code
Macro call with M code
Subprogram call with M code
Subprogram call with T code

Macro call (G65) differs from subprogram call (M98) as described below.

 With G65, an argument (data passed to a macro) can be specified.  M98
does not have this capability.

 When an M98 block contains another NC command (for example,
G01 X100.0 M98Pp), the subprogram is called after the command is
executed.  On the other hand, G65 unconditionally calls a macro.

 When an M98 block contains another NC command (for example,
G01 X100.0 M98Pp), the machine stops in the single block mode.  On
the other hand, G65 does not stops the machine.

 With G65, the level of local variables changes.  With M98, the level
of local variables does not change.

15.6
MACRO CALL

;�	��
�����

� Differences between
macro calls and
subprogram calls



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

329

When G65 is specified, the custom macro specified at address P is called.
Data (argument) can be passed to the custom macro program.

G65  P p  L �  <argument–specification> ;

P : Number of the program to call
� : Repetition count (1 by default)
Argument : Data passed to the macro

O0001 ;
     :
G65 P9010 L2 A1.0 B2.0 ;
     :
M30 ;

O9010 ;
#3=#1+#2 ;
IF [#3 GT 360] GOTO 9 ;
G00 G91 X#3 ;
N9 M99 ;

 After G65, specify at address P the program number of the custom
macro to call.

 When a number of repetitions is required, specify a number from 1 to
9999 after address L.  When L is omitted, 1 is assumed.

 By using argument specification, values are assigned to corresponding
local variables.

Two types of argument specification are available.  Argument
specification I uses letters other than G, L, O, N, and P once each.
Argument specification II uses A, B, and C once each and also uses I, J,
and K up to ten times.  The type of argument specification is determined
automatically according to the letters used.

Argument specification I

A
B
C
D
E
F
H

#1
#2
#3
#7
#8
#9
#11

I
J
K
M
Q
R
S

#4
#5
#6
#13
#17
#18
#19

T
U
V
W
X
Y
Z

#20
#21
#22
#23
#24
#25
#26

Address Address AddressVariable
number

Variable
number

Variable
number

 Addresses G, L, N, O, and P cannot be used in arguments.

 Addresses that need not be specified can be omitted.  Local variables
corresponding to an omitted address are set to null.

 Addresses do not need to be specified alphabetically.  They conform
to word address format.
I, J, and K need to be specified alphabetically, however.

Example

B_A_D_ … J_K_ Correct
B_A_D_ … J_I_ Incorrect

15.6.1
Simple Call (G65)

���
�
�����

� Call

� Argument specification



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

330

Argument specification II 
Argument specification II uses A, B, and C once each and uses I, J, and
K up to ten times.  Argument specification II is used to pass values such
as three–dimensional coordinates as arguments.

A
B
C
I1
J1
K1
I2
J2
K2
I3
J3

#1
#2
#3
#4
#5
#6
#7
#8
#9
#10
#11

K3
I4
J4
K4
I5
J5
K5
I6
J6
K6
I7

#12
#13
#14
#15
#16
#17
#18
#19
#20
#21
#22

J7
K7
I8
J8
K8
I9
J9
K9
I10
J10
K10

#23
#24
#25
#26
#27
#28
#29
#30
#31
#32
#33

Address Variable
number

Address Variable
number

Address Variable
number

 Subscripts of I, J, and K for indicating the order of argument
specification are not written in the actual program.

G65 must be specified before any argument.

The CNC internally identifies argument specification I and argument
specification II.  If a mixture of argument specification I and argument
specification II is specified, the type of argument specification specified
later takes precedence.

Example

G65 A1.0 B2.0 I–3.0 I4.0 D5.0 P1000;

<Variables>
#1:1.0
#2:2.0
#3:
#4:–3.0
#5:
#6:
#7:

When both the I4.0 and D5.0 arguments are commanded for
variable #7 in this example, the latter, D5.0, is valid.

5.0

The units used for argument data passed without a decimal point
correspond to the least input increment of each address.  The value of an
argument passed without a decimal point may vary according to the
system configuration of the machine.  It is good practice to use decimal
points in macro call arguments to maintain program compatibility.

Calls can be nested to a depth of four levels including simple calls (G65)
and modal calls (G66).  This does not include subprogram calls (M98).

 Local variables from level 0 to 4 are provided for nesting.

;�	��
�����

� Format

� Mixture of argument
specifications I and II

� Position of the decimal
point

� Call nesting

� Local variable levels



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

331

 The level of the main program is 0.

 Each time a macro is called (with G65 or G66), the local variable level
is incremented by one.  The values of the local variables at the previous
level are saved in the CNC.

 When M99 is executed in a macro program, control returns to the
calling program.  At that time, the local variable level is decremented
by one; the values of the local variables saved when the macro was
called are restored.

O0001 ;
     :
#1=1 ;
G65 P2 A2 ;
     :
     :
M30 ;

O0002 ;
     :
#1=2;
G65 P3 A3 ;
     :
     :
M99 ;

O0003 ;
     :
#1=3;
G65 P4 A4 ;
     :
     :
M99 ;

O0004 ;
     :
#1=4;
G65 P5 A5 ;
     :
     :
M99 ;

O0005 ;
     :
#1=5;
     :
     :
     :
M99 ;

#1 1

::

#33

#1 2

::

#33

#1 3

::

#33

#1 4

::

#33

#1 5

::

#33

#100–, #500–

Main program
(level 0) Macro (level 1) Macro (level 2) Macro (level 3)

Macro
(level 4)

Local variables
(level 0) (Level 1) (Level 2) (Level 3) (Level 4)

Common variables

Variables that can be read from and written to by
macros at different levels

A macro is created which drills H holes at intervals of B degrees after a
start angle of A degrees along the periphery of a circle with radius I.
The center of the circle is (X,Y).  Commands can be specified in either
the absolute or incremental mode.  To drill in the clockwise direction,
specify a negative value for B.

ÉÉÉ
ÉÉÉ
ÉÉÉ

ÉÉ
ÉÉ
ÉÉ

ÉÉ
ÉÉ
ÉÉ

H=3

H=4

H=2
H=1

A

BB

 

Center (X,Y)
Radius I

Sample program
(bolt hole circle)



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

332

G65  P9100  X x  Y y  Z z  R r  F f  I i  A a  B b  H h ;

X: X coordinate of the center of the circle 
(absolute or incremental specification) (#24). . . . . . . . . . . . . . . . . 

Y: Y coordinate of the center of the circle 
(absolute or incremental specification) (#25). . . . . . . . . . . . . . . . . 

Z : Hole depth (#26). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
R: Coordinates of an approach point (#18). . . . . . . . . . . . . . . . . . . . . 
F : Cutting feedrate (#9). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
I : Radius of the circle (#4). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
A: Drilling start angle (#1). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
B: Incremental angle 

(clockwise when a negative value is specified) (#2). . . . . . . . . . . . 
H: Number of holes (#11). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

O0002;
G90 G92 X0 Y0 Z100.0;
G65 P9100 X100.0 Y50.0 R30.0 Z–50.0 F500 I100.0 A0 B45.0 H5;
M30;

O9100;
#3=#4003; Stores G code of group 3.. . . . . . . . . . . . . . . . . . . . . . . . . 
G81 Z#26 R#18 F#9 K0; (Note) Drilling cycle.. . . . . . . . . . . . . . . . . . 

Note:  L0 can also be used.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
IF[#3 EQ 90]GOTO 1; Branches to N1 in the G90 mode.. . . . . . . . . . 
#24=#5001+#24; Calculates the X coordinate of the center.. . . . . . . . . 
#25=#5002+#25; Calculates the Y coordinate of the center.. . . . . . . . . 

N1 WHILE[#11 GT 0]DO 1;
Until the number of remaining holes reaches 0. . . . . . . . . . . . . . . . . . . 

#5=#24+#4*COS[#1]; Calculates a drilling position on the X–axis.. . . . 
#6=#25+#4*SIN[#1]; Calculates a drilling position on the Y–axis.. . . . 
G90 X#5 Y#6; Performs drilling after moving to the target position.. 
#1=#1+#2; Updates the angle.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#11=#11–1; Decrements the number of holes.. . . . . . . . . . . . . . . . . . . 
END 1;
G#3 G80; Returns the G code to the original state.. . . . . . . . . . . . . . . 
M99;

Meaning of variables:

#3:  Stores the G code of group 3.
#5:  X coordinate of the next hole to drill
#6:  Y coordinate of the next hole to drill

� Calling format

� Program calling a macro
program

� Macro program 
(called program)



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

333

Once G66 is issued to specify a modal call a macro is called after a block
specifying movement along axes is executed.  This continues until G67
is issued to cancel a modal call.

O0001 ;
     :
G66 P9100 L2 A1.0 B2.0 ;
G00 G90 X100.0 ;
Y200.0 ;
X150.0 Y300.0 ;
G67 ;
     :
M30 ;

O9100 ;
     :
G00 Z–#1 ;
G01 Z–#2 F300 ;
     :
     :
     :
     :
M99 ;

G66  P p  L �  <argument–specification> ;

P : Number of the program to call
� : Repetition count (1 by default)
Argument : Data passed to the macro

 After G66, specify at address P a program number subject to a modal
call.

 When a number of repetitions is required, a number from 1 to 9999 can
be specified at address L.

 As with a simple call (G65), data passed to a macro program is
specified in arguments.

When a G67 code is specified, modal macro calls are no longer performed
in subsequent blocks.

Calls can be nested to a depth of four levels including simple calls (G65)
and modal calls (G66).  This does not include subprogram calls (M98).

Modal calls can be nested by specifying another G66 code during a modal
call.

 In a G66 block, no macros can be called.

 G66 needs to be specified before any arguments.

 No macros can be called in a block which contains a code such as a
miscellaneous function that does not involve movement along an axis.

 Local variables (arguments) can only be set in G66 blocks.  Note that
local variables are not set each time a modal call is performed.

15.6.2
Modal Call (G66)

���
�
�����

� Call

� Cancellation

� Call nesting

� Modal call nesting

;�	��
�����



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

334

The same operation as the drilling canned cycle G81 is created using a
custom macro and the machining program makes a modal macro call.  For
program simplicity, all drilling data is specified using absolute values.

Z=0

R

Z

The canned cycle consists of the following
basic operations:

Operation 1:
  Positioning along the X–axis and Y–axis

Operation 2:
  Rapid traverse to point R

Operation 3:
  Cutting feed to point Z

Operation 4:
  Rapid traverse to point R or I

Rapid traverse

Cutting feed

Operation 1 Position I

Operation 2 Operation 4

Position R

Operation 3

Position Z

G65  P9110  X x  Y y  Z z  R r  F f  L l ;

X: X coordinate of the hole (absolute specification only) (#24). . . . 
Y: Y coordinate of the hole (absolute specification only) (#25). . . . 
Z : Coordinates of position Z (absolute specification only) (#26). . . 
R: Coordinates of position R (absolute specification only) (#18). . . 
F : Cutting feedrate (#9). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
L : Repetition count

O0001; 
G28 G91 X0 Y0 Z0; 
G92 X0 Y0 Z50.0; 
G00 G90 X100.0 Y50.0; 
G66 P9110 Z–20.0 R5.0 F500; 
G90 X20.0 Y20.0;
X50.0; 
Y50.0; 
X70.0 Y80.0; 
G67;
M30;

O9110;
#1=#4001; Stores G00/G01.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#3=#4003; Stores G90/G91.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#4=#4109; Stores the cutting feedrate.. . . . . . . . . . . . . . . . . . . . . . . . 
#5=#5003; Stores the Z coordinate at the start of drilling.. . . . . . . . . . 
G00 G90 Z#18; Positioning at position R. . . . . . . . . . . . . . . . . . . . . 
G01 Z#26 F#9; Cutting feed to position Z. . . . . . . . . . . . . . . . . . . . . . 
IF[#4010 EQ 98]GOTO 1; Return to position I. . . . . . . . . . . . . . . . . . 
G00 Z#18; Positioning at position R. . . . . . . . . . . . . . . . . . . . . . . . . 
GOTO 2;

N1 G00 Z#5; Positioning at position I. . . . . . . . . . . . . . . . . . . . . . . . . . . 
N2 G#1 G#3 F#4; Restores modal information.. . . . . . . . . . . . . . . . . 

M99;

Sample program

� Calling format

� Program that calls a
macro program

� Macro program
(program called)



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

335

By setting a G code number used to call a macro program in a parameter,
the macro program can be called in the same way as for a simple call
(G65).

O0001 ;
     :
G81 X10.0 Y20.0 Z–10.0 ;
     :
M30 ;

O9010 ;
     :
     :
     :
N9 M99 ;

Parameter No.6050 = 81

By setting a G code number from 1 to 9999 used to call a custom macro
program (O9010 to O9019) in the corresponding parameter (N0.6050 to
No.6059), the macro program can be called in the same way as with G65.
For example, when a parameter is set so that macro program O9010 can
be called with G81, a user–specific cycle created using a custom macro
can be called without modifying the machining program.

O9010
O9011
O9012
O9013
O9014
O9015
O9016
O9017
O9018
O9019

6050
6051
6052
6053
6054
6055
6056
6057
6058
6059

Program number Parameter number

As with a simple call, a number of repetitions from 1 to 9999 can be
specified at address L.

As with a simple call, two types of argument specification are available:
Argument specification I and argument specification II.  The type of
argument specification is determined automatically according to the
addresses used.

In a program called with a G code, no macros can be called using a G code.
A G code in such a program is treated as an ordinary G code.  In a program
called as a subprogram with an M or T code, no macros can be called using
a G code.  A G code in such a program is also treated as an ordinary G code.

15.6.3
Macro Call Using 
G Code

���
�
�����

� Correspondence
between parameter
numbers and program
numbers

� Repetition

� Argument specification

;�	��
�����

� Nesting of calls using G
codes



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

336

By setting an M code number used to call a macro program in a parameter,
the macro program can be called in the same way as with a simple call
(G65).

O0001 ;
     :
M50 A1.0 B2.0 ;
     :
M30 ;

O9020 ;
     :
     :
     :
M99 ;

Parameter No.6080 = 50

By setting an M code number from 1 to 99999999 used to call a custom
macro program (9020 to 9029) in the corresponding parameter (No.6080
to No.6089), the macro program can be called in the same way as with
G65.

O9020
O9021
O9022
O9023
O9024
O9025
O9026
O9027
O9028
O9029

6080
6081
6082
6083
6084
6085
6086
6087
6088
6089

Program number Parameter number

As with a simple call, a number of repetitions from 1 to 9999 can be
specified at address L.

As with a simple call, two types of argument specification are available:
Argument specification I and argument specification II.  The type of
argument specification is determined automatically according to the
addresses used.

 An M code used to call a macro program must be specified at the start
of a block.

 In a macro called with a G code or in a program called as a subprogram
with an M or T code, no macros can be called using an M code.  An
M code in such a macro or program is treated as an ordinary M code.

15.6.4
Macro Call Using
an M Code

���
�
�����

� Correspondence
between parameter
numbers and program
numbers

� Repetition

� Argument specification

;�	��
�����



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

337

By setting an M code number used to call a subprogram (macro program)
in a parameter, the macro program can be called in the same way as with
a subprogram call (M98).

O0001 ;
     :
M03 ;
     :
M30 ;

O9001 ;
     :
     :
     :
M99 ;

Parameter No.6071 = 03

By setting an M code number from 1 to 99999999 used to call a
subprogram in a parameter (No.6071 to No. 6079), the corresponding
custom macro program (O9001 to O9009) can be called in the same way
as with M98.

O9001
O9002
O9003
O9004
O9005
O9006
O9007
O9008
O9009

6071
6072
6073
6074
6075
6076
6077
6078
6079

Program number Parameter number

As with a simple call, a number of repetitions from 1 to 9999 can be
specified at address L.

Argument specification is not allowed.

An M code in a macro program that has been called is treated as an
ordinary M code.

In a macro called with a G code or in a program called with an M or T code,
no subprograms can be called using an M code.  An M code in such a
macro or program is treated as an ordinary M code.

15.6.5
Subprogram Call
Using an M Code

���
�
�����

� Correspondence
between parameter
numbers and program
numbers

� Repetition

� Argument specification

� M code

;�	��
�����



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

338

By enabling subprograms (macro program) to be called with a T code in
a parameter, a macro program can be called each time the T code is
specified in the machining program.

O0001 ;
     :
T23 ;
     :
M30 ;

O9000 ;
     :
     :
     :
M99 ;

Bit 5 of parameter 6001 = 1

By setting bit 5 of parameter TCS No.6001 to 1, the macro program
O9000 can be called when a T code is specified in the machining program.
A T code specified in a machining program is assigned to common
variable #149.

In a macro called with a G code or in a program called with an M or T code,
no subprograms can be called using a T code.  A T code in such a macro
or program is treated as an ordinary T code.

15.6.6
Subprogram Calls
Using a T Code

���
�
�����

� Call

;�	��
�����



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

339

By using the subprogram call function that uses M codes, the cumulative
usage time of each tool is measured.

 The cumulative usage time of each of tools T01 to T05 is measured.
No measurement is made for tools with numbers greater than T05.

 The following variables are used to store the tool numbers and
measured times:

#501

#502

#503

#504

#505

Cumulative usage time of tool number 1

Cumulative usage time of tool number 2

Cumulative usage time of tool number 3

Cumulative usage time of tool number 4

Cumulative usage time of tool number 5

 Usage time starts being counted when the M03 command is specified
and stops when M05 is specified.  System variable #3002 is used to
measure the time during which the cycle start lamp is on.  The time
during which the machine is stopped by feed hold and single block
stop operation is not counted, but the time used to change tools and
pallets is included.

Set 3 in parameter No.6071, and set 05 in parameter No.6072.

Set 0 in variables #501 to #505.

O0001;
T01 M06; 
M03; 

    
M05; Changes #501.. . . . . . . . . . . . . . . . . . . . . 
T02 M06; 
M03; 

    
M05; Changes #502.. . . . . . . . . . . . . . . . . . . . . 
T03 M06;
M03;

     
M05; Changes #503.. . . . . . . . . . . . . . . . . . . . . 
T04 M06;
M03; 

     
M05; Changes #504.. . . . . . . . . . . . . . . . . . . . . 
T05 M06;
M03; 

     
M05; Changes #505.. . . . . . . . . . . . . . . . . . . . . 
M30;

15.6.7
Sample Program

Conditions

Operation check

� Parameter setting

� Variable value setting

� Program that calls a
macro program



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

340

O9001(M03); Macro to start counting. . . . . . . . . . . . . . . . . . . . . . . . . . 
M01;
IF[#4120 EQ 0]GOTO 9; No tool specified. . . . . . . . . . . . . . . . . . . . . 
IF[#4120 GT 5]GOTO 9; Out–of–range tool number. . . . . . . . . . . . . 
#3002=0; Clears the timer.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

N9 M03; Rotates the spindle in the forward direction.. . . . . . . . . . . . . . . 
M99;

O9002(M05); Macro to end counting. . . . . . . . . . . . . . . . . . . . . . . . . . . 
M01;
IF[#4120 EQ 0]GOTO 9; No tool specified. . . . . . . . . . . . . . . . . . . . . 
IF[#4120 GT 5]GOTO 9; Out–of–range tool number. . . . . . . . . . . . . 
#[500+#4120]=#3002+#[500+#4120]; Calculates cumulative time.. . 

N9 M05; Stops the spindle.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
M99;

Macro program
(program called)



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

341

For smooth machining, the CNC prereads the NC statement to be
performed next. This operation is referred to as buffering. During AI
advanced preview control mode, the CNC prereads not only the next
block but also the multiple blocks. And in the cutter compensation mode
(G41, G42), the CNC prereads the NC statements two or three blocks
ahead to find intersections even if the CNC is not in AI advanced preview
control mode. Macro statements for arithmetic expressions and
conditional branches are processed as soon as they are read into the buffer.
Therefore, the timing of the macro statement execution is not always the
specified order. 
At the blocks containing M00, M01, M02 or M30, blocks containing
M–codes for which buffering is suppressed by setting parameter
(No.3411–3432), and blocks containing prevention buffering G codes
such as G53, the CNC stops to preread the NC statement after that. Then,
the stop of the macro statement execution is guaranteed until such M
codes or G codes complete its execution.

N1 G31 X100.0 ;
 N2 #100=1
         :

>

> :Block being executed

NC statement
execution

Macro statement execution

Buffer

N1

N2

NOTE
In case that you need to execute the macro statement after
completing the block just before the macro statement,
specify M code or G code that are not buffered just before
the macro statement. Specially, in case of reading / writing
the system variables to control signals, coordinates, offset
value, etc., it may different system variable data by the
timing of the NC statement execution. To avoid this
phenomenon, specify such M codes or G codes before the
macro statement, if necessary.

15.7
PROCESSING
MACRO
STATEMENTS

15.7.1
Details of NC
statements and macro
statements execution

� When the next block is
not buffered (M codes
that are not buffered,
G53, G31, etc.)



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

342

N1 X100.0 ;>

> : Block being executed
� : Block read into the buffer

NC statement
execution

Macro statement
execution

Buffer

N1

N2 N3

N4

N2 #1=100 ;
N3 #2=200 ;
N4 Y200.0 ;
        :

N4

When N1 is being executed, the next NC statement (N4) is read into the
buffer.The macro statements (N2, N3) between N1 and N4 are processed
during execution of N1.

N1 G01 G41 G91 X50.0 Y30.0 F100 Dd ;>

> : Block being executed
� : Blocks read into the buffer

NC statement
execution

Macro statement
execution

Buffer

N1

N2

N3

N2 #1=100 ;
N3 X100.0 ;
N4 #2=200 ;
N5 Y50.0 ;
        :

N4

N5

N3

When N1 is being executed, the NC statements in the next two blocks (up
to N5) are read into the buffer. The macro statements (N2, N4) between
N1 and N5 are processed during execution of N1.

� Buffering the next block
in other than cutter
compensation mode
(G41, G42) (normally
prereading one block)

� Buffering the next block
in cutter compensation
mode (G41, G42)



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

343

N1 G01 G41 X100.0 G100 Dd ;>

> : Block being executed
� : Blocks read into the buffer

N1

N2

N3

N2 #1=100 ;
N3 Y100.0 ;
N4 #2=200 ;
N5 M08 ;
N6 #3=300 ;
N7 X200.0 ;
        :

N4

N3

N5

N6

N7

NC statement
execution

Macro statement
execution

Buffer

When the N1 is being executed, the NC statements in the next two blocks
(up to N5) are read into the buffer. Since N5 is a block that involves no
movement, an intersection cannot be calculated. In this case, the NC
statements in the next three blocks (up to N7) are read. The macro
statements (N2, N4, and N6) between N1 and N7 are processed during
execution of N1.

In case of using the following system variables (Table 15.7.2) in macro
program and you need to execute the macro program after completing the
block execution just before the macro program, M code which can prevent
buffering (parameter No.3411–3432) or G53 command block is necessary
just before the macro program. 

Table 15.7.2

Meaning Read
Write

Number of 
Variable

Note
(In case not to 

command M code 
preventing buffering or 

G53 block.)

Interface sig-
nals

Read #1000 – #1015 ,
#1032

The data is read at 
buffering a macro 
program.

Write #1100 – #1115 ,
#1132

The data is written at 
buffering a macro 
program.

Tool com-
pensation val-
ues

Write #10001 – The data is written at 
buffering a macro 
program.

Macro alarms Write #3000 Macro alarm is 
generated at maximum 
2 blocks before a macro 
program.

� When the next block 
involves no movement in
cutter compensation C
(G41, G42) mode

15.7.2
Caution for using
system variables



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

344

Table 15.7.2

Meaning Note
(In case not to 

command M code 
preventing buffering or 

G53 block.)

Number of 
Variable

Read
Write

Program stop
with 
message

Write #3006 Program stops at 
maximum 2 blocks 
before a macro 
program.

Time informa-
tion

Read
Write

#3001,#3002 The data is read / written 
at buffering a macro 
program.

Read #3011,#3012 The data is read at 
buffering a macro 
program.

Automatic op-
eration control

Write #3003, #3004 Setting data is available 
at maximum 2 blocks 
before a macro 
program.

Settings Write #3005 The data is written at 
buffering a macro 
program.

Mirror image Read #3007 The data is read at 
buffering a macro 
program.

Currently se-
lected
additional
workpiece
coordinate
system

Read #4130(P)
#4014
    (G54 – G59)

The data is read at 
maximum 3 blocks 
before a macro 
program.

Current posi-
tion
(Machine
coordinate
system)

Read #5021 – #5028 The uncertain position in
moving is read.

Current posi-
tion
(Workpiece
coordinate
system)

Read #5041 – #5048 The uncertain position in 
moving is read.

Tool length
offset value

Read #5081 – #5088 The offset value of 
current execution block 
is read.

Deviated ser-
vo position

Read #5101 – #5108 The uncertain deviation 
in moving is read.

Workpiece
zero point off-
set value

Write #5201 – #5328
#7001 – #7948

The data is written at 
buffering a macro 
program.



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

345

Example)

O0001 O2000
N1 X10.Y10.; (Mxx ;) Specify preventing buffering M code or G53
N2 M98P2000; N100 #1=#5041; (Reading X axis current position) 
N3 Y200.0; N101 #2=#5042; (Reading Y axis current position) 
    :      : 

M99;

In above case, the buffering of N2 block is done and the macro program
of O2000 is read and executed during N1 block of main program O1000
execution. Therefore, the current position readings are executed during
axes movements at N1 block. So the unexpected position data can be read
to #1 and #2 because of axes movements. In this case, please specify M
code preventing buffering Mxx ; (or G53 ;) just before N100 block of
O2000. By this, the position data at completing the execution of N1 block
can be read to #1 and #2 because O2000 is executed after completing the
execution of N1 block of O0001.

NOTE
G53 can not be specified during the canned cycle mode. (In
this case, the P/S alarm No.44 is generated.) Therefore, in
order to prevent buffering during the canned cycle mode,
please specify preventing buffering M code.



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

346

Custom macro programs are similar to subprograms.  They can be
registered and edited in the same way as subprograms.  The storage
capacity is determined by the total length of tape used to store both custom
macros and subprograms.

15.8
REGISTERING
CUSTOM MACRO
PROGRAMS



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

347

The macro call command can be specified in MDI mode.   During
automatic operation, however, it is impossible to switch to the MDI mode
for a macro program call.

A custom macro program cannot be searched for a sequence number.

Even while a macro program is being executed, blocks can be stopped in
the single block mode.
A block containing a macro call command (G65, G66, or G67) does not
stop even when the single block mode is on.  Blocks containing arithmetic
operation commands and control commands can be stopped in single
block mode by setting SBM (bit 5 of parameter 6000) to 1.
Single block stop operation is used for testing custom macro programs.
Note that when a single block stop occurs at a macro statement in cutter
compensation C mode, the statement is assumed to be a block that does
not involve movement, and proper compensation cannot be performed in
some cases.  (Strictly speaking, the block is regarded as specifying a
movement with a travel distance 0.)

A / appearing in the middle of an <expression> (enclosed in brackets [
] on the right–hand side of an arithmetic expression) is regarded as a
division operator; it is not regarded as the specifier for an optional block
skip code.

By setting NE8 (bit 0 of parameter 3202) and NE9 (bit 4 of parameter
3202) to 1, deletion and editing are disabled for custom macro programs
and subprograms with program numbers 8000 to 8999 and 9000 to 9999.
This prevents registered custom macro programs and subprograms from
being destroyed by accident.  When the entire memory is cleared (by

pressing the RESET  and DELETE  keys at the same time to turn on the power),

the contents of memory such as custom macro programs are deleted.

With a reset operation, local variables and common variables #100 to
#149 are cleared to null values.  They can be prevented from  clearing by
setting, CLV and CCV (bits 7 and 6 of parameter 6001).  System variables
#1000 to #1133 are not cleared.
A reset operation clears any called states of custom macro programs and
subprograms, and any DO states, and returns control to the main program.

As with M98, the M and T codes used for subprogram calls are not
displayed.

When a feed hold is enabled during execution of a macro statement, the
machine stops after execution of the macro statement.  The machine also
stops when a reset or alarm occurs.

+0.0000001 to +99999999
–99999999 to –0.0000001
The number of significant digits is 8 (decimal).  If this range is exceeded,
P/S alarm No. 003 occurs.

15.9
LIMITATIONS

� MDI operation

� Sequence number
search

� Single block

� Optional block skip

� Operation in EDIT mode

� Reset

� Display of the PROGRAM
RESTART

� Feed hold

� Constant values that can
be used in <expression>



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

348

In addition to the standard custom macro commands, the following macro
commands are available.  They are referred to as external output
commands.
–  BPRNT
–  DPRNT
–  POPEN
–  PCLOS
These commands are provided to output variable values and characters
through the reader/punch interface.

Specify these commands in the following order:

Open command:  POPEN
Before specifying a sequence of data output commands, specify this
command to establish a connection to an external input/output device.

Data output command:  BPRNT or DPRNT
Specify necessary data output.

Close command:  PCLOS
When all data output commands have completed, specify PCLOS to
release a connection to an external input/output device.

POPEN
POPEN establishes a connection to an external input/output device.  It
must be specified before a sequence of data output commands.  The CNC
outputs a DC2 control code.

BPRNT  [  a  #b   [ c ]  … ]

Number of significant decimal places
Variable

Character

The BPRNT command outputs characters and variable values in binary.

(i) Specified characters are converted to the codes according to the
setting data (ISO) that is output at that time.
Specifiable characters are as follows:
–  Letters (A to Z)
–  Numbers
–  Special characters (*, /, +, –, etc.)
An asterisk (*) is output by a space code.

(ii) All variables are stored with a decimal point.  Specify a variable
followed by the number of significant decimal places enclosed in
brackets.  A variable value is treated as 2–word (32–bit) data,
including the decimal digits.  It is output as binary data starting from
the highest byte.

(iii) When specified data has been output, an EOB code is output
according to the setting code (ISO).

(iv) Null variables are regarded as 0.

15.10
EXTERNAL OUTPUT
COMMANDS

���
�
�����

� Open command POPEN

� Data output command
BPRNT



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

349

Example )

LF
12 (0000000C)
M
–1638400(FFE70000)

�

410 (0000019A)
X
Space
�

BPRNT [ C** X#100 [3] Y#101 [3] M#10 [0] ]
Variable value
   #100=0.40956
   #101=–1638.4
   #10=12.34

DPRNT  [  a  #b        [ c d ]  … ]

Number of significant decimal places

Number of significant digits in the integer part

Variable

Character

The DPRNT command outputs characters and each digit in the value of
a variable according to the code set in the settings (ISO).

(i) For an explanation of the DPRNT command, see Items (i), (iii), and
(iv) for the BPRNT command.

(ii) When outputting a variable, specify # followed by the variable
number, then specify the number of digits in the integer part and the
number of decimal places enclosed in brackets.  
One code is output for each of the specified number of digits, starting
with the highest digit.  For each digit, a code is output according to
the settings (ISO).  The decimal point is also output using a code set
in the settings (ISO).
Each variable must be a numeric value consisting of up to eight
digits.  When high–order digits are zeros, these zeros are not output
if PRT (bit1 of parameter 6001) is 1.  If parameter PRT is 0, a space
code is output each time a zero is encountered.
When the number of decimal places is not zero, digits in the decimal
part are always output.  If the number of decimal places is zero, no
decimal point is output.
When PRT (bit 1 of parameter 6001) is 0, a space code is output to
indicate a positive number instead of +; if parameter PRT is 1, no
code is output.

� Data output command
DPRNT



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

350

Example )

sp

spspsp

sp

sp

DPRNT [ X#2 [53] Y#5 [53] T#30 [20] ]
Variable value
   #2=128.47398
   #5=–91.2
   #30=123.456

(1) Parameter PRT(No.6001#1)=0

L F

T

Y –

X

91200

128474

23

sp

LF

T23

Y–91.200

X128.474

(2) Parameter PRT(No.6001#1)=0

PCLOS ;
The PCLOS command releases a connection to an external input/output
device.  Specify this command when all data output commands have
terminated.  DC4 control code is output from the CNC.

Specify the channel use for setting data (I/O channel).  According to the
specification of this data, set data items (such as the baud rate) for the
reader/punch interface.
I/O channel 0 : Parameters (No.101, No.102 and No.103)
I/O channel 1 : Parameters (No.111, No.112 and No.113)
I/O channel 2 : Parameters (No.112, No.122 and No.123)
Never specify the output device FANUC Cassette or Floppy for punching.
When specifying a DPRNT command to output data, specify whether
leading zeros are output as spaces (by setting PRT (bit 1 of parameter
6001) to 1 or 0).
To indicate the end of a line of data in ISO code, specify whether to use
only an LF (CRO, of bit 4 of parameter 6001 is 0) or an LF and CR (CRO
of bit 4 of parameter 6001 is 1).

� Close command PCLOS

� Required setting



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

351

NOTE
1 It is not necessary to always specify the open command

(POPEN), data output command (BPRNT, DPRNT), and
close command (PCLOS) together.  Once an open
command is specified at the beginning of a program, it does
not need to be specified again except after a close
command was specified.

2 Be sure to specify open commands and close commands
in pairs.  Specify the close command at the end of the
program.  However, do not specify a close command if no
open command has been specified.

3 When a reset operation is performed while commands are
being output by a data output command, output is stopped
and subsequent data is erased.  Therefore, when a reset
operation is performed by a code such as M30 at the end
of a program that performs data output, specify a close
command at the end of the program so that processing such
as M30 is not performed until all data is output.

4 Abbreviated macro words enclosed in brackets [ ] remains
unchanged.  However, note that when the characters in
brackets are divided and input several times, the second
and subsequent abbreviations are converted and input.

5 O can be specified in brackets [ ].  Note that when the
characters in brackets [ ] are divided and input several
times, O is omitted in the second and subsequent inputs.



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

352

When a program is being executed, another program can be called by
inputting an interrupt signal (UINT) from the machine.  This function is
referred to as an interruption type custom macro function.  Program an
interrupt command in the following format:

M96 P���� ;

M97 ;

Enables custom macro interrupt

Disables custom macro interrupt

Use of the interruption type custom macro function allows the user to call
a program during execution of an arbitrary block of another program.
This allows programs to be operated to match situations which vary from
time to time.

(1)When a tool abnormality is detected, processing to handle the
abnormality is started by an external signal.

(2)A sequence of machining operations is interrupted by another
machining operation without the cancellation of the current operation.

(3)At regular intervals, information on current machining is read.
Listed above are examples like adaptive control applications of the
interruption type custom macro function.

Interrupt
signal
(UINT)**

Interrupt
signal
(UINT)

Interrupt
signal
(UINT)*

M96
Pxxxx;

N����;

M97  ;

M99 (P����);

O xxxx;

Fig. 15.11  Interruption type custom macro function

When M96Pxxxx is specified in a program, subsequent program
operation can be interrupted by an interrupt signal (UINT) input to
execute the program specified by Pxxxx.

15.11
INTERRUPTION TYPE
CUSTOM MACRO

���	
�

���
�
�����



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

353

CAUTION
When the interrupt signal (UINT, marked by * in Fig. 15.11)
is input after M97 is specified, it is ignored.  And the interrupt
signal must not be input during execution of the interrupt
program.

A custom macro interrupt is available only during program execution.  It
is enabled under the following conditions
–  When memory operation or MDI operation is selected
–  When STL (start lamp) is on
–  When a custom macro interrupt is not currently being processed

Generally, the custom macro interrupt function is used by specifying M96
to enable the interrupt signal (UINT) and M97 to disable the signal.
Once M96 is specified, a custom macro interrupt can be initiated by the
input of the interrupt signal (UINT) until M97 is specified or the NC is
reset.  After M97 is specified or the NC is reset, no custom macro
interrupts are initiated even when the interrupt signal (UINT) is input.
The interrupt signal (UINT) is ignored until another M96 command is
specified.

1
0

M96 M97 M96

Interrupt signal
(UINT)

Effective interrupt
input signal

When UINT is kept on

The interrupt signal (UINT) becomes valid after M96 is specified.  Even
when the signal is input in M97 mode, it is ignored.  When the signal input
in M97 mode is kept on until M96 is specified, a custom macro interrupt
is initiated as soon as M96 is specified (only when the status–triggered
scheme is employed); when the edge–triggered scheme is employed, the
custom macro interrupt is not initiated even when M96 is specified.

15.11.1
Specification Method

���
�
�����

� Interrupt conditions

� Specification



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

354

NOTE
For the status–triggered and edge–triggered schemes, see
Item “Custom macro interrupt signal (UINT)” of II– 15.11.2.

There are two types of custom macro interrupts:  Subprogram–type
interrupts and macro–type interrupts.  The interrupt type used is selected
by MSB (bit 5 of parameter 6003).

(a) Subprogram–type interrupt
An interrupt program is called as a subprogram.  This means that the
levels of local variables remain unchanged before and after the interrupt.
This interrupt is not included in the nesting level of subprogram calls.

(b) Macro–type interrupt
An interrupt program is called as a custom macro.  This means that the
levels of local variables change before and after the interrupt.  The
interrupt is not included in the nesting level of custom macro calls.  When
a subprogram call or a custom macro call is performed within the interrupt
program, this call is included in the nesting level of subprogram calls or
custom macro calls.  Arguments cannot be passed from the current
program even when the custom macro interrupt is a macro–type interrupt.

In general, custom macro interrupts are controlled by M96 and M97.
However, these M codes, may already being used for other purposes (such
as an M function or macro M code call) by some machine tool builders.
For this reason, MPR (bit 4 of parameter 6003) is provided to set M codes
for custom macro interrupt control.
When specifying this parameter to use the custom macro interrupt control
M codes set by parameters, set parameters 6033 and 6034 as follows:
Set the M code to enable custom macro interrupts in parameter 6033, and
set the M code to disable custom macro interrupts in parameter 6034.
When specifying that parameter–set M codes are not used, M96 and M97
are used as the custom macro control M codes regardless of the settings
of parameters 6033 and 6034.
The M codes used for custom macro interrupt control are processed
internally (they are not output to external units).  However, in terms of
program compatibility, it is undesirable to use M codes other than M96
and M97 to control custom macro interrupts.

When performing a custom macro interrupt, the user may want to
interrupt the NC statement being executed, or the user may not want to
perform the interrupt until the execution of the current block is completed.
MIN (bit 2 of parameter 6003)is used to select whether to perform
interrupts even in the middle of a block or to wait until the end of the
block.

15.11.2
Details of Functions

���
�
�����

� Subprogram–type
interrupt and macro–type
interrupt

� M codes for custom
macro interrupt control

� Custom macro interrupts
and NC statements



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

355

(i) When the interrupt signal (UINT) is input, any movement or dwell
being performed is stopped immediately and the interrupt program
is executed.

(ii) If there are NC statements in the interrupt program, the command in
the interrupted block is lost and the NC statement in the interrupt
program is executed.  When control is returned to the interrupted
program, the program is restarted from the next block after the
interrupted block.

(iii) If there are no NC statements in the interrupt program, control is
returned to the interrupted program by M99, then the program is
restarted from the command in the interrupted block.

ÉÉÉÉ
ÉÉÉÉ
ÉÉÉÉ

Execution in 
progress

Normal program

Interrupted by macro interrupt

Execution in 
progress

Interrupt signal (UINT) input

CNC command restart;
when there are no NC state-
ments in the interrupt pro-
gram

Custom macro
interrupt

(i) If the block being executed is not a block that consists of several cycle
operations such as a drilling canned cycle and automatic reference
position return (G28), an interrupt is performed as follows:
When an interrupt signal (UINT) is input, macro statements in the
interrupt program are executed immediately unless an NC statement
is encountered in the interrupt program.  NC statements are not
executed until the current block is completed.

(ii) If the block being executed consists of several cycle operations, an
interrupt is performed as follows:
When the last movement in the cycle operations is started, macro
statements in the interrupt program are executed unless an NC
statement is encountered.  NC statements are executed after all cycle
operations are completed.

ÉÉÉ
ÉÉÉ
ÉÉÉ

Execution in 
progress

Normal program

Execution in 
progress

Interrupt signal (UINT) input

Custom macro
interrupt

NC statement in the
interrupt program

Type I 
(when an interrupt is
performed even in the
middle of a block)

Type II 
(when an interrupt is
performed at the end of
the block)



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

356

The interrupt signal becomes valid after execution starts of a block that
contains M96 for enabling custom macro interrupts.  The signal becomes
invalid when execution starts of a block that contains M97.
While an interrupt program is being executed, the interrupt signal
becomes invalid.  The signal become valid when the execution of the
block that immediately follows the interrupted block in the main program
is started after control returns from the interrupt program.  In type I, if the
interrupt program consists of only macro statements, the interrupt signal
becomes valid when execution of the interrupted block is started after
control returns from the interrupt program.

Even when cycle operation is in progress, movement is interrupted, and
the interrupt program is executed.  If the interrupt program contains no
NC statements, the cycle operation is restarted after control is returned to
the interrupted program.  If there are NC statements, the remaining
operations in the interrupted cycle are discarded, and the next block is
executed.

When the last movement of the cycle operation is started, macro
statements in the interrupt program are executed unless an NC statement
is encountered.  NC statements are executed after cycle operation is
completed.

� Conditions for enabling
and disabling the custom
macro interrupt signal

� Custom macro interrupt
during execution of a
block that involves cycle
operation

For type I

For type II



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

357

There are two schemes for custom macro interrupt signal (UINT) input:
The status–triggered scheme and edge– triggered scheme.  When the
status–triggered scheme is used, the signal is valid when it is on.  When
the edge triggered scheme is used, the signal becomes valid on the rising
edge when it switches from off to on status.
One of the two schemes is selected with TSE (bit 3 of parameter 6003).
When the status–triggered scheme is selected by this parameter, a custom
macro interrupt is generated if the interrupt signal (UINT) is on at the time
the signal becomes valid.  By keeping the interrupt signal (UINT) on, the
interrupt program can be executed repeatedly.
When the edge–triggered scheme is selected, the interrupt signal (UINT)
becomes valid only on its rising edge.  Therefore, the interrupt program
is executed only momentarily (in cases when the program consists of only
macro statements).  When the status–triggered scheme is inappropriate,
or when a custom macro interrupt is to be performed just once for the
entire program (in this case, the interrupt signal may be kept on), the
edge–triggered scheme is useful.
Except for the specific applications mentioned above, use of either
scheme results in the same effects.  The time from signal input until a
custom macro interrupt is executed does not vary between the two
schemes.

1

0

Interrupt signal (UINT)

Interrupt
execution

Interrupt
execution

Interrupt
execution

Interrupt
execution

Interrupt
execution

Status–triggered
scheme

Edge–triggered
scheme

In the above example, an interrupt is executed four times when the status
triggered scheme is used;  when the edge– triggered scheme is used, the
interrupt is executed just once.

� Custom macro interrupt
signal (UINT)



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

358

To return control from a custom macro interrupt to the interrupted
program, specify M99.  A sequence number in the interrupted program
can also be specified using address P.  If this is specified, the program is
searched from the beginning for the specified sequence number.  Control
is returned to the first sequence number found.
When a custom macro interrupt program is being executed, no interrupts
are generated.  To enable another interrupt, execute M99.  When M99 is
specified alone, it is executed before the preceding commands terminate.
Therefore, a custom macro interrupt is enabled for the last command of
the interrupt program.  If this is inconvenient, custom macro interrupts
should be controlled by specifying M96 and M97 in the program.
When a custom macro interrupt is being executed, no other custom macro
interrupts are generated; when an interrupt is generated, additional
interrupts are inhibited automatically.  Executing M99 makes it possible
for another custom macro interrupt to occur.  M99 specified alone in a
block is executed before the previous block terminates.  In the following
example, an interrupt is enabled for the Gxx block of O1234.  When the
signal is input, O1234 is executed again.  O5678 is controlled by M96 and
M97.  In this case, an interrupt is not enabled for O5678 (enabled after
control is returned to O1000).

M99;

GxxXxxx;

O1234

O1000;

M96P1234;

M96P5678

M97

O5678

GxxXxxx;
M96;
M99;

M97

Interrupt

Interrupt

Interrupt

Interrupt

� Return from a custom
macro interrupt



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

359

NOTE
When an M99 block consists only of address O, N, P, L, or
M, this block is regarded as belonging to the previous block
in the program.  Therefore, a single–block stop does not
occur for this block.  In terms of programming, the following
� and 	 are basically the same.  (The difference is
whether G�� is executed before M99 is recognized.)
� G�� X��� ;

M99 ;
	 G�� X��� M99 ;

A custom macro interrupt is different from a normal program call.  It is
initiated by an interrupt signal (UINT) during program execution.  In
general, any modifications of modal information made by the interrupt
program should not affect the interrupted program.
For this reason, even when modal information is modified by the interrupt
program, the modal information before the interrupt is restored when
control is returned to the interrupted program by M99.
When control is returned from the interrupt program to the interrupted
program by M99 Pxxxx, modal information can again be controlled by
the program.  In this case, the new continuous information modified by
the interrupt program is passed to the interrupted program. Restoration of
the old modal information present before the interrupt is not desirable.
This is because after control is returned, some programs may operate
differently depending on the modal information present before the
interrupt.  In this case, the following measures are applicable:

(1)The interrupt program provides modal information to be used after
control is returned to the interrupted program.

� Custom macro interrupt
and modal information



PROGRAMMING15. CUSTOM MACRO B–64124EN/01

360

(2)After control is returned to the interrupted program, modal
information is specified again as necessary.

O∆∆∆∆

M96Pxxx

N����;

M99(P����);

Oxxx;

Interrupt signal (UINT)

(Without P specification)

Modify modal
information

Modal
information remains
unchanged before and
after the interrupt.

(With P specification)

The new modal information modified by the interrupt program
is present.

The modal information present before the interrupt becomes valid.  The
new modal information modified by the interrupt program is made
invalid.

The new modal information modified by the interrupt program remains
valid even after control is returned.  The old modal information which was
valid in the interrupted block can be read using custom macro system
variables #4001 to #4120.
Note that when modal information is modified by the interrupt program,
system variables #4001 to #4120 are not changed.

 The coordinates of point A can be read using system variables #5001
and up until the first NC statement is encountered.

 The coordinates of point A’ can be read after an NC statement with no
move specifications appears.

 The machine coordinates and workpiece coordinates of point B’ can
be read using system variables #5021 and up and #5041 and up.

B’

B

A’

A

Interrupt generated
Tool center path

Offset vector

Programmed tool path

Modal information when
control is returned by
M99

Modal information when
control is returned by
M99 P����

� System variables
(position information
values) for the interrupt
program



PROGRAMMINGB–64124EN/01 15. CUSTOM MACRO

361

When the interrupt signal (UINT) is input and an interrupt program is
called, the custom macro modal call is canceled (G67).  However, when
G66 is specified in the interrupt program, the custom macro modal call
becomes valid.  When control is returned from the interrupt program by
M99, the modal call is restored to the state it was in before the interrupt
was generated.  When control is returned by M99Pxxxx;, the modal call
in the interrupt program remains valid.

When the interrupt signal (UINT) is input while a return operation is being
performed in the dry run mode after the search operation for program
restart, the interrupt program is called after restart operation terminates
for all axes.  This means that interrupt type II is used regardless of the
parameter setting.

“Interruption type custom macro” cannot be done during DNC operation
or executing a program with an external input–output device.

� Custom macro interrupt
and custom macro
modal call

� Custom macro interrupt
and program restart

� DNC operation and
Interruption type custom
macro



PROGRAMMING
16. PATTERN DATA INPUT

FUNCTION B–64124EN/01

362

16 PATTERN DATA INPUT FUNCTION
This function enables users to perform programming simply by extracting
numeric data (pattern data) from a drawing and specifying the numerical
values from the MDI panel.  
This eliminates the need for programming using an existing NC language.

With the aid of this function, a machine tool builder can prepare the
program of a hole machining cycle (such as a boring cycle or tapping
cycle) using the custom macro function, and can store it into the program
memory.
This cycle is assigned pattern names, such as BOR1, TAP3, and DRL2.

An operator can select a pattern from the menu of pattern names displayed
on the screen. 
Data (pattern data) which is to be specified by the operator should be
created in advance with variables in a drilling cycle.
The operator can identify these variables using names such as DEPTH,
RETURN RELIEF, FEED, MATERIAL or other pattern data names.  The
operator assigns values (pattern data) to these names.



PROGRAMMINGB–64124EN/01
16. PATTERN DATA INPUT

FUNCTION

363

Pressing  the OFFSETSETTING  key and   [MENU] is displayed on the following

pattern menu screen.

 1.  BOLT HOLE
 2.  GRID
 3.  LINE ANGLE
 4.  TAPPING
 5.  DRILLING
 6.  BORING
 7.  POCKET
 8.  PECK
 9.  TEST PATRN
10.  BACK

MENU : HOLE PATTERN            O0000 N00000

> _
MDI **** *** ***      16:05:59
[ MACRO ] [ MENU ] [  OPR  ] [     ] [(OPRT)]

HOLE PATTERN : This is the menu title.  An arbitrary character string
consisting of up to 12 characters can be specified.

BOLT HOLE : This is the pattern name.  An arbitrary character
string consisting of up to 10 characters can be
specified, including katakana.

The machine tool builder should specify the character strings for the menu
title and pattern name using the custom macro, and load the character
strings into program memory as a subprogram of program No. 9500.

16.1
DISPLAYING THE
PATTERN MENU



PROGRAMMING
16. PATTERN DATA INPUT

FUNCTION B–64124EN/01

364

Menu title : C1 C2 C3 C4 C5 C6 C7 C8 C9C10 C11 C12
C1,C2, ,C12 : Characters in the menu title (12 characters)
Macro instruction
G65 H90 Pp Qq Rr Ii Jj Kk :
H90:Specifies the menu title
p : Assume a1 and a2 to be the codes of characters C1 and C2. Then, 

P��� ���

Code a2 of character C2

Code a1 of character C1

q : Assume a3 and a4 to be the codes of characters C3 and C4.  Then, 
q=a3103+a4

r : Assume a5 and a6 to be the codes of characters C5 and C6.  Then, 
r=a5103+a6

i : Assume a7 and a8 to be the codes of characters C7 and C8.  Then, 
i=a7103+a8

j : Assume a9 and a10 to be the codes of characters C9 and C10.  Then, 
j=a9103+a10

k : Assume a11 and a12 to be the codes of characters C11 and C12.Then,
k=a11103+a12

Example)  If the title of the menu is�HOLE PATTERN” then the macro
 instruction is as follows:

G65 H90 P072079 Q076069 R032080
HO LE P

 I065084 J084069 K082078;
AT TE RN

For codes corresponding to these characters, refer to the Table
16.3 (a)  in II–16.3.

� .
��� ��		
���

������!��" ��� 	���

�����



PROGRAMMINGB–64124EN/01
16. PATTERN DATA INPUT

FUNCTION

365

Pattern  name: C1 C2 C3 C4 C5 C6 C7 C8 C9C10
C1, C2, ,C10: Characters in the pattern name (10 characters)
Macro instruction
G65 H91 Pn Qq Rr Ii Jj Kk ;
H91: Specifies the menu title
n : Specifies the menu No. of the pattern name

n=1 to 10 
q : Assume a1 and a2 to be the codes of characters C1 and C2.  Then,

q=a1�103+a2
r : Assume a3 and a4 to be the codes of characters C3 and C4.  Then,

r=a3�103+a4
i : Assume a5 and a6 to be the codes of characters C5 and C6.  Then,

i=a5�103+a6
j : Assume a7 and a8 to be the codes of characters C7 and C8.  Then,

j=a7�103+a8
k : Assume a9 and a10 to be the codes of characters C9 and C10.  Then,

k=a9�103+a10
Example)  If the pattern name of menu No. 1 is �BOLT HOLE ” then the

  macro instruction is as follows.
G65 H91 P1 Q066079 R076084 I032072 J079076 K069032 ; 

BO LT H OL E
For codes corresponding to these characters, refer to the Table 16.3
(a)  in II–16.3.

To select a pattern from the pattern menu screen, enter the corresponding
pattern No.  The following is an example.

1 INPUT

The selected pattern No. is assigned to system variable #5900.  The
custom macro of the selected pattern can be started by starting a fixed
program (external program No. search) with an external signal then
referring to the system variable #5900 in the program.

NOTE
If each characters of P, Q, R, I, J, and K are not specified in
a macro instruction, two spaces are assigned to each
omitted character.

� .
��� �����������

���������" ��� �
�����

�
	�

� *
����� 8�< ���������



PROGRAMMING
16. PATTERN DATA INPUT

FUNCTION B–64124EN/01

366

Custom macros for the menu title and hole pattern names.

 1.  BOLT HOLE
 2.  GRID
 3.  LINE ANGLE
 4.  TAPPING
 5.  DRILLING
 6.  BORING
 7.  POCKET
 8.  PECK
 9.  TEST PATRN
10.  BACK

MENU : HOLE PATTERN            O0000 N00000

> _
MDI **** *** ***      16:05:59
[ MACRO ] [ MENU ] [ OPR ] [     ] [ (OPRT) ]

O9500 ; 
N1 G65 H90 P072079 Q076069 R032080 I065084 J084069 K082078 ; HOLE PATTERN

N2 G65 H91 P1 Q066079 R076084 I032072 J079076 K069032 ; 1.BOLT HOLE

N3 G65 H91 P2 Q071082 R073068 ; 2.GRID

N4 G65 H91 P3 Q076073 R078069 I032065 J078071 K076069 ; 3.LINE ANGLE

N5 G65 H91 P4 Q084065 R080080 I073078 J071032 ; 4.TAPPING

N6 G65 H91 P5 Q068082 R073076 I076073 J078071 ; 5.DRILLING

N7 G65 H91 P6 Q066079 R082073 I078071 ; 6.BORING

N8 G65 H91 P7 Q080079 R067075 I069084 ; 7.POCKET

N9 G65 H91 P8 Q080069 R067075 ; 8.PECK

N10 G65 H91 P9 Q084069 R083084 I032080 J065084 K082078 ; 9.TEST PATRN

N11 G65 H91 P10 Q066065 R0670750 ; 10.BACK

N12 M99 ;

�
	���



PROGRAMMINGB–64124EN/01
16. PATTERN DATA INPUT

FUNCTION

367

When a pattern menu is selected, the necessary pattern data is
displayed.

NO.  NAME DATA     COMMENT
500  TOOL 0.000
501  STANDARD X 0.000 *BOLT HOLE
502  STANDARD Y 0.000     CIRCLE*
503  RADIUS 0.000 SET PATTERN
504  S. ANGL 0.000 DATA TO VAR.
505  HOLES NO 0.000 NO.500–505.
506 0.000
507 0.000

ACTUAL POSITION (RELATIVE)
   X    0.000    Y   0.000
   Z    0.000

VAR. : BOLT HOLE              O0001 N00000

> _
MDI **** *** ***      16:05:59
[ MACRO ] [ MENU ] [  OPR  ] [     ] [(OPRT)]

BOLT HOLE : This is the pattern data title.  A character string
 consisting of up to 12 characters can be set.

TOOL : This is the variable name.  A character string
consisting of up to 10 characters can be set.

*BOLT HOLE CIRCLE* :
This is a comment statement.  A character string
can be displayed consisting of up to 8 lines, 12
characters per line.

(It is permissible to use katakana in a character string or line.)
The machine tool builder should program the character strings of pattern
data title, pattern name, and variable name using the custom macro, and
load them into the program memory as a subprogram whose No. is 9500
plus the pattern No. (O9501 to O9510).

16.2
PATTERN  DATA
DISPLAY



PROGRAMMING
16. PATTERN DATA INPUT

FUNCTION B–64124EN/01

368

Menu title  : C1 C2 C3 C4 C5 C6 C7 C8 C9C10C11C12
C1 ,C2,…, C12 : Characters in the menu title (12 characters)
Macro instruction
G65 H92 Pp Qq Rr Ii Jj Kk ;
H92 : Specifies the pattern name
p : Assume a1 and a2 to be the codes of characters C1 and C2.  Then,

p=a1�103+a2
q : Assume a3 and a4 to be the codes of characters C3 and C4.  Then, 

q=a3�103+a4
r : Assume a5 and a6 to be the codes of characters C5 and C6.  Then,

r=a5�103+a6
i : Assume a7 and a8 to be the codes of characters C7 and C8.  Then,

i=a7�103+a8
j : Assume a9 and a10 to be the codes of characters C9 and C10.  Then, 

j=a9�103+a10
k : Assume a11 and a12 to be the codes of characters C11 and C12.  Then,

k=a11�103+a12
Example)  Assume that the pattern data title is �BOLT HOLE .” The 

macro instruction is given as follows:

G65 H92 P066079 Q076084 R032072 I079076 J069032;
BO LT H OL E

For codes corresponding to these characters, refer to the
Table 16.3 (a)  in II–16.3.

Variable name  : C1 C2 C3 C4 C5 C6 C7 C8 C9C10
C1, C2,…, C10 : Characters in the variable name (10 characters)
Macro instruction
G65 H93 Pp Qq Rr Ii Jj Kk ; 
H93 : Specifies the variable name
p : Specifies the No. of the variable

p=100 to 149 (199), 500 to 531 (999)
q : Assume a1 and a2 to be the codes of characters C1 and C2.  Then, 

q=a1�103+a2
r : Assume a3 and a4 to be the codes of characters C3 and C4.  Then, 

r=a3�103+a4
i : Assume a5 and a6 to be the codes of characters C5 and C6.  Then,

i=a5�103+a6
j : Assume a7 and a8 to be the codes of characters C7 and C8.  Then,

j=a7�103+a8
k : Assume a9 and a10 to be the codes of characters C9 and C10.  Then,

k=a9�103a+a10
Example)  Assume that the variable name of the variable No. 503 is

“RADIUS.”  The macro instruction is given as follows:

G65 H93 P503 Q082065 R068073 I085083 ; 
RA DI US

For codes corresponding to these characters, refer to the Table 16.3 (a)
in II–16.3.

.
��� �����������

������!��" ��� �
�����

�
�
 �����

(the menu title)

� .
��� �����������

������!��" ��� �
��
���

�
	�



PROGRAMMINGB–64124EN/01
16. PATTERN DATA INPUT

FUNCTION

369

One comment line: C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12
C1, C2,…, C12 :  Character string in one comment line (12 characters)
Macro instruction
G65 H94 Pp Qq Rr Ii Jj Kk ; 
H94 : Specifies the comment
p : Assume a1 and a2 to be the codes of characters C1 and C2.  Then,

p=a1�103+a2
q : Assume a3 and a4 to be the codes of characters C3 and C4.  Then,

q=a3�103+a4
r : Assume a5 and a6 to be the codes of characters C5 and C6.  Then, 

r=a5�103+a6
i : Assume a7 and a8 to be the codes of characters C7 and C8.  Then, 

i=a7�103+a8
j : Assume a9 and a10 to be the codes of characters C9 and C10.  Then,

j=a9�103+a10
k : Assume a11 and a12 to be the codes of characters C11 and C12.  Then,

k=a11�103+a12
A comment can be displayed in up to eight lines.  The comment consists
of the first line to the eighth line in the programmed sequence of G65 H94
for each line.
Example)  Assume that the comment is “BOLT HOLE.”  The macro

  instruction is given as follows:

G65 H94 P042066 Q079076 R084032 I072079 J076069;
*B OL T HO LE

For codes corresponding to these characters, refer to the Table 16.3
(a)  in II–16.3.

� .
��� ����������� ��

�������� 
 ��		���



PROGRAMMING
16. PATTERN DATA INPUT

FUNCTION B–64124EN/01

370

Macro instruction to describe a parameter title , the variable name, and
a comment.

NO.  NAME DATA     COMMENT
500  TOOL 0.000
501  STANDARD X 0.000 *BOLT HOLE
502  STANDARD Y 0.000     CIRCLE*
503  RADIUS 0.000 SET PATTERN
504  S. ANGL 0.000 DATA TO VAR.
505  HOLES NO 0.000 NO.500–505.
506 0.000
507 0.000

ACTUAL POSITION (RELATIVE)
   X    0.000    Y    0.000
   Z    0.000

VAR. : BOLT HOLE              O0001 N00000

> _
MDI **** *** ***      16:05:59
[ MACRO ] [ MENU ] [  OPR  ] [     ] [(OPRT)]

O9501 ; 
N1 G65 H92 P066079 Q076084 R032072 I079076 J069032 ; VAR : BOLT HOLE

N2 G65 H93 P500 Q084079 R079076 ; #500 TOOL

N3 G65 H93 P501 Q075073 R074085 I078032 J088032 ; #501 KIJUN X

N4 G65 H93 P502 Q075073 R074085 I078032 J089032 ; #502 KIJUN Y

N5 G65 H93 P503 Q082065 R068073 I085083 ; #503 RADIUS

N6 G65 H93 P504 Q083046 R032065 I078071 J076032 ; #504 S.ANGL

N7 G65 H93 P505 Q072079 R076069 I083032 J078079 K046032 ; #505 HOLES NO

N8 G65 H94 ; Comment

N9 G65 H94 P042066 Q079076 R084032 I072079 J076069 ; *BOLT HOLE

N10 G65 H94 R032067 I073082 J067076 K069042 ; CIRCLE*

N11 G65 H94 P083069 Q084032 080065 I084084 J069082 K078032 ; SET PATTERN

N12 G65 H94 P068065 Q084065 R032084 I079032 J086065 K082046 ; DATA NO VAR.

N13 G65 H94 P078079 Q046053 R048048 I045053 J048053 K046032; No.500–505

N14 M99 ;

Examples



PROGRAMMINGB–64124EN/01
16. PATTERN DATA INPUT

FUNCTION

371

Table. 16.3 (a)  Characters and codes to be used 
for the pattern data input function

Char-
acter Code Comment

Char-
acter Code Comment

A 065 6 054
B 066 7 055
C 067 8 056
D 068 9 057
E 069 032 Space
F 070 ! 033 Exclama–

tion mark
G 071 ” 034 Quotation

mark
H 072 # 035 Hash sign
I 073 $ 036 Dollar sign
J 074 % 037 Percent
K 075 & 038 Ampersand
L 076 ’ 039 Apostrophe
M 077 ( 040 Left 

parenthesis
N 078 ) 041 Right

parenthesis
O 079 * 042 Asterisk
P 080 + 043 Plus sign
Q 081 , 044 Comma
R 082 – 045 Minus sign
S 083 . 046 Period
T 084 / 047 Slash
U 085 : 058 Colon
V 086 ; 059 Semicolon
W 087 < 060 Left angle

bracket
X 088 = 061 Equal sign
Y 089 > 062 Right angle

bracket
Z 090 ? 063 Question

mark
0 048 @ 064 HAt”mark
1 049 [ 091 Left square

bracket
2 050 ^ 092
3 051 ¥ 093 Yen sign
4 052 ] 094 Right squar

bracket
5 053 _ 095 Underscore

NOTE
Right and left parentheses cannot be used.

16.3
CHARACTERS  AND
CODES TO BE USED
FOR THE PATTERN
DATA INPUT
FUNCTION



PROGRAMMING
16. PATTERN DATA INPUT

FUNCTION B–64124EN/01

372

Table 16.3 (b)  Numbers of subprograms employed in the pattern data input function

Subprogram No. Function

O9500 Specifies character strings displayed on the pattern data menu.

O9501 Specifies a character string of the pattern data corresponding to pattern No.1

O9502 Specifies a character string of the pattern data corresponding to pattern No.2

O9503 Specifies a character string of the pattern data corresponding to pattern No.3

O9504 Specifies a character string of the pattern data corresponding to pattern No.4

O9505 Specifies a character string of the pattern data corresponding to pattern No.5

O9506 Specifies a character string of the pattern data corresponding to pattern No.6

O9507 Specifies a character string of the pattern data corresponding to pattern No.7

O9508 Specifies a character string of the pattern data corresponding to pattern No.8

O9509 Specifies a character string of the pattern data corresponding to pattern No.9

O9510 Specifies a character string of the pattern data corresponding to pattern No.10

Table. 16.3 (c)  Macro instructions used in the pattern data input function

G code H code Function

G65 H90 Specifies the menu title.

G65 H91 Specifies the pattern name.

G65 H92 Specifies the pattern data title.

G65 G93 Specifies the variable name.

G65 H94 Specifies the comment.

Table. 16.3 (d)  System variables employed in the pattern data input function

System variable Function

#5900 Pattern No. selected by user.



PROGRAMMINGB–64124EN/01
17. PROGRAMMABLE PARAMETER

ENTRY (G10)

373

17 PROGRAMMABLE PARAMETER ENTRY (G10)
The values of parameters can be entered in a lprogram. This function is
used for setting pitch error compensation data when attachments are
changed or the maximum cutting feedrate or cutting time constants are
changed to meet changing machining conditions.

G10L50; Parameter entry mode setting
N_R_; For parameters other than the axis type
N_P_R_; For axis type parameters

G11; Parameter entry mode cancel

N_: Parameter No. (4digids) or compensation position No. for pitch errors
compensation +10,000 (5digid)

R_: Parameter setting value (Leading zeros can be omitted.)
P_: Axis No. 1 to 8 (Used for entering axis type parameters)

.�
���" �� ��		
��

���	
�

Do not use a decimal point in a value set in a parameter (R_).
a decimal point cannot be used in a custom macro variable for R_either.

Specify an axis number (P_) from 1 to 8 (up to eight axes) for an axis type
parameter. The control axes are numbered in the order in which they are
displayed on theCNC display.
For example, specity P2 for the control axis which is displayed second.

WARNING
1 Do not fail to perform reference point return manually after

changing the pitch error compensation data or backlash
compensation data.  Without this, the machine position can
deviate from the correct position.

2 The canned–cycle mode must be cancelled before entering
of parameters.  When not cancelled, the drilling motion may
be activated.

NOTE
Other NC statements cannot be specified while in
parameter input mode.

General

Format

Explanations
� *
�
	���� ������"

�
��� (R_)

� ���� 8�<�*��



PROGRAMMING
17. PROGRAMMABLE PARAMETER

ENTRY (G10) B–64124EN/01

374

1. Set bit 2 (SBP) of bit type parameter No. 3404

G10L50 ; Parameter entry mode
N3404 R 00000100 ; SBP setting
G11 ; cancel parameter entry mode 

2. Change the values for the Z–axis (3rd axis) and A–axis (4th axis) in
axis type parameter No. 1322 (the coordinates of stored stroke limit
2 in the positive direction for each axis).

G10L50 ; Parameter entry mode
N1322P3R4500 ; Modify Z axis
N1322P4R12000 ; Modify A axis
G11 ; cancel parameter entry mode 

Examples



PROGRAMMINGB–64124EN/01
18. MEMORY OPERATION USING

FS10/11 TAPE FORMAT

375

18 MEMORY OPERATION USING FS10/11 TAPE FORMAT
Memory operation of the program registered by FS10/11 tape format is
possible  with setting of the setting parameter (No. 0001#1).

Data formats for cutter compensation, subprogram calling, and canned
cycles are different between this Series and Series 10/11.  The Series 10/11
data formats can be processed for memory operation.Other data formats
must comply with this Series.  When a value out of the specified range for
this Series is registered, an alarm occurs.  Functions not available in this
Series cannot be registered or used for memory operation.

Offset numbers are specified by address D in the Series 10/11.  When an
offset number is specified by address D, the modal value specified by
address H is replaced with the offset number specified by address D.

If a subprogram number of more than four digits is specified, the four
low–order digits are regarded as the subprogram number.  If no repeat
count is specified, 1 is assumed.

Table 18 (a)  Subprogram call data format

CNC Data format

Series 10/11 M98 P����� L���� ;
P : Subprogram number
L : Repetition count

Series 0i

The Series 10/11 and Series 16/18/21 use different addresses for the repeat
count for canned cycles as listed in Table 18 (b).

Table 18 (b)  Address for times of repetition of canned cycle

CNC Address

Series 10/11 L

Series 0i K

General

Explanations

� Address for the cutter
compensation offset
number

� Subprogram call

M98 P����  ���� ;

   Repetition count   Subprogram number

� Address for the canned
cycle repetition count



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

376

19 HIGH SPEED CUTTING FUNCTIONS



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

377

When an arc is cut at a high speed in circular interpolation, a radial error
exists between the actual tool path and the programmed arc.  An
approximation of this error can be obtained from the following
expression:

0

�



r

∆��Error

∆r : Maximum radial error (mm)
 v : Feedrate (mm/s)
 r : Arc radius (mm)
T1 : Time constant (s) for exponential acceleration/deceleration of

cutting feed
T2 : Time constant of the servo motor (s)

∆r= (T12+T22)2
1

�

3�

Programmed path

Actual path

When actual machining is performed, radius r of the arc to be machined
and permissible error ∆r are given.  Then, maximum allowable feedrate
v (mm/min) is determined from the above expression.

The function for clamping the feedrate by the arc radius automatically
clamps the feedrate of arc cutting to the value set in a parameter.  This
function is effective when the specified feedrate may cause the radial error
for an arc with a programmed radius to exceed the permissible degree of
error.

For details, refer to the relevant manual published by the machine tool
builder.

19.1
����#

 ;�.*68� => �� 

���69-



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

378

This function is designed for high–speed precise machining.  With this
function, the delay due to acceleration/deceleration and the delay in the
servo system which increase as the feedrate becomes higher can be
suppressed.
The tool can then follow specified values accurately and errors in the
machining profile can be reduced.
This function becomes effective when advanced preview control mode is
entered.
For details, refer to the relevant manual published by the machine tool
builder.

P1 : Turn on advanced preview control mode.
P0 : Turn off advanced preview control mode.

G08 P_

In advanced preview control mode, the following functions are available:
(1) Linear acceleration/deceleration before interpolation
(2) Automatic corner deceleration function
For details on the above functions, see the Connection Manual (Function)
(B-64113EN-1).  Each function, specific parameters are provided.

Advanced preview control mode is canceled by reset.

Specify G08 code only in a block.

In the advanced preview control mode, the functions listed below can be
specified.

NOTE
To use a function other than the following functions, turn the
advanced preview control mode off, specify the desired
function, then turn the mode on again.

⋅ Inverse time feed
⋅ Axis control by the PMC

(Bits 4 (G8R) and 3 (G8C) of parameter No. 8004 can be set to also use
this function in the advanced preview control mode.)

⋅ Single direction positioning
⋅ Polar coordinate command
⋅ Helical interpolation
⋅ Rigid tapping

(Bit 5 (G8S) of parameter No. 1602 can be set to also use this function
in the look–ahead control mode.  The serial spindle parameters must
also be set.)

19.2
��?�8 � *�?6$

 08#�0; ��)'�

Format

Explanations

� ��
��
��� ���������

� �����

Limitations

� G08 command

� Functions that can be
specified



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

379

⋅ Program restart
⋅ External deceleration
⋅ Simple synchronous control
⋅ Sequence number comparison and stop
⋅ Position switch

(Bit 3 (PSF) of parameter No. 6901 can be set to also use this function
in the advanced preview control mode.  Setting this parameter to 1 
changes the timing when the signal is output.  So, it may become 
necessary to change the ladder.)

⋅ Cs contour control
(Bit 5 (G8S) of parameter No. 1602 can be set to also use this function
in the advanced preview control mode.  The serial spindle parameters
must also be set.)

⋅ Constant surface speed control
⋅ Spindle synchronous control
⋅ Custom macro B
⋅ Arbitrary angle chamfering/corner rounding
⋅ Inch/metric conversion
⋅ Programmable mirror image
⋅ Canned cycle
⋅ Automatic corner override 

(Only the internal circular cutting feedrate change is valid.)
⋅ Scaling
⋅ Coordinate system rotation
⋅ Workpiece coordinate system
⋅ Workpiece coordinate system preset
⋅ Cutter compensation C
⋅ Corner circular interpolation
⋅ Tool offset
⋅ Tool life management
⋅ Tool length measurement
⋅ Graphic display
⋅ Dynamic graphic display
⋅ Feed per revolution



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

380

The AI advanced preview control/AI contour control function is provided
for high–speed, high–precision machining.  This function enables
suppression of acceleration/deceleration delays and servo delays that
become larger with increases in the feedrate and reduction of machining
profile errors.
Look–ahead acceleration/deceleration before interpolation is enabled for
up to 20 blocks in AI advanced preview control or for up to 40 blocks in
AI contour control.  This enables execution of smooth acceleration/
deceleration extending over multiple blocks and higher machining.

This function is enabled by setting the AI advanced preview control or AI
contour control mode.

G05.1  Q _  ;
Q1 :  AI advanced preview control/AI contour control mode on
Q0 :  AI advanced preview control/AI contour control mode off

NOTE
1 Always specify G05.1 in an independent block.
2 The AI advanced preview control/AI contour control mode

is also canceled by a reset.
3 When the AI contour control option is installed, the AI

contour control mode is enabled.

19.3
AI ADVANCED
PREVIEW CONTROL
FUNCTION/
AI CONTOUR
CONTROL FUNCTION

Overview

Explanation

� Format



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

381

The functions listed below are valid in the AI advanced preview
control/AI contour control mode:

⋅ Look–ahead linear acceleration/deceleration before interpolation
⋅ Look–ahead bell–shaped acceleration/deceleration before interpolation

(The option of look–ahead bell–shaped acceleration/deceleration 
before interpolation is required.)

⋅ Automatic corner deceleration
⋅ Feedrate clamping by acceleration
⋅ Feedrate clamping by arc radius
⋅ Block overlap
⋅ Advanced preview feed forward

For a cutting feed command in the feed per minute mode, linear
acceleration/deceleration can be applied before interpolation, that is, for
the specified feedrate by reading up to 20 blocks (in the AI advanced
preview control mode) or 40 blocks (in the AI contour control mode) in
advance.  With acceleration/deceleration after interpolation, the
interpolated data is changed because acceleration/deceleration is applied
to the data.  With acceleration/deceleration before interpolation, the
interpolated data cannot be changed by acceleration/deceleration because
acceleration/ deceleration is applied to the feedrate data before
interpolation.  For this reason, the interpolated data can always be applied
to the specified straight line or curve to eliminate machining profile errors
caused by acceleration/deceleration delays.

Linear interpolation, 
circular interpolation, etc.

Distribution
pulse

Specified
feedrate

Linear accelera-
tion/deceleration 

before 
interpolation

Feedrate 
calculation

Servo 
control

Acceleration/
deceleration 

after 
interpolation

Interpolation 
calculation

� Functions valid in the AI
advanced preview
control/AI contour
control mode

� Look–ahead linear
acceleration/deceleration
before interpolation



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

382

(Example of deceleration)

Deceleration is started in a prior block so that the feedrate specified for
the target block is reached at the execution.

Feedrate

 N1

 F2

 F1

Point1

Point2

 Specified feedrate

 Feedrate determined by 
acceleration/deceleration 
before interpolation

 F3

N2
Time

To decelerate from feedrate F3 to F2, deceleration must start with point 1.
To decelerate from feedrate F2 to F1, deceleration must start with point 2.

Multiple blocks can be read in advance to perform deceleration extending
over several blocks.

(Example of acceleration)

Acceleration is performed so that the feedrate specified for the target
block is reached at the execution.

Time

Feedrate determined by 
acceleration/deceleration 
before interpolation

Feedrate

 

 

 N1

 F3

 F2

 F1
N2

Specified feedrate



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

383

Linear acceleration/deceleration before interpolation for cutting feed in
the AI advanced preview control/AI contour control mode can be changed
to bell–shaped acceleration/deceleration before interpolation.  With
bell–shaped acceleration/deceleration before interpolation, smooth
acceleration/deceleration can be applied to the cutting feedrate to reduce
the shock on the machine by fluctuations in acceleration that are involved
in changes in the cutting feedrate.
To use this function, the option of look–ahead bell–shaped acceleration/
deceleration before interpolation is required.

Time

Acceleration

tbtb

tbtb

ta ta

tc tc

tbtbtbtb

tata

tctc

Feedrate

Time

 
Linear acceleration/
deceleration

 Bell–shaped acceleration/
deceleration

ta Depends on the linear acceleration.
tb Time constant for bell–shaped 

acceleration/deceleration
tc Bell–shaped acceleration/

deceleration time

tc = ta + tb
ta is not constant and depends 
on the specified feedrate.

ta =
Specified feedrate

Linear acceleration

tb is constant.

tc = ta + tb12.

 
Linear acceleration/
deceleration

 Bell–shaped acceleration/
deceleration

ta Depends on the linear acceleration.
tb Time constant for bell–shaped 

acceleration/deceleration
tc Bell–shaped acceleration/

deceleration time

� Look–ahead bell–shaped
acceleration/deceleration
before interpolation



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

384

When the feedrate is changed, deceleration and acceleration are
performed as follows:

For deceleration: Bell–shaped deceleration is started in the preceding
block so that deceleration terminates by the beginning of the block in
which the feedrate is changed.
For acceleration: Bell–shaped acceleration is started after the
beginning of the block in which the feedrate is changed.

Deceleration

Fa

Fb

Time
N2N1

Acceleration

Feedrate

Fb

Fa

Time
N2N1

Between contiguous two blocks, the feedrate difference for an axis may
exceed the setting (parameter No. 1783).  In this case, the feedrate at the
corner is calculated as follows based on the axis for which the ratio of the
actual feedrate difference to the allowable feedrate difference is the
largest.  Deceleration is performed so that the feedrate is reached at the
interface of the blocks.
The change in the feedrate for each axis (Vx, Vy, ...) during movement at
the specified feedrate F is compared with the setting of parameter No.
1783 (Vprm–x, Vprm–y, ...).  If the change in the feedrate for any axis
exceeds the setting of the parameter, the following expression is used:

Rmax � max� Vx
Vprm � x

,
Vy

Vprm � y
, , ,�

The required feedrate (Fc) is obtained as follows and deceleration is
performed at the corner:

Fc � F � 1
Rmax

For example, assume that the tool move direction changes by 90 degrees
from movement along the X–axis to that along the Y–axis.  Also assume
that the specified feedrate is 1000 mm/min and the allowable feedrate
difference (parameter No. 1783) is 500 mm/min.  Deceleration is
performed as shown in the figure below:

� Automatic corner
deceleration



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

385

F
ee

dr
at

e 
al

on
g 

th
e 

X
–a

xi
s

N1

N2

N2N1

F1000

 F500

F1000

 F500

F1000

 F500

N2

N1

Tool path when deceleration
is not performed at the corner

Tool path when deceleration is
performed at the corner

N1 G01 G91 X100. F1000 ;
N2 Y100. ;

Feedrate

Feedrate

Feedrate

 When deceleration is not performed 
at the corner

 When deceleration is performed 
at the corner

Time

Time

Time

F
ee

dr
at

e 
al

on
g 

th
e 

Y
–a

xi
s

Ta
ng

en
tia

l fe
ed

ra
te



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

386

When continuous minute straight lines form curves as shown in the
example in the figure below, the feedrate difference for each axis at each
corner is not so large.  For this reason, deceleration according to the
feedrate difference is not effective.  Continuous small feedrate differences
make a large acceleration for each axis as a whole, however.

In this case, deceleration is performed to suppress the shock on the
machine and machining errors caused by too large acceleration.  The
feedrate is decreased so that the acceleration for each axis that is obtained
using the expression below does not exceed the allowable acceleration
setting for all axes.

The allowable acceleration is set based on the maximum cutting feedrate
(parameter No. 1432) and time required to reach the feedrate (parameter
No. 1785).

Acceleration for each axis =

Feedrate difference for each axis at each corner

max�Travel distance in preceding blockF , Travel distance in following blockF �

The decreased feedrate is obtained for each corner.  The decreased feedrate
obtained at the start or end point of the block, whichever is lower, is used
as the actual feedrate.

(Example) In the example below, deceleration is performed because the
acceleration (gradient of each dotted line in the feedrate
graphs) from N2 to N4 and from N6 to N8 is too large.

N9

N5

N1

N2
N3

N4

N6

N7

N8

� Feedrate clamping by
acceleration



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

387

N9N5N1N9N5N1

The maximum allowable feedrate v for an arc of radius r specified in a
program is calculated using the arc radius R and maximum allowable
feedrate V (setting of a parameter) for the radius as follows so that the
acceleration in an arc block does not exceed the allowable value.  If the
specified feedrate exceeds the feedrate v, the feedrate is automatically
clamped to the feedrate v.

Maximum allowable feedrate � V
2

R
R : Arc radius V : Feedrate for arc radius R

then, the maximum allowable feedrate v for an arc of radius r can be
obtained using the following expression:

v � (r�R) � V�

NOTE
As the specified arc radius becomes smaller, the maximum
allowable feedrate v becomes lower.  If the maximum
allowable feedrate v is lower than the setting of parameter
No. 1732 (lower feedrate limit for feedrate clamping by arc
radius), it can be assumed to be the setting of the parameter
to prevent the maximum allowable feedrate from becoming
too low.

� Feedrate clamping by
arc radius



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

388

By setting the corresponding parameter, the linear or non–linear
interpolation type can be selected.  (In the AI nano contour control mode,
the non–linear interpolation type cannot be selected.)
When the linear interpolation type is selected, acceleration/deceleration
is performed before interpolation and linear interpolation type
positioning is used for movement.  For acceleration/deceleration, linear
or bell–shaped acceleration/deceleration can be selected by setting the
corresponding parameter.
The feedrate during movement and acceleration for acceleration/deceleration
before interpolation are obtained as follows:

(1) Feedrate during movement

The minimum value obtained using the following expression for each
axis along which movement is done is used as the feedrate during
movement:

Rapid traverse rate for each axis (parameter No. 1420) =
Amount of travel in block

Amount of travel for each axis

(2) Acceleration for acceleration/deceleration before interpolation

� For linear acceleration/deceleration

The minimum value obtained using the following expression for each
axis along which movement is done is used as the acceleration for linear
acceleration/deceleration before interpolation during movement:

Rapid traverse rate for each axis (parameter No. 1420)
Time constant for each axis (parameter No. 1620)

�

Amount of travel in block
Amount of travel for each axis

� For bell–shaped acceleration/deceleration

The time constant set in parameter No. 1621 (time constant for
bell–shaped acceleration/deceleration for rapid traverse for each axis) for
the axis for which the minimum value is obtained using the above
expression is applied to the feedrate obtained using the above
acceleration.

� Rapid traverse



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

389

tc = ta + tb
The value of ta is not constant and
depends on the rapid traverse rate
and the time constant of the rapid
traverse rate for the specified axis.  
The value of tb depends on the axis.tbtbtbtb

tata

tctc

Feedrate

Time

 
Linear acceleration/
deceleration

 Bell–shaped acceleration/
deceleration

ta Depends on the linear acceleration.
tb Time constant for bell–shaped 

acceleration/deceleration
tc Bell–shaped acceleration/

deceleration time

If the feedrate during movement is F, the acceleration for linear
acceleration/deceleration is A, the time constant for bell–shaped
acceleration/deceleration is T, the time required for acceleration/
deceleration can be obtained as follows:

Time required for acceleration/deceleration
= F/A (linear acceleration/deceleration)
= F/A+T (bell–shaped acceleration/deceleration)

Feedrate

F

Time
T/2T/2 F/A

TT

F/A : Time required for linear acceleration

T   : Time required for rounding the corner



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

390

When the non–linear interpolation type is selected, movement is
performed at the feedrate set in parameter No. 1420 with
acceleration/deceleration set in parameter No. 1620.  The corresponding
value can be set in parameter No. 1621 to select bell–shaped
acceleration/deceleration.

NOTE
Rapid traverse block overlap is disabled.

In the following tables, AI control means the AI advanced preview
control/AI contour control mode.

(1)Parameters related to linear acceleration/deceleration before
interpolation

Parameter

Parameter number

Parameter
Normal

Ad-
vanced
preview
control

AI 
contour

Acceleration/deceleration type (A or B) FWB/1602#0 None

Parameter 1 for setting the acceleration 1630 1770

Parameter 2 for setting the acceleration 1631 1771

Feedrate at which an overtravel alarm occurs 1784

(2)Parameters related to automatic corner deceleration

Parameter

Parameter number

Parameter
Normal

Ad-
vanced
preview
control

AI 
contour

Method for determining whether to perform
automatic corner deceleration (angle/fee-
drate difference)

CSD/1602#4 None

Lower feedrate limit (control according to the
angle)

1778 1777 None

Angle at which automatic corner deceleration
is performed (control according to the angle)

1740 1779 None

Allowable feedrate difference for all axes
(control according to the feedrate difference)

1780 None

Allowable feedrate difference for each axis
(control according to the feedrate difference)

1783

Acceleration/deceleration type 
(Type A/Type B)

FWB/1602#0 None

(3) Parameter related to feedrate clamping by acceleration

Parameter

Parameter number

Parameter
Normal

Ad-
vanced
preview
control

AI 
contour

Parameter for determining the allowable ac-
celeration

None 1785

� Corresponding
parameter numbers in
the normal mode,
advanced preview
control mode, and AI
advanced preview
control/AI contour
control mode



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

391

(4)Parameters related to feedrate clamping by arc radius

Parameter

Parameter number

Parameter
Normal

Ad-
vanced
preview
control

AI 
contour

Arc radius corresponding to the upper fee-
drate limit

1731

Upper feedrate limit at arc radius R 1730

Lower clamped feedrate limit 1732

(5)Other parameters

Parameter

Parameter number

Parameter
Normal

Ad-
vanced
preview
control

AI 
contour

Precision of radius errors in circular interpola-
tion

PCIR1/3403#0 None

Maximum cutting feedrate (common to all
axes)

1422 1431 1422

Maximum cutting feedrate (for each axis) 1430 1432

Rapid traverse movement type* LRP/1401#1 AIR/
7054#1

LRP/
1401#1

Time constant for bell–shaped acceleration/
deceleration for rapid traverse

1621 RBL/
1603#6

1621

Arc radius corresponding to the upper fee-
drate limit

1731



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

392

Num-
ber

Message Description

5110 IMPROPER G CODE

(G05.1  Q1 MODE)

An unspecifiable G code was specified in
the AI advanced preview control/AI con-
tour control mode.

5111 IMPROPER MODAL 
G CODE

(G05.1  Q1)

An unavailable modal G code was found
when the AI advanced preview control/AI
contour control mode was specified.

5112 G08 CAN NOT BE
COMMANDED

(G05.1  Q1)

The look–ahead control command (G08)
was specified in the AI advanced preview
control/AI contour control mode.

5114 CAN NOT ERROR IN
MDI MODE

(G05.1  Q1)

Intervention by manual operation was per-
formed during execution of the G28, G30,
or G53 command (linear interpolation
type) in the AI advanced preview control/
AI contour control mode.  After that, auto-
matic operation was restarted at a position
other than the stop position.

5156 ILLEGAL AXIS 
OPERATION

(AICC)

In the AI advanced preview control/AI con-
tour control mode, the controlled axis
selection signal (PMC axis control)
changed.

In the AI advanced preview control/AI con-
tour control mode, the simple synchronous
axis selection signal changed.

5157 PARAMETER 0

(AICC)

The setting of the parameter for specifying
the maximum cutting feedrate (No. 1422,
1432, or 1420) is 0.

The setting of the parameter for specifying
acceleration/deceleration before interpola-
tion (No. 1770 or 1771) is 0.

1) The advanced preview control function (G08P1) can also be specified.

2) When the total distance of blocks read in advance reaches the distance
for decelerating from the current feedrate, deceleration is started.
When look–ahead operation proceeds and the total distance of blocks
increases by termination of deceleration, acceleration is started again.
If a series of blocks with a small amount of travel are specified, the
deceleration and acceleration may be alternated, which prevents the
feedrate from being constant.  In this case, specify a lower feedrate.

3) When the dry run signal is inverted from ”0” to ”1” or from ”1” to ”0”
during movement along an axis, acceleration/deceleration is
performed to the specified feedrate without deceleration to feedrate 0.

4) If a non–movement block or one–shot G code command such as G04
is found in the AI advanced preview control/AI contour control mode,
the movement is decelerated and temporarily stopped in the preceding
block.

5) For acceleration/deceleration after interpolation, use linear or
bell–shaped acceleration/deceleration.  Exponential acceleration/
deceleration cannot be used.

Alarms

Notes



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

393

Axis control � : Can be specified. � : Cannot be specified.

Name Function

Number of controlled axes 3 to 4

Number of simultaneously con-
trolled axes

Up to 4

Axis name The basic three axes are fixed to X, Y, and Z.
Other axes are any of U, V, W, A, B, and C.

Least input increment 0.001 mm, 0.001 deg, 0.0001 inch

One–tenth input increment 0.0001 mm, 0.0001 deg, 0.00001 inch
One–tenth input increment for each axis cannot be
used.

Simple synchronous control � However, switching between synchronous and
normal operation cannot be performed during
automatic operation (when the automatic op-
eration signal (OP) is set to 1) regardless of
whether the AI advanced preview control/AI
contour control mode is set.  In this case,
switching causes a PS213 alarm.

Angular axis control �

Tandem control � However, full preloading is not allowed.

Inch/metric conversion 
(G20, G21)

� (*1)

Interlock �

Interlock for each axis � Movement along all axes stops.
To stop movement only along the interlock axis
in non–linear interpolation type positioning, set
bit 5 (AIL) of parameter No. 7054 to 1 and bit 4
(XIK) of parameter No. 1002 to 0.

Machine lock � When the machine lock signal for each axis
(MLK1 to MLK8) is turned on or off, accelera-
tion/deceleration is not applied to the axis for
which machine lock is performed.

Stroke limit check before move �

Mirror image �

Stored pitch error compensation �

Position switch � Set bit 3 (PSF) of parameter No. 6901 to 1.
When this parameter is set to 1, the signal out-
put timing changes.

Abnormal load detection �

Manual handle interruption � Manual handle interruption is disabled during
switching to the AI advanced preview control/AI
contour control mode.

External pulse synchronization �

Interpolation functions
� : Can be specified. � : Cannot be specified.

Name Function

Positioning (G00) �

Single direction positioning (G60) � To perform single direction positioning in the AI
advanced preview control/AI contour control
mode, set bit 4 (ADP) of parameter No. 7055 to
1.

Exact stop (G09) �

Exact stop mode (G61) �

Tapping mode (G63) �

Linear interpolation (G01) �

Circular interpolation (G02, G03) � (Circular interpolation for multiple quadrants is
enabled.)

� Specifications



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

394

Name Function

Dwell (G04) � (Dwell with the time in seconds or speed speci-
fied) For dwell with the speed specified, anoth-
er option is required.

Cylindrical interpolation (G07.1) �

Helical interpolation (G02, G03) � (Circular interpolation + linear interpolation for
up to two axes)
Specify the feedrate including the helical axis in
the feedrate command.

Threading and synchronous feed
(G33)

�

Skip function (G31) � (*2)

High–speed skip function (G31) � (*2)

Multistage skip function (G31 Px) � (*2)

Reference position return (G28) � (*2)

To execute G28 in the status in which the refer-
ence position is not established, set bit 2 (ALZ)
of parameter No. 7055 to 1.

Reference position return check
(G27)

� (*2)

2nd, 3rd, and 4th reference posi-
tion return (G30)

� (*2)

Normal direction control 
(G41.1, G42.1)

� Set bit 2 (ANM) of parameter No. 5484 to 1.

Continuous dressing �

In–feed control (G161) �

Index table indexing � (*2)

To set follow–up of the index table indexing
axis (fourth axis), set bit 7 (NAH4) of parameter
No. 1819 and bit 0 (NMI4) of parameter No.
7052 to 1.

Feed functions � : Can be specified. � : Cannot be specified.

Name Function

Rapid traverse rate Up to 240 m/min (0.001 mm)Rapid traverse rate

Up to 100 m/min (0.0001 mm)

Rapid traverse rate override F0, 25, 50, 100 %

Rapid traverse rate override in in-
crements of 1%

0 to 100 %

Feed per minute (G94) �

Feed per revolution (G95) �

Cutting feedrate clamp �

Bell–shaped acceleration/decel-
eration for rapid traverse

�

Linear acceleration/deceleration
after cutting feed interpolation

�

Bell–type acceleration/decelera-
tion after cutting feed interpolation

�

Linear acceleration/deceleration
before cutting feed interpolation

� (Up to 20 blocks are read in advance in the AI
advanced preview control mode.)
(Up to 40 blocks are read in advance in the AI
contour control mode.)

Feedrate override 0 to 254 %

Single–digit F code feed � To enable feedrate change using a manual
handle, set bit 1 (AF1) of parameter No. 7055
to 1.

Inverse time feed (G93) �

Override cancel �



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

395

Name Function

External deceleration �

Look–ahead bell–shaped accel-
eration/deceleration before inter-
polation

�

Program input � : Can be specified. � : Cannot be specified.

Name Function

Control in/control out command () �

Optional block skip command 
(/n:  n is a number.)

�

Absolute command (G90)/
incremental command (G91)

�

Decimal point programming/pock-
et calculator type decimal point
programming

�

10–fold input unit �

Plane selection (G17, G18, G19) �

Rotation axis specification �

Rotation axis roll over �

Polar coordinate command (G16) �

Local coordinate system (G52) � (*2)

Machine coordinate system (G53) � (*2)

Workpiece coordinate system 
(G54 to G59)
(G54.1Pxx)

�

Workpiece coordinate system
(G92)

� (*2)

Workpiece coordinate system pre-
set (G92.1)

� (*2)

Arbitrary angle chamfering/corner
rounding

�

Programmable data input (G10) � (*2)

Only the tool offset value, workpiece origin off-
set, and parameter can be changed.

Custom macro B � See the description of ”Notes on using custom
macros.”

Addition of custom macro com-
mon variables

�

Pattern data input �

Interruption type custom macro �

Canned cycle (G73 to G89) � (*2)

Initial level return (G98)/
point R level return (G99)

� (*2)

Small hole peck drilling cycle
(G83)

�

Arc radius R programming �

Automatic corner override (G62) � Set bit 0 (ACO) of parameter No. 7055 to 1.

Automatic corner deceleration �

Feedrate clamping by arc radius �

Scaling (G51) �

Coordinate system rotation (G68) �

Programmable mirror image 
(G51.1)

�

F10/11 tape format �



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

396

Auxiliary functions/spindle–speed functions
� : Can be specified. � : Cannot be specified.

Name Function

Miscellaneous function (Mxxxx) � The function code and function strobe signals
are output only.

Second auxiliary function (Bxxxx) � The function code and function strobe signals
are output only.

High–speed M/S/T/B interface �

Multiple miscellaneous function
specification

�

Spindle–speed function (Sxxxx) �

Spindle synchronous control �

Rigid tapping � (*2)

Set bit 5 (G8S) of parameter No. 1602 or bit 3
(ACR) of parameter No. 7051 to 1.

Tool compensation functions
� : Can be specified. � : Cannot be specified.

Name Function

Tool function (Txxxx) � The function code and function strobe signals
are output only.

Tool length compensation 
(G43, G44, G49)

�

Tool offset (G45 to G48) �

Cutter compensation C 
(G40, G41, G42)

�

Tool life management �

Automatic tool length measure-
ment

�

Other functions � : Can be specified. � : Cannot be specified.

Name Function

Cycle start/feed hold �

Dry run �

Single block �

Sequence number comparison
and stop

�

Program restart � For the time constant for acceleration/decelera-
tion during movement to the restart position,
the following parameters are used:
When exponential acceleration/deceleration is
used:  Parameter Nos. 1624 and 1625
When linear/bell–shaped acceleration/decel-
eration is used:  Parameter No. 1622
To set the acceleration/deceleration type, use
bits 0 and 1 of parameter No. 1610.

Rigid tapping return �

Macro executor 
(execution macro)

�

MDI operation �

Manual intervention �

NOTE
The above tables include a function that another option is
required for specifying.

1 Multiple blocks are not read in advance.



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

397

When G05.1 Q1 is specified, the modal G codes must be set as listed
below.  If one of these conditions is satisfied, a PS5111 alarm occurs.

G code(s) Description

G00
G01
G02
G03

Positioning
Linear interpolation
Circular interpolation (CW)
Circular interpolation (CCW)

G15 Polar coordinate command cancel

G40 Cutter compensation cancel

G40.1 Normal direction control cancel mode

G49 Tool length compensation cancel

G50 Scaling cancel

G50.1 Programmable mirror image cancel

G64 Cutting mode

G67 Macro modal call cancel

G69 Coordinate system rotation cancel

G80 Canned cycle cancel

G94 Feed per minute

G97 Constant surface speed control cancel

G160 In–feed control function cancel

�  ��������� ��� ������" ���

�6 
��
���� ������3

�������@�6 �������

������� 	���



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

398

In Look–ahead bell–shaped acceleration/deceleration before
interpolation, the speed during acceleration/deceleration is as shown in
the figure below.

Specified
speed

Speed

Non–linear
acceleration/deceleration

Non–linear
acceleration/deceleration

Linear
acceleration/deceleration

T1

T2 T2

Time

T1: Time determined from the specified speed and the specified acceleration
Specified acceleration: 

In case of AI contour control
Parameter No.1770/Parameter No.1771

T2:  Acceleration change time 
In case of AICC : Parameter No.1772

Fig.19.4 (a)

The time T1, shown above, varies with the specified speed.  If the
specified speed is low, the speed will be as shown below, causing linear
acceleration/deceleration not reaching the specified acceleration.

19.4
LOOK–AHEAD
BELL–SHAPED
ACCELERATION/DEC
ELERATION BEFORE
INTERPOLATION
TIME CONSTANT
CHANGE FUNCTION

General



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

399

Linear acceleration/deceleration not reaching specified acceleration/deceleration

Specified
speed

Speed

Time

T1T1

T2

Fig.19.4 (b)

If linear acceleration/deceleration not reaching the specified acceleration
occurs  in AI contour control mode as shown above, this function shortens
the acceleration/deceleration time by changing the internal acceleration
for acceleration/deceleration before interpolation and the bell–shaped
time constant in order to generate an acceleration/deceleration pattern as
close as possible to that permits optimum bell–shaped
acceleration/deceleration before interpolation for the specified speed.
Optimum bell–shaped acceleration/deceleration before interpolation, as
mentioned here, refers to bell–shaped acceleration/deceleration before
interpolation in which 
if T2 > T1, T1 and T2 are changed to T1’ and T2’ as shown in the figure
below so that linear acceleration/deceleration not reaching the specified
acceleration/deceleration does not occur.
This function becomes effective for the Acceleration /deceleration before
look–ahead interpolation in AI contour control mode.

Non–linear acceleration/deceleration

Specified speed

Speed

T1’

T2’ T2’

Time

Fig.19.4 (c)



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

400

The acceleration/deceleration reference speed is the feedrate used as the
reference for calculating optimum acceleration.  In Fig.19.4 (c), it is
equivalent to the specified speed used to determine T1’ and T2’.
There are three methods for specifying the acceleration/deceleration
reference speed.

(1) Specifying the speed using an F in a G05.1 Q1 block

(2) Setting the speed on Parameter

(3) Setting the speed specified with the F command issued at the start of
cutting as the reference speed

NOTE
This function is effective if BCG (No. 7055 bit 3) is 1.

If an F command is used in a G05.1 Q1 block, the speed specified with
the F command is assumed the acceleration/deceleration reference speed.
This acceleration/deceleration reference speed is cleared upon a reset.
After the acceleration/deceleration reference speed is cleared upon a reset
or after the power is turned off and then on again, the
acceleration/deceleration reference speed specified for parameter No.
7066 will be used.  (Method (2), described later)
If the acceleration/deceleration reference speed specified for the
parameter is 0, the feedrate assumed at the start of cutting will be assumed
the acceleration/deceleration reference speed.  (Method (3), described
later)

(Program example)

G05.1 Q1 F5000 ; ··· Sets the reference speed to 5000 mm/min.

The F command used in a G05.1 block is used to
specify the acceleration/deceleration reference speed,
and is also used as a normal F command.

Even if the feedrate is changed during the execution of the machining
program, the acceleration/deceleration reference speed specified with the
above command remains in effect.  If this occurs, the machining time may
become longer because machining is performed at the feedrate different
from the acceleration/deceleration reference speed.
For this reason, the acceleration/deceleration reference speed to be
specified with the above command should be as close as possible to the
actual machining speed.

NOTE
The G05.1Q1Fxxxx command must be issued in feed per
minute (G94) mode.
If this command is issued in another mode, the speed
specified with this command will  be generated  the alarm
(PS5111).

Description

� Methods of specifying the
acceleration/deceleration
reference speed

(1) Specifying the speed
in a G05.1 Q1 block



PROGRAMMINGB–64124EN/01
19. HIGH SPEED CUTTING

FUNCTIONS

401

the acceleration/deceleration reference speed is set in  parameter No.
7066.
Because these parameters must be set in input unit, when the input unit
is changed, these parameters must be changed.

This method is used if the G05.1Q1 block does not have an F command.

The speed specified with the F command issued when a cutting block
group (such as G01 and G02) starts is assumed the
acceleration/deceleration reference speed, 
This method is used if the G05.1Q1 block does not have an F command
and the parameter of the acceleration/deceleration reference speed is set
to 0.

(G00) 
G01 X––– Y––– Z––– F*** ;
X––– Y––– Z–––
X––– Y––– Z–––
X––– Y––– Z–––
G00 ;

Cutting block group

Even if an F command is issued before a cutting block group and the F
command is effective to the cutting block group modally, the speed
specified with the modal F effective at the start of cutting will be assumed
the acceleration/deceleration reference speed.

Optimum bell–shaped acceleration/deceleration before interpolation, as
mentioned here, refers to bell–shaped acceleration/deceleration before
interpolation in which linear acceleration/deceleration not reaching the
specified acceleration/deceleration does not occur if T2 > T1.  Calculation
is performed as described below.

(1) If the bell–shaped acceleration/deceleration before interpolation time
constant T2’ is calculated under the condition that the bell–shaped
acceleration/deceleration before interpolation must not have a linear
portion,

A
F2T

2T
*

=’

T2: Acceleration change time specified for bell–shaped acceleration/
deceleration before interpolation

F: Acceleration/deceleration reference speed

A: Acceleration for the acceleration/deceleration before interpolation

(2) Setting the speed on
the Parameter

(3) Using the speed
specified with the F
command issued at
the start of cutting as
the reference speed

� Acceleration/deceleratio
n parameter calculation
method



PROGRAMMING
19. HIGH SPEED CUTTING

FUNCTIONS B–64124EN/01

402

(2) A proper acceleration is determined under the condition that the
acceleration change must be about the same as the setting so that
parameter changes do not cause considerable shock to the machine,
that is:

Acceleration after change Acceleration before change
=

Acceleration change time Acceleration change time
after change before change

The acceleration change time is regarded to be the sum of the
acceleration change time of bell–shaped acceleration/deceleration
and the time constant of acceleration/deceleration after interpolation,
and the acceleration A’ for the acceleration/deceleration before
interpolation is determined as follows:

TcT

TcT
AA

+

+
*=

2

’2
’

A: Acceleration for the acceleration/deceleration before interpolation

Tc:Time constant of acceleration/deceleration after interpolation

Acceleration/deceleration is performed using T2’ and A’, determined
as described above.



PROGRAMMINGB–64124EN/01 20. AXIS CONTROL FUNCTIONS

403

20 AXIS CONTROL FUNCTIONS



PROGRAMMING20. AXIS CONTROL FUNCTIONS B–64124EN/01

404

It is possible to change the operating mode for two or more specified axes
to either synchronous operation or normal operation by an input signal
from the machine.
Synchronous control can be performed for up to four pairs of axes with
the Series 16, or up to three pairs with the Series 18, according to the
parameter setting (parameter No. 8311).
The following operating modes are applicable to machines having two
tables driven independently by separate control axes.  The following
example is of a machine with two tables driven independently by the Y
axis and V axis.  If the axis names and axis sets that are actually being used
differ from those in the example, substitute the actual names for those
below.

V

X

Y

Z

Fig. 20.1  Example of axis configuration of the machine operated 
 by simple synchronous control

This mode is used for, for example, machining large workpieces that
extend over two tables.
While operating one axis with a move command, it is possible to
synchronously move the other axis.  In the synchronous mode, the axis
to which the move command applies is called the master axis, and the axis
that moves synchronously with the master axis is called the slave axis.
In this example, it is assumed that Y axis is the master axis and V axis is
the slave axis.  Here, the Y axis and the V axis move synchronously in
accordance with program command Yyyyy issued to the Y axis (master
axis).
Synchronous operation is possible during automatic operation, jog feed,
manual handle feed using the manual pulse generator, and incremental
feed, but is not possible during manual reference position return.

20.1
SIMPLE
SYNCHRONOUS
CONTROL

Explanations

� Synchronous operation



PROGRAMMINGB–64124EN/01 20. AXIS CONTROL FUNCTIONS

405

This operating mode is used for machining different workpieces on each
table.  The operation is the same as in ordinary CNC control, where the
movement of the master axis and slave axis is controlled by the
independent axis address (Y and V).  It is possible to issue the move
commands to both the master axis and slave axis in the same block.

(1) The Y axis moves normally according to program command Yyyyy
issued to the master axis.

(2) The V axis moves normally according to program command Vvvvv
issued to the slave axis.

(3) The Y axis and the V axis move simultaneously according to program
command YyyyyVvvvv.
Both automatic and manual operations are the same as in ordinary
CNC control.

For how to switch between the synchronous operation and normal
operation modes, refer to the relevant manual published by the machine
tool builder.

When the automatic reference position return command (G28) and the
2nd/3rd/4th reference position return command (G30) are issued during
synchronous operation, the V axis follows the same movement as the Y
axis returns to the reference position.  After the return movement is
complete, the reference position return complete signal of the V axis goes
on when that of the Y axis goes on.
As a rule, commands G28 and G30 must be issued in the normal operating
mode.

When the automatic reference position return check command (G27) is
issued during synchronous operation, the V axis and Y axis move in
tandem.  If both the Y axis and the V axis have reached their respective
reference positions after the movement is complete, the reference position
return complete signals go on.  If either axis is not at the reference
position, an alarm is issued.  As a rule, command G27 must be issued in
the normal operating mode.

When a move command is issued to the slave axis during synchronous
operation, a P/S alarm (No. 213) is issued.

The axis to be used as the master axis is set in parameter No. 8311.
The slave axis is selected by an external signal.

Setting bit 7 (SMF) of parameter No. 3105 to 1 suppresses display of the
actual speed of the slave axes.

� Normal operation

� Switching between
synchronous operation
and normal operation

� Automatic reference
position return

� Automatic reference
position return check

� Specifying the slave axis

� Master axis and slave
axis

� Displaying actual speed
for master axis only



PROGRAMMING20. AXIS CONTROL FUNCTIONS B–64124EN/01

406

In synchronous axis control, commands that require no axis motion, such
as the workpiece coordinate system setup command (G92) and the local
coordinate system setup command (G52), are set to the Y axis by program
command Yyyyy issued to the master axis.

For signals such as external deceleration, interlock, and machine lock,
only the signals issued to the master axis are valid in the synchronous
operating mode.  Signals issued to other axes are ignored.

Both the pitch error and backlash are compensated independently for the
master axis and the slave axis.

Turn on the manual absolute switch during synchronous operation.  If it
is off, the slave axis may not move correctly.

The difference between the master axis and slave axis in servo positional
deviation is always monitored.  If the difference exceeds the parameter–
set limit, an P/S alarm (No. 213) is issued.

The difference between the master axis and slave axis in machine
coordinates is always monitored.  If the difference exceeds the parameter–
set limit, an servo alarm (No. 407) is issued.

When the power is turned on, compensation pulses are output for the slave
axis to match the machine position of the master axis with the machine
position of the slave axis.  (This is enabled only when the absolute
position detection function is used.)

Compensation for out–of–synchronism (where the difference between
the master and slave axes in servo positional deviation is always
monitored and the servo motor for the slave axis is compensated to reduce
the difference) is not performed.

When the machine is manually returned to the reference position during
synchronous operation, both the master axis and the slave axis move
synchronously until the acceleration movement is complete.  However,
grid detection thereafter is carried out independently.

Limitations

� Setting a coordinate
system

� Externally–requested
deceleration, interlock,
and machine lock

� Pitch error
compensation

� Manual absolute

� Synchronization error
check using positional
deviation

� Synchronization error
check using machine
coordinates

� Synchronization

� Compensation for
out–of–synchronism

� Manual reference
position return



PROGRAMMINGB–64124EN/01 20. AXIS CONTROL FUNCTIONS

407

The roll–over function prevents coordinates for the rotation axis from
overflowing.  The roll–over function is enabled by setting bit 0 of
parameter ROAx 1008 to 1.

For an incremental command, the tool moves the angle specified in the
command.  For an absolute command, the coordinates after the tool has
moved are values set in parameter No. 1260, and rounded by the angle
corresponding to one rotation.  The tool moves in the direction in which
the final coordinates are closest when bit 1 of parameter RABx No. 1008
is set to 0.  Displayed values for relative coordinates are also rounded by
the angle corresponding to one rotation when bit 2 of parameter RRLx No.
1008 is set to 1.

Assume that axis A is the rotating axis and that the amount of movement
per rotation is 360.000 (parameter No. 1260 = 360000).  When the
following program is executed using the roll–over function of the rotating
axis, the axis moves as shown below.

     G90 A0 ;
Sequence 

number
Actual

movement
value

Absolute coordinate 
value after movement

end

N1 G90 A–150.0 ; N1 –150 210

N2 G90 A540.0 ; N2 –30 180

N3 G90 A–620.0 ; N3 –80 100

N4 G91 A380.0 ; N4 +380 120

N5 G91 A–840.0 ; N5 –840 0

Relative 
coordinate value

–720°

–0°

–360°

–0° –0°

–0° 360°

–0°

N1

N2

N3

N4

N5

210°(Absolute)

180°
100°

120°

Absolute 
coordinate value

NOTE
This function cannot be used together with the indexing
function of the index table.

20.2
ROTARY  AXIS
ROLL–OVER
Explanations

�
	����



PROGRAMMING20. AXIS CONTROL FUNCTIONS B–64124EN/01

408

When the angular axis makes an angle other than 90° with the
perpendicular axis, the angular axis control function controls the distance
traveled along each axis according to the inclination angle.  A program,
when created, assumes that the angular axis and perpendicular axis
intersect at right angles. However, the actual distance traveled is
controlled according to an inclination angle.

+Y

+Y Coordinate system actually used 
(Angular axis)

Program coordinate system

+Z (Perpendicular axis)

θ

θ : Inclination angle

When the angular axis is the Y–axis and the perpendicular axis is the
Z–axis, the amount of travel along each axis is controlled according to the
formulas shown below.
The distance traveled along the Y–axis is determined by the following
formula:
   Ya=Yp/cosθ
The distance traveled along the Z–axis is corrected by the inclination of
the Y–axis, and is determined by the following formula:
   Za=Zp–Yp*tanθ
The speed component along the Y–axis is determined by the following
formula:

Fa=Fp/cosθ
Ya, Za, Fa : Actual distance and speed
Yp, Zp, Fp : Programmed distance and speed

The angular and perpendicular axes for which angular axis control is to
be applied must be specified beforehand, using parameters (No. 8211 and
8212).
Parameter AAC (No. 8200#0) enables or disables the inclined axis
control function. If the function is enabled, the distance traveled along
each axis is controlled according to an inclination angle parameter (No.
8210).
Parameter AZR (No. 8200#2) enables angular axis manual reference
point return only with a distance along the angular axis.

By setting the normal axis/angular axis control invalid signal NOZAGC
to 1, slanted axis control only for the angular axis can be available.  
In this time the angular axis are converted to those along the slanted
coordinate system without affecting commands to normal axis.

An absolute and a relative position are indicated in the programmed
Cartesian coordinate system.

20.3
ANGULAR AXIS
CONTROL

Explanations

� .����� �� ���

� Invalidity of normal axis

� Absolute and relative
position display



PROGRAMMINGB–64124EN/01 20. AXIS CONTROL FUNCTIONS

409

A machine position indication is provided in the machine coordinate
system where an actual movement is taking place according to an
inclination angle. However, when inch/metric conversion is performed,
a position is indicated which incorporates inch/metric conversion applied
to the results of inclination angle operation.

WARNING
1 After angular axis control parameter setting, be sure to

perform manual reference position return operation.
2 If once manual reference position return has been

performed along the angular axis, also perform manual
reference position return along the perpendicular axis.  
P/S alarm No.090 is issued when an attempt is made to
manually return to the reference position along the
perpendicular axis although the angular axis is not on the
reference point.

3 Once the tool has been moved along the angular axis when
perpendicular/angular  axis control disable signal NOZAGC
has been set to 1, manual reference position return must be
performed.

4 Before attempting to manually move the tool along the
angular and perpendicular axes simultaneously, set
perpendicular/angular  axis control disable signal NOZAGC
to 1.

NOTE
1 If an inclination angle close to 0° or ±90° is set, an error can

occur. (A range from ±20° to ±90° should be used.)
2 Before a  perpendicular axis reference position return check

(G27) can be made, angular axis reference position return
operation must be completed.

� Machine position display



PROGRAMMING20. AXIS CONTROL FUNCTIONS B–64124EN/01

410

When enough torque for driving a large table cannot be produced by only
one motor, two motors can be used for movement along a single axis.
Positioning is performed by the main motor only.  The submotor is used
only to produce torque.  With this tandem control function, the torque
produced can be doubled.

Table

Ball screw

Main motor

Submotor

Fig. 20.4  Example of operation

In general, the NC regards tandem control as being performed for one
axis.  However, for servo parameter management and servo alarm
monitoring, tandem control is regarded as being performed for two axes.
For details, refer to the relevant manual published by the machine tool
builder.

20.4
TANDEM CONTROL



III.  OPERATION



OPERATIONB–64124EN/01 1. GENERAL

413

1 GENERAL



OPERATION1. GENERAL B–64124EN/01

414

The CNC machine tool has a position used to determine the machine
position.
This position is called the reference position, where the tool is replaced
or the coordinate are set.  Ordinarily, after the power is turned on, the tool
is moved to the reference position.
Manual reference position return is to move the tool to the reference
position using switches and pushbuttons located on the operator’s panel.

Reference position

Tool

Machine operator’s panel

Fig. 1.1 (a)  Manual reference position return

The tool can be moved to the reference position also with program
commands.
This operation is called automatic reference position return (See Section
II–6).

1.1
MANUAL
OPERATION

Explanations

� Manual reference
position return
(See Section III–3.1)



OPERATIONB–64124EN/01 1. GENERAL

415

Using machine operator’s panel switches, pushbuttons, or the manual
handle, the tool can be moved along each axis.

Tool

Workpiece

Machine operator’s panel

Manual
pulse 
generator

Fig. 1.1 (b)  The tool movement by manual operation

The tool can be moved in the following ways:

(i) Jog feed (See Section III–3.2)
The tool moves continuously while a pushbutton remains pressed.

(ii) Incremental feed (See Section III–3.3)
The tool moves by the predetermined distance each time a button is
pressed.

(iii) Manual handle feed (See Section III–3.4)
By rotating the manual handle,the tool moves by the distance
corresponding to the degree of handle rotation.

� The tool movement by
manual operation



OPERATION1. GENERAL B–64124EN/01

416

Automatic operation is to operate the machine according to the created
program.  It includes memory, MDI and DNC operations. (See Section
III–4).

Program

Tool

01000 ;
M_S_T ;
G92_X_;
G00... ;
G01...... ;

.

.

.

.

Fig. 1.2 (a)  Tool movement by programming

After the program is once registered in memory of CNC, the machine can
be run according to the program instructions.  This operation is called
memory operation.

 CNC Machine

Memory

Fig. 1.2 (b)  Memory operation

After the program is entered, as an command group, from the MDI
keyboard, the machine can be run according to the program.  This
operation is called MDI operation.

MDI keyboard CNC

Manual program 
input

Machine

Fig. 1.2 (c)  MDI operation

In this mode of operation, the program is not registered in the CNC
memory.  It is read from the external input/output devices instead.  This
is called DNC operation.  This mode is useful when the program is too
large to fit the CNC memory.

1.2
TOOL MOVEMENT
BY PROGRAMMING–
AUTOMATIC
OPERATION

Explanations
� .�	��! ����
����

� MDI operation

� DNC operation



OPERATIONB–64124EN/01 1. GENERAL

417

Select the program used for the workpiece.  Ordinarily, one program is
prepared for one workpiece.  If two or more programs are in memory,
select the program to be used, by searching the program number (Section
III–9.3).

G92

O1001 Program number

M30

G92

O1002
G92

M30

Program number
Program number
search

Automatic
operation

O1003
––––––

M30

––––––

––––––

Work–1 program

Work–2 program

Program number

Work–3 program

In memory or on a tape

Fig. 1.3 (a)  Program selection for automatic operation

Pressing the cycle start pushbutton causes automatic operation to start.
By pressing the feed hold or reset pushbutton, automatic operation pauses
or stops.  By specifying the program stop or program termination
command in the program, the running will stop during automatic
operation.  When one process machining is completed, automatic
operation stops.

Cycle start

Feed hold 
Reset

Program stop
Program end

Stop caused
by program

Start

Stop
Automatic operation

Fig. 1.3 (b)  Start and stop for automatic operation

1.3
AUTOMATIC
OPERATION

Explanations

� Program selection

� Start and stop 
(See Section III–4)



OPERATION1. GENERAL B–64124EN/01

418

While automatic operation is being executed, tool movement can overlap
automatic operation by rotating the manual handle.

�



Programmed
depth of cut

Depth of cut by 
handle interruption

Tool position after
handle interruption

Tool position during 
automatic operation

Fig. 1.3 (c)  Handle Interruption for automatic operation

� Handle interruption 
(See Section III–4.7)



OPERATIONB–64124EN/01 1. GENERAL

419

Before machining is started, the automatic running check can be
executed.  It checks whether the created program can operate the machine
as desired.  This check can be accomplished by running the machine
actually or viewing the position display change (without running the
machine)  (See Section III–5).

Remove the workpiece, check only movement of the tool.  Select the tool
movement rate using the dial on the operator’s panel.

Tool

Table

Fig. 1.4.1 (a)  Dry run

Check the program by changing the feedrate specified in the program.

Tool
Feed rate specified by program :
100 mm/min.

Feed rate after feed rate override (20%) :
20 mm/min.

Workpiece

Fig. 1.4.1 (b)  Feedrate override

1.4
TESTING A
PROGRAM

1.4.1
Check by Running the
Machine

Explanations

� Dry run 
(See Section III–5.4)

� Feedrate override 
(See Section III–5.2)



OPERATION1. GENERAL B–64124EN/01

420

When the cycle start pushbutton is pressed, the tool executes one
operation then stops.  By pressing the cycle start again, the tool executes
the next operation then stops.  The program is checked in this manner.

Cycle start

Cycle start

Cycle start

Cycle start

StopStop

Stop

Tool

2���&'���

Fig. 1.4.1 (c)  Single block

Tool

MDI

X
Y
Z

The tool remains stopped, and only the
positional displays of the axes change.

Workpiece

Fig. 1.4.2  Machine lock

When automatic running is placed into the auxiliary function lock mode
during the machine lock mode, all auxiliary functions (spindle rotation,
tool replacement, coolant on/off, etc.) are disabled.

� Single block
(See Section III–5.5)

1.4.2
How to View the
Position Display
Change without
Running the Machine

Explanations

� Machine lock 
(See Sections III–5.1)

� Auxiliary function lock
(See Section III–5.1)



OPERATIONB–64124EN/01 1. GENERAL

421

After a created program is once registered in memory, it can be corrected
or modified from the MDI panel  (See Section III–9).
This operation can be executed using the part program storage/edit
function.

Program registration

MDI

 CNC  CNC

Program correction or modification

Tape reader

CNC tape (program)

Fig. 1.5   Part program editing

1.5
EDITING A PART
PROGRAM



OPERATION1. GENERAL B–64124EN/01

422

The operator can display or change a value stored in CNC internal
memory by key operation on the MDI screen (See III–11).

Data setting

MDI

Data display

Screen Keys

CNC memory

Fig. 1.6 (a)  Displaying and setting data

Tool compensation
number1    12.3         25.0
Tool compensation
number2    20.0         40.0
Tool compensation
number3      ⋅ ⋅ ⋅          ⋅ ⋅ ⋅
⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅      ⋅ ⋅ ⋅          ⋅ ⋅ ⋅ 
⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅ ⋅      ⋅ ⋅ ⋅          ⋅ ⋅ ⋅ 

Setting

Display

CNC memory

Screen Keys

MDI

Geometry 
compensation

Wear com-
pensation

Fig.1.6 (b)  Displaying and setting offset values

The tool has the tool dimension (length, diameter).  When a workpiece is
machined, the tool movement value depends on the tool dimensions.
By setting tool dimension data in CNC memory beforehand,
automatically generates tool routes that permit any tool to cut the
workpiece specified by the program.  Tool dimension data is called the
offset value  (See Section III–11.4.1).

1.6
DISPLAYING AND
SETTING  DATA

Explanations

� Offset value



OPERATIONB–64124EN/01 1. GENERAL

423

Machined
shape

1st tool path

2nd tool path

Offset value of the 1st tool

Offset value of the 2nd tool

Fig. 1.6 (c)  Offset value

Apart from parameters, there is data that is set by the operator in
operation.  This data causes machine characteristics to change.
For example, the following data can be set:
 Inch/Metric switching
 Selection of I/O devices
 Mirror image cutting on/off
The above data is called setting data  (See Section III–11.4.3).

⋅
⋅
⋅

Setting

DisplayingScreen  Keys

Setting data

⋅Inch/Metric switching
⋅Selection of I/O device 
⋅Mirror image ON/OFF setting

CNC Memory

Program Automatic
operation

Operational
characteristics

Movement of 
the machine

Fig. 1.6 (d)  Displaying and setting operator’s setting data

� Displaying and setting
operator’s setting data



OPERATION1. GENERAL B–64124EN/01

424

The CNC functions have versatility in order to take action in
characteristics of various machines.
For example, CNC can specify the following:
 Rapid traverse rate of each axis
 Whether increment system is based on metric system or inch system.
 How to set command multiply/detect multiply (CMR/DMR)
Data to make the above specification is called parameters  (See Section
III–11.5.1). 
Parameters differ depending on machine tool.

MDI

CNC memory

Parameter
Rapid traverse rate
Position control
Reference position return
Backlash compensation data
Pitch error compensation
data ⋅

⋅
⋅

Program

Operational 
characteristics

Setting

DisplayScreen    Keys

Automatic
operation

Movement
of the 
machine

Fig. 1.6 (e)  Displaying and setting parameters

A key called the data protection key can be defined.  It is used to prevent
part programs, offset values, parameters, and setting data from being
registered, modified, or deleted erroneously  (See Section III–11).

Program
Offset value
Parameters
Setting data

CNC memory

Data Setting

Machine operator’s 
panel

Screen Keys

Data protection
 key

MDI

Signal

Protection Key

Registration / modification inhibition

Fig. 1.6 (f)   Data protection key

� Displaying and setting
    parameters

� Data protection key



OPERATIONB–64124EN/01 1. GENERAL

425

The contents of the currently active program are displayed.  In addition,
the programs scheduled next and the program list are displayed.
(See Section III–11.2.1)

*�0���.

MEM STOP  * * *     * * * 13 : 18 : 14

1100 00005

.#

PRGRM

�� �=� ��7 ��� �>� ?�7 �5��� �55��� �

�� ��� �=���� -�5� �

�� >5��� �

�> ��� 5���� ���5���  65��� �

�6 ��� =5��� �=����  65��� �

�7 ��� ��5��� �

�@ �55��� �

�= 7���� �65��� �

��� �5��� �55��� �

��� ��� �>� � �� �

�A$�B �C  �� �$� !D8 �"

Active program number
Active sequence number

Currently executed program

The cursor indicates the currently executed location

Program
content

N5   G02 X900.0 R–250.0 ;

    PROGRAM (NUM.) MEMORY (CHAR.)
  USED: 60 3321

FREE:   2   429

O0001 (MACRO–GCODE.MAIN)
O0002 (MACRO–GCODE.SUB1)
O0010 (TEST–PROGRAM.ARTHMETIC NO.1)
O0020 (TEST–PROGRAM.F10–MACRO)
O0040 (TEST–PROGRAM.OFFSET)
O0050
O0100 (INCH/MM CONVERT CHECK NO.1)
O0200 (MACRO–MCODE.MAIN)

> _
EDIT **** *** ***     16:05:59
[ PRGRM ]   [    DIR+    ]   [            ]   [            ]   [  (OPRT)  ]

PROGRAM DIRECTORY       O0001 N00010

1.7
DISPLAY

1.7.1
Program Display



OPERATION1. GENERAL B–64124EN/01

426

The current position of the tool is displayed with the coordinate values.
The distance from the current position to the target position can also be
displayed. (See Section III–11.1.1 to 11.1.3)

Y



E

F

Workpiece coordinate system

 

� #9�; *0-6#608 ��=-0;9#�

* * * *     * * *    * * *

O0003 N00003

!D8 �"

X 150.000
Y 300.000
Z 100.000

�$� 19 : 47 : 45

RUN TIME 0H41M  CYCLE TIME 0H  0M22S
8� � �DC�� ��

ABS  $G �GG

When a trouble occurs during operation, alarm number and alarm
message are displayed on the screen. (See Section III–7.1)
See APPENDIX G for the list of alarms and their meanings.

�;��..--��

MEM STOP * * *     * * * 19 : 55 : 22

O1000 N00003

.#

ALM

�G� � ��� A:�� �

��� :�8 D8$ �;�D?$

1.7.2
Current Position
Display

1.7.3
Alarm Display



OPERATIONB–64124EN/01 1. GENERAL

427

Run time and number of parts are displayed on the screen.  (See Section
lll–11.4.5)

ACTUAL POSITION (ABSOLUTE)

* * * * 

O0003 N00003

!D8 �"

X 150.000
Y 300.000
Z 100.000

�$� �� � 20 : 22 : 23

RUN TIME 0H16M  CYCLE TIME 0H  1M  0S
8� � �DC�� �@

ABS  $G �GG

FIN

Programmed tool movement can be displayed on the following planes:
(See Section III–12)
1) XY plane
2) YZ plane
3) XZ plane
4) Three dimensional display

Z

X

Z

Z

X Y

Y

Y

X

Three dimensional display (isometric)

Display on the XY plane Display on the YZ plane

Display on the XZ plane

(1) (2)

(3) (4)

Fig. 1.7.5  Graphic display

1.7.4
Parts Count Display,
Run Time Display

1.7.5
Graphic Display



OPERATION1. GENERAL B–64124EN/01

428

Programs, offset values, parameters, etc.  input in CNC memory can be
output to paper tape, cassette, or a floppy disk for saving.  After once
output to a medium, the data can be input into CNC memory.

Memory

Program

Offset

Parameters

Reader/puncher
interface

Portable tape reader

CNC
Automatic programming system

Floppy disk

FANUC Floppy
cassette adaptor

FANUC Floppy Cassette

SYSTEM  P

FANUC PPR

Paper tape

.

.

.

Memory card
adapter

(incorporated CNC)

Memory card

Fig. 1.8  Data Output

1.8
DATA INPUT /
OUTPUT



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

429

2 0*��#608�; �?6 -
The available operational devices include the setting and display unit
attached to the CNC, the machine operator’s panel, and external
input/output devices such as a Handy File.



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

430

The setting and display units are shown in Subsections 2.1.1 to 2.1.4 of
Part III.

7.2″ monochrome / 8.4″ color LCD/MDI unit 
(horizontal type) III–2.1.1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2″ monochrome / 8.4″ color LCD/MDI unit 
(vertical type) III–2.1.2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

Key location of MDI (horizontal type LCD/MDI unit) III–2.1.3. . . 
Key location of MDI (vertical type LCD/MDI unit) III–2.1.4. . . . . 

2.1
SETTING AND 
DISPLAY UNITS



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

431

2.1.1
7.2″ Monochrome/
8.4″ Color LCD/MDI
Unit (Horizontal Type)



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

432

2.1.2
7.2″ Monochrome/
8.4″ Color LCD/MDI
Unit (Vertical Type)



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

433

Address/numeric keys

Function keys

Cursor keys
Page change keys

Shift key

Cancel (CAN) key

Input key

Edit keys

Help key

Reset key

2.1.3
Key Location of MDI
(Horizontal Type
LCD/MDI Unit)



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

434

Shift key Page change keysCursor keys

Function keys

Input key

Cancel (CAN) keyEdit keys

Address/numeric keys

Reset key
Help key

2.1.4
Key Location of MDI
(Vertical Type LCD/MDI
Unit)



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

435

Table 2.2  Explanation of the MDI keyboard

Number Name Explanation

1 RESET key

RESET

Press this key to reset the CNC, to cancel an alarm, etc.

2 HELP key

HELP

Press this key to display how to operate the machine tool, such as MDI key operation,
or the details of an alarm which occurred in the CNC (Help function).

3 Soft keys The soft keys have various functions, according to the Applications.  The soft key
functions are displayed at the bottom of the screen.

4 Address and numeric keys

…QN 4 [

Press these keys to input alphabetic, numeric, and other characters.

5 SHIFT key

SHIFT

Some keys have two characters on their keytop.  Pressing the <SHIFT> key
switches the characters.  Special character � is displayed on the screen when a
character indicated at the bottom right corner on the keytop can be entered.

6 INPUT key

INPUT

When an address or a numerical key is pressed, the data is input to the buffer, and
it is displayed on the screen.  To copy the data in the key input buffer to the offset reg-
ister, etc., press the <INPUT> key.  This key is equivalent to the [INPUT] key of the
soft keys, and either can be pressed to produce the same result.

7 Cancel key

CAN

Press this key to delete the last character or symbol input to the key input buffer.
When the key input buffer displays

>N001X100Z_
and the cancel          key is pressed, Z is canceled and
>N001X100_
is displayed.

CAN

8 Program edit keys

ALTER INSERT DELETE

Press these keys when editing the program.

:  Alteration

:  Insertion

:  Deletion

ALTER

INSERT

DELETE

9 Function keys

…
POS PROG

Press theses keys to switch display screens for each function.
See sec. III–2.3 for details of the function keys.

2.2
EXPLANATION OF
THE KEYBOARD



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

436

Table 2.2  Explanation of the MDI keyboard

Number ExplanationName

10 Cursor move keys There are four different cursor move keys.

 : This key is used to move the cursor to the right or in the forward
direction.  The cursor is moved in short units in the forward direction.

: This key is used to move the cursor to the left or in the reverse
direction.  The cursor is moved in short units in the reverse direction.

: This key is used to move the cursor in a downward or forward 
direction.  The cursor is moved in large units in the forward direction.

: This key is used to move the cursor in an upward or reverse direction. 
The cursor is moved in large units in the reverse direction.

11 Page change keys

PAGE

PAGE

Two kinds of page change keys are described below.

: This key is used to changeover the page on the screen in the forward 
direction.

: This key is used to changeover the page on the screen in the reverse 
direction.

PAGE

PAGE



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

437

The function keys are used to select the type of screen (function) to be
displayed.  When a soft key (section select soft key) is pressed
immediately after a function key, the screen (section) corresponding to the
selected function can be selected.

1 Press a function key on the MDI panel.  The chapter selection soft
keys that belong to the selected function appear.

2 Press one of the chapter selection soft keys.  The screen for the
selected chapter appears.  If the soft key for a target chapter is not
displayed, press the continuous menu key (next–menu key).
In some cases, additional chapters can be selected within a chapter.

3 When the target chapter screen is displayed, press the operation
selection key to display data to be manipulated.

4 To redisplay the chapter selection soft keys, press the return menu
key.

The general screen display procedure is explained above.  However,
the actual display procedure varies from one screen to another.  For
details, see the description of individual operations.

2.3
FUNCTION KEYS AND
SOFT KEYS

2.3.1
General Screen
Operations

Function keys

(OPRT)

Chapter selection
soft keys Operation

selection
key

Return menu key Continuous menu key

OFS/SETPROGPOS

SYSTEM CSTM/GRMESSAGE



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

438

Function keys are provided to select the type of screen to be displayed.
The following function keys are provided on the MDI panel:

Press this key to display the position screen.

Press this key to display the program screen.

Press this key to display the offset/setting screen.

Press this key to display the system screen.

Press this key to display the message screen.

Press this key to display the custom screen (conversational macro
screen) and graphics screen.

2.3.2
Function Keys

POS

PROG

OFS/SET

SYSTEM

MESSAGE

CSTM/GR



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

439

To display a more detailed screen, press a function key followed by a soft
key.  Soft keys are also used for actual operations.
The following illustrates how soft key displays are changed by pressing
each function key.

: Indicates a screen that can be displayed by pressing a
function key(*1)

: Indicates a green–lettered soft key.(*2)

: Indicates input from the MDI panel.

: Indicates a black–lettered soft key.

: Indicates the continuous menu key (rightmost soft key).

H I

! "

H I

The symbols in the following figures mean as shown below :

: Indicates screens

*1 Press function keys to switch between screens that are used frequently.

*2 Some soft keys are not displayed depending on the option
configuration.

2.3.3
Soft Keys



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

440

Monitor screen

[(OPRT)] [PTSPRE] [EXEC]

[RUNPRE] [EXEC]

[ABS]

Absolute coordinate display

[(OPRT)][REL] !�E'� �� 	(+����"

HORIGINI

[PRESET]

[ALLEXE]

(Axis name) [EXEC]

[PTSPRE] [EXEC]

[RUNPRE] [EXEC]

[ALL]

[HNDL]

[MONI]

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��FPOSITION SCREEN

Relative coordinate display

Current position display

Handle interruption

[(OPRT)] !�E'� �� 	(+����"

HORIGINI

[PRESET]

[ALLEXE]

(Axis name) [EXEC]

[PTSPRE] [EXEC]

[RUNPRE] [EXEC]

[WRK–CD] [ALLEXE]
[EXEC](Axis name, 0)

[(OPRT)] [PTSPRE] [EXEC]

[RUNPRE] [EXEC]

[(OPRT)] [PTSPRE] [EXEC]

[RUNPRE] [EXEC]

POS

POS



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

441

[ABS]

[(OPRT)] [BG–EDT]
[O SRH]

[PRGRM]

Program display screen

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� �$� +�%�

[N SRH]
[REWIND]

See “When the soft key [BG–EDT] is pressed”

[(OPRT)][CHECK]

Program check display screen

[REL]

Current block display screen

[(OPRT)] [BG–EDT][CURRNT]

Next block display screen

[(OPRT)] [BG–EDT][NEXT]

Program restart display screen

[(OPRT)] [BG–EDT][RSTR]

!�"

(O number)
(N number)

PROGRAM SCREEN

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

[F SRH]

[P TYPE]
[Q TYPE]

[CAN]
[EXEC]

[BG–EDT]
[O SRH]
[N SRH]

[REWIND]

See “When the soft key [BG–EDT] is pressed”
(O number)
(N number)

[F SRH]

[P TYPE]
[Q TYPE]

[CAN]
[EXEC]

(2)(Continued on the next page)

1/2

(N number)

(N number)

PROG

PROG



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

442

[FL.SDL] [PRGRM]

File directory display screen

[(OPRT)][DIR] [SELECT]
[EXEC]
(File No. ) [F SET]

Schedule operation display screen

[(OPRT)][SCHDUL] [CLEAR]

(Schedule data)

[CAN]
[EXEC]

[INPUT]

Return to !�" (Program display)

(2)
2/2

[(OPRT)] [BG–EDT]
[O SRH]

[DIR]

Program directory screen

���J2)�	 
)� ���
 ��F H��;$?�I '� &�����%K

(O number)  �
(�	 
� 
)� &��*��+



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

443

1/2

[(OPRT)] [BG–EDT]
(O number) [O SRH]

[PRGRM]

Program display

(Address) [SRH↓]

[REWIND]
(Address) [SRH↑]

[F SRH] [CAN]
(N number) [EXEC]

[READ] [CHAIN]
[STOP]
[CAN]

[EXEC]
[PUNCH] [STOP]

[CAN]
[EXEC]

[DELETE] [CAN]
[EXEC]

[EX–EDT] [COPY] [CRSR∼]
[∼CRSR]
[∼BTTM]
[ALL]

[MOVE] [CRSR∼]
[∼CRSR]
[∼BTTM]
[ALL]

[MERGE] [∼CRSR]
[∼BTTM]

[CHANGE] (Address) [BEFORE]

(Address) [AFTER] [SKIP]
[1–EXEC]
[EXEC]

(1)(Continued on the next page)

(The cursor moves to the end of a program.)

(O number)

(O number)

(N number)

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� $?:� +�%�
PROGRAM SCREEN

(O number) [EXEC]

(O number) [EXEC]

(O number) [EXEC]

���K2)�	 
)� ���
 ��F H��;$?�I '� &�����%K

PROG

PROG



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

444

(1)

[C.A.P.]

Graphic Conversational Programming

[PRGRM]
[G.MENU]

(G number) [BLOCK] (Data) [INPUT]
When a G number is omitted, the standard screen appears.

[(OPRT)] [INPUT]

2/2

 �
(�	 
� 
)� &��*��+

[(OPRT)] [BG–EDT]
(O number) [O SRH]

[DIR]

Program directory display

[READ] [CHAIN]
[STOP]
[CAN]

[EXEC]
[PUNCH] [STOP]

[CAN]
[EXEC]

(O number)

(O number)

 �
(�	 
� 
)� &��*��+

���K2)�	 
)� ���
 ��F H��;$?�I '� &�����%K

[F SRH]
[CAN]
[EXEC]

[READ]

[STOP]
[CAN]

[PUNCH]

[F SET]

[F SET]

[EXEC]

[O SET]

[STOP]
[CAN]

[F SET]

[EXEC]

[O SET]

[DELETE]
[CAN]

[F SET]

Floppy directory display

[FLOPPY]
[DIR] ( number)

(O number)

(number)
(O number)

[PRGRM]
[(OPRT)]

 �
(�	 
� 
)� &��*��+

(number)

(number)

[EXEC]

[(OPRT)]
INSERT



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

445

[(OPRT)] [BG–EDT][PRGRM]

Program display

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� �?: +�%�
PROGRAM SCREEN

[(OPRT)] [BG–EDT][MDI]

Program input screen

(Address)
(Address)

[SRH↓]
[SRH↑]

Current block display screen

[(OPRT)] [BG–EDT][CURRNT]

Next block display screen

[(OPRT)] [BG–EDT][NEXT]

Program restart display screen

[(OPRT)] [BG–EDT][RSTR]

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

[REWIND]

PROG

PROG



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

446

[(OPRT)] [BG–EDT][PRGRM]

Program display

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� A�?G0 <D�0 ��  $- +�%�
PROGRAM SCREEN

Current block display screen

[(OPRT)] [BG–EDT][CURRNT]

Next block display screen

[(OPRT)] [BG–EDT][NEXT]

Program restart display screen

[(OPRT)] [BG–EDT][RSTR]

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

[(OPRT)] [BG–EDT][DIR]

Program directory display

See “When the soft key [BG–EDT] is pressed”

PROG

PROG

Program display

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� �<D� �� �A?G +�%�
PROGRAM SCREEN

[(OPRT)] [BG–EDT][PRGRM]

(Address)
(Address)

[SRH↓]
[SRH↑]

(O number)

[REWIND]

[(OPRT)] [BG–EDT]
(O number) [O SRH]

[DIR]

Program directory display

 �
(�	 
� 
)� &��*��+

See “When the soft key [BG–EDT] is pressed”

See “When the soft key [BG–EDT] is pressed”

[O SRH]  �
(�	 
� 
)� &��*��+

PROG

PROG



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

447

1/2

[(OPRT)] [BG–END]
(O number) [O SRH]

[PRGRM]

Program display

(Address) [SRH↓]

[REWIND]
(Address) [SRH↑]

[F SRH] [CAN]
(N number) [EXEC]

[READ] [CHAIN]
[STOP]
[CAN]

[EXEC]
[PUNCH] [STOP]

[CAN]
[EXEC]

[DELETE] [CAN]
[EXEC]

[EX–EDT] [COPY] [CRSR∼]
[∼CRSR]
[∼BTTM]
[ALL]

[MOVE] [CRSR∼]
[∼CRSR]
[∼BTTM]
[ALL]

[MERGE] [∼CRSR]
[∼BTTM]

[CHANGE] (Address) [BEFORE]

(Address) [AFTER] [SKIP]
[1–EXEC]
[EXEC]

(1)(Continued on the next page)

(The cursor moves to the end of a program.)

(O number)

(O number)

(N number)

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

!2)�	 
)� ���
 ��F H��;$?�I '� &�����% '	 ��� +�%��"

PROGRAM SCREEN

(O number) [EXEC]

(O number) [EXEC]

(O number) [EXEC]

PROG

PROG



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

448

[(OPRT)] [BG–EDT]
(O number) [O SRH]

[DIR]

Program directory display

[READ] [CHAIN]
[STOP]
[CAN]

[EXEC]
[PUNCH] [STOP]

[CAN]
[EXEC]

(1)

(O number)

(O number)

[C.A.P.]

Graphic Conversational Programming

[PRGRM]
[G.MENU]

(G number) [BLOCK] (Data)
When a G number is omitted, the standard screen appears.

[F SRH]
[CAN]
[EXEC]

[READ]

[STOP]
[CAN]

[PUNCH]

[F SET]

[F SET]

[EXEC]

[O SET]

[STOP]
[CAN]

[F SET]

[EXEC]

[O SET]

[DELETE]
[CAN]

[F SET]

[EXEC]

Floppy directory display

[FLOPPY]
[DIR]

2/2

 �
(�	 
� 
)� &��*��+

 �
(�	 
� 
)� &��*��+

(number)

(number)
(O number)

(number)
(O number)

(number)

[PRGRM]
[(OPRT)]

 �
(�	 
� 
)� &��*��+

[(OPRT)] [INPUT]

[INPUT][(OPRT)]
INSERT



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

449

[(OPRT)][OFFSET]

Tool offset screen

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

(Number)
(Axis name)
(Numeral)
(Numeral)

[NO SRH]
[INP.C.]

[+INPUT]
[INPUT]

[(OPRT)][SETING]

Setting screen

(Numeral)
(Numeral)

[NO SRH]

[+INPUT]
[INPUT]

[ON:1]
[OFF:0]

[(OPRT)][WORK]

Work coordinate system setting screen

(Numeral)
(Numeral)

[NO SRH]
[+INPUT]
[INPUT]

(Number)

(Number)

OFFSET/SETTING SCREEN

[(OPRT)][MACRO]

Macro variables display screen

(Numeral)

[NO SRH]

[INPUT]

(Number)
(Axis name) [INP.C.]

[CLEAR] [ALL]
[WEAR]
[GEOM]

[READ] [CAN]
[WEAR]

[PUNCH] [CAN]
[EXEC]

(1)

1/2

(Numeral) [INPUT]

[PUNCH] [CAN]
[EXEC]

OFS/SET

OFS/SET



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

450

[(OPRT)][MENU]

Pattern data input screen

[SELECT](Number)

[OPR]

Software operator’s panel screen

[(OPRT)][TOOLLF]

Tool life management setting screen

(Numeral)

[NO SRH]

[INPUT]

(Number)
[CAN]
[EXEC]

[CLEAR]

2/2
(1)



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

451

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

[(OPRT)][PARAM]

Parameter screen

(Numeral)
(Numeral)

[NO SRH]

[+INPUT]
[INPUT]

[ON:1]
[OFF:0]

(Number)

[READ] [CAN]
[EXEC]

[PUNCH] [CAN]
[EXEC]

[(OPRT)][DGNOS]

Diagnosis screen

[NO SRH](Number)

[PMC]

PMC screen

1/2

SYSTEM SCREEN

Note) Search for the start of the file using 
the PRGRM screen for read/punch.

[SYSTEM]

System configuration screen

(4)
(Continued on the next page)

SYSTEM

SYSTEM



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

452

[W.DGNS]

Waveform diagnosis screen

(4)

[W.PRM]
[W.GRPH] [STSRT]

[TIME→]
[←TIME]
[H–DOBL]
[H–HALF]

[STSRT]
[CH–1↑]

[V–DOBL]
[V–HALF]

[CH–1↓]

[STSRT]
[CH–2↑]

[V–DOBL]
[V–HALF]

[CH–2↓]

2/2

[(OPRT)]
[SV.PRM]

Servo parameter screen

[ON:1]
[OFF:0]

[SV.SET]
[SV.TUN]

Spindle parameter screen

[(OPRT)]
[SP.PRM]

[INPUT]

[ON:1]
[OFF:0]

[SP.SET]
[SP.TUN]
[SP.MON]

(Numeral) [INPUT]

[SV.TRC] [(OPRT)]
[TRACE]
[TRNSF]

[(OPRT)][PITCH]

Pitch error compensation screen

(Numeral)
(Numeral)

[NO SRH]

[+INPUT]
[INPUT]

[ON:1]
[OFF:0]

(No.)

[READ] [CAN]
[EXEC]

[PUNCH] [CAN]
[EXEC]



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

453

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

[ALARM]

Alarm display screen

[MSG]

Message display screen

[HISTRY]

Alarm history screen

[(OPRT)] [CLEAR]

.--�� - �8
MESSAGE

MESSAGE

[ALAM]

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

Alarm detail screen

[OPR]

Operation method screen

[PARA]

Parameter table screen

[(OPRT)] [SELECT]

A;* - �8

[(OPRT)] [SELECT]

HELP

HELP



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

454

���
 ��F 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��FGRAPHIC SCREEN

Tool path graphics

[(OPRT)]

[PARAM]

Tool path graphics

[EXEC] [AUTO]
[STSRT]
[STOP]
[REWIND]
[CLEAR]

[(OPRT)][ZOOM] [EXEC]
[←]
[→]
[↑]
[↓]

[POS]

CSTM/GR

CSTM/GR

Soft key transition triggered by the function key

CUSTOM screen

CUSTOM screen

CUSTOM screen

The layout of the CUSTOM screen is customized by the machine tool builder.  For details of the screen, refer to the
manual issued by the machine tool builder.
To switch from the CUSTOM screen to another screen, press the desired function key.

CUSTOM SCREEN CSTM/GR

CSTM/GR



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

455

When an address and a numerical key are pressed, the character
corresponding to that key is input once into the key input buffer.  The
contents of the key input buffer is displayed at the bottom of the screen.
In order to indicate that it is key input data, a “>” symbol is displayed
immediately in front of it.  A “_” is displayed at the end of the key input
data indicating the input position of the next character.

Key input buffer display

[            ]   [            ]   [            ]   [            ]   [            ]

$?:� �G� ����5�>5

. ��������#

Fig. 2.3.4  Key input buffer display

To input the lower character of the keys that have two characters inscribed

on them, first press the 
SHIFT

 key and then the key in question.

When the 
SHIFT

 key is pressed, “_” indicating the next character input

position changes to “~”.  Now lowercase characters can be entered (shift
state).
When a character is input in shift status the shift status is canceled.

Furthermore, if the 
SHIFT

 key is pressed in shift status, the shift status is

canceled.
It is possible to input up to 32 characters at a time in the key input buffer.

Press the 
CAN

 key to cancel a character or symbol input in the key input

buffer.

(Example)
   When the key input buffer displays
   >N001X100Z_

   and the cancel 
CAN

 key is pressed, Z is canceled and

   >N001X100_
   is displayed.

2.3.4
Key Input and Input
Buffer



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

456

After a character or number has been input from the MDI panel, a data

check is executed when 
INPUT

 key or a soft key is pressed.  In the case of

incorrect input data or the wrong operation a flashing warning message
will be displayed on the status display line.

Warning message
display

Display of key input
buffer

Soft key display

Status display
[            ]   [            ]   [            ]   [            ]   [            ]

$?:� 2 D�� �D?$

. #

Fig. 2.3.5  Warning message display

Table 2.3.5 Warning Messages

Warning message Content

FORMAT ERROR The format is incorrect.

WRITE PROTECT Key input is invalid because of data protect key
or the parameter is not write enabled.

DATA IS OUT OF RANGE The input value exceeds the permitted range.

TOO MANY DIGITS The input value exceeds the permitted number
of digits.

WRONG MODE Parameter input is not possible in any mode 
other than MDI mode.

EDIT REJECTED It is not possible to edit in the current CNC 
status.

2.3.5
Warning Messages



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

457

Handy File of external input/output device is available.  For detail on
Handy File, refer to the corresponding manual listed below.

Table 2.4  External I/O device

Device name Usage Max.
storage
capacity

Reference
manual

FANUC Handy File Easy–to–use, multi function
input/output device.  It is de-
signed for FA equipment and
uses floppy disks.

3600m B–61834E

The following data can be input/output to or from external input/output
devices:
1.  Programs
2.  Offset data
3.  Parameters
4.  Custom macro common variables
5.  Pitch error compensation data
For an explanation of data input/output and how to use a memory card to
input and output data, see Chapter III–8.

2.4
EXTERNAL I/O
DEVICES



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

458

Before an external input/output device can be used, parameters must be
set as follows.

CNC

MAIN CPU BOARD

Channel 1 Channel 2

JD36A JD36B

RS–232–CRS–232–C

Reader/
puncher

Reader/
puncher

I/O  CHANNEL=0
or
I/O CHANNEL=1

I/O  CHANNEL=2

CNC has two channels of reader/punch interfaces.  The CNC has a
memory card interface as well.  The input/output device to be used is
specified by setting the channel (interface) connected to that device in
setting parameter I/O CHANNEL.
The specified data, such as a baud rate and the number of stop bits, of an
input/output device connected to a specific channel must be set in
parameters for that channel in advance. (No data need be set for the
memory card interface.)
For channel 1, two combinations of parameters to specify the input/output
device data are provided.
The following shows the interrelation between the reader/punch interface
parameters for the channels.

0020 I/O CHANNEL

Specify a channel for an 
input/output device.

I/O CHANNEL
 = 0 : Channel 1
 = 1 : Channel 1
 = 2 : Channel 2
 = 4 : Memory card

Interface

I/O CHANNEL=0
(channel 1)

0101 Stop bit and other data

0102 Number specified forthe input/output device

0103 Baud rate

I/O CHANNEL=1
(channel 1)

0111 Stop bit and other data

0112 Number specified for
the input/output device

0113 Baud rate

I/O CHANNEL=2
(channel 2)

0121

0122

0123

Input/output channel 
number (parameter
0020)

Parameter
Number

Stop bit and other data

Number specified for
the input/output device
Baud rate

Memory card = 4
interface

*
�
	����



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

459

The Handy File is an easy–to–use, multi function floppy disk
input/output device designed for FA equipment.  By operating the Handy
File directly or remotely from a unit connected to the Handy File,
programs can be transferred and edited.
The Handy File uses 3.5–inch floppy disks, which do not have the
problems of paper tape (i.e., noisy during input/output, easily broken, and
bulky).
One or more programs (up to 1.44M bytes, which is equivalent to the
memory capacity of 3600–m paper tape) can be stored on one floppy disk.

RS–232–C or
RS–422 Interface
(Punch panel, etc.)

FANUC Handy File

RS–232–C
Interface

RS–422
Interface

2.4.1
FANUC Handy File



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

460

Procedure of turning on the power

1 Check that the appearance of the CNC machine tool is normal.  
(For example, check that front door and rear door are closed.)

2 Turn on the power according to the  manual issued by the machine
tool builder.

3 After the power is turned on, check that the position screen is
displayed. An alarm screen is displayed if an alarm occurs upon
power–on. If the screen shown in Section III–2.5.2 is displayed, a
system failure may have occurred.

MEM STRT MTN   ***          09:06:35
[   ABS   ] [   REL   ]  [   ALL   ] [   HNDL   ]  [   OPRT   ]

ACTUAL POSITION(ABSOLUTE)     O1000 N00010

PART COUNT       5
RUN TIME    0H15M CYCLE TIME  0H 0M38S
ACT.F     3000 MM/M     S     0 T0000

X 123.456
Y 363.233
Z 0.000

 

4 Check that the fan motor is rotating.

WARNING
Until the positional or alarm screen is displayed at the power
on, do not touch  them.  Some keys are used for the
maintenance or special operation purpose.  When they are
pressed, unexpected operation may be caused.

2.5
POWER ON/OFF

2.5.1
Turning on the Power

Procedure

Position display screen



OPERATIONB–64124EN/01 2. OPERATIONAL DEVICES

461

If a hardware failure or installation error occurs, the system displays one
of the following three types of screens then stops.
Information such as the type of printed circuit board installed in each slot
is indicated.  This information and the LED states are useful for failure
recovery.

SLOT CONFIGURATION DISPLAY

0 :  003E4000
1 :  30464202
2 :  00504303
3 :  
4 :  
5 :  

0 :  
1 :  
2 :  
3 :  
4 :  
5 :  

Physical slot number 
(secondary)

Information such as the module ID of an installed printed circuit board

Physical slot number 
(primary)

Internally–assigned slot number

Module functionTypes of printed circuit boards

For more information about the types of printed circuit boards and module
functions, refer to the MAINTENANCE MANUAL (B–64115EN).

2.5.2
Screen Displayed at
Power–on

Slot status display



OPERATION2. OPERATIONAL DEVICES B–64124EN/01

462

D4B1 – 01
SLOT  01  (3046)  :  END
SLOT  02  (3050)  : Blank:  Setting not completed

Module ID

Slot number

END:  Setting completed

D4B1 – 01 CNC control software
OMM : yyyy–yy
PMC : zzzz–zz

Order–made macro/macro
compiler
PMC

The software configuration can be displayed on the system configuration
screen also.  
Refer to the MAINTENANCE MANUAL (B–64115EN) for the system
configuration screen.

Power Disconnection

1 Check that the LED indicating the cycle start is off on the operator’s
panel.

2 Check that all movable parts of the CNC machine tool is stopping.

3 If an external input/output device such as the Handy File is connected
to the CNC, turn off the external input/output device.

4 Continue to press the POWER OFF pushbutton for about 5 seconds.

5 Refer to the machine tool builder’s manual for turning off the power
to the machine.

Screen indicating
module setting status

Display of software
configuration

2.5.3
Power Disconnection

Procedure



OPERATIONB–64124EN/01 3. MANUAL OPERATION

463

3 MANUAL OPERATION
MANUAL OPERATION are six kinds as follows :

3.1 MANUAL REFERENCE POSITION RETURN
3.2 JOG FEED
3.3 INCREMENTAL FEED
3.4 MANUAL HANDLE FEED
3.5 MANUAL ABSOLUTE ON AND OFF



OPERATION3. MANUAL OPERATION B–64124EN/01

464

The tool is returned to the reference position as follows :
The tool is moved in the direction specified in parameter ZMI (bit 5 of No.
1006) for each axis with the reference position return switch on the
machine operator’s panel. The tool moves to the deceleration point at the
rapid traverse rate, then moves to the reference position at the FL speed.
The rapid traverse rate and FL speed are specified in parameters (No.
1420,1421, and 1425).
Fourstep rapid traverse override is effective during rapid traverse.
When the tool has returned to the reference position, the reference
position return completion LED goes on. The tool generally moves along
only a single axis, but can move along three axes simultane ously when
specified so in parameter JAX(bit 0 of No.1002).

ÇÇ
ÇÇ
ÇÇ

Rapid traverse rate
(rapid traverse override is
effective)

Rapid traverse motion Decelerated
motion
FL speed

ÇÇ
ÇÇ
ÇÇ

Reference
position

Deceleration 
      point

Procedure for Manual Reference Position Return

1 Press the reference position return switch, one of the mode selection
swithces.

2 To decerease the feedrate, press a rapid traverse override switch.
When the tool has returned to the reference position, the reference
position return completion LED goes on.

3 Press the feed axis and direction selection switch corresponding to the
axis and direction for reference position return. Continue pressing the
switch until the tool returns to the reference position. The tool can be
moved along three axes simultaneously when specified so in an
appropriate parameter setting.  The tool moves to the deceleration
point at the rapid traverse rate, then moves to the reference position at
the FL speed set in a parameter.

4 Perform the same operations for other axes, if necessary.
The above is an example. Refer to the appropriate manual provided by
the machine tool builder for the actual operations.

X

MIRRROR IMAGE

Y Z C X Y Z

PROGRAM
STOP

M02/
 M30

MANU
ABS

SPINDLE
ORI TAP

ATC
READY NC? MC?

ZERO POSITION

3.1
MANUAL
REFERENCE
POSITION RETURN

REMOTE MDIMEMORYEDIT

HANDLE ZERO 
RETURN

TEACHJOG

MODE Procedure

10025 50F0

RAPID TRAVERSE
  OVERRIDE (%)

+C +Z +Y

+X–X

–C–Y –Z

RAPID

AXIS DIRECTION



OPERATIONB–64124EN/01 3. MANUAL OPERATION

465

The coordinate system is automatically determined when manual
reference position return is performed.
When �, � and � are set in workpiece zero point offset values, the
workpiece coordinate system is determined so that reference point on the
tool holder or the position of the tip of the reference tool is X= �, Y = �,
Z = � when reference position return is performed.  This has the same
effect as specifying the following command for reference position return:

G92X�Y�Z�;

Once the REFERENCE POSITION RETURN COMPLETION LED
lights at the completion of reference position return, the tool does not
move unless the REFERENCE POSITION RETURN switch is turned
off.

The REFERENCE POSITION RETURN COMPLETION LED is
extinguished by either of the following operations:
–  Moving from the reference position. 
–  Entering an emergency stop state.

For the distance (Not in the deceleration condition) to return the tool to
the reference position, refer to the manual issued by the machine tool
builder.

Explanations

� Automatically setting the
coordinate system

������������

� .����" ��� ���� 
"
��

� ��������� �������� ������

��	������� ;�

� #�� ����
��� �� ������ ��

��������� ��������



OPERATION3. MANUAL OPERATION B–64124EN/01

466

In the jog mode, pressing a feed axis and direction selection switch on the
machine operator’s panel continuously moves the tool along the selected
axis in the selected direction.
The jog feedrate is specified in a parameter (No.1423)
The jog feedrate can be adjusted with the jog feedrate override dial.
Pressing the rapid traverse switch moves the tool at the rapid traverse
feedrate (No. 1424) regardless of the postiotion of the jog feedrate
override dial.  This function is called the manual rapid traverse.  
Manual operation is allowed for one axis at a time. 3 axes can be
 selected at a time by parameter JAX (No.1002#0).

ÇÇ
ÇÇ
ÇÇ

While a switch is pressed, the
tool moves in the direction
specified by the switch.

Z

Y

X

Procedure for JOG feed

1 Press the jog switch, one of the mode selection switches.

2 Press the feed axis and direction selection switch corresponding to the
axis and direction the tool is to be moved.  While the switch is pressed,
the tool moves at the feedrate specified in a parameter (No. 1423).
The tool stops when the switch is released.

3 The jog feedrate can be adjusted with the jog feedrate override dial.

4 Pressing the rapid traverse switch while pressing a feed axis and
direction selection switch moves the tool at the rapid traverse rate
while the rapid traverse switch is pressed.  Rapid traverse override by
the rapid traverse override switches is effective during rapid traverse.

The above is an example.  Refer to the appropriate manual provided
by the machine tool builder for the actual operations.

3.2
JOG FEED

MEMORY

ÂÂ
ÂÂ

REMOTE MDIEDIT

 ZERO
RETURN

JOGHANDLE

MODE

TEACH

+C +Z +Y

+X–X

–C–Y –Z

RAPID

AXIS DIRECTION Procedure

0 2000

JOG FEED RATE DL$  :?$

F0 50 10025

RAPID TRAVERSE

OVERRIDE (%)



OPERATIONB–64124EN/01 3. MANUAL OPERATION

467

Feedrate, time constant and method of automatic acceleration/
deceleration for manual rapid traverse are the same as G00 in programmed
command.

Changing the mode to the jog mode while pressing a feed axis and
direction selection switch does not enable jog feed.  To enable jog feed,
enter the jog mode first, then press a feed axis and direction selection
switch.

If reference position return is not performed after power–on, pushing
RAPID TRAVERSE button does not actuate the rapid traverse but the
remains at the JOG feedrate.  This function can be disabled by setting
parameter RPD (No.1401#01).

Limitations

� �������
����@�������
1

���� ��� �
��� ��
�����

�  �
�"� �� 	����

� �
��� ��
����� ����� ��

��������� �������� ������



OPERATION3. MANUAL OPERATION B–64124EN/01

468

In the incremental (INC) mode, pressing a feed axis and direction
selection switch on the machine operator’s panel moves the tool one step
along the selected axis in the selected direction.  The minimum distance
the tool is moved is the least input increment.  Each step can be 10, 100,
or 1000 times the least input increment.  
This mode is effective when a manual pulse generator is not connected.

Tool
Each time a switch is
pressed, the tool moves
one step in the direction
specified by the switch.

Z

X

Y

Procedure for Incremental Feed

1 Press the INC switch, one of the mode selection switches.

2 Select the distance to be moved for each step with the
magnification dial�

3 Press the feed axis and direction selection switch corresponding to
the axis and direction the tool is to be moved.  Each time a switch
is pressed, the tool moves one step.  The feedrate is the same as the
jog feedrate.

4 Pressing the rapid traverse switch while pressing a feed axis and
direction selection switch moves the tool at the rapid traverse rate.
Rapid traverse override by the rapid traverse override switch is
effective during rapid traverse.

The above is an example.  Refer to the appropriate manual provided
by the machine tool builder for the actual operations.

3.3
INCREMENTAL FEED

X10 X100

X1 X1000

+C +Z +Y

+X–X

–C–Y –Z

RAPID

AXIS DIRECTION



OPERATIONB–64124EN/01 3. MANUAL OPERATION

469

In the handle mode, the tool can be minutely moved by rotating the
manual pulse generator on the machine operator’s panel.  Select the axis
along which the tool is to be moved with the handle feed axis selection
switches.
The minimum distance the tool is moved when the manual pulse
generator is rotated by one graduation is equal to the least input increment.
Or the distance the tool is moved when the manual pulse generator is
rotated by one graduation can be magnified by 1 times, 10 times, or by
one of the two magnifications (total four magnifications) specified by
parameters (No. 7113 and 7114).
In addition to using parameters No. 7113 and No. 7114 to set arbitrary
magnifications common to all axes, the user can use parameters No.
12350 and No. 12351 to set arbitrary magnifications independently for
individual axes.
When parameter No. 12350 has no value, parameter No. 7113 is used;
when parameter No. 12351 has no value, parameter No. 7114 is used.
These parameters are also valid for manual handle interruption.

Manual pulse generator

ÇÇ
ÇÇ
ÇÇ

Z

X

Y

Procedure for Manual Handle Feed

1 Press the HANDLE switch, one of the mode selection switches.

2 Select the axis along which the tool is to be moved by pressing a
handle feed axis selection switch.

3 Select the magnification for the distance the tool is to be moved by
pressing a handle feed magnification switch.  The distance the tool is
moved when the manual pulse generator is rotated by one graduation
is:  Least input increment multiplied by magnification.

4 Move the tool along the selected axis by rotating the handle.  Rotating
the handle 360 degrees moves the tool the distance equivalent to 100
graduations.
The above is an example.  Refer to the appropriate manual provided
by the machine tool builder for the actual operations.

3.4
MANUAL HANDLE
FEED

TEACHJOGHANDLE

MDIMEMORY REMOTE

 ZERO
RETURN

MODE

EDIT

Manual pulse generator



OPERATION3. MANUAL OPERATION B–64124EN/01

470

Parameter JHD (bit 0 of No. 7100) enables or disables the manual handle
feed in the JOG mode.
When the parameter JHD( bit 0 of No. 7100) is set 1,both manual handle
feed and incremental feed are enabled.

Parameter THD (bit 1 of No. 7100) enables or disables the manual handle
feed in the TEACH IN JOG mode.

Parameter HPF (bit 4 of No. 7100) or (No. 7117) specifies as follows:

� Parameter HPF (bit 4 of No. 7100)

Set value 0 : The feedrate is clamped at the rapid traverse rate and
generated pulses exceeding the rapid traverse rate are
ignored. (The distance the tool is moved may not match
the graduations on the manual pulse generator.)

Set value 1 : The feedrate is clamped at the rapid traverse rate and
generated pulses exceeding the rapid traverse rate are not
ignored but accumulated in the CNC.
(No longer rotating the handle does not immediately
stop the tool.  The tool is moved by the pulses
accumulated in the CNC before it stops.)

� Parameter HPF (No. 7177) (It is available when parameter HPF is 0.)

Set value 0 : The feedrate is clamped at the rapid traverse rate and
generated pulses exceeding the rapid traverse rate are
ignored. (The distance the tool is moved may not match
the graduations on the manual pulse generator.)

Other than 0 : The feedrate is clamped at the rapid traverse rate and
generated pulses exceeding the rapid traverse rate are not
ignored but accumulated in the CNC until the limit
specified in parameter No. 7117 is reached.
(No longer rotating the handle does not immediately
stop the tool.  The tool is moved by the pulses
accumulated in the CNC before it stops.)

Parameter HNGx (No. 7102 #0) switches the direction of MPG in which
the tool moves along an axis, corresponding to the direction in which the
handle of the manual pulse generator is rotated.

���
�
�����

� Availability of manual
pulse generator in Jog
mode (JHD)

� Availability of manual
pulse generator in
TEACH IN JOG mode
(THD)

� A command to the MPG
exceeding rapid traverse
rate (HPF)

� Movement direction of
an axis to the rotation of
MPG (HNGX)



OPERATIONB–64124EN/01 3. MANUAL OPERATION

471

Up to three manual pulse generators can be connected, one for each axis.
The three manual pulse generators can be simultaneously operated.

WARNING
Rotating the handle quickly with a large magnification such
as x100 moves the tool too fast.  The feedrate is clamped
at the rapid traverse feedrate.

NOTE
Rotate the manual pulse generator at a rate of five rotations
per second or lower.  If the manual pulse generator is
rotated at a rate higher than five rotations per second, the
tool may not stop immediately after the handle is no longer
rotated or the distance the tool moves may not match the
graduations on the manual pulse generator.

������������

� Number of MPGs



OPERATION3. MANUAL OPERATION B–64124EN/01

472

Whether the distance the tool is moved by manual operation is added to
the coordinates can be selected by turning the manual absolute switch on
or off on the machine operator’s panel.  When the switch is turned on, the
distance the tool is moved by manual operation is added to the
coordinates.  When the switch is turned off, the distance the tool is moved
by manual operation is not added to the coordinates.

O
P1

P2

Y axis

X axis

Manual operation

The coordinates values change by the amount of manual operation.

Fig. 3.5 (a)  Coordinates with the switch ON

X2

X1

Y1
Y2

P1

P2

O1

O2

The coordinates do not change.

Fig. 3.5 (b)  Coordinates with the switch OFF

3.5
MANUAL ABSOLUTE
ON AND OFF



OPERATIONB–64124EN/01 3. MANUAL OPERATION

473

The following describes the relation between manual operation and
coordinates when the manual absolute switch is turned on or off, using a
program example.

G01G90

X200.0Y150.0

X100.0Y100.0F010

X300.0Y200.0

; �

; 	

; 


The subsequent figures use the following notation:

Movement of the tool when the switch is on
Movement of the tool when the switch is off

The coordinates after manual operation include the distance the tool is
moved by the manual operation.  When the switch is off, therefore, subtract
the distance the tool is moved by the manual operation.

Coordinates when block 	 has been executed after manual operation
(X–axis +20.0, Y–axis +100.0) at the end of movement of block �.

Y

X

(120.0 , 200.0)
(220.0 , 250.0)

(200.0 , 150.0)

Switch OFF

Switch ON

(1��.0 , �00.0)

Manual 
operation

Coordinates when the feed hold button is pressed while block 	 is being
executed, manual operation (Y–axis + 75.0) is performed, and the cycle
start button is pressed and released.

(300.0 , 275.0)

(300.0 , 200.0)(200.0 , 150.0)
(150.0 , 125.0)

(150.0 , 200.0)

(200.0 , 225.0)

Y

X

Switch OFF

Switch ON

Manual 
operation

Explanation

� Manual operation after
the end of block

� .
��
� ����
���� 
���� 


���� ����



OPERATION3. MANUAL OPERATION B–64124EN/01

474

Coordinates when the feed hold button is pressed while block 	 is being
executed, manual operation (Y–axis +75.0) is performed, the control unit
is reset with the RESET button, and block 	 is read again

(300.0 , 275.0)

(200.0,150.0)
(300.0 , 200.0)

(150.0 , 200.0)
(200.0,225.0)

(150.0 , 125.0)(100.0 , 100.0)

Y

X
Switch OFF

Switch ON

Manual 
operation

When there is only one axis in the following command, only the
commanded axis returns.

Manual 
operation

N2

N1

N3

N1G01X100.0Y100.0F500;
N2X200.0;
N3Y150.0;

Y

X
(100.0 , 100.0)

(200.0 , 100.0)

(200.0 , 150.0)

Switch OFF

Switch ON

When the following commands are incremental commands, operation is
the same as when the switch is OFF.

When the switch is OFF
After manual operation is performed with the switch OFF during cutter
compensation, automatic operation is restarted then the tool moves
parallel to the movement that would have been performed if manual
movement had not been performed.  The amount of separation equals to
the amount that was performed manually.

Manual 
operation

Cutter path

Programmed path

Cutter path after
manual operation

� When reset after a
manual operation
following a feed hold

� When a movement
command in the next
block is only one axis

� When the next move
block is an incremental

� Manual operation during
cutter compensation



OPERATIONB–64124EN/01 3. MANUAL OPERATION

475

When the switch is ON during cutter compensation
Operation of the machine upon return to automatic operation after manual
intervention with the switch is ON during execution with an absolute
command program in the cutter compensation mode will be described.
The vector created from the remaining part of the current block and the
beginning of the next block is shifted in parallel. A new vector is created
based on the next block, the block following the next block and the
amount of manual movement.  This also applies when manual operation
is performed during cornering.

Manual operation performed in other than cornering
Assume that the feed hold was applied at point PH while moving from PA
to PB of programmed path PA, PB, and PC and that the tool was manually
moved to PH’.  The block end point PB moves to the point PB’ by the
amount of manual movement, and vectors VB1 and VB2 at PB also move
to VB1’ and VB2’.  Vectors VC1 and VC2 between the next two blocks PB
– PC and PC – PD are discarded and new vectors VC1’ and VC2’ (VC2’ =
VC2 in this example) are produced from the relation between PB’ – PC and
PC – PD.  However, since VB2’ is not a newly calculated vector, correct
offset is not performed at block PB’ – PC.  Offset is correctly performed
after PC.

VC1

VC2

PA

PD

PC

PH’

PB

VB2

VB1

VB2’

VC1’

PH

VB1’
Cutter path after 
manual operation

Programmed path
(absolute command)

Manual operation

P’B

Cutter path before 
manual operation



OPERATION3. MANUAL OPERATION B–64124EN/01

476

Manual operation during cornering
This is an example when manual operation is performed during cornering.
VA2’, VB1’, and VB2’ are vectors moved in parallel  with VA2, VB1 and VB2
by the amount of manual movement.  The  new vectors  are calculated
from VC1 and VC2.  Then correct cutter compensation is performed for the
blocks following Pc.

VB2

VB1

VC1

VC2

PA’

PCPB

VC1’

VA1VA2

VA2’ VA1’PH’

PH

PA

VB1’

VB2’

Cutter path after 
manual operation

Programmed path
(absolute command)

Cutter path before 
manual operation

Manual operation

Manual operation after single block stop
Manual operation was performed when execution of a block was
terminated by single block stop.
Vectors VB1 and VB2 are shifted by the amount of manual operation.
Sub–sequent processing is the same as case a described above. An MDI
operation can also be interveneted as well as manual operation.  The
movement is the same as that by manual operation.

VB2

VB1

VC1

VC2PC

PB’

VC1’

VB2’

VB1’

PB

PA

Cutter path after 
manual operation

Manual 
operation

Programmed path
(absolute command)

Cutter path before 
manual operation



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

477

4 AUTOMATIC OPERATION
Programmed operation of a CNC machine tool is referred to as automatic
operation.
This chapter explains the following types of automatic operation:

• MEMORY OPERATION
Operation by executing a program registered in CNC memory

• MDI OPERATION
Operation by executing a program entered from the MDI panel

 DNC OPERATION
Operation while reading a program from an input/output device

• PROGRAM RESTART
Restarting a program for automatic operation from an intermediate
point

• SCHEDULING FUNCTION
Scheduled operation by executing programs (files) registered in an
external input/output device (such as Handy File)

• SUBPROGRAM CALL FUNCTION
Function for calling and executing subprograms (files) registered in an
external input/output device (such as Handy File) during memory
operation

• MANUAL HANDLE INTERRUPTION
Function for performing manual feed during movement executed by
automatic operation

• MIRROR IMAGE
Function for enabling mirror–image movement along an axis during
automatic operation

• MANUAL INTERVENTION AND RETURN
Function restarting automatic operation by returning the tool to the
position where manual intervention was started during automatic
operation

• MEMORY CARD–BASED DNC OPERATION
Automatic operation by a program written to a memory card



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

478

Programs are registered in memory in advance.  When one of these
programs is selected and the cycle start switch on the machine operator’s
panel is pressed, automatic operation starts, and the cycle start LED goes
on.
When the feed hold switch on the machine operator’s panel is pressed
during automatic operation, automatic operation is stopped temporarily.
When the cycle start switch is pressed again, automatic operation is
restarted.

When the RESET  key on the MDI panel is pressed, automatic operation

terminates and the reset state is entered.
The following procedure is given as an example.  For actual operation,
refer to the manual supplied by the machine tool builder.

Procedure for Memory Operation

1 Press the MEMORY mode selection switch.

2 Select a program from the registered programs.  To do this, follow the
steps below.

2–1 Press PROG  to display the program screen.

2–2 Press address O .

2–3 Enter a program number using the numeric keys.

2–4 Press the [O SRH] soft key.

3 Press the cycle start switch on the machine operator’s panel.
Automatic operation starts, and the cycle start LED goes on. When
automatic operation terminates, the cycle start LED goes off.

4 To stop or cancel memory operation midway through, follow the
steps below.

a. Stopping memory operation
Press the feed hold switch on the machine operator’s panel.  The
feed hold LED goes on and the cycle start LED goes off.  The
machine responds as follows:

(i) When the machine was moving, feed operation decelerates
and stops.

(ii) When dwell was being performed, dwell is stopped.

(iii) When M, S, or T was being executed, the operation is  stopped
after M, S, or T is finished.

When the cycle start switch on the machine operator’s panel is
pressed while the feed hold LED is on, machine operation  restarts.

4.1
MEMORY
OPERATION

Procedure



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

479

b. Terminating memory operation

Press the RESET  key on the MDI panel.  

Automatic operation is terminated and the reset state is entered. 
When a reset is applied during movement, movement decelerates
then stops.

After memory operation is started, the following are executed:
(1) A one–block command is read from the specified program.
(2) The block command is decoded.
(3) The command execution is started.
(4) The command in the next block is read.
(5) Buffering is executed.  That is, the command is decoded to allow

immediate execution.
(6) Immediately after the preceding block is executed, execution of the

next block can be started.  This is because buffering has been
executed.

(7) Hereafter, memory operation can be executed by repeating the
steps (4) to.(6)

Memory operation can be stopped using one of two methods:  Specify a
stop command, or press a key on the machine operator’s panel.

– The stop commands include M00 (program stop), M01 (optional
stop), and M02 and M30 (program end).

– There are two keys to stop memory operation:  The feed hold key
and reset key.

Memory operation is stopped after a block containing M00 is executed.
When the  program is stopped, all existing modal information remains
unchanged as in single block operation.  The memory operation can be
restarted by pressing the cycle start button.  Operation may vary
depending on the machine tool builder.  Refer to the manual supplied by
the machine tool builder.

Similarly to M00, memory operation is stopped after a block containing
M01 is executed.  This code is only effective when the Optional Stop
switch on the  machine operator’s panel is set to ON.   Operation may vary
depending on the machine tool builder.  Refer to the manual supplied by
the machine tool builder.

When M02 or M30 (specified at the end of the main program) is read,
memory operation is terminated and the reset state is entered.
In some machines, M30 returns control to the top of the program.  For
details, refer to the manual supplied by the machine tool builder.

When Feed Hold button on the operator’s panel is pressed during memory
operation, the tool decelerates to a stop at a time.

Automatic operation can be stopped and the system can be made to the

reset state by using RESET  key on the MDI panel or external reset signal.

When reset operation is applied to the system during a tool moving status,
the motion is slowed down then stops.

Explanation

Memory operation

Stopping and terminating
memory operation

� *��"�
	 ���� (.)))

� 0�����
� ���� (.)�)

� *��"�
	 ���

�.)&/ .())

� ���� ����

� �����



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

480

When the optional block skip switch on the machine operator’s panel is
turned on, blocks containing a slash (/) are ignored.

A file (subprogram) in an external input/output device such as a Floppy
Cassette can be called and executed during memory operation.  For
details, see Section 4.6.

� Optional block skip

Calling a subprogram
stored in an external
input/output device



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

481

In the MDI mode, a program consisting of up to 10 lines can be created
in the same format as normal programs and executed from the MDI panel.
MDI operation is used for simple test operations.
The following procedure is given as an example.  For actual operation,
refer to the manual supplied by the machine tool builder.

Procedure for MDI Operation

1  Press the MDI mode selection switch.

2 Press the PROG  function key on the MDI panel to select the program

screen.  The following screen appears:

PROGRAM  ( MDI )

MDI * * * *     * * *    * * * 20 : 40 : 05

0010 00002

PRGRM CURRNT NEXT (OPRT)

O0000;

G00 G90 G94 G40 G80 G50 G54 G69
G17 G22 G21 G49 G98 G67 G64 G15

B H M
T D
F S

>_

MDI

Program number O0000 is entered automatically.

3 Prepare a program to be executed by an operation similar to normal
program editing.  M99 specified in the last block can return control to
the beginning of the program after operation ends.  Word insertion,
modification, deletion, word search, address search, and program
search are available for programs created in the MDI mode.  For
program editing, see III–9.

4 To entirely erase a program created in MDI mode,use one of the
following methods:

a. Enter address O , then press the DELETE  key on the MDI panel.

b. Alternatively, press the RESET  key.  In this case, set bit 7 of

parameter MCL No. 3203  to 1 in advance.

4.2
MDI OPERATION

Procedure



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

482

5 To execute a program, set the cursor on the head of the program.  (Start
from an intermediate point  is possible.)   Push Cycle Start button on
the operator’s panel.  By this action, the prepared program will start.
When the program end (M02, M30) or ER(%) is executed, the
prepared program will be automatically erased and the operation will
end.
By command of M99, control returns to the head of the prepared
program.

O0001  N00003

MDI * * * *     * * *    * * * 12 : 42 : 39

PRGRM CURRNT NEXT (OPRT)

PROGRAM  ( MDI )
G00  X100.0  Y200.  ;

M03  ;
G01  Z120.0  F500  ;
M93  P9010  ;
G00  Z0.0  ;
%

G00 G90 G94 G40 G80 G50 G54 G69
G17 G22 G21 G49 G98 G67 G64 G15

B H M
T D
F S

>_

O0000

MDI

6 To stop or terminate MDI operation in midway through, follow the
steps below.

a. Stopping MDI operation
Press the feed hold switch on the machine operator’s panel.  The
feed hold LED goes on and the cycle start LED goes off.  The
machine responds as follows:

(i) When the machine was moving, feed operation decelerates
and stops.

(ii) When dwell was being performed, dwell is stopped.

(iii) When M, S, or T was being executed, the operation is stopped
after M, S, or T is finished.

When the cycle start switch on the machine operator’s panel is
pressed, machine operation restarts.

b. Terminating MDI operation

Press the RESET  key on the MDI panel. 

Automatic operation is terminated and the reset state is entered.  
When a reset is applied during movement, movement decelerates
then stops.



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

483

The previous explanation of how to execute and stop memory operation
also applies to MDI operation, except that in MDI operation, M30 does
not return control to the beginning of the program (M99 performs this
function).

Programs prepared in the MDI mode will be erased in the following cases:

 In MDI operation, if M02, M30 or ER(%) is executed.
(If bit 6 (MER) of parameter No. 3203 is set to 1, however, the
program is erased when execution of the last block of the program
is completed by single–block operation.)

 In MEMORY mode, if memory operation is performed.
 In EDIT mode, if any editing is  performed.
 Background editing is performed.

 When the O  and DELETE  keys were pressed.

 Upon reset when bit 7 (MCL) of parameter No. 3203 is set to 1

After the editing operation during the stop of MDI operation  was done,
operation starts from the current cursor position.

A program can be edited during MDI operation.  The editing of a program,
however, is disabled until the CNC is reset, when bit 5 (MIE) of parameter
No. 3203 is set accordingly.

Programs created in MDI mode cannot be registered.

A program can have as many lines as can fit on one page of the screen.
A program consisting of up to six lines can be created.  When parameter
MDL (No. 3107 #7) is set to 0 to specify a mode that suppresses the
display of continuous–state information, a program of up to 10 lines can
be created.
If the created program exceeds the specified number of lines, % (ER) is
deleted (prevents insertion and modification).

Calls to subprograms (M98) can be specified in a program created in the
MDI mode.  This means that a program registered in memory can be
called and executed during MDI operation.  In addition to the main
program executed by automatic operation, up to four levels of
subprogram nesting are allowed.

Main program Subprogram

One–level nesting Two–level nesting

O0000;

M98P 1000;

M30;

O1000; O2000;

M98P M98P2000; 3000;

M99; M99;

Subprogram

Fig. 4.2  Nesting level of subprograms called from the MDI program

Explanation

� �
���" ��� ���"�
	

� ����
��

� Editing a program during
MDI operation

Limitations

� Program registration

� Number of lines in a 
program

� Subprogram nesting



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

484

Macro programs can also be created, called, and executed in the MDI
mode. However, macro call commands cannot be executed when the
mode is changed to MDI mode after memory operation is stopped during
execution of a subprogram.

When a program is created in the MDI mode, an empty area in program
memory is used.  If program memory is full, no programs can be created
in the MDI mode.

� .
��� �
��

� .�	��! 
��




OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

485

By activating automatic operation during the DNC operation mode
(RMT), it is possible to perform machining (DNC operation) while a
program is being read in via reader/puncher interface, or remote buffer.
It is possible to select files (programs) saved in an external input/output
unit of a floppy format (such as Handy File) and specify (schedule) the
sequence and frequency of execution for automatic operation. (see
III–4.5)
To use the DNC operation function, it is necessary to set the parameters
related to the reader/punch interface, and remote buffer in advance.

DNC  OPERATION

1 Search for the program (file) to be executed.

2 Press the REMOTE switch on the machine operator’s panel to set
RMT mode, then press the cycle start switch.  The selected file is
executed.  For details of the use of the REMOTE switch, refer to the
relevant manual supplied by the machine tool builder.

PROGRAM CHECK O0001 N00020

O0010 ;
G92 G90 X100 Y200 Z50 ;
G00 X0 Y0 Z0 ;
G01 Z250 F1000
 (RELATIVE) (DIST TO GO) G00 G94 G80
 X 100.000 X 0.000 G17 G21 G98
 Y 100.000 Y     0.000  G90  G49  G80
 Z     0.000 Z     0.000  G22  G49  G67
 A    0.000 A     0.000       B       
 C     0.000 C     0.000  H    M       
HD.T        NX.T          D    M       
     F               S          M       
 ACT.F           SACT         REPEAT   
 RMT STRT  MTN *** ***     21:20:05     
[   ABS   ] [   REL    ] [           ] [           ] [  (OPRT)  ]

� Program check screen

PROGRAM O0001 N00020

N020 X100.0 Z100.0 (DNC–PROG) ;
N030 X200.0 Z200.0 ;
N040 X300.0 Z300.0 ;
N050 X400.0 Z400.0 ;
N060 X500.0 Z500.0 ;
N070 X600.0 Z600.0 ;
N080 X700.0 Z400.0 ;
N090 X800.0 Z400.0 ;
N100 x900.0 z400.0 ;
N110 x1000.0 z1000.0 ;
N120 x800.0 z800.0 ;

 RMT  STRT  MTN   ***   ***          21:20:05     
[  PRGRM  ]   [  CHECK  ]   [              ]   [             ]   [  (OPRT)  ]

� Program screen

4.3
DNC OPERATION

*��������



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

486

During DNC operation, the program currently being executed is
displayed on the program check screen and program screen.
The number of displayed program blocks depends on the program being
executed.
Any comment enclosed between a control–out mark “(” and control–in
mark “)” within a block is also displayed.

� During DNC operation, programs stored in memory can be called.

� During DNC operation, macro programs stored in memory can be
called.

In program display, no more than 256 characters can be displayed.
Accordingly, character display may be truncated in the middle of a block.

In DNC operation, M198 cannot be executed.  If M198 is executed, P/S
alarm No. 210 is issued.

In DNC operation, custom macros can be specified, but no repeat
instruction and branch instruction can be programmed.  If a repeat
instruction or branch instruction is executed, P/S alarm No. 123 is issued.
When reserved words (such as IF, WHILE, COS, and NE) used with
custom macros in DNC operation are displayed during program display,
a blank is inserted between adjacent characters.

Example
[During DNC operation]

#102=SIN[#100] ; → #102 = S I N[#100] ;
IF[#100NE0]GOTO5 ; → I F[#100NE0] G O T O 5 ;

When control is returned from a subprogram or macro program to the
calling program during DNC operation, it becomes impossible to use a
return command (M99P****) for which a sequence number is specified.

Number Message Contents

086 DR SIGNAL OFF When entering data in the memory by
using Reader / Puncher interface, the
ready signal (DR) of reader / puncher
was turned off.
Power supply of I/O unit is off or cable is
not connected or a P.C.B. is defective.

123 CAN NOT USE MACRO
COMMAND IN DNC

Macro control command is used during
DNC operation.
Modify the program.

210 CAN NOT COMAND
M198/M199

Or M198 is executed in the DNC opera-
tion.  Modify the program.

Explanations

Limitations

� Limit on number of
characters

� M198 (command for
calling a program from
within an external
input/output unit)

� Custom macro

� M99

Alarm



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

487

This function specifies Sequence No. of a block to be restarted when a tool

is broken down or when it is desired to restart machining operation after

a day off, and restarts the machining operation from that block.  It can also

be used  as a high–speed program check function.

There are two restart methods:  the P–type method and Q–type method.

P TYPE
Operation can be restarted anywhere. This restart method is
used when operation is stopped because of a broken tool.

Program start point (machining start point)

Restart position

Return operation

ÇÇ
ÇÇ

Q TYPE
Before operation can be restarted, the machine must be moved
to the programmed start point (machining start point)

ÇÇ
ÇÇ
ÇÇ

Program start point 
(machining start point)

Return operation

Restart position

4.4
PROGRAM
RESTART



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

488

Procedure for Program Restart by Specifying a Sequence Number

1 Retract the tool and replace it with a new one.  When necessary,
change the offset.  (Go to step 2.)

1 When power is turned ON or emergency stop is released, perform all
necessary operations at that time, including the reference position
return.

2 Move the machine manually to the program starting point (machining
start point), and keep the modal data and coordinate system in the
same conditions as at the machining start.

3 If necessary, modify the offset amount.

1 Turn the program restart switch on the machine operator’s panel ON.

2 Press PROG  key to display the desired program.

3 Find the program head.

4 Enter the sequence number of the block to be restarted, then press th
[P TYPE] or [Q TYPE] soft key.

If the same sequence number appears more than once, the location of
the target block must be specified.  Specify a frequency and a
sequence number.

Procedure 1

 [ P TYPE ]

 [ Q TYPE ]

Procedure 2

 [COMMON TO P TYPE / 
     Q TYPE]

� �����

Sequence number

���

[Q TYPE]

or

[P TYPE]
Frequency

� �����

Sequence number

[P TYPE]

or

[Q TYPE]



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

489

5  The sequence number is searched for, and the program restart screen
appears on the CRT display.

PROGRAM RESTART

DESTINATION
X 57. 096
Y 56. 877
Z 56. 943

M 1 2
1 2
1 2
1 2
1 2
1 * * * * * * * *

* * * * * * * ** * * * * * * *

T * * * * * * * ** * * * * * * *

S  * * * * *

O0002  N01000

S       0    T0000

MEM * * * *     * * *    * * * 10 : 10 : 40

(OPRT)RSTR

DISTANCE TO GO
1 X 1. 459
2 Y 10. 309
3 Z 7. 320

DIR

DESTINATION shows the position at which machining is to restart.
DISTANCE TO GO shows the distance from the current tool position
to the position where machining is to restart.  A number to the left of
each axis name indicates the order of axes (determined by parameter
setting) along which the tool moves to the restart position.
The coordinates and amount of travel for restarting the program can
be displayed for up to five axes.  If your system supports six or more
axes, pressing the [RSTR] soft key again displays the data for the
sixth and subsequent axes.  (The program restart screen displays only
the data for CNC–controlled axes.)
M:  Fourteen most recently specified M codes
T:  Two most recently specified T codes
S:  Most recently specified S code
B:  Most recently specified B code
Codes are displayed in the order in which they are specified.  All
codes are cleared by a program restart command or cycle start in the
reset state.

6 Turn the program re–start switch OFF.  At this time, the figure at the
left side of axis name DISTANCE TO GO blinks.

7 Check the screen for the M, S, T, and B codes to be executed.  If they
are found, enter the MDI mode, then execute the M, S, T, and B
functions.  After execution, restore the previous mode.
These codes are not displayed on the program restart screen.

8 Check that the distance indicated under DISTANCE TO GO is correct.
Also check whether there is the possibility that the tool might hit a
workpiece or other objects when it moves to the machining restart
position.  If such a possibility exists, move the tool manually to a
position from which the tool can move to the machining restart
position without encountering any obstacles.

9 Press the cycle start button.  The tool moves to the machining restart
position at the dry run feedrate sequentially along axes in the order
specified by parameter settings (No. 7310).  Machining is then
restarted.



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

490

Procedure for Program Restart by Specifying a Block Number

1 Retract the tool and replace it with a new one.  When necessary,
change the offset.  (Go to step 2.)

1 When power is turned ON or emergency stop is released, perform all
necessary operations at that time, including the reference position
return.

2 Move the machine manually to the program starting point (machining
start point), and keep the modal data and coordinate system in the
same conditions as at the machining start.

3 If necessary, modify the offset amount.

1 Turn the program restart switch on the machine operator’s panel ON.

2 Press PROG  key to display the desired program.

3 Find the program head.  Press function RESET  key.

4 Enter the number of the block to be restarted then press the [P TYPE]
or [Q TYPE] soft key.  The block number cannot exceed eight digits.

5 The block number is searched for, and the program restart screen
appears on the display.

PROGRAM RESTART

DESTINATION
X 57. 096
Y 56. 877
Z 56. 943

DISTANCE TO GO
X 1. 459
Y 10. 309
Z 7. 320

M 1 2
1 2
1 2
1 2
1 2
1 * * * * * * * *

* * * * * * * ** * * * * * * *

T * * * * * * * ** * * * * * * *

S  * * * * *

O0002  N01000

S       0    T0000

MEM * * * *     * * *    * * * 10 : 10 : 40

FL.SDL (OPRT)RSTR DIR

DESTINATION shows the position at which machining is to restart.
DISTANCE TO GO shows the distance from the current tool position
to the position where machining is to restart.  A number to the left of
each axis name indicates the order of axes (determined by parameter
setting) along which the tool moves to the restart position.

Procedure 1

 [ P TYPE ]

 [ Q TYPE ]

Procedure 2

 [COMMON TO P TYPE / 
     Q TYPE]

� � � � � � � � �

Block number

[P TYPE]

or

[Q TYPE]



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

491

The coordinates and amount of travel for restarting the program can
be displayed for up to five axes.  If your system supports six or more
axes, pressing the [RSTR] soft key again displays the data for the
sixth and subsequent axes.  (The program restart screen displays only
the data for CNC–controlled axes.)
M:  Fourteen most recently specified M codes
T:  Two most recently specified T codes
S:  Most recently specified S code
B:  Most recently specified B code
Codes are displayed in the order in which they are specified.  All
codes are cleared by a program restart command or cycle start in the
reset state.

6 Turn the program re–start switch OFF.  At this time, the figure at the
left side of axis name DISTANCE TO GO blinks.

7 Check the screen for the M, S, T, and B codes to be executed.  If they
are found, enter the MDI mode, then execute the M, S, T, and B
functions.  After execution, restore the previous mode.
These codes are not displayed on the program restart screen.

8 Check that the distance indicated under DISTANCE TO GO is correct.
Also check whether there is the possibility that the tool might hit a
workpiece or other objects when it moves to the machining restart
position.  If such a possibility exists, move the tool manually to a
position from which the tool can move to the machining restart
position without encountering any obstacles.

9 Press the cycle start button.  The tool moves to the machining restart
position at the dry run feedrate sequentially along axes in the order
specified by parameter settings (No. 7310).  Machining is then
restarted.

When the CNC is stopped, the number of executed blocks is displayed on
the program screen or program restart screen.  The operator can specify
the number of the block from which the program is to be restarted, by
referencing the number displayed on the CRT.  The displayed number
indicates the number of the block that was executed most recently.  For
example, to restart the program from the block at which execution
stopped, specify the displayed number, plus one.

The number of blocks is counted from the start of machining, assuming
one NC line of a CNC program to be one block.

< Example 1 >

CNC Program Number of blocks

O 0001 ;
G90 G92 X0 Y0 Z0 ;
G01 X100. F100 ;
G03 X01 –50. F50 ;
M30 ;

1
2
3
4
5

Explanations

� Block number



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

492

< Example 2 >

CNC Program Number of blocks

O 0001 ;
G90 G92 X0 Y0 Z0 ;
G90 G00 Z100. ;
G81 X100. Y0. Z–120. R–80. F50. ;
#1 = #1 + 1 ;
#2 = #2 + 1 ;
#3 = #3 + 1 ;
G00 X0 Z0 ;
M30 ;

1
2
3
4
4
4
4
5
6

Macro statements are not counted as blocks.

The block number is held in memory while no power is supplied.  The
number can be cleared by cycle start in the reset state.

The program screen usually displays the number of the block currently
being executed.  When the execution of a block is completed, the CNC
is reset, or the program is executed in single–block stop mode, the
program screen displays the number of the program that was executed
most recently.  
When a CNC program is halted or stopped by feed hold, reset, or
single–block stop, the following block numbers are displayed:

Feed hold :  Block being executed
Reset :  Block executed most recently
Single–block stop :  Block executed most recently

For example, when the CNC is reset during the execution of block 10, the
displayed block number changes from 10 to 9.

When MDI intervention is performed while the program is stopped by
single–block stop, the CNC commands used for intervention are not
counted as a block.

When the block number displayed on the program screen exceeds eight
digits, the block number is reset to 0 and counting continues.

Under any of the following conditions, P–type restart cannot be
performed:

⋅ When automatic operation has not been performed since the power
was turned on

⋅ When automatic operation has not been performed since an
emergency stop was released

⋅ When automatic operation has not been performed since the
coordinate system was changed or shifted (change in an external
offset from the workpiece reference point)

The block to be restarted need not be the block which was interrupted;
operation can restart with any block.  When P–type restart is performed,
the restart block must use the same coordinate system as when operation
was interrupted.

� Storing / clearing the
block number

� Block number when a
program is halted or
stopped

� MDI intervention

� Block number exceeding
eight digits

Limitations

� P–type restart

� ����
�� ����%



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

493

When single block operation is ON during movement to the restart
position, operation stops every time the tool completes movement along
an axis.  When operation is stopped in the single block mode, MDI
intervention cannot be performed.

During movement to the restart position, manual intervention can be used
to perform a return operation for an axis if it has not yet been performed
for the axis.  A return operation cannot be done further on axes for which
a return has already been completed.

Never reset during the time from the start of a search at restart until
machining is restarted.  Otherwise, restart must be performed again from
the first step.

Regardless of whether machining has started or not, manual operation
must be performed when the manual absolute mode is on.

If no absolute–position detector (absolute pulse coder) is provided, be
sure to perform reference position return after turning on the power and
before performing restart.

Alarm No. Contents

071
The specified block number for restarting the program is not
found.

094
After interruption, a coordinate system was set, then P–type
restart was specified.

095
After interruption, the coordinate system shift was changed,
then P–type restart was specified.

096
After interruption, the coordinate system was changed, then
P–type restart was specified.

097

When automatic operation has not been performed since
the power was turned on, emergency stop was released, or
P/S alarm 094 to 097 was reset, P–type restart was speci-
fied.

098
After the power was turned on, restart operation was per-
formed without reference position return, but a G28 com-
mand was found in the program.

099
A move command was specified from the MDI panel during
a restart operation.

5020
An erroneous parameter was specififed for restarting a pro-
gram.

WARNING
As a rule, the tool cannot be returned to a correct position under the following conditions.
Special care must be taken in the following cases since none of them cause an alarm:
  Manual operation is performed when the manual absolute mode is OFF.
  Manual operation is performed when the machine is locked.
  When the mirror image is used.
  When manual operation is performed in the course of axis movement for returning operation.
  When the program restart is commanded for a block between the block for skip cutting and

subsequent absolute command block.

� -��"�� ����%

� .
��
� ������������

� �����

� .
��
� 
�������

� ��������� �������� ������

Alarm



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

494

The schedule function allows the operator to select files (programs)

registered on a floppy–disk in an external input/output device (such as

Handy File) and specify the execution order and number of repetitions

(scheduling) for performing automatic operation.

It is also possible to select only one file from the files in the external

input/output device and execute it during automatic operation.

FILE DIRECTORY

FILE NO. FILE NAME

 0001  O0010
 0002  O0020
 0003  O0030
 0004  O0040

Set file number and
number of repetitions.

ORDER FILE NO REPETITION

 01    0002      2
 02    0003      1
 03    0004      3
 04    0001      2

Scheduling screen

Executing automatic operation

List of files in an external input/output device

4.5
SCHEDULING
FUNCTION



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

495

Procedure for Scheduling Function

1 Press the MEMORY switch on the machine operator’s panel, then

press the PROG  function key on the MDI panel.

2 Press the rightmost soft key (continuous menu key), then press the
[FL. SDL] soft key.  A list of files registered in the Floppy Cassette is
displayed on screen No. 1.  To display more files that are not
displayed on this screen, press the page key on the MDI panel.  Files
registered in the Floppy Cassette can also be displayed successively.

FILE DIRECTORY O0001  N00000

MEM * * * *     * * *    * * * 19 : 14 : 47

PRGRM (OPRT)

CURRENT SELECTED : SCHEDULE
NO. FILE NAME (METER) VOL
0000 SCHEDULE
0001 PARAMETER  58.5
0002 ALL PROGRAM 11.0
0003 O0001  1.9
0004 O0002 1.9
0005 O0010 1.9
0006 O0020 1.9
0007 O0040 1.9
0008 O0050 1.9

SCHDUL

Screen No.1

DIR

3 Press the [(OPRT)] and [SELECT] soft keys to display “SELECT
FILE NO.” (on screen No. 2).  Enter a file number, then press the [F
SET] and [EXEC] soft keys.  The file for the entered file number is
selected, and the file name is indicated after “CURRENT
SELECTED:”.

O0001  N00000

MEM * * * *     * * *    * * * 19 : 17 : 10

FILE DIRECTORY

CURRENT SELECTED:O0040
NO. FILE NAME (METER) VOL
0000 SCHEDULE
0001 PARAMETER 58.5
0002 ALL PROGRAM  11.0
0003 O0001  1.9
0004 O0002 1.9
0005 O0010 1.9
0006 O0020 1.9
0007 O0040 1.9
0008 O0050 1.9
SELECT FILE NO.=7

F SET EXEC

Screen No.2

>_

Procedure
� Procedure for executing

  one file



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

496

4 Press the REMOTE switch on the machine operator’s panel to enter
the RMT mode, then press the cycle start switch.  The selected file is
executed.  For details on the REMOTE switch, refer to the manual
supplied by the machine tool builder.  The selected file number is
indicated at the upper right corner of the screen as an F number
(instead of an O number).

F0007  N00000

RMT * * * *     * * *    * * * 13 : 27 : 54

FILE DIRECTORY

CURRENT SELECTED:O0040

PRGRM (OPRT)SCHDUL

Screen No.3

DIR

1 Display the list of files registered in the Floppy Cassette.  The display
procedure is the same as in steps 1 and 2 for executing one file.

2 On screen No. 2, press the [(OPRT)] and [SELECT] soft keys to
display “SELECT FILE NO.”

3 Enter file number 0, and press the [F SET], and [EXEC] soft keys.
“SCHEDULE” is indicated after “CURRENT SELECTED:”.

4 Press the leftmost soft key (return menu key) and the [SCHDUL] soft
key.  Screen No. 4 appears.

F0000  N02000

MEM * * * *     * * *    * * * 22 : 07 : 00

FILE DIRECTORY

ORDER FILE NO. REQ.REP CUR.REP
   01
   02
   03
   04
   05
   06
   07
   08
   09
   10

>_

PRGRM DIR

Screen No.4

SCHDUL (OPRT)

� Procedure for executing
the scheduling function



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

497

Move the cursor and enter the file numbers and number of repetitions
in the order in which to execute the files. At this time, the current
number of repetitions “CUR.REP” is 0.

5 Press the REMOTE switch on the machine operator’s panel to enter
the RMT mode, then press the start switch.  The files are executed in
the specified order.  When a file is being executed, the cursor is
positioned at the number of that file.
The current number of repetitions CUR.REP is increased when M02
or M30 is executed in the program being run.

O0000  N02000

RMT * * * *     * * *    * * * 10 : 10 : 40

FILE DIRECTORY

ORDER FILE NO. REQ.REP CUR.REP
   01            5      5
   02       0003  23    23
   03       0004      9999  156
   04       0005    LOOP     0
   05
   06
   07
   08
   09
   10

PRGRM (OPRT)DIR

Screen No.5

SCHDUL

0007

If no file number is specified on screen No. 4 (the file number field is left
blank), program execution is stopped at that point.  To leave the file

number field blank, press numeric key 0  then INPUT .

If a negative value is set as the number of repetitions, <LOOP> is
displayed, and the file is repeated indefinitely.

When the [(OPRT)], [CLEAR], and [EXEC] soft keys are pressed on
screen No. 4, all data is cleared. However, these keys do not function
while a file is being executed.

When the soft key [PRGRM] is pressed on screen No. 1, 2, 3, 4, or 5, the
program screen is displayed.

Up to 9999 can be specified as the number of repetitions. If 0 is set for a
file, the file becomes invalid and is not executed.

By pressing the page key on screen No. 4, up to 20 files can be registered.

When M codes other than M02 and M30 are executed in a program, the
current number of repetitions is not increased.

Explanations

� Specifying no file
number

� Endless repetition

� Clear

� Return to the program
screen

Restrictions

� Number of repetitions

� Number of files
registered

� M code



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

498

During the execution of file, the floppy directory display of background
editing cannot be referenced.

To resume automatic operation after it is suspended for scheduled
operation, press the reset button.

Alarm No. Description

086 An attempt was made to execute a file that was not regis-
tered in the floppy disk.

210 M198 and M099 were executed during scheduled opera-
tion, or M198 was executed during DNC operation.

� Displaying the floppy
disk directory during file
execution

� ����
����" 
���	
���

����
����

��
�	



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

499

The subprogram call function is provided to call and execute subprogram

files stored in an external input/output device(Handy File, FLOPPY

CASSETTE, FA Card)during memory operation.

When the following block in a program in CNC memory is executed, a

subprogram file in the external input/output device is called:

1. FS10/11 tape format

M198  P����  L∆∆∆∆ ;

Number of repetitions

File number for a file in the I/O device

I/O devices call instruction

2. Other than FS10/11 tape format

M198  P����  ∆∆∆∆ ;

Number of repetitions

I/O devices call instruction

File number for a file 
in the I/O device

The subprogram call function is enabled when parameter No.0102 for the
input/output device is set to 3. Either format 1 or 2 can be used. A different
M code can be used for a subprogram call depending on the setting of
parameter No.6030. In this case, M198 is executed as a normal M code.
The file number is specified at address P. If the SBP bit (bit 2) of parameter
No.3404 is set to 1, a program number can be specified. When a file
number is specified at address P, Fxxxx is indicated instead of Oxxxx.

Programs in memory 
execution mode

�� �

�� � ���� ���� -'�� 	(+���

�� ��=@ 8���� ���� �

�> �

�5 �

: First call/return

: Second call/return

: Third call/return

Program in the external 
input/output device

Fig. 4.6  Program flow when m198 is specified

4.6
SUBPROGRAM
CALL FUNCTION
(M198)

Format

Explanation



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

500

NOTE
1 When M198 in the program of the file saved in a floppy

cassette is executed, a P/S alarm (No.210) is given.  When
a program in the memory of CNC is called and M198 is
executed during execution of a program of the file saved in
a floppy cassette, M198 is changed to an ordinary M–code.

� When MDI is intervened and M198 is executed after M198
is commanded in the memory mode, M198 is changed to an
ordinary M–code.  When the reset operation is done in the
MDI mode after M198 is commanded in the MEMORY
mode, it does not influence on the memory operation and
the operation is continued by restarting it in the MEMORY
mode.

Restrictions



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

501

The movement by manual handle operation can be done by overlapping
it with the movement by automatic operation in the automatic operation
mode.

�



Programmed 
depth of cut

Depth of cut by 
handle interruption

Tool position after
handle interruption

Tool position during 
automatic operation

Fig. 4.7  Manual handle interruption

� Handle interruption axis selection signals
For the handle interruption axis selection signals, refer to the manual
supplied by the machine tool builder.

During automatic operation, handle interruption is enabled for an axis
if the handle interruption axis selection signal for that axis is on.
Handle interruption is performed by turning the handle of the manual
pulse generator.

WARNING
The travel distance by handle interruption is determined
according to the amount by which the manual pulse
generator is turned and the handle feed magnification (x1,
x10, xM, xN).
Since this movement is not accelerated or decelerated, it is
very dangerous to use a large magnification value for
handle interruption.
The move amount per scale at x1 magnification is 0.001 mm
(metric output) or 0.0001 inch (inch output).

NOTE
Handle interruption is disabled when the machine is locked
during automatic operation.

4.7
MANUAL HANDLE
INTERRUPTION



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

502

The following table indicates the relation between  other functions and the
movement by  handle interrupt.

Display Relation

Machine lock Machine lock is effective.  The tool does not move
even when this signal turns on.

Interlock Interlock is effective.  The tool does not move even
when this signal turns on.

Mirror image Mirror image is not effective.  Interrupt functions on
the plus direction by plus direction command, even if
this signal turns on.

The following table shows the relation between various position display
data and the movement by handle interrupt.

Display Relation

Absolute 
coordinate value

Handle interruption does not change absolute 
coordinates.

Relative 
coordinate value

Handle interruption does not change relative 
coordinates.

Machine 
coordinate value

Machine coordinates are changed by the travel 
distance specified by handle interruption.

Press the function key POS , then press the chapter selection soft key

[HNDL].
The move amount by the handle interrupt is displayed. The following 4
kinds of data are displayed concurrently.

O0000  N02000

MDI * * * *     * * *    * * * 10 : 29 : 51

HANDLE INTERRUPTION

(INPUT UNIT) (OUTPUT UNIT)
X   69.594 X   69.594
Y 137.783 Y 137.783
Z –61.439 Z –61.439

(RELATIVE)
X 0.000 X 0.000
Y 0.000 Y 0.000
Z 0.000 Z 0.000

(DISTANCE TO GO)

PART COUNT 287
RUN TIME 1H 12M CYCLE TIME 0H 0M 0S

ABS REL ALL (OPRT)HNDL

Explanations

� Relation with other
functions

� Position display

� Travel distance display



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

503

(a) INPUT UNIT : Handle interrupt move amount in input unit
system 
Indicates the travel distance specified by handle
interruption according to the least input
increment.

(b) OUTPUT UNI : Handle interrupt move amount in output unit
system

 Indicates the travel distance specified by handle
interruption according to the least command
increment.

(c) RELATIVE : Position in relative coordinate system
  These values have no effect on the travel distance

specified by handle interruption.

(d) DISTANCE TO GO : The remaining travel distance in the current
block has no effect on the travel distance
specified by handle interruption.

The handle interrupt move amount is cleared when the manual  reference
position return ends every axis.

By setting bit 2 (IHD) of parameter No. 7100 and bit 5 (HIE) of parameter
No. 7103 to 1, acceleration/deceleration for manual handle interruption
can always be of the acceleration/deceleration type for manual feed,
without being affected by automatic operation or some other mode.
More specifically, the acceleration/deceleration type set with bit 4 (JGLx)
of parameter No. 1610 and bit 0 (CTLx) of parameter No. 1610 is applied.
Set a time constant with parameter No. 1624, and an FL feedrate with
parameter No. 1625.

� Independent
acceleration/deceleration



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

504

During automatic operation, the mirror image function can be used for

movement along an axis. To use this function, set the mirror image switch

to ON on the machine operator’s panel, or set the mirror image setting to

ON from the MDI panel.

Y

X

Y–axis mirror image goes on.

Programmed tool path

Tool path after the mirror 
image function is used

Tool

Fig. 4.8  Mirror image

The following procedure is given as an example. For actual operation,
refer to the manual supplied by the machine tool builder.

1 Press the single block switch to stop automatic operation. When the
mirror image function is used from the begining of operation, this step
is omitted.

2 Press the mirror image switch for the target axis on the machine
operator’s panel.
Alternatively, turn on the mirror image setting by following the steps
below:

2–1 Set the MDI mode.

2–2 Press the OFFSETSETTING function key.

2–3 Press the [SETING] soft key for chapter selection to display the
setting screen.

SETTING (MIRROR IMAGE) O0020  N00001

MEM * * * *     * * *    * * * 14 : 47 : 57

MIRROR IMAGE X =       (0 : OFF 1 : ON)
MIRROR IMAGE Y =  0   (0 : OFF 1 : ON)
MIRROR IMAGE Z =  0   (0 : OFF 1 : ON)

OFFSET WORK (OPRT)

>_

1

SETING

4.8
MIRROR IMAGE

Procedure



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

505

2–4 Move the cursor to the mirror image setting position, then set the
target axis to 1.

3 Enter an automatic operation mode (memory mode or MDI mode),
then press the cycle start button to start automatic operation.

� The mirror image function can also be turned on and off by setting bit
0 of parameter 0012  (MIRx) to 1 or 0.

� For the mirror image switches, refer to the manual supplied by the
machine tool builder.

The direction of movement during manual operation, the direction of
movement from an intemidiate point to the reference position during
automatic reference position return (G28), the direction of approach
during unidirectional positioning (G60), and the shift direction in a boring
cycle (G76, G87) cannot be reserved.

Explanations

Limitations



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

506

In cases such as when tool movement along an axis is stopped by feed hold
during automatic operation so that manual intervention can be used to
replace the tool:  When automatic operation is restarted, this function
returns the tool to the position where manual intervention was started.
To use the conventional program restart function and tool withdrawal and
return function, the switches on the operator’s panel must be used in
conjunction with the MDI keys.  This function does not require such
operations.

Before this function can be used, MIN (bit 0 of parameter No. 7001) must
be set to 1.

In manual absolute off mode, the tool does not return to the stop position,
but instead operates according to the manual absolute on/off function.

For the return operation, the dry run feedrate is used, and the jog feedrate
override function is enabled.

Return operation is performed according to positioning based on
nonlinear interpolation.

If the single block stop switch is on during return operation, the tool stops
at the stop position and restarts movement when the cycle start switch is
pressed.

If a reset occurs or an alarm is issued during manual intervention or the
return operation, this function is cancelled.

This function can be used in the MDI mode as well.

This function is enabled only when the automatic operation hold LED is
on.  When there is no travel distance remaining, this function has no effect
even if a feed hold stop is performed with the automatic operation hold
signal *SP (bit 5 of G008).

When the tool is replaced using manual intervention for a reason such as
damage, the tool movement cannot be restarted by a changed offset in the
middle of the interrupted block.

When performing manual intervention, never use the machine lock,
mirror image, or scaling functions.

4.9
MANUAL
INTERVENTION AND
RETURN

Explanations

� Manual absolute on/off

� Override

� Return operation

� Single block

� Cancellation

� MDI mode

Limitations

� Enabling and disabling 
manual intervention and 
return

� Offset

� Machine lock, mirror
image, and scaling



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

507

N1

N2

N1   Point A

N2

N1   Point A

N2

Point B

N1   Point A

N2

B

1. The N1 block cuts a workpiece

Tool

Block start point

2. The tool is stopped by pressing the feed hold switch in
the middle of the N1 block (point A).

3. After retracting the tool manually to point B, tool movement is restarted.

4. After automatic return to point A at the dry run feedrate, the remaining
move command of the N1 block is executed.

Manual
intervention

WARNING
When performing manual intervention, pay particular
attention of machining and the shape of the workpiece so
that the machine and tool are not damaged.

Example



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

508

“DNC operation with Memory Card” is a function that it is possible to
perform machining with executing the program in the memory card,
which is assembled to the memory card interface, where is the left side
of the screen.

There are two methods to use this function as follows.

(a) By starting automatic operation (cycle start) during the DNC
operation mode (RMT), it is possible to perform machining (DNC
operation) while a program is being read from a memory card, as by
using the external input/output unit such as a floppy cassette and so on.
(Fig. 4.10.1 (a))

(b) It is possible to read sub–programs written in the memory card and
execute them by the command Subprogram call (M198).  (Fig. 4.10.1
(b))

It is possible to do the DNC
operation with Memory card
instead of the normal memory
operation by memory in the CNC.

Memory in CNC
(Program)

Memory Card
(Program)

Execution of programs

Normal Memory
operation by
memory in the
CNC

DNC operation
with Memory
card

Fig. 4.10.1 (a)

It is possible to execute the
subprogram in the memory card
during memory operation.

Memory in CNC
(Program)

Memory Card
(Sub Program)

Execution of programs

Normal Memory
operation by memory
in the CNC

Subprogram
Call (M198)

Fig. 4.10.1 (b)

4.10
DNC OPERATION
WITH MEMORY
CARD

4.10.1
Specification



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

509

NOTE
To use this function, it is necessary to set the parameter of
No.20 to 4 by setting screen. 
No.20 [I/O CHANEL:  Setting to select an input/output unit]
Setting value is 4.:  It means using the memory card
interface.

Please set the parameter of No.0020 to 4 in the setting screen in advance.

(1)Change to RMT mode.

(2)Push [PROG] function key.

(3)Push [ > ] soft key (continuance menu).

(4)When [DNC–CD] soft key is pushed, the following screen is
displayed.

(5)The screen can be scrolled by page key.  An arbitrary file number is
input, and [F SRH] soft key is pushed.  Then the arbitrary file name
is displayed at the top of DNC operation (memory card) screen.

(6)When the file number that is executed is input and the [DNC–ST] soft
key is pushed, the file name that is selected is set to DNC FILE.

(7)When the cycle start is done, the program that is selected is executed.

4.10.2
Operations

4.10.2.1
DNC Operation

Procedure



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

510

When the following block in a program in CNC memory is executed, a
subprogram file in memory card is called.

1. Normal format

M198  P����  ∆∆∆∆ ;

File number for a file in
the memory card

Number of repetition
Memory card call instruction

2. FS15 tape format

M198  P����  L∆∆∆∆ ;

File number for a file in the
memory card

Memory card call instruction

File number of repetition

Both format 1 and 2 can be used.  A different M code can be used for a
subprogram call depending on the setting of parameter No. 6030.  In this
case, M198 is executed as a normal M code.  The file number is specified
at address P.  If the SBP (bit 2) of parameter No. 3404 is set to 1, a program
number can be specified.  When a file number is specified at address P,
Fxxxx is indicated instead of Oxxxx.

NOTE
Please set the parameter of No. 0020 to 4 in the setting
screen in advance.

4.10.2.2
Subprogram Call (M198)

Format

Explanation



OPERATIONB–64124EN/01 4. AUTOMATIC OPERATION

511

(1)The memory card can not be accessed, such as display of memory card
list and so on, during the DNC operation with memory card.

(2)The selection of DNC operation file that is set at DNC OPERATION
screen is cleared by the power supply turn off and on.  After the power
supply is turned on again, it is necessary to select the DNC operation
file again.

(3)Please do not pull out and insert memory card during the DNC
operation with memory card.

(4) It is not possible to call a program in the memory card from the DNC
operation program.

(5)When this function is used, secure the memory card by following the
procedure described later, to prevent the card from becoming
disconnected or poorly connected due to vibration during operation or
for some other reason.

#7
DNM0138

#6 #5 #4 #3 #2 #1 #0

[Data type] Bit

#7 (DNM) The DNC operation with memory card function is
0 : disable.

1 : enable.

Follow the procedure below to fix the memory card.

1. Inserting the memory card into the fixing bracket

Insert the memory card into the
fixing bracket in the direction
indicated by the arrow.

Fix the memory card to the fixing
bracket.

Fix the card at this point.

4.10.3
Limitation and Notes

4.10.4
Parameter

4.10.5
Procedure for Fixing
the Memory Card



OPERATION4. AUTOMATIC OPERATION B–64124EN/01

512

2. Inserting the card into the PCMCIA port.

Loosen the screw of the
fixing bracket and insert
the memory card into the
PCMCIA port with the
claw of the fixing bracket
raised.

Align the claw of the fixing bracket
with the groove of the PCMCIA port
and then push the bracket in the
direction indicated by the arrow.

Tighten the screw of the bracket
to fix the memory card.

Align the claw with the groove.

Push the bracket to the right.

Fix the card by tightening the screw.



OPERATIONB–64124EN/01 5. TEST OPERATION

513

5 #-# 0*��#608
The following functions are used to check before actual machining
whether the machine operates as specified by the created program.

5.1 MACHINE LOCK AND AUXILIARY FUNCTION LOCK
5.2 FEEDRATE OVERRIDE
5.3 RAPID TRAVERSE OVERRIDE
5.4 DRY RUN
5.5 SINGLE BLOCK



OPERATION5. TEST OPERATION B–64124EN/01

514

To display the change in the position without moving the tool, use
machine lock.
There are two types of machine lock:  all–axis machine lock, which stops
the movement along all axes, and specified–axis machine lock, which
stops the movement along specified axes only.  In addition, auxiliary
function lock, which disables M, S, and T commands, is available for
checking a program together with machine lock.

MDI

X
Y
Z

The tool does not move but the
position along each axis changes
on the display.

Tool

Workpiece

Fig. 5.1  Machine lock

Procedure for Machine Lock and Auxiliary Function Lock

Press the machine lock switch on the operator’s panel.  The tool does not
move but the position along each axis changes on the display as if the tool
were moving.
Some machines have a machine lock switch for each axis.  On such
machines, press the machine lock switches for the axes along which the
tool is to be stopped.  Refer to the appropriate manual provided by the
machine tool builder for machine lock.

WARNING
The positional relationship between the workpiece
coordinates and machine coordinates may differ before and
after automatic operation using machine lock.  In such a
case, specify the workpiece coordinate system by using a
coordinate setting command or by performing manual
reference position return.

Press the auxiliary function lock switch on the operator’s panel.  M, S, T
and B codes are disabled and not executed.  Refer to the appropriate
manual provided by the machine tool builder for auxiliary function lock.

5.1
MACHINE LOCK AND
AUXILIARY 
FUNCTION LOCK

� Machine Lock

� Auxiliary Function Lock



OPERATIONB–64124EN/01 5. TEST OPERATION

515

M, S, T and B commands are executed in the machine lock state.

When a G27, G28, or G30 command is issued in the machine lock state,
the command is accepted but the tool does not move to the reference
position and the reference position return LED does not go on.

M00, M01, M02, M30, M98, M99, and M198 (Subprogram call)
commands are executed even in the auxiliary function lock state. M codes
for calling a subprogram (parameters No. 6071 to 6079) and those for
calling a custom macro (parameter No. 6080 to 6089) are also executed.

Restrictions

� M, S, T, B command by
only machine lock

� Reference position
return under Machine
Lock

� . ����� ��� ���%�� �!


�����
�! �������� ���%



OPERATION5. TEST OPERATION B–64124EN/01

516

A programmed feedrate can be reduced or increased by a percentage (%)
selected by the override dial.This feature is used to check a program.
For example, when a feedrate of 100 mm/min is specified in the program,
setting the override dial to 50% moves the tool at 50 mm/min.

Tool
Check the machining
by altering the feedrate
from the value speci-
fied in the program.

Feedrate 100 mm/min
(Specified by programmed)

Feedrate 50 mm/min after
feedrate override

Workpiece

Fig. 5.2  Feedrate override

Procedure for Feedrate Override

Set the feedrate override dial to the desired percentage (%) on the machine
operator’s panel, before or during automatic operation.
On some machines, the same dial is used for the feedrate override dial and
jog feedrate dial.  Refer to the appropriate manual provided by the
machine tool builder for feedrate override.

The override that can be specified ranges from 0 to 254%.  For individual
machines, the range depends on the specifications of the machine tool
builder.

During threading, the override is ignored and the feedrate remains as
specified by program.

5.2
FEEDRATE 
OVERRIDE

0 200

JOG FEED RATE OVERRIDE

������������

� Override Range

� Override during thread



OPERATIONB–64124EN/01 5. TEST OPERATION

517

An override of four steps (F0, 25%, 50%, and 100%) can be applied to the
rapid traverse rate.  F0 is set by a parameter (No. 1421).

ÇÇ
ÇÇ
ÇÇ

ÇÇ
ÇÇ
ÇÇ

Rapid traverse
rate10m/min

Override
50%

5m/min

Fig. 5.3  Rapid traverse override

Rapid Traverse Override

Select one of the four feedrates with the rapid traverse override switch
during rapid traverse.  Refer to the appropriate manual provided by the
machine tool builder for rapid traverse override.

The following types of rapid traverse are available.  Rapid traverse
override can be applied for each of them.
1) Rapid traverse by G00
2) Rapid traverse during a canned cycle
3) Rapid traverse in G27, G28, G29, G30, G53 
4) Manual rapid traverse
5) Rapid traverse of manual reference position return

5.3
RAPID TRAVERSE
OVERRIDE

Procedure

100
25 50

LOW

Rapid traverse override

���
�
����



OPERATION5. TEST OPERATION B–64124EN/01

518

The tool is moved at the feedrate specified by a parameter regardless of
the feedrate specified in the program.  This function is used for checking
the movement of the tool under the state taht the workpiece is removed
from the table.

Tool

Table

Fig. 5.4  Dry run

Procedure for Dry Run

Press the dry run switch on the machine operator’s panel during automatic
operation.
The tool moves at the feedrate specified in a parameter.  The rapid traverse
switch can also be used for changing the feedrate.
Refer to the appropriate manual provided by the machine tool builder for
dry run.

The dry run feedrate changes as shown in the table below according to the
rapid traverse switch and parameters.

Rapid traverse
button

Program command
button Rapid traverse Feed

ON Rapid traverse rate Dry run feedrate�Max.JV *2)

OFF Dry run speed�JV,or 
rapid traverse rate *1)

Dry run feedrate�JV
*2)

Max. cutting feedrate Setting by parameter No.1422. . . . . 

Rapid traverse rate Setting by parameter No.1420. . . . . . . 

Dry run feedrate Setting by parameter No.1410. . . . . . . . . 

JV: Jog feedrate override

*1) Dry run feedrate x JV when parameter RDR (bit 6 of No. 1401) is

1.  Rapid traverse rate when parameter RDR is 0.

*2) Clamped to the maximum cutting feedrate

JVmax:  Maximum value of jog feedrate override

5.4
DRY RUN

*��������

���
�
����

� ��! ��� �����
��

DRY
RUN

MC
LOCK

SINGLE
BLOCK

OPT
STOP

MST
LOCK

BLOCK
SKIP

WORK
LIGHT



OPERATIONB–64124EN/01 5. TEST OPERATION

519

Pressing the single block switch starts the single block mode.  When the
cycle start button is pressed in the single block mode, the tool stops after
a single block in the program is executed.  Check the program in the single
block mode by executing the program block by block.

Cycle start

Stop

Workpiece

Cycle start

Cycle start

Stop

Stop

Tool

Fig. 5.5 (a)  Single block

Procedure for Single block

1 Press the single block switch on the machine operator’s panel.  The
execution of the program is stopped after the current block is
executed.

2 Press the cycle start button to execute the next block.  The tool stops
after the block is executed.

Refer to the appropriate manual provided by the machine tool builder
for single block execution.

5.5
SINGLE BLOCK

*��������



OPERATION5. TEST OPERATION B–64124EN/01

520

If G28 to G30 are issued, the single block function is effective at the
intermediate point.

In a canned cycle, the single block stop points are the end of �, 	, and
� shown below.  When the single block stop is made after the point �
or 	, the feed hold LED lights.

�




�

�

 �&'% 
��3����

-��%

	

 �

Fig. 5.5 (b)  Single block during canned cycle

Single block stop is not performed in a block containing M98P_;. M99;
or G65.
However, single block stop is even performed in a block with M98P_ or
M99 command, if the block contains an address other than O, N, P, L.

Explanation

� Reference position
return and single block

� Single block during a
canned cycle

� Subprogram call and
single block



OPERATIONB–64124EN/01 6. SAFETY FUNCTIONS

521

6 SAFETY FUNCTIONS
To immediately stop the machine for safety, press the Emergency stop
button.  To prevent the tool from exceeding the stroke ends, Overtravel
check and Stroke check are available.  This chapter describes emergency
stop., overtravel check, and stroke check.



OPERATION6. SAFETY FUNCTIONS B–64124EN/01

522

If you press Emergency Stop button on the machine operator’s panel, the
machine movement stops in a moment.

EMERGENCY STOP

Red

Fig. 6.1  Emergency stop

This button is locked when it is pressed.  Although it varies with the

machine tool builder, the button can usually be unlocked by twisting it.

EMERGENCY STOP interrupts the current to the motor. 
Causes of trouble must be removed before the button is released.

6.1
EMERGENCY STOP

���
�
����



OPERATIONB–64124EN/01 6. SAFETY FUNCTIONS

523

When the tool tries to move beyond the stroke end set by the machine tool
limit switch, the tool decelerates and stops because of working the limit
switch and an OVER TRAVEL is displayed.

Y



Deceleration and stop

Stroke end Limit switch

Fig. 6.2  Overtravel

When the tool touches a limit switch along an axis during automatic
operation, the tool is decelerated and stopped along all axes and an
overtravel alarm is displayed.

In manual operation, the tool is decelerated and stopped only along the
axis for which the tool has touched a limit switch.  The tool still moves
along the other axes.

Press the reset button to reset the alarm after  moving the tool to the safety
direction by manual operation.  For details on operation, refer to the
operator’s manual of the machine tool builder.

If an overtravel alarm is issued, either of the following alarm messages
appears:

Alarm
No. Message Description

506 Overtravel:  +n
The tool has exceeded the hardware–specified
overtravel limit along the positive nth axis
(n:  1 to 4).

507 Overtravel:  –n
The tool has exceeded the hardware–specified
overtravel limit along the negative nth axis 
(n:  1 to 4).

6.2
OVERTRAVEL

Explanation

� Overtravel during
automatic operation

� Overtravel during
manual operation

� Releasing overtravel

Alarm



OPERATION6. SAFETY FUNCTIONS B–64124EN/01

524

Three areas which the tool cannot enter can be specified with stored stroke
check 1, stored stroke check 2, and stored stroke check 3.

ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ

(I,J,K)

(I,J,K)

(X,Y,Z)

ÇÇ  : Forbidden area for the tool

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

(X,Y,Z)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

 (1)Forbidden area is inside.

(2)Forbidden area is outside

ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ

Ç

Fig. 6.3 (a)  Stroke check

When the tool exceeds a stored stroke limit, an alarm is displayed and the
tool is decelerated and stopped.
When the tool enters a forbidden area and an alarm is generated, the tool
can be moved in the reverse direction from which the tool came.

Parameters (Nos. 1320, 1321 or Nos. 1326, 1327) set boundary.  Outside
the area of the set limits is a forbidden area.  The machine tool builder
usually sets this area as the maximum stroke.

Parameters (Nos. 1322, 1323) or commands set these boundaries.  Inside
or outside the area of the limit can be set as the forbidden area.  Parameter
OUT (No. 1300#0) selects either inside or outside as the forbidden area.

In case of program command a G22 command forbids the tool to enter the
forbidden area, and a G23 command permits the tool to enter the
forbidden area. Each of G22; and G23; should be commanded
independently of another commands in a block.
The command below creates or changes the forbidden area:

6.3
STORED STROKE
CHECK

Explanation

� Stored stroke check 1

� Stored stroke check 2
(G22, G23)



OPERATIONB–64124EN/01 6. SAFETY FUNCTIONS

525

(I,J,K)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

(X,Y,Z)

X>I, Y>J, Z>K
X–I >ζ (In least command increment)
Y–J >ζ (In least command increment)
Z–K >ζ ((In least command increment)

G 22X_Y_Z_I_J_K_;

ζ (mm)=
7500

F

F=Rapid traverse speed (mm/min)

Fig. 6.3 (b)  Creating or changing the forbidden area using a program

When setting the area by parameters, points A and B in the figure below
must be set.

B (I,J,K)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

A (X,Y,Z)

X>I, Y>J, Z>K
X–I >ζ (In least command increment)
Y–J >ζ (In least command increment)
Z–K >ζ ((In least command increment)

ζ (mm)=
7500

F

F=Rapid traverse speed (mm/min)

Fig. 6.3 (c)  Creating or changing the forbidden area using a parameters

In stored stroke check 2, even if you mistake the order of the coordinate
value of the two points, a rectangular, with the two points being the
apexes, will be set as the area.
When you set the forbidden area through parameters  (Nos. 1322, 1323),
the data should be specified by the distance from the machine coordinate
system in the least command increment.  (Output increment) 
If it is set by a G22 command, specify the data  by the distance from the
machine coordinate system in the least input increment (Input increment.)
 The programmed data are then converted into the numerical values in the
least command increment, and the values are set as the parameters.

Confirm the checking position (the top of the tool or the tool chuck) before
programming the forbidden area.
If point A (The top of the tool) is checked in Fig. 6.3 (d) , the distance “a”
should be set as the data for the stored stroke limit function.  If point B
(The tool chuck) is checked, the distance “b” must be set. When checking
the tool tip (like point A), and if the tool length varies for each tool, setting
the forbidden area for the longest tool requires no re–setting and results
in safe operation.

� Checkpoint for the
forbidden area



OPERATION6. SAFETY FUNCTIONS B–64124EN/01

526

ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ

A

B

a

b

�)� &��'
'�	 �� 
)�


��� ��
�� ������	��

&��'
'�	 ��
(�	

���� ��(	%��F

Fig. 6.3 (d)  Setting the forbidden area

Area can be set in piles.

ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ

ÇÇÇÇÇÇ
ÇÇÇÇÇÇ

Fig. 6.3 (e)  Setting the forbidden area over lapping

Unnecessary limits should be set beyond the machine stroke.

If the maximum rapid traverse rate is F (mm/min), the maximum overrun
amount, L (mm), of the stored stroke limit is obtained from the following
expression:

L (mm) = F/7500
The tool enters the specified inhibited area by up to L (mm).  Bit 7 (BFA)
of parameter No. 1300 can be used to stop the tool when it reaches a point
L mm short of the specified area.  In this case, the tool will not enter the
inhibited area.

Each limit becomes effective after the power is turned on and manual
reference position return or automatic reference position return by G28
has been performed.
After the power is turned on, if the reference position is in the forbidden
area of each limit, an alarm is generated immediately.  (Only in G22 mode
for stored stroke limit 2).

If the enters a forbidden area and an alarm is generated, the tool can be
moved only in the backward direction.  To cancel the alarm, move the tool
backward until it is outside the forbidden area and reset the system.  When
the alarm is canceled, the tool can be moved both backward and forward.

� Forbidden area 
over lapping

� Overrun amount of
stored stroke limit

� Effective time for a
forbidden area

� Releasing the alarms



OPERATIONB–64124EN/01 6. SAFETY FUNCTIONS

527

When G23 is switched to G22 in the forbidden area, the following results.

(1)When the forbidden area is inside, an alarm is informed in the next
move.

(2)When the forbidden area is outside, an alarm is informed immediately.

Parameter BFA (bit 7 of No. 1300) selects whether an alarm is displayed
immediately before the tool enters the forbidden area or immediately after
the tool has entered the forbidden area.

Alarm
Number Message Contents

500 OVER TRAVEL: +n Exceeded the n–th axis (1–4) + side stored
stroke limit I.

501 OVER TRAVEL: –n Exceeded the n–th axis (1–4) � side
stored stroke limit I.

502 OVER TRAVEL: +n Exceeded the n–th axis (1–4) + side stored
stroke limit II.

503 OVER TRAVEL: –n Exceeded the n–th axis (1–4) � side
stored stroke limit II.

� Change from G23 to
G22 in a forbidden area

� Timing for displaying 
an alarm

Alarms



OPERATION6. SAFETY FUNCTIONS B–64124EN/01

528

During automatic operation, before the movement specified by a given
block is started, whether the tool enters the inhibited area defined by
stored stroke limit 1 or 2 is checked by determining the position of the end
point from the current position of the machine and a specified amount of
travel.  If the tool is found to enter the inhibited area defined by a stored
stroke limit, the tool is stopped immediately upon the start of movement
for that block, and an alarm is displayed.

WARNING
Whether the coordinates of the end point, reached as a
result of traversing the distance specified in each block, are
in a inhibited area is checked.  In this case, the path followed
by a move command is not checked.  However, if the tool
enters the inhibited area defined by stored stroke limit 1 or
2, an alarm is issued.  (See the examples below.)

Example 1)

a

Inhibited area defined by
stored stroke limit 1 or 2

Start point
End point

The tool is stopped at point a according
to stored stroke limit 1 or 2.

Immediately upon movement commencing
from the start point, the tool is stopped to
enable a stroke limit check to be performed
before movement.

Inhibited area defined by
stored stroke limit 1 or 2

End point

6.4
STROKE LIMIT
CHECK PRIOR TO
PERFORMING
MOVEMENT



OPERATIONB–64124EN/01 6. SAFETY FUNCTIONS

529

Example 2)

Start point

End point

The tool is stopped at point a according
to stored stroke limit 1 or 2.

Immediately upon movement commencing
from the start point, the tool is stopped to
enable a stroke limit check to be performed
before movement.

a

Inhibited area defined by
stored stroke limit 2

Inhibited area defined by
stored stroke limit 2 End point

When a stroke limit check prior to movement is performed, whether to
check the movement performed by a G31 (skip) block and G37 (automatic
tool length measurement) block can be determined using NPC (bit 2 of
parameter No. 1301).

If machine lock is applied at the start of movement, no stroke limit check
made before movement is performed.

When stored stroke limit 2 is disabled (G23 mode), no check is made to
determine whether the tool enters the inhibited area defined by stored
stroke limit 2.

When a program is restarted, an alarm is issued if the restart position is
within a inhibited area.

When the execution of a block is restarted after manual intervention
following a feed hold stop, no alarm is issued even if the end point
following a manual intervention is within a inhibited area.

If a block consisting of multiple operations (such as a canned cycle) is
executed, an alarm is issued at the start point of any operation whose end
point falls within a inhibited area.

Explanations

Limitations

� Machine lock

� G23

� Program restart

� Manual intervention
following a feed hold
stop

� A block consisting of
multiple operations



OPERATION6. SAFETY FUNCTIONS B–64124EN/01

530

In cylindrical interpolation mode, no check is made.

When the angulalr axis control option is selected, no check is made.

In simple synchronous control, only the master axis is checked; no slave
axes are checked.

No check is performed while drawing is being performed as part of
dynamic graphic display (only drawing (no machining) is being
performed).

No check is made for a movement based on PMC axis control.

Number Message Contents

510 OVER TRAVEL : +n

The pre–movement stroke limit check re-
veals that the block end point enters the
prohibited area for the positive stroke limit
along the n axis.  Correct the program.

511 OVER TRAVEL : –n

The pre–movement stroke limit check re-
veals that the block end point enters the
prohibited area for the negative stroke limit
along the n axis.  Correct the program.

� Cyrindrical interpolation
mode

� Angular axis control

� Simple synchronous
control

� Drawing

� PMC axis control

Alarm



OPERATIONB–64124EN/01
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

531

7 ALARM AND SELF–DIAGNOSIS FUNCTIONS
When an alarm occurs, the corresponding alarm screen appears to indicate
the cause of the alarm.  The causes of alarms are classified by alarm
numbers.  Up to 50 previous alarms can be stored and displayed on the
screen (alarm history display).
The system may sometimes seem to be at a halt, although no  alarm is
displayed.   In this case, the system may be performing some processing.
The state of the system can be checked using the self–diagnostic function.



OPERATION
7. ALARM AND SELF–DIAGNOSIS
   FUNCTIONS B–64124EN/01

532

When an alarm occurs, the alarm screen appears.

ARALM

ALARM MESSAGE

MDI * * * *     * * *    * * * 18 : 52 : 05

0000 00000

100 PARAMETER WRITE ENABLE
510 OVER TR1AVEL :+X
417 SERVO ALARM :X AXIS DGTL PARAM
417 SERVO ALARM :X AXIS DGTL PARAM

MSG HISTRY

S     0  T0000
ALM 

In some cases, the alarm screen does not appear, but an ALM is displayed
at the bottom of the screen.

INPUT+INPUTOFF:0ON:1NO.SRH

ALM

PARAMETER (AXIS/UNIT) O1000  N00010

MEM * * * *     * * *    * * * 08 : 41 : 27
S 0 T0000

1001 INM
0 0 0 0 0 0 0 0

1002  XIK DLZ JAX
0 0 0 0 0 0 0 0

1003
0 0 0 0 0 0 0 0

1004 IPR ISC ISA
0 0 0 0 0 0 0 0

>_

In this case, display the alarm screen as follows:

1. Press the function key MESSAGE .

2. Press the chapter selection soft key [ALARM].

7.1
ALARM DISPLAY

Explanations

� Alarm screen

� Another method for
alarm displays



OPERATIONB–64124EN/01
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

533

Alarm numbers and messages indicate the cause of an alarm.  To recover
from an alarm, eliminate the cause and press the reset key.

The error codes are classified as follows:
No. 000 to 255 : P/S alarm (Program errors) (*)
No. 300 to 349 : Absolute pulse coder (APC) alarms
No. 350 to 399 : Serial pulse coder (SPC) alarms
No. 400 to 499 : Servo alarms (1/2)
No. 500 to 599 : Overtravel alarms
No. 600 to 699 : Servo alarms (2/2)
No. 700 to 739 : Overheat alarms
No. 740 to 748 : Rigid tapping alarms
No. 749 to 799 : Spindle alarms
No. 900 to 999 : System alarms
No. 5000 to later : P/S alarm (Program errors)

* For an alarm (No. 000 to 255) that occurs in association with
background operation, the indication “xxxBP/S alarm” is provided
(where xxx is an alarm number).  Only a BP/S alarm is provided for
No. 140.
See the alarm list in the appendix G for details of the alarms.

� Reset of the alarm

� Alarm numbers



OPERATION
7. ALARM AND SELF–DIAGNOSIS
   FUNCTIONS B–64124EN/01

534

Up to 50 of the most recent CNC alarms are stored and displayed on the
screen.
Display the alarm history as follows:

Procedure for Alarm History Display

1  Press the function key  MESSAGE  .

2 Press the chapter selection soft key [HISTRY].
The alarm history appears.
The following information items are displayed.
 (1) The date the alarm was issued
 (2) Alarm No.
 (3) Alarm message (some contains no message)
 (4) Page No.

3 Change the page by the 1–page change key.

4 To delete the recorded information, press the softkey [(OPRT)] then
the [DELETE] key.

ALARM HISTORY O0100  N00001

MEM * * * *     * * *    * * * 19 : 47 : 45

(1)97.02.14 16:43:48
(2)010  (3)MPROPER G–CODE

 97.02.13 8:22:21
  506   OVER TRAVEL : +1
 97.02.12 20:15:43
  417 SERVO ALARM : X AXIS DGTL PARAM

ALARM MSG HISTRY (OPRT)

PAGE=1
   (4)

7.2
ALARM HISTORY
DISPLAY

Procedure



OPERATIONB–64124EN/01
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

535

The system may sometimes seem to be at a halt, although no alarm has
occurred.  In this case, the system may be performing some processing.
The state of the system can be checked by displaying the self–diagnostic
screen.

Procedure for Diagnois

1 Press the function key SYSTEM .

2 Press the chapter select key [DGNOS].

3 The diagnostic screen has more than 1 pages.  Select the screen by the
following operation.
(1) Change the page by the 1–page change key.
(2) Method by soft key
  – Key input the number of the diagnostic data to be displayed.
  – Press [N SRCH].

DGNOS

DIAGNOSTIC (GENERAL) O0000  N0000

EDIT * * * *     * * *    * * * 14 : 51 : 55

000 WAITING FOR FIN SIGNAL :0
001 MOTION :0
002 DWELL :0
003 IN–POSITION  CHECK :0
004 FEEDRATE  OVERRIDE  0% :0
005 INTERLOCK/START–LOCK :0
006 SPINDLE  SPEED  ARRIVAL  CHECK :0

PARAM PMC SYSTEM (OPRT)

>_

 

7.3
CHECKING BY 
SELF–DIAGNOSTIC
SCREEN

*��������



OPERATION
7. ALARM AND SELF–DIAGNOSIS
   FUNCTIONS B–64124EN/01

536

Diagnostic numbers 000 to 015 indicate states when a command is being
specified but appears as if it were not being executed.  The table below
lists the internal states when 1 is displayed at the right end of each line on
the screen.

Table 7.3 (a)  Alarm displays when a command is specified but appears as if it were not being executed

No. Display Internal status when 1 is displayed

000 WAITING FOR FIN SIGNAL M, S. T function being executed

001 MOTION Move command in automatic operation being executed

002 DWELL Dwell being executed

003 IN–POSITION CHECK In–position check being executed

004 FEEDRATE OVERRIDE 0% Cutting feed override 0%

005 INTERLOCK/START–LOCK Interlock ON

006 SPINDLE SPEED ARRIVAL CHECK Waiting for spindle speed arrival signal to turn on

010 PUNCHING Data being output via reader puncher interface

011 READING Data being input via reader puncher interface

012 WAITING FOR (UN) CLAMP Waiting for index table clamp/unclamp before B axis in-
dex table indexing start/after B axis index table indexing
end to complete

013 JOG FEEDRATE OVERRIDE 0% Jog override 0%

014 WAITING FOR RESET.ESP.RRW.OFF Emergency stop, external reset, reset & rewind, or MDI
panel reset key on

015 EXTERNAL PROGRAM 
NUMBER SEARCH

External program number searching

Table 7.3 (b)  Alarm displays when an automatic operation is stopped or paused.

No. Display Internal status when 1 is displayed

020 CUT SPEED UP/DOWN Set when emergency stop turns on or when servo alarm
occurs

021 RESET BUTTON ON Set when reset key turns on

022 RESET AND REWIND ON Reset and rewind turned on

023 EMERGENCY STOP ON Set when emergency stop turns on

024 RESET ON Set when external reset, emergency stop, reset, or reset
& rewind key turns on

025 STOP MOTION OR DWELL A flag which stops pulse distribution.  It is set in the fol-
lowing cases.
(1) External reset turned on.
(2) Reset & rewind turned on.
(3) Emergency stop turned on.
(4) Feed hold turned on.
(5) The MDI panel reset key turned on.
(6) Switched to the manual mode(JOG/HANDLE/INC).
(7) Other alarm occurred.  

(There is also alarm which is not set.)

Explanations



OPERATIONB–64124EN/01
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

537

The table below shows the signals and states which are enabled when each
diagnostic data item is 1.  Each combination of the values of the diagnostic
data indicates a unique state.

020

021

022

023

024

025

1

1

1

1

1

1

1

1

1

1 1 1

1

1

0

0

0

0

0

0

0

0

0 0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

0

Emergency stop signal input

External reset signal input

MDI reset button turned on

Reset & rewind input

Servo alarm generation

Changed to another mode or feed hold

Single block stop

CUT SPEED UP/DOWN

RESET BUTTON ON

RESET AND REWIND ON

EMERGENCY STOP ON

RESET ON

STOP MOTION OR DWELL

Diagnostic numbers 030 and 031 indicate TH alarm states.

No. Display Meaning of data

030 CHARACTER NUMBER TH DATA The position of the character which caused TH alarm is
displayed by the number of characters from the begin-
ning of the block at TH alarm

031 TH DATA Read code of character which caused TH alarm



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

538

8 DATA INPUT/OUTPUT
NC data is transferred between the NC and external input/output devices
such as the Handy File.  
The memory card interface located to the left of the display can be used
to read information on a memory card in the CNC or write it to the card.
The following types of data can be entered and output :

1.Program
2.Offset data
3.Parameter
4.Pitch error compensation data
5.Custom macro common variable

Before an input/output device can be used, the input/output related
parameters must be set. 
For how to set parameters, see III–2 “OPERATIONAL DEVICES”.

FANUC Handy File

 �;>��

'	
������

 �;���;�

'	
������

RS–232–C or
RS–422 interface
(Punch panel etc...)

��+��F ���%

'	
������

!$E
��	�� :MD %�3'��"

��+��F ���%



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

539

Of the external input/output devices, the FANUC Handy File use floppy
disks as their input/output medium.
In this manual, these input/output medium is generally referred to as a
floppy.
Unlike an NC tape, a floppy allows the user to freely choose from several
types of data stored on one medium on a file–by–file basis.
Input/output is possible with data extending over more than one floppy
disk.

The unit of data, which is input/output between the floppy and the CNC
by one input/output operation (pressing the VREADW or VPUNCHW
key), is called a HfileI. When inputting CNC programs from, or
outputting them to the floppy, for example, one or all programs within the
CNC memory are handled as one file.
Files are assigned automatically file numbers 1,2,3,4 and so on, with the
lead file as 1.

File 1 File n BlankFile 2 File 3

When one file has been entered over two floppies, LEDs on the adaptor
flash alternately on completion of data input/output between the first
floppy and the CNC, prompting floppy replacement.  In this case, take the
first floppy out of the adaptor and insert a second floppy in its place. Then,
data input/output will continue automatically.
Floppy replacement is prompted when the second floppy and later is
required during file search–out, data input/output between the CNC and
the floppy, or file deletion.
Floppy 1

File 1 File 2 File 3 File (k–1) File k

Floppy 2

Continuation of
file k File (k+1) File n Blank

Since floppy replacement is processed by the input/output device, no
special operation is required.  The CNC will interrupt data input/output
operation until the next floppy is inserted into the adaptor.
When reset operation is applied to the CNC during a request for floppy
replacement, the CNC is not reset at once, but reset after the floppy has
been replaced.

8.1
FILES

Explanations

� $�
� �� 
 ����

� ��B���� ��� �����!

����
��	���



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

540

The floppy is provided with the write protect switch.  Set the switch to
the write enable state. Then, start output operation.

(2) Write–enabled 
(Reading, writing, 
and deletion are possible.)

Write protect switch of a cassette

(1) Write–protected
(Only reading is
possible.)

Fig. 8.1  Protect swtich

Once written in the cassette or card, data can subsequently be read out by
correspondence between the data contents and file numbers. This
correspondence cannot be verified, unless the data contents and file
numbers are output to the CNC and displayed. The data contents can be
displayed with display function for directory of floppy disk
(See Section III–8.8).
To display the contents,write the file numbers and the contents on the
memo column which is the back of floppy.

(Entry example on MEMO)
File 1 NC parameters
File 2 Offset data
File 3 NC program O0100

⋅ ⋅
⋅ ⋅
⋅ ⋅

File (n–1) NC program O0500
File n NC program O0600

� *������ �3����

� $�����" 	�	�



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

541

When the program is input from the floppy, the file to be input first
must be searched.
For this purpose, proceed as follows:

File 1

File searching of the file n

File n BlankFile 2 File 3

File heading

1  Press the EDIT or MEMORY switch on the machine operator’s
 panel.

2  Press function key PROG , then the program contents display screen or

program check screen appears.

3  Press soft key [(OPRT)].

4 Press the rightmost soft key  (next–menu key).

5 Enter address N.

6 Enter the number of the file to search for.
⋅ N0

The beginning of the cassette or card is searched.
⋅ One of N1 to N9999

Of the file Nos. 1 to 9999, a designated file is searched.
⋅ N–9999

The file next to that accessed just before is searched.
⋅ N–9998

When N–9998 is designated, N–9999 is automatically inserted
each time a file is input or output.  This condition is reset by the
designation of N0,N1 to 9999, or N�9999 or reset.

7 Press soft keys [F SRH] and [EXEC].  
The specified file is searched for.

The same result is obtained both by sequentially searching the files by
specifying Nos. N1 to N9999 and by first searching one of N1 to N9999
and then using the N–9999 searching method. The searching time is
shorter in the latter case.

8.2
FILE SEARCH

*��������

Explanation

� ���� ��
��� �! 81,,,,



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

542

Alarm No. Description

86

The ready signal (DR) of an input/output device is off.

An alarm is not immediately indicated in the CNC even when an
alarm occurs during head searching (when a file is not found, or
the like).

An alarm is given when the input/output operation is performed
after that. This alarm is also raised when N1 is specified for writ-
ing data to an empty floppy.  (In this case, specify No.)

��
�	



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

543

Files stored on a floppy can be deleted file by file as required.

File deletion

1 Insert the floppy into the input/output device so that it is ready for
writing.

2 Press the EDIT switch on the machine operator’s panel.

3 Press function key PROG , then the program contents display screen

appears.

4 Press soft key [(OPRT)]

5 Press the rightmost soft key  (next–menu key).

6 Enter address N.

7 Enter the number (from 1 to 9999) of the file to delete.

8 Press soft key [DELETE] and then press soft key [DELETE].
The file specified in step 7 is deleted.

When a file is deleted, the file numbers after the deleted file are each
decremented by one.  Suppose that a file numbered k was deleted.  In this
case, files are renumbered as follows:

Before deletion after deletion
1 to (k>1) 1 to (k>1)
k Deleted
(k+1) to n k to (n>1)

Set the write protect switch to the write enable state to delete the files.

8.3
FILE DELETION

*��������

Explanations

� ���� ��	��� 
���� ��� ����

�� �������

� *������ �3����



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

544

This section describes how to load a program into the CNC from a floppy
or NC tape.

Inputting a program

1 Make sure the input device is ready for reading.

2 Press the EDIT switch on the machine operator’s panel.

3 When using a floppy, search for the required file according to the
procedure in III–8.2.

4 Press function key PROG , then the program contents display screen or

program directory screen appears.

5 Press soft key [(OPRT)].

6 Press the rightmost soft key  (next–menu key).

7 After entering address O, specify a program number to be assigned to
the program.  When no program number is specified here, the
program number used on the floppy or NC tape is assigned.

8 Press soft keys [READ] and [EXEC]
The program is input and the program number specified in step 7 is
assigned to the program.

If a program is input while the data protect key on the machine operator’s
panel turns ON, the program loaded into the memory is verified against
the contents of the floppy or NC tape.
If a mismatch is found during collation, the collation is terminated with
an alarm (P/S No. 079).
If the operation above is performed with the data protection key turns
OFF, collation is not performed, but programs are registered in memory.

When a tape holds multiple programs, the tape is read up to ER (or %).

O1111   M02; ER(%)O2222   M30; O3333   M02;

8.4
PROGRAM
INPUT/OUTPUT

8.4.1
Inputting a Program

*��������

Explanations

�  ���
����

� 6�������" 	�������

���"�
	� ���	 
� 8 

�
��



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

545

• When a program is entered without specifying a program number.
⋅ The O–number of the program on the NC tape is assigned to the

program.  
If the program has no O–number, the N–number in the first block is
assigned to the program.

⋅ When the program has neither an O–number nor N–number, the
previous program number is incremented by one and the result is
assigned to the program.

⋅ When the program does not have an O–number but has a five–digit
sequence number at the start of the program, the lower four digits of the
sequence number are used as the program number.  If the lower four
digits are zeros, the previously registered program number is
incremented by one and the result is assigned to the program.

• When a program is entered with a program number 
The O–number on the NC tape is ignored and the specified number is
assigned to the program.  When the program is followed by additional
programs, the first additional program is given the program number.
Additional program numbers are calculated by adding one to the last
program.

The method of registration operation is the same as the method of
foreground operation.  However, this operation registers a program in the
background editing area.  As with edit operation, the operations described
below are required at the end to register a program in foreground program
memory.

[(OPRT)] [BG–END]

You can input a program to be appended to the end of a registered
program.

Registered program Input program Program after input
�1234 ; �5678 ; �1234 ;
������� ; ������� ; ������� ;
����� ; ����� ; ����� ;
���� ; ���� ; ���� ;
��� ; ��� ; ��� ;
% % %

�5678 ;
������� ;
����� ;
���� ;
��� ;
%

In the above example, all lines of program O5678 are appended to the end
of program O1234.  In this case, program number O5678 is not registered.
When inputting a program to be appended to a registered program, press
the [READ] soft key without specifying a program number in step 8.
Then, press the [CHAIN] and [EXEC] soft keys.

 In entire program input, all lines of a program are appended, except for
its O number.

 When canceling additional input mode, press the reset key or the [CAN]
or [STOP] soft key.

� *��"�
	 ��	���� �� 


8 �
��

� *��"�
	 ��"����
���� ��

��� �
�%"�����

� Additional program input



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

546

 Pressing the [CHAIN] soft key positions the cursor to the end of the
registered program.  Once a program has been input, the cursor is
positioned to the start of the new program.

 Additional input is possible only when a program has already been
registered.

If an attempt has been made to register a program having the same number
as that of a previously registered program, P/S alarm 073 is issued and the
program cannot be registered.

Alarm No. Description

70
The size of memory is not sufficient to store the input pro-
grams

73
An attempt was made to store a program with an existing pro-
gram number.

79
The verification operation found a mismatch between a pro-
gram loaded into memory and the contents of the program on
the floppy or NC tape.

� Defining the same
program number as that
of an existing program

��
�	



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

547

A program stored in the memory of the CNC unit is output to a floppy or
NC tape.

Outputting a program

1 Make sure the output device is ready for output.

2 To output to an NC tape, specify the punch code system (ISO or EIA)
using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function key PROG , then the program contents display screen or

program directory screen appears.

5 Press soft key [(OPRT)].

6 Press the rightmost soft key    (next–menu key).

7 Enter address O.

8 Enter a program number.  If –9999 is entered, all programs stored in
memory are output.
To output multiple programs at one time, enter a range as follows :
O∆∆∆∆,O����
Programs No.∆∆∆∆ to No.���� are output.
The program directory screen displays program numbers in
ascending order when bit 4 (SOR) of parameter No. 3107 is set to 1.

9 Press soft keys [PUNCH] and [EXEC]
 The specified program or programs are output.

When output is conducted to the floppy, the program is output as the new
file after the files existing in the floppy.  New files are to be written from
the beginning with making the old files invalid, use the above  output
operation after the N0 head searching.

When P/S alarm (No. 86) occurs during program output, the floppy is
restored to the condition before the output.

When program output is conducted after N1 to N9999 head searching, the
new file is output as the designated n–th position.  In this case, 1 to n–1
files are effective, but the files after the old n–th one are deleted.  If an
alarm occurs during output, only the 1 to n–1 files are restored.

To efficiently use the memory in the cassette or card, output the program
by setting parameter NFD (No. 0101#7,No. 0111#7 or 0121#7) to 1. This
parameter makes the feed is not output, utilizing the memory efficiently.

Head searching with a file No. is necessary when a file output from the
CNC to the floppy is again input to the CNC memory or compared with
the content of the CNC memory.  Therefore, immediately after a file is
output from the CNC to the floppy, record the file No. on the memo.

8.4.2
Outputting a Program

*��������

Explanations
(Output to a floppy)

� ���� ������ ���
����

� �� 
�
�	 3���� 


���"�
	 �� ������

� 0��������" 
 ���"�
	


���� ���� ��
���"

� �������� ��� �� 	�	��!

� 0� ��� 	�	� ������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

548

Punch operation can be performed in the same way as in the foreground.
This function alone can punch out a program selected for foreground
operation.
<O> (Program No.) [PUNCH] [EXEC]: Punches out a specified program.
<O> H–9999I [PUNCH] [EXEC]: Punches out all programs.

A program is output to paper tape in the following format:

ER
(%)

Program

Feed of 3 feet Feed of 3 feet

ER
(%)

If three–feet feeding is too long, press the CAN  key during feed

punching to cancel the subsequent feed punching.

A space code for TV check is automatically punched.

When a program is punched in ISO code, two CR codes are punched after
an LF code.

LF CR CR

By setting NCR (bit 3 of parameter No. 0100), CRs can be omitted so that
each LF appears without a CR.

Press the RESET  key to stop punch operation.

All programs are output to paper tape in the following format.

Program Program Program

Feed of 1–feet Feed of 3–feet

ER
(%)

ER
(%)

The sequence of the programs punched is undefined.

� *������" ���"�
	� ��

��� �
�%"�����

Explanations
(Output to an NC tape)

� ���	
�

� #? ����%

� 6-0 ����

� -������" ��� �����

� *������" 
�� ���"�
	�



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

549

Offset data is loaded into the memory of the CNC from a floppy or NC
tape. The input format is the same as for offset value output. See III– 8.5.2.
When an offset value is loaded which has the same offset number as an
offset number already registered in the memory, the loaded offset data
replaces existing data.

Inputting offset data

1 Make sure the input device is ready for reading.

2 Press the EDIT switch on the machine operator’s panel.

3 When using a floppy, search for the required file according to the
procedure in III–8.2.

4 Press function key OFFSETSETTING , then the tool compensation screen appears.

5 Press soft keys [(OPRT)].

6 Press rightmost soft key (next menu key).

7 Press soft keys [READ] and [EXEC].

8 The input offset data will be displayed on the screen after completion
of input operation.

8.5
OFFSET DATA INPUT
AND OUTPUT

8.5.1
Inputting Offset Data

*��������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

550

All offset data is output in a output format from the memory of the CNC
to a floppy or NC tape.

D(
&(

'	* �����
 %�
�

1 Make sure the output device is ready for output.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function key OFFSETSETTING , then the tool compensation screen appears.

5 Press soft key [(OPRT)].

6 Press the rightmost soft key  (next–menu key)

7 Press soft keys [PUNCH] and [EXEC].
Offset data is output in the output format described below.

Output format is as follows:

Format

Setting/changing the geometric compensation amount for H code
G10 L10 P_R_;
Setting/changing the geometric compensation amount for D code
G10 L12 P_R_;
Setting/changing the wear compensation amount for H code
G10 L11 P_R_;
Setting/changing the wear compensation amount for D code
G10 L13 P_R_;

The L1 command may be used instead of L11 for format compatibility of
the conventional CNC.

When the floppy disk directory display function is used, the name of the
output file is OFFSET.

8.5.2
Outputting Offset Data

*��������

Explanations

� 0����� ���	
�

� 0����� ���� �
	�



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

551

Parameters and pitch error compensation data are input and output from
different screens, respectively. This chapter describes how to enter them.

Parameters are loaded into the memory of the CNC unit from a floppy or
NC tape.  The input format is the same as the output format.  See III–8.6.2.
When a parameter is loaded which has the same data number as a
parameter already registered in the memory, the loaded parameter
replaces the existing parameter.

Inputting parameters

1 Make sure the input device is ready for reading.

2 When using a floppy, search for the required file according to the
procedure in III–8.2.

3 Press the EMERGENCY STOP button on the machine operator’s
panel.

4 Press function key OFFSETSETTING .

5 Press the soft key [SETING] for chapter selection, then the setting
screen appears.

6 Enter 1 in response to the prompt for “PARAMETER WRITE
(PWE)” in setting data. Alarm P/S100 (indicating that parameters can
be written) appears.

7 Press soft key SYSTEM .

8 Press chapter selection soft key [PARAM], then the parameter screen
appears.

9 Press soft key [(OPRT)].

10 Press the rightmost soft key (next–menu key).

11 Press soft keys [READ] and [EXEC].
Parameters are read into memory.  Upon completion of input, the
“INPUT” indicator at the lower–right corner of the screen disappears.

12 Press function key OFFSETSETTING .

13 Press soft key [SETING] for chapter selection.

14 Enter 0 in response to the prompt for “PARAMETER WRITE
(PWE)” in setting data.

8.6
INPUTTING AND
OUTPUTTING
PARAMETERS AND
PITCH ERROR
COMPENSATION
DATA

8.6.1
Inputting Parameters

*��������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

552

15 Turn the power to the CNC back on.

16 Release the EMERGENCY STOP button on the machine operator’s
panel.

All parameters are output in the defined format from the memory of the
CNC to a floppy or NC tape.

Outputting parameters

1 Make sure the output device is ready for output.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function key SYSTEM , then the parameter screen appears.

5 Press chapter selection soft key [PARAM].

6 Press soft key [(OPRT)].

7 Press rightmost soft key  (next–menu key).

8 Press soft keys [PUNCH].

9 To output all parameters, press the [ALL] soft key.  To output only
parameters which are set to other than 0, press the [NON–0] soft key.

10 Press soft key [EXEC].
All parameters are output in the defined format.

Output format is as follows:
N P ;. . . . . . . 
N A1P A2P AnP ;. . . . . . . . 
N P ;. . . . . . . 

N :  Parameter No.. . . 
A :  Axis No.(n is the number of control axis). . . 
P :  Parameter setting value .. . . 

When the floppy disk directory display function is used, the name of the
output file is PARAMETER.
Once all parameters have been output, the output file is named ALL
PARAMETER.  Once only parameters which are set to other than 0 have
been output, the output file is named NON–0. PARAMETER.

To suppress the output of the following parameters, press the [PUNCH]
soft key then [NON–0] soft key.

Other than axis type Axis type

Bit type Parameter for which all bits
are set to 0

Parameter for an axis for
which all bits are set to 0.

Value type Paramter whose value is 0. Parameter for an axis for
which the value is 0.

8.6.2
Outputting Parameters

*��������

Explanations
� 0����� ���	
�

� 0����� ���� �
	�

� Suppressing output of
parameters set to 0



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

553

Pitch error compensation data are loaded into the memory of the CNC
from a floppy or NC tape.  The input format is the same as the output
format.  See III–8.6.4.  When a pitch error compensation data is loaded
which has the corresponding data number as a pitch error compensation
data already registered in the memory, the loaded data replaces the
existing data.

Pitch error compensation data

1 Make sure the input device is ready for reading.

2 When using a floppy, search for the required file according to the
procedure in III–8.2.

3 Press the EMERGENCY STOP button on the machine operator’s
panel.

4 Press function key OFFSETSETTING .

5 Press the soft key [SETING] for chapter selection.

6 Enter 1 in response to the prompt for writing parameters (PWE).
Alarm P/S100 (indicating that parameters can be written) appears.

7 Press soft key SYSTEM .

8 Press the rightmost soft key (next–menu key)and press
 chapter selection soft key [PITCH].

9 Press soft key [(OPRT)].

10 Press the rightmost soft key (next–menu key).

11 Press soft keys [READ] and [EXEC].
Parameters are read into memory.  Upon completion of input, the
“INPUT” indicator at the lower–right corner of the screen disappears.

12 Press function key OFFSETSETTING .

13 Press soft key [SETING] for chapter selection.

14 Enter 0 in response to the prompt for “PARAMETER WRITE
(PWE)” in setting data.

15 Turn the power to the CNC back on.

16 Release the EMERGENCY STOP button on the machine operator’s
panel.

Parameters 3620 to 3624 and pitch error compensation data must be set
correctly to apply pitch error compensation correctly (See III–11.5.2).

8.6.3
Inputting Pitch Error 
Compensation Data

*��������

Explanations

� Pitch error
compensation



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

554

All pitch error compensation data are output in the defined format from
the memory of the CNC to a floppy or NC tape.

Outputting Pitch Error Compensation Data

1 Make sure the output device is ready for output.
For the two–path control, select the tool post for which pitch error
compensation data to be input is used with the tool post selection
switch.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function key SYSTEM .

5 Press the rightmost soft key  (next–menu key) and press chapter
selection soft key [PITCH].

6 Press soft key [(OPRT)].

7 Press rightmost soft key (next–menu key).

8 Press soft keys [PUNCH] and [EXEC].
 All parameters are output in the defined format.

Output format is as follows:
N 10000 P ;. . . 
N 11023 P ;. . . . . . 
N : Pitch error compensation point No. +10000. . . 
P : Pitch error compensation data. . . 

When bi–directional pitch error compensation is used, output format is
as follows :
N20000 P.... ;
N21023 P.... ;
N23000 P.... ;
N24023 P.... ;

N : Pitch error compensation point + 20000
P : Pitch error compensation data

When the floppy disk directory display function is used, the name of the
output file is “PITCH ERROR”.

8.6.4
Outputting Pitch Error
Compensation Data

*��������

Explanations

� 0����� ���	
�

� 0����� ���� �
	�



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

555

The value of a custom macro common variable (#500 to #999) is loaded
into the memory of the CNC from a floppy or NC tape.  The same format
used to output custom macro common variables is used for input.  See
III–8.7.2.  For a custom macro common variable to be valid, the input data
must be executed by pressing the cycle start button after data is input.
When the value of a common variable is loaded into memory, this value
replaces the value of the same common variable already existing (if any)
in memory.

Inputting custom macro common variables

1 Register the program which has been output, as described in Section
III–8.7.2, in memory according to the program input procedure
described in Section III–8.4.1.

2 Press the MEMORY switch on the machine operator’s panel upon
completing input.

3 Press the cycle start button to execute the loaded program.

4 Display the macro vriable screen to chek whether the values of the
common variables have been set correctly.

Display of the macro variable screen

⋅ Press function key OFFSETSETTING .

⋅ Press the rightmost soft key (next–menu key).
⋅ Press soft key [MACRO].
⋅ Select a variable with the page keys or numeric keys and
  soft key [NO.SRH].

The common variables (#500 to #999) can be input and output.
#100 to #199 can be input and output when bit 3 (PU5) of parameter No.
6001 is set to 1.

8.7
INPUTTING/OUTPUT-
TING CUSTOM MACRO
COMMON VARIABLES

8.7.1
Inputting Custom Macro
Common Variables

*��������

Explanations

�  �		�� �
��
����



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

556

Custom macro common variables (#500 to #999) stored in the memory
of the CNC can be output in the defined output format to a floppy or NC
tape.

Outputting custom macro common variable

1 Make sure the output device is ready for output.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function key  OFFSETSETTING .

5 Press the rightmost soft key (next–menu key), then press soft
key [MACRO].

6 Press soft key [(OPRT)].

7 Press the rightmost soft key  (next–menu key).

8 Press soft keys [PUNCH] and [EXEC].
Common variables are output in the defined format.

The output format is as follows:

%
;
#500=[25283*65536+65536]/134217728 (1). . . . . . . . . . . . 
#501=#0; (2). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#502=0; (3). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#503= ;. . . . . . . . . . . . . . . . 

;. . . . . . . . . . . . . . . . . . . . . . . 
;. . . . . . . . . . . . . . . . . . . . . . . 

#531= ;. . . . . . . . . . . . . . . . 

M02;
%

(1)The precision of a variable is maintained by outputting the value of the
variable as <expression>.

(2)Undefined variable
(3)When the value of a variable is 0

The name of the output file is “MACRO VAR”.

The common variables (#500 to #999) can be input and output.
#100 to #199 can be input and output when bit 3 (PU5) of parameter No.
6001 is set to 1.

8.7.2
Outputting Custom
Macro Common Variable

*��������

Explanations

� 0����� ���	
�

� 0����� ���� �
	�

�  �		�� �
��
���



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

557

On the floppy directory display screen, in a directory of the files stored
in an external input/output device (such as FANUC Handy File) in floppy
format, files can be input, output, and deleted.

 O0001  N00000
 (METER) VOL

EDIT * * * *     * * *    * * * 11 : 51 : 12

PRGRM (OPRT)DIR

DIRECTORY (FLOPPY)
    NO.   FILE NAME

0001 PARAMETER
0002 O0001
0003 O0002
0004 O0010
0005 O0040
0006 O0050
0007 O0100
0008 O1000
0009 O9500

58.5
  1.9
  1.9
  1.3
  1.3
  1.9
  1.9
  1.9
  1.6

8.8
DISPLAYING 
DIRECTORY OF 
FLOPPY CASSETTE



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

558

Displaying the directory of floppy cassette files

Use the following procedure to display a directory of all the
files stored in a floppy:

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key (next–menu key).

4 Press soft key [FLOPPY].

5 Press page key 
PAGE

 or 
PAGE

.

6 The screen below appears.

O0001  N00000
 (METER) VOL

EDIT * * * *     * * *    * * * 11 : 53 : 04

0001 PARAMETER
0002 O0001
0003 O0002
0004 O0010
0005 O0040
0006 O0050
0007 O0100
0008 O1000
0009 O9500

58.5
  1.9
  1.9
  1.3
  1.3
  1.9
  1.9
  1.9
  1.6

DIRECTORY (FLOPPY)
   NO. FILE NAME

READ PUNCH DELETEF SRH

Fig. 8.8.1 (a)

7 Press a page key again to display another page of the directory.

8.8.1
Displaying the Directory

*�������� �



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

559

Use the following procedure to display a directory of files
starting with a specified file number :

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key (next–menu key).

4 Press soft key [FLOPPY].

5 Press soft key [(OPRT)].

6 Press soft key [F SRH].

7 Enter a file number.

8 Press soft keys [F SET] and [EXEC].

9 Press a page key to display another page of the directory.

10 Press soft key [CAN] to return to the soft key display shown in the
screen of Fig 8.8.1 (a).

EDIT * * * *     * * *    * * * 11 : 54 : 19

SEARCH
 FILE NO. =
>_

O0001  N00000
 (METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

CANF SET EXEC

Fig. 8.8.1 (b)

0005 O0040
0006 O0050
0007 O0100
0008 O1000
0009 O9500

  1.3
  1.9
  1.9
  1.9
  1.6

*�������� &



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

560

NO:Displays the file number
FILE NAME: Displays the file name.
(METER) : Converts and prints out the file capacity to paper tape

length.You can also produce H
(FEET) I by setting the INPUT UNIT to INCH of the setting data.
VOL. : When the file is multi–volume, that state is displayed.

C01

C02
L03

C(number)means CONTINUE
L(number)means LAST
number number of floppies or cards

(Ex.) Floppy or card A

Floppy or card B
Floppy or card C

Explanations

� -����� ������ 
�� �����

	�
���"�



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

561

The contents of the specified file number are read to the memory of NC.

Reading files

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key  (next–menu key).

4 Press soft key [FLOPPY].

5 Press soft key [(OPRT)].

6 Press soft key [READ].

* * * *     * * *    * * * 11 : 55 : 04

READ
 FILE NO. =
>_

$?:�

O0001  N00000
 (METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

CANF SET EXEC

PROGRAM NO. =

O SET STOP

0001 PARAMETER
0002 O0001
0003 O0002
0004 O0010
0005 O0040
0006 O0050
0007 O0100
0008 O1000
0009 O9500

58.5
  1.9
  1.9
  1.3
  1.3
  1.9
  1.9
  1.9
  1.6

7 Enter a file number.

8 Press soft key [F SET].

9 To modify the program number, enter the program number, then press
soft key [O SET].

10 Press soft key [EXEC].  The file number indicated in the lower–left
corner of the screen is automatically incremented by one.

11 Press soft key [CAN] to return to the soft key display shown in
the screen of Fig. 8.8.1.(a).

8.8.2
Reading Files

*��������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

562

Any program in the memory of the CNC unit can be output to a floppy
as a file.

Outputting programs

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key (next–menu key).

4 Press soft key [FLOPPY].

5 Press soft key [(OPRT)].

6 Press soft key [PUNCH].

EDIT * * * *     * * *    * * * 11 : 55 : 26

PUNCH
 FILE NO. =
>_

O0002  N01000
(METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

CANF SET EXEC

PROGRAM NO. =

O SET STOP

0001 PARAMETER
0002 O0001
0003 O0002
0004 O0010
0005 O0040
0006 O0050
0007 O0100
0008 O1000
0009 O9500

58.5
  1.9
  1.9
  1.3
  1.3
  1.9
  1.9
  1.9
  1.6

7 Enter a program number.  To write all programs into a single file, enter
–9999 in the program number field.  In this case, the file name
“ALL.PROGRAM” is registered.

8 Press soft key [O SET].

9 Press soft key [EXEC].  The program or programs specified in step 7
are written after the last file on the floppy.  To output the program after
deleting files starting with an existing file number, key in the file
number, then press soft key [F SET] followed by soft key [EXEC].

10 Press soft key [CAN] to return to the soft key display shown in
the screen of Fig.8.8.1(a).

8.8.3
Outputting Programs

*��������



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

563

The file with the specified file number is deleted.

Deleting files

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key   (next–menu key).

4 Press soft key [FLOPPY].

5 Press soft key [(OPRT)].

6 Press soft key [DELETE].

EDIT * * * *     * * *    * * * 11 : 55 : 51

DELETE
 FILE NO. =
>_

O0001  N00000
 (METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

CANF SET EXECF NAME

NAME=

0001 PARAMETER
0002 O0001
0003 O0002
0004 O0010
0005 O0040
0006 O0050
0007 O0100
0008 O1000
0009 O9500

58.5
  1.9
  1.9
  1.3
  1.3
  1.9
  1.9
  1.9
  1.6

7 Specify the file to be deleted.
When specifying the file with a file number, type the number and 
press soft key [F SET].  When specifying the file with a file name,
type the name and press soft key [F NAME].

8 Press soft key [EXEC]. 
The file specified in the file number field is deleted.  When a file is
deleted, the file numbers after the deleted file are each decremented
by one.

9 Press soft key [CAN] to return to the soft key display shown in
the screen of Fig. 8.8.1 (a).

8.8.4
Deleting Files

*��������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

564

If  [F SET] or [O SET] is pressed without key inputting file number and
program number, file number or program number shows  blank.  When
0 is entered for file numbers or program numbers, 1 is displayed.

To use channel 0 ,set a device number in parameter (No. 102).
Set the I/O device number to parameter (No. 112) when cannel 1 is used.
Set it to (No. 0122) when channel 2 is used.

For the numeral input in the data input area with FILE No. and
PROGRAM No., only lower 4 digits become valid.

When the data protection key on the machine operator’s panel 
is ON, no programs are read from the floppy.  They are verified against
the contents of the memory of the CNC instead.

Alarm No. Contents

71 An invalid file number or program number was entered.
(Specified program number is not found.)

79 Verification operation found a mismatch between a program
loaded into memory and the contents of the floppy

86

The dataset–ready signal (DR) for the input/output device is
turned off. (The no file error or duplicate file error occurred on
the input/output device because an invalid file number, pro-
gram number, or file name was entered.

������������

� Inputting file numbers
and program numbers
with keys

� I/O devices

� Significant
digits

� Collation

�;��.



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

565

CNC programs stored in memory can be grouped according to their
names, thus enabling the output of CNC programs in group units.  Section
III–11.3.2 explains the display of a program listing for a specified group.

Procedure for Outputting a Program List for a Specified Group

1 Display the program list screen for a group of programs, as described
in Section III–11.3.2.

PROGRAM DIRECTORY (GROUP) O0001  N00010

EDIT * * * *     * * *    * * *     * * * 16 : 52 : 13

PRGRM DIR (OPRT)

PROGRAM (NUM.) MEMORY (CHAR.)
USED: 60 3321
FREE: 2 429

O0020  (GEAR–1000  MAIN )
O0040  (GEAR–1000  SUB–1 )
O0200  (GEAR–1000  SUB–2 )
O2000  (GEAR–1000  SUB–3 )

>_

2 Press the [(OPRT)] operation soft key.

3 Press the right–most soft key    (continuous menu key).

4 Press the [PUNCH] operation soft key.

5 Press the [AL–GRP] operation soft key.

The CNC programs in the group for which a search is made are
output.  When these programs are output to a floppy disk, they are
output to a file named GROUP.PROGRAM.

8.9
OUTPUTTING A 
PROGRAM LIST FOR 
A SPECIFIED GROUP

*��������

BG–EDT O–SRH GROUP

PUNCHREAD

AL–GRP STOP EXECCAN



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

566

To input/output a particular type of data, the corresponding screen is
usually selected.  For example, the parameter screen is used for parameter
input from or output to an external input/output unit, while the program
screen is used for program input or output.  However, programs,
parameters, offset data, and macro variables can all be input and output
using a single common screen, that is, the ALL IO screen.

READ/PUNCH (PROGRAM) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

READ PUNCH

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA   1:ISO)>1_

Fig. 8.10 ALL IO screen (when channel 1 is being 
 used for input/output)

8.10
DATA INPUT/OUTPUT
ON THE ALL IO 
SCREEN



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

567

Input/output–related parameters can be set on the ALL IO screen.
Parameters can be set, regardless of the mode.    

Setting input/output–related parameters

1 Press function key SYSTEM .

2 Press the rightmost soft key  (next–menu key) several times.

3 Press soft key [ALL IO] to display the ALL IO screen.

NOTE
1 If program or floppy is selected in EDIT mode, the program

directory or floppy screen is displayed.
2 When the power is first turned on, program is selected by

default.

READ/PUNCH (PROGRAM) O1234 N12345

MDI * * * *     * * *    * * *     * * * 12:34:56

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA   1:ISO)>1_

READ PUNCH

4 Select the soft key corresponding to the desired type of data (program,
parameter, and so forth).

5 Set the parameters corresponding to the type of input/output unit to be
used.  (Parameter setting is possible regardless of the mode.)

8.10.1
Setting
Input/Output–Related
Parameters

*��������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

568

A program can be input and output using the ALL IO screen.
When entering a program using a cassette, the user must specify the input
file containing the program (file search).

File search

1 Press soft key [PRGRM] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.  A program directory is displayed.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

⋅ A program directory is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

O0001 N00010

EDIT * * * *     * * *    * * *     * * * 14:46:09

F SRH READ PUNCH (OPRT)

>_

PROGRAM (NUM.) MEMORY (CHAR.)
USED : 60 3321
FREE : 2 429

O0010 O0001 O0003 O0002 O0555 O0999
O0062 O0004 O0005 O1111 O0969 O6666
O0021 O1234 O0588 O0020 O0040

DELETE

4 Enter address N.

5 Enter the number of the file to be found.

⋅ N0
The first floppy file is found.

⋅ One of N1 to N9999
Among the files numbered from 1 to 9999, a specified file is found.

⋅ N–9999
The file immediately after that used most recently is found.

⋅ N–9998
When –9998 is specified, the next file is found.  Then, each time
a file input/output operation is performed, N–9999 is automatically
inserted.  This means that subsequent files can be sequentially
found automatically.

This state is canceled by specifying N0, N1 to N9999, or N–9999,
or upon a reset.

8.10.2
Inputting and
Outputting Programs

*��������



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

569

6 Press soft keys [F SRH] and [EXEC]. 
The specified file is found.

When a file already exists in a cassette, specifying N0 or N1 has the same
effect.  If N1 is specified when there is no file on the cassette or card, an
alarm is issued because the first file cannot be found.  Specifying N0
places the head at the start of the cassette, regardless of whether the
cassette/card already contains files.  So, no alarm is issued in this case.
N0 can be used, for example, when a program is written into a new
cassette, or when a previously used cassette is used once all the files it
contains have been erased.

If an alarm (file search failure, for example) is generated during file
search, the CNC does not issue an alarm immediately.  However, a P/S
alarm (No. 086) is issued if input/output is subsequently performed on
that file.

Instead of sequentially searching for files by specifying actual file
numbers every time, the user can specify the first file number, then find
the subsequent files by specifying N–9999.  When N–9999 is specified,
the time required for file search can be reduced.

EXECCAN

Explanations

� Difference between N0
and N1

� Alarm issue during file
search

� File search using N–9999



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

570

Inputting a program

1 Press soft key [PRGRM] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.  A program directory is displayed.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

⋅ A program directory is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

O0001 N00010

EDIT * * * *     * * *    * * *     * * * 14:46:09

F SRH READ PUNCH (OPRT)

>_

PROGRAM (NUM.) MEMORY (CHAR.)
USED : 60 3321
FREE : 2 429

O0010 O0001 O0003 O0002 O0555 O0999
O0062 O0004 O0005 O1111 O0969 O6666
O0021 O1234 O0588 O0020 O0040

DELETE

4 To specify a program number to be assigned to an input program,
enter address O, followed by the desired program number.
If no program number is specified, the program number in the file or
on the NC tape is assigned as is.

5 Press soft key [READ], then [EXEC].
The program is input with the program number specified in step 4
assigned.
To cancel input, press soft key [CAN].
To stop input prior to its completion, press soft key [STOP].

*��������

EXECCANSTOP



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

571

Outputting programs

1 Press soft key [PRGRM] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.  A program directory is displayed.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

⋅ A program directory is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

O0001 N00010

EDIT * * * *     * * *    * * *     * * * 14:46:09

F SRH READ PUNCH (OPRT)

>_

PROGRAM (NUM.) MEMORY (CHAR.)
USED : 60 3321
FREE : 2 429

O0010 O0001 O0003 O0002 O0555 O0999
O0062 O0004 O0005 O1111 O0969 O6666
O0021 O1234 O0588 O0020 O0040

DELETE

4 Enter address O.

5 Enter a desired program number.
If –9999 is entered, all programs in memory are output.
To output a range of programs, enter O∆∆∆∆, O����..  The
programs numbered from ∆∆∆∆ to ���� are output.
When bit 4 (SOR) of parameter No. 3107 for sorted display is set to 1
on the program directory screen, programs are output in order,
starting from those having the smallest program numbers.

6 Press soft key [PUNCH], then [EXEC].
The specified program or programs are output.  If steps 4 and 5 are
omitted, the currently selected program is output.
To cancel output, press soft key [CAN].
To stop output prior to its completion, press soft key [STOP].

*��������

EXECCANSTOP



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

572

Deleting files

1 Press soft key [PRGRM] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.  A program directory is displayed.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

⋅ A program directory is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

O0001 N00010

EDIT * * * *     * * *    * * *     * * * 14:46:09

F SRH READ PUNCH (OPRT)

>_

PROGRAM (NUM.) MEMORY (CHAR.)
USED : 60 3321
FREE : 2 429

O0010 O0001 O0003 O0002 O0555 O0999
O0062 O0004 O0005 O1111 O0969 O6666
O0021 O1234 O0588 O0020 O0040

DELETE

4 Press soft key [DELETE].

5 Enter a file number, from 1 to 9999, to indicate the file  to be deleted.

6 Press soft key [EXEC].
The k–th file, specified in step 5, is deleted.

After deletion of the k–th file, the previous file numbers (k+1) to n are
decremented by 1 to k to (n–1).

Before deletion After deletion
1 to (k–1) 1 to (k–1)

K Delete
(k+1) to n k to (n–1)

Before a file can be deleted, the write protect switch of the cassette must
be set to make the cassette writable.

*��������

EXECCAN

Explanations

� File numbers after
deletion

� Write protect



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

573

Parameters can be input and output using the ALL IO screen.

Inputting parameters

1 Press soft key [PARAM] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

READ/PUNCH (PARAMETER) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

READ PUNCH

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA 1:ISO)>1_

4 Press soft key [READ], then [EXEC].
The parameters are read, and the �INPUT” indicator blinks at the
lower–right corner of the screen.  Upon the completion of input, the
�INPUT” indicator is cleared from the screen.
To cancel input, press soft key [CAN].

8.10.3
Inputting and
Outputting Parameters

*��������

EXECCAN



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

574

Outputting parameters

1 Press soft key [PARAM] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

READ/PUNCH (PARAMETER) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

READ PUNCH

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA 1:ISO)>1_

4 Press soft key [PUNCH], then [EXEC].
The parameters are output, and the �OUTPUT” indicator blinks at the
lower–right corner of the screen.  Upon the completion of output, the
�OUTPUT” indicator is cleared from the screen.
To cancel output, press soft key [CAN].

*��������

EXECCAN



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

575

Offset data can be input and output using the ALL IO screen.

Inputting offset data

1 Press soft key [OFFSET] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

READ/PUNCH (OFFSET) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

READ PUNCH

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA 1:ISO)>1_

4 Press soft key [READ], then [EXEC].
The offset data is read, and the �INPUT” indicator blinks at the
lower–right corner of the screen.  
Upon the completion of input, the �INPUT” indicator is cleared from
the screen.
To cancel input, press soft key [CAN].

8.10.4
Inputting and
Outputting Offset Data

*��������

EXECCAN



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

576

Outputting offset data

1 Press soft key [OFFSET] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

READ/PUNCH (OFFSET) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

READ PUNCH

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA 1:ISO)>1_

4 Press soft key [PUNCH], then [EXEC].
The offset data is output, and the �OUTPUT” indicator blinks at the
lower–right corner of the screen.  Upon the completion of output, the
�OUTPUT” indicator is cleared from the screen.
To cancel output, press soft key [CAN].

*��������

EXECCAN



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

577

Custom macro common variables can be output using the ALL IO screen.

Outputting custom macro common variables

1 Press soft key [MACRO] on the ALL IO screen, described in Section
III–8.10.1.

2 Select EDIT mode.

3 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

READ/PUNCH (MACRO) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

READ PUNCH

I/O CHANNEL 1 TV CHECK OFF
DEVICE NUM. 0 PUNCH CODE ISO
BAUDRATE 4800 INPUT CODE ASCII
STOP BIT 2 FEED OUTPUT FEED
NULL INPUT (EIA) NO EOB OUTPUT (ISO) CR
TV CHECK (NOTES) ON

(0:EIA 1:ISO)>1_

4 Press soft key [PUNCH], then [EXEC].
The custom macro common variables are output, and the �OUTPUT”
indicator blinks at the lower–right corner of the screen.  Upon the
completion of output, the �OUTPUT” indicator is cleared from the
screen.
To cancel output, press soft key [CAN].

NOTE
To input a macro variable, read the desired custom macro
statement as a program, then execute the program.

8.10.5
Outputting Custom
Macro Common
Variables

*��������

EXECCAN



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

578

The ALL IO screen supports the display of a directory of floppy files, as
well as the input and output of floppy files.

Displaying a file directory

1 Press the rightmost soft key  (next–menu key) on the ALL IO
screen, described in Section III–8.10.1.

2 Press soft key [FLOPPY].

3 Select EDIT mode.  The floppy screen is displayed.

4 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.

⋅ The floppy screen is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

READ/PUNCH (FLOPPY) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

F SRH READ PUNCH

>

DELETE

5 Press soft key [F SRH].

6 Enter the number of the desired file, then press soft key [F SET].

7 Press soft key [EXEC].  A directory is displayed, with the specified
file uppermost.  Subsequent files in the directory can be displayed by
pressing the page key.

8.10.6
Inputting and
Outputting Floppy
Files

*��������

EXECCANF SET



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

579

READ/PUNCH (FLOPPY)
  No. FILE NAME

O1234 N12345
(Meter) VOL

EDIT
 

* * * *     * * *    * * *     * * * 12:34:56

F SRH EXEC

0001 PARAMETER
0002 ALL.PROGRAM
0003 O0001
0004 O0002
0005 O0003
0006 O0004
0007 O0005
0008 O0010
0009 O0020

F SRH
File No.=2

>2_

CAN

46.1
12.3
11.9
11.9
11.9
11.9
11.9
11.9
11.9

A directory in which the first file is uppermost can be displayed
simply by pressing the page key.  (Soft key [F SRH] need not be
pressed.)



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

580

Inputting a file

1 Press the rightmost soft key  (next–menu key) on the ALL IO
screen, described in Section III–8.10.1.

2 Press soft key [FLOPPY].

3 Select EDIT mode.  The floppy screen is displayed.

4 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.
The floppy screen is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

READ/PUNCH (FLOPPY) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

F SRH READ PUNCH

>

DELETE

5 Press soft key [READ].

6 Enter the number of a file or program to be input.

⋅ Setting a file number:  Enter the number of the desired file, then
press soft key [F SET].

⋅ Setting a program number:  Enter the number of the desired
program, then press soft key [O SET].

7 Press soft key [EXEC].  
The specified file or program is read, and the �INPUT” indicator
blinks at the lower–right corner of the screen.  Upon the completion of
input, the �INPUT” indicator is cleared from the screen.

*��������

EXECCANF SET O SET STOP



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

581

Outputting a file

1 Press the rightmost soft key  (next–menu key) on the ALL IO
screen, described in Section III–8.10.1.

2 Press soft key [FLOPPY].

3 Select EDIT mode.  The floppy screen is displayed.

4 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.
The floppy screen is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

READ/PUNCH (FLOPPY) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

F SRH READ PUNCH

>

DELETE

5 Press soft key [PUNCH].

6 Enter the number of the program to be output, together with a desired
output file number.

⋅ Setting a file number:  Enter the number of the desired file, then
press soft key [F SET].

⋅ Setting a program number:  Enter the number of the desired
program, then press soft key [O SET].

7 Press soft key [EXEC].
The specified program is output, and the �OUTPUT” indicator blinks
at the lower–right corner of the screen.  Upon the completion of
output, the �OUTPUT” indicator is cleared from the screen.
If no file number is specified, the program is written at the end of the
currently registered files.

*��������

EXECCANF SET O SET STOP



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

582

Deleting a file

1 Press the rightmost soft key  (next–menu key) on the ALL IO
screen, described in Section III–8.10.1.

2 Press soft key [FLOPPY].

3 Select EDIT mode.  The floppy screen is displayed.

4 Press soft key [(OPRT)].  The screen and soft keys change as shown
below.
The floppy screen is displayed only in EDIT mode.  In all other
modes, the ALL IO screen is displayed.

READ/PUNCH (FLOPPY) O1234 N12345

MDI
 

* * * *     * * *    * * *     * * * 12:34:56

F SRH READ PUNCH

>

DELETE

5 Press soft key [DELETE].

6 Enter the number of the desired file, then press soft key [F SET].

7 Press soft key [EXEC].  The specified file is deleted.  After the file has
been deleted, the subsequent files are shifted up.

*��������

EXECCANF SET



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

583

By setting the I/O channel (parameter No. 0020) to 4, files on a memory
card inserted into the memory card interface located to the left of the
display can be referenced.  Different types of data such as part programs,
parameters, and offset data on a memory card can also be input and output
in text file format.
The major functions are listed below.

⋅ Displaying a directory of stored files
The files stored on a memory card can be displayed on the directory
screen.

⋅ Searching for a file
A search is made for a file on a memory card and, if found, it is
displayed on the directory screen.

⋅ Reading a file
Text–format files can be read from a memory card.

⋅ Writing a file
Data such as part programs can be stored to a memory card in text file
format.

⋅ Deleting a file
A file can be selected and deleted from a memory card.

���

Writing a file

Reading a file

Displaying a directory

Searching for a file

Deleting a file

Memory card

8.11
DATA INPUT/OUTPUT
USING A MEMORY
CARD



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

584

Displaying a directory of stored files

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key  (next–menu key).

4 Press soft key [CARD].  The screen shown below is displayed.  Using

page keys  and  , the screen can be scrolled.

PROG (OPRT)DIR  +

DIRECTORY (M–CARD)
  No. FILE NAME  SIZE DATE

O0034 N00045

0001 O1000 123456 96/07/10
0002 O1001 118458 96/07/30
0003 O0002 113250 96/07/30
0004 O2000 173456 96/07/31
0005 O2001 113444 96/07/31
0006 O3001 118483 96/08/02
0007 O3300 111406 96/08/05
0008 O3400 112420 96/07/31
0009 O3500 117460 96/07/31

~ ~

5 Comments relating to each file can be displayed by pressing soft key
[DIR+].

PROG (OPRT)DIR  +

DIRECTORY (M–CARD)
  No. FILE NAME COMMENT

O0034 N00045

0001 O1000 (COMMENT )
0002 O1001 (SUB PROGRAM )
0003 O0002 (12345678 )
0004 O2000 ( )
0005 O2001 ( )
0006 O3001 (SKIP–K )
0007 O3300 (HI–SPEED )
0008 O3400 ( )
0009 O3500 (TEST PROGRAM)

~ ~

6 Repeatedly pressing soft key [DIR+] toggles the screen between the
display of comments and the display of sizes and dates.
The comment area displays a comment following the O number in
each file.  Up to 18 characters can be displayed on the screen.

*��������



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

585

Searching for a file

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key  (next–menu key).

4 Press soft key [CARD].  The screen shown below is displayed.

PROG (OPRT)DIR  +

DIRECTORY (M–CARD)
  No. FILE NAME  SIZE DATE

O0034 N00045

0001 O1000 123456 96/07/10
0002 O1001 118458 96/07/30
0003 O0002 113250 96/07/30
0004 O2000 173456 96/07/31
0005 O2001 113444 96/07/31
0006 O3001 118483 96/08/02
0007 O3300 111406 96/08/05
0008 O3400 112420 96/07/31
0009 O3500 117460 96/07/31

~ ~

5 Press soft key [(OPRT)].

6 Set the number of the desired file number with soft key [F SRH].
Then, start the search by pressing soft key [EXEC].  If found, the file is
displayed at the top of the directory screen.

DIRECTORY (M–CARD)
  No. FILE NAME COMMENT

O0034 N00045

0019 O1000 (MAIN PROGRAM)
0020 O1010 (SUBPROGRAM–1)
0021 O1020 (COMMENT )
0022 O1030 (COMMENT )

~ ~

When a search is made for file number 19

*��������

DELETEPUNCHF SRH F READ N READ



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

586

Reading a file

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG.

3 Press the rightmost soft key      (next–menu key).

4 Press soft key [CARD].  Then, the screen shown below is displayed.

PROG (OPRT)DIR  +

DIRECTORY (M–CARD)
  No. FILE NAME  SIZE DATE

O0034 N00045

0001 O1000 123456 96/07/10
0002 O1001 118458 96/07/30
0003 O0002 113250 96/07/30
0004 O2000 173456 96/07/31
0005 O2001 113444 96/07/31
0006 O3001 118483 96/08/02
0007 O3300 111406 96/08/05
0008 O3400 112420 96/07/31
0009 O3500 117460 96/07/31

~ ~

5 Press soft key [(OPRT)].

6 To specify a file number, press soft key [F READ].  The screen shown
below is displayed.

F NAME EXECSTOPO SET CAN

DIRECTORY (M–CARD)
  No. FILE NAME COMMENT

O0001 N00010

0019 O1000 (MAIN  PROGRAM)
0020 O1010 (SUBPROGRAM–1)
0021 O1030 (COMMENT )

~ ~

READ
FILE NAME=20 PROGRAM No.=120

>

EDIT 15:40:21* * *     * * * *    * * *     * * * *

7 Enter file number 20 from the MDI panel, then set the file number by
pressing soft key [F SET].  Next, enter program number 120, then set
the program number by pressing soft key [O SET].  Then, press soft
key [EXEC].

⋅ File number 20 is registered as O0120 in the CNC.
⋅ Set a program number to register a read file with a separate O

number.  If no program number is set, the O number in the file name
column is registered.

*��������

DELETEPUNCHF SRH F READ N READ



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

587

8 To specify a file with its file name, press soft key [N READ] in step 6
above.  The screen shown below is displayed.

F NAME EXECSTOPO SET CAN

DIRECTORY (M–CARD)
  No. FILE NAME COMMENT

O0001 N00010

0012 O0050 (MAIN  PROGRAM)
0013 TESTPRO (SUB PROGRAM–1)
0014 O0060 (MACRO PROGRAM)

~ ~

READ FILE NAME =TESTPRO
PROGRAM No. =1230

>

EDIT 15:40:21* * *     * * * *    * * *     * * * *

9 To register file name TESTPRO as O1230, enter file name TESTPRO
from the MDI panel, then set the file name with soft key [F NAME].
Next, enter program number 1230, then set the program number with
soft key [O SET].  Then, press soft key [EXEC].



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

588

Writing a file

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key  (next–menu key).

4 Press soft key [CARD].  The screen shown below is displayed.

PROG (OPRT)DIR  +

DIRECTORY (M–CARD)
  No. FILE NAME  SIZE DATE

O0034 N00045

0001 O1000 123456 96/07/10
0002 O1001 118458 96/07/30
0003 O0002 113250 96/07/30
0004 O2000 173456 96/07/31
0005 O2001 113444 96/07/31
0006 O3001 118483 96/08/02
0007 O3300 111406 96/08/05
0008 O3400 112420 96/07/31
0009 O3500 117460 96/07/31

~ ~

5 Press soft key [(OPRT)].

6 Press soft key [PUNCH].

7 Enter a desired O number from the MDI panel, then set the program
number with soft key [O SET].  
When soft key [EXEC] is pressed after the setting shown below has
been made, for example, the file is written under program number
O1230.

F NAME EXECSTOPO SET CAN

EDIT
 

* * *     * * * *    * * *     * * * * 15:40:21

PUNCH FILE NAME =
PROGRAM No. =1230

>

~ ~

8 In the same way as for O number setting, enter a desired file name
from the MDI panel, then set the file name with soft key [F SET].
When soft key [EXEC] is pressed after the setting shown below has
been made, for example, the file is written under program number
O1230 and file name ABCD12.

F NAME EXECSTOPO SET CAN

EDIT
 

* * *     * * * *    * * *     * * * * 15:40:21

PUNCH FILE NAME =ABCD12
PROGRAM No. =1230

>

~ ~

*��������

DELETEPUNCHF SRH F READ N READ



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

589

When a file is output to the memory card, another file having the same
name may already exist in the memory card.  Bit 6 (OWM) of parameter
No. 0138 can be used to select whether to overwrite the existing file
unconditionally or display a message confirming the overwriting.
A message appears when OWM is 0; overwriting occurs unconditionally
when OWM is 1.  Even when OWM is 0, however, file overwriting occurs
unconditionally if the overwriting is specified by the screen hardcopy
function or an operation on the maintenance information screen or PMC
screen.

To write all programs, set program number = –9999.  If no file name is
specified in this case, file name PROGRAM.ALL is used for registration.

The following restrictions are imposed on file name setting:

<File name setting> �������� . ���
� �

Not longer than 8
characters

Extension not longer
than 3 characters

Explanations

� Registering the same file
name

� Writing all programs

� File name restrictions



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

590

Deleting a file

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PROG .

3 Press the rightmost soft key  (next–menu key).

4 Press soft key [CARD].  The screen shown below is displayed.

PROG (OPRT)DIR  +

DIRECTORY (M–CARD)
  No. FILE NAME  SIZE DATE

O0034 N00045

0001 O1000 123456 96/07/10
0002 O1001 118458 96/07/30
0003 O0002 113250 96/07/30
0004 O2000 173456 96/07/31
0005 O2001 113444 96/07/31
0006 O3001 118483 96/08/02
0007 O3300 111406 96/08/05
0008 O3400 112420 96/07/31
0009 O3500 117460 96/07/31

~ ~

5 Press soft key [(OPRT)].

6 Set the number of the desired file with soft key [DELETE], then press
soft key [EXEC].  The file is deleted, and the directory screen is
displayed again.

DIRECTORY (M–CARD)
  No. FILE NAME COMMENT

O0034 N00045

0019 O1000 (MAIN PROGRAM)
0020 O1010 (SUBPROGRAM–1)
0021 O1020 (COMMENT )
0022 O1030 (COMMENT )

~ ~
File name O1020 is deleted.

When file number 21 is deleted

DIRECTORY (M–CARD)
  No. FILE NAME COMMENT

O0034 N00045

0019 O1000 (MAIN PROGRAM)
0020 O1010 (SUBPROGRAM–1)
0021 O1020 (COMMENT )
0022 O1030 (COMMENT )

~ ~

File number 21 is assigned to the next file name.

*��������

DELETEPUNCHF SRH F READ N READ



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

591

Batch input/output with a memory card

On the ALL IO screen, different types of data including part programs,
parameters, offset data, pitch error data, custom macros, and workpiece
coordinate system data can be input and output using a memory card; the
screen for each type of data need not be displayed for input/output.

Memory card ALL IO screen�

�

Data item name

Part program
Parameter  
Offset data 
Pitch error data 
Custom macro
Workpiece coordinate system
data 
(additional coordinate systems)

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key SYSTEM .

3 Press the rightmost soft key  (next–menu key) several times.

4 Press soft key [ALL IO].  The screen shown below is displayed.

PROG (OPRT)OFFSETPARAM

READ/PUNCH (PROGRAM)
  No. FILE NAME  SIZE DATE

O0001 N00001

*0001 O0222 332010 96–04–06
*0002 O1003 334450 96–05–04
*0003 MACROVAR.DAT 653400 96–05–12
*0004 O0002 341205 96–05–13

[PROGRAM]
*O0001 O0002 O0003 O0005 O0100 O0020
*O0006 O0004 O0110 O0200 O2200 O0441
*O0330
>
EDIT 10:07:37* * *     * * * *    * * *     * * * *

Upper part :  Directory of files on the memory card 
Lower part :  Directory of registered programs

5 With cursor keys  and  , the user can choose between upper

part scrolling and lower part scrolling.  (An asterisk (*) displayed at
the left edge indicates the part for which scrolling is possible.)

  :  Used for memory card file directory scrolling.

  :  Used for program directory scrolling.

6 With page keys 
PAGE

 and 
PAGE

, scroll through the file directory or

program directory.

*��������



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

592

When this screen is displayed, the program data item is selected.  Select
other items by pressing the soft keys that appear when the user presses
next–menu key .

MACRO (OPRT)WORKPITCH

When a data item other than program is selected, the screen displays only
a file directory.
A data item is indicated, in parentheses, on the title line.

READ/PUNCH (PARAMETER)
  No. FILE NAME SIZE    DATE

O0001 N00001

0001 O0222 332010 96/04/06
0002 O1003 334450 96/05/04
0003 MACROVAR.DAT 653400 96/05/12
0004 O0003 334610 96/05/04
0005 O0001 334254 96/06/04
0006 O0002 333750 96/06/04
0007 CNCPARAM.DAT 334453 96/06/04

~ ~

Program directory display does not match bit 0 (NAM) of parameter No.
3107, or bit 4 (SOR) of parameter No. 3107.

Display the following soft keys with soft key [(OPRT)].

F SRH DELETEN READF READ PUNCH

The operation of each function is the same as on the directory (memory
card) screen.  Soft key [O SET], used for program number setting, and the
”PROGRAM NUMBER =” indication are not displayed for data items
other than program.

[F SRH] :  Finds a specified file number.
[F READ] :  Reads a specified file number.
[PUNCH] :  Writes a file.
[N READ] :  Reads a file under a specified file name.
[DELETE] :  Deletes a specified file number.

NOTE
With a memory card, RMT mode operation and the
subprogram call function (based on the M198 command)
cannot be used.

Explanations

� Each data item

� Program directory
display

� Using each function



OPERATIONB–64124EN/01 8. DATA INPUT/OUTPUT

593

File format and error messages

All files that are read from and written to a memory card are of text format.
The format is described below.
A file starts with % or LF, followed by the actual data.  A file always ends
with %.  In a read operation, data between the first % and the next LF is
skipped.  Each block ends with an LF, not a semicolon (;).

⋅ LF:  0A (hexadecimal) of ASCII code
⋅ When a file containing lowercase letters, kana characters, and several

special characters (such as $, \, and !) is read, those letters and
characters are ignored.
Example:

%
O0001(MEMORY CARD SAMPLE FILE)
G17 G49 G97
G92 X–11.3 Y2.33

⋅
⋅

M30
%

⋅ ASCII code is used for input/output, regardless of the setting
parameter (ISO/EIA).

⋅ Bit 3 of parameter No. 0100 can be used to specify whether the end of
block code (EOB) is output as ”LF” only, or as ”LF, CR, CR.”

If an error occurs during memory card input/output, a corresponding error
message is displayed.

EDIT
 

* * *     * * * *    * * *     * * * * 15:40:21

M–CARD ERROR ����
FILE No. = 1 PROGRAM No. =13

>_

0028 O0003 777382 01–06–14

F SET EXECSTOPO SET CAN

~ ~

���� represents a memory card error code.

Format

Error messages



OPERATION8. DATA INPUT/OUTPUT B–64124EN/01

594

Code Meaning

99 A part preceding the FAT area on the memory card is destroyed.

102 The memory card does not have sufficient free space.

105 No memory card is mounted.

106 A memory card is already mounted.

110 The specified directory cannot be found.

111 There are too many files under the root directory to allow a
directory to be added.

114 The specified file cannot be found.

115 The specified file is protected.

117 The file has not yet been opened.

118 The file is already open.

119 The file is locked.

121 The memory card does not have sufficient free space.

122 The specified file name is invalid.

124 The extension of the specified file is invalid.

129 A non–corresponding function was specified.

130 The specification of a device is invalid.

131 The specification of a pathname is invalid.

133 Multiple files are open at the same time.

135 The device is not formatted.

140 The file has the read/write disabled attribute.

Memory Card Error
Codes



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

595

9 EDITING PROGRAMS
This chapter describes how to edit programs registered in the CNC.
Editing includes the insertion, modification, deletion, and replacement of
words.  Editing also includes deletion of the entire program and automatic
insertion of sequence numbers.  The extended part program editing
function can copy, move, and merge programs.  This chapter also
describes program number search, sequence number search, word search,
and address search, which are performed before editing the program.

1) Program number search: See III–9.3.. . . . . . . . . . . . . . . . . . . . . . . . . 
2) Sequence number search: See III–9.4.. . . . . . . . . . . . . . . . . . . . . . . . 
3) Word search: See III–9.1.1.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4) Address search: See III–9.1.1.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1) Inserting, altering, and deleting a word: See III–9.1.3 to 9.1.5.. . . . 
2) Replacing words and addresses: See III–9.6.6.. . . . . . . . . . . . . . . . 
3) Deleting blocks: See III–9.2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
4) Copying, moving, and merging programs: See III–9.6.1 and  9.6.5.
5) Deleting programs: See III–9.5.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

Search for part
of program to be
edited

Inserting, altering,
and deleting 
programs

Registration

Editing

Output Execution

General



OPERATION9. EDITING PROGRAMS B–64124EN/01

596

This section outlines the procedure for inserting, modifying, and deleting
a word in a program registered in memory.

Procedure for inserting, altering and deleting a word

1 Select EDIT mode.

2 Press PROG .

3 Select a program to be edited.
If a program to be edited is selected, perform the operation 4.
If a program to be edited is not selected, search for the program
number.

4 Search for a word to be modified.
⋅ Scan method
⋅ Word search method

5 Perform an operation such as altering, inserting, or deleting a word.

A word is an address followed by a number.  With a custom macro, the
concept of word is ambiguous.
So the editing unit is considered here.
The editing unit is a unit subject to alteration or deletion in one operation.
In one scan operation, the cursor indicates the start of an editing unit.
An insertion is made after an editing unit.
Definition of editing unit

(i) Program portion from an address to immediately before the next
address

(ii)An address is an alphabet, IF, WHILE, GOTO, END, DO=,or ;  (EOB).
According to this definition, a word is an editing unit.

The word “word,” when used in the description of editing, means an
editing unit according to the precise definition.

WARNING
The user cannot continue program execution after altering, inserting, or deleting data of the
program by suspending machining in progress by means of an operation such as a single block
stop or feed hold operation during program execution.  If such a modification is made, the
program may not be executed exactly according to the contents of the program displayed on
the screen after machining is resumed.  So, when the contents of memory are to be modified
by part program editing, be sure to enter the reset state or reset the system upon completion
of editing before executing the program.

9.1
INSERTING,
ALTERING AND 
DELETING 
A WORD

Explanation

� Concept of word and
editing unit



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

597

A word can be searched for by merely moving the cursor through the text
(scanning), by word search, or by address search.

Procedure for scanning a program

1 Press the cursor key .

The cursor moves forward word by word on the screen; the cursor is
displayed at a selected word.

2 Press the cursor key .

The cursor moves backward word by word on the screen; the cursor is
displayed at a selected word.

Example)  When Z1250.0 is scanned

Program O0050  N01234
O0050  ;
N01234  X100.0
S12  ;
N56789  M03  ;
M02  ;
%

;Z1250.0

3 Holding down the cursor key  or  scans words

continuously.

4 The first word of the next block is searched for when the cursor key

 is pressed.

5 The first word of the previous block is searched for when the cursor

key  is pressed.

6 Holding down the cursor key  or  moves the cursor to the

head of a block continuously.

7 Pressing the page key 
PAGE

 displays the next page and searches for

the first word of the page.

8 Pressing the page key 
PAGE

 displays the previous page and searches

for the first word of the page.

9 Holding down the page key 
PAGE

 or 
PAGE

 displays one page after

another.

9.1.1
$��� -�
���



OPERATION9. EDITING PROGRAMS B–64124EN/01

598

Procedure for searching a word

Example) of Searching for S12

PROGRAM O0050  N01234
O0050  ;

X100.0  Z1250.0  ;
S12  ;
N56789  M03  ;
M02  ;
%

N01234

N01234 is being
searched for/
scanned currently.
S12 is searched
for.

1 Key in address S .

2 Key in 1 2 .

⋅ S12 cannot be searched for if only S1 is keyed in.
⋅ S09 cannot be searched for by keying in only S9.
   To search for S09, be sure to key in S09.

3 Pressing the [SRH↓] key starts search operation.
Upon completion of search operation, the cursor is displayed at S12.
Pressing the [SRH↑] key rather than the [SRH↓] key performs search
operation in the reverse direction.

Procedure for searching an address

Example) of Searching for M03

PROGRAM O0050  N01234
O0050  ;

X100.0  Z1250.0  ;
S12  ;
N56789  M03  ;
M02  ;
%

N01234

N01234 is being
searched for/
scanned currently.

M03 is searched
for.

1 Key in address M .

2 Press the [SRH↓] key.
Upon completion of search operation, the cursor is displayed at M03.
Pressing the [SRH↑] key rather than the [SRH↓] key performs search
operation in the reverse direction.

��
�	��	��� �����������

7� The word or address being searched for was not found.

��
�	



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

599

The cursor can be jumped to the top of a program.  This function is called
heading  the program pointer.  This section describes the three methods
for heading the program pointer.

Procedure for Heading a Program

1 Press RESET  when the program screen is selected in EDIT mode.

When the cursor has returned to the start of the program, the contents
of the program are displayed from its start on the screen.

Search for the program number.

1 Press address O ,when a program screen is selected in the

MEMORY or EDIT mode.

2 Input a program number.

3 Press the soft key [O SRH].

1 Select [MEMORY] or [EDIT] mode.

2 Press PROG .

3 Press the [(OPRT)] key.

4 Press the [REWIND] key.

9.1.2
A�
���" 
 *��"�
	

Method 1

Method 2

Method 3



OPERATION9. EDITING PROGRAMS B–64124EN/01

600

Procedure for inserting a word

1 Search for or scan the word immediately before a word to be inserted.

2 Key in an address to be inserted.

3 Key in data.

4 Press the INSERT  key.

Example of Inserting T15

1 Search for or scan Z1250.

Program O0050  N01234
O0050  ;
N01234  X100.0
S12  ;
N56789  M03  ;
M02  ;
%

Z1250.0 ;
Z1250.0 is
searched for/
scanned.

2 Key in T 1 5 .

3 Press the INSERT  key.

Program O0050  N01234
O0050  ;
N01234  X100.0  Z1250.0  T15  ;
S12  ;
N56789  M03  ;
M02  ;
%

T15 is inserted.

9.1.3
Inserting a Word

Procedure



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

601

Procedure for altering a word

1 Search for or scan a word to be altered.

2 Key in an address to be inserted.

3 Key in data.

4 Press the ALTER  key.

Example of changing T15 to M15

1 Search for or scan T15.

Program O0050  N01234
O0050  ;
N01234  X100.0  Z1250.0
S12  ;
N56789  M03  ;
M02  ;
%

T15 ;
T15 is searched
for/scanned.

2 Key in M 1 5  .

3 Press the ALTER  key.

Program O0050  N01234
O0050  ;
N1234  X100.0  Z1250.0  M15  ;
S12  ;
N5678  M03  ;
M02  ;
%

T15 is changed to
M15.

9.1.4
Altering a Word

Procedure



OPERATION9. EDITING PROGRAMS B–64124EN/01

602

Procedure for deleting a word

1 Search for or scan a word to be deleted.

2 Press the DELETE  key.

Example of deleting X100.0

1 Search for or scan X100.0.

Program O0050  N01234
O0050  ;
N01234
S12  ;
N56789  M03  ;
M02  ;
%

X100.0
X100.0 is
searched for/
scanned.

Z1250.0  M15  ;

2 Press the DELETE  key.

Program O0050  N01234
O0050  ;
N01234  Z1250.0  M15  ;
S12  ;
N56789  M03  ;
M02  ;
%

X100.0 is deleted.

9.1.5
Deleting a Word

Procedure



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

603

A block or blocks can be deleted in a program.

The procedure below deletes a block up to its EOB code; the cursor
advances to the next word.

Procedure for deleting a block

1 Search for or scan address N for a block to be deleted.

2 Key in EOB .

3 Press the DELETE .

Example of deleting a block of N01234

1 Search for or scan N01234.

Program O0050  N01234
O0050  ;

Z1250.0  M15  ;
S12  ;
N56789  M03  ;
M02  ;
%

N01234 N01234 is
searched for/
scanned.

2 Key in EOB .

3 Press the DELETE  key.

Program O0050  N01234
O0050  ;
S12  ;
N56789  M03  ;
M02  ;
%

Block containing
N01234 has
been deleted.

9.2
DELETING 
BLOCKS

9.2.1
Deleting a Block

Procedure



OPERATION9. EDITING PROGRAMS B–64124EN/01

604

The blocks from the currently displayed word to the block with a specified
sequence number can be deleted.

Procedure for deleting multiple blocks

1 Search for or scan a word in the first block of a portion to be deleted.

2 Key in address N  .

3 Key in the sequence number for the last block of the portion to be
deleted.

4 Press the DELETE  key.

Example of deleting blocks from a block containing N01234 to a block containing N56789

1 Search for or scan N01234.

Program O0050  N01234
O0050  ;

Z1250.0  M15  ;
S12  ;
N56789  M03  ;
M02  ;
%

N01234 N01234 is
searched for/
scanned.

2 Key in N 5 6 7 8 9 .

Program O0050  N01234
O0050  ;

Z1250.0  M15  ;
S12  ;
N56789  M03  ;
M02  ;
%

N01234
Underlined
part is de-
leted.

3 Press the DELETE key.

Program O0050  N01234
O0050  ;
M02  ;
%

Blocks from block
containing
N01234 to block
containing
N56789 have
been deleted.

9.2.2
Deleting Multiple
Blocks

Procedure



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

605

When memory holds multiple programs, a program can be searched for.
There are three methods as follows.

Procedure for program number search

1 Select EDIT or MEMORY mode.

2 Press PROG to display the program screen.

3 Key in address O .

4 Key in a program number to be searched for.

5 Press the [O SRH] key.

6 Upon completion of search operation, the program number searched
for is displayed in the upper–right corner of the screen
If the program is not found , P/S alarm No. 71 occurs.

1 Select EDIT or MEMORY mode.

2 Press PROG  to display the program screen.

3 Press the [O SRH] key.
In this case, the next program in the memory is searched for .

This method searches for the program number (0001 to 0015)
corresponding to a signal on the machine tool side to start automatic
operation.  Refer to the relevant manual prepared by the machine tool
builder for detailed information on operation.

1 Select MEMORY mode.

2 Set the reset state(*1)

⋅ The reset state is the state where the LED for indicating that
automatic operation is in progress is off.  (Refer to the relevant
manual of the machine tool builder.)

3 Set the program number selection signal on the machine tool side to a
number from 01 to 15.

⋅ If the program corresponding to a signal on the machine tool
side is not registered, P/S alarm (No. 059) is raised.

4 Press the cycle start button.

⋅ When the signal on the machine tool side represents 00,
program number search operation is not performed.

No. Contents

59
The program with the selected number cannot be searched
during external program number search.

71
The specified program number was not found during 
program number search.

9.3
PROGRAM
NUMBER SEARCH

Method 1

Method 2

Method 3

Alarm



OPERATION9. EDITING PROGRAMS B–64124EN/01

606

Sequence number search operation is usually used to search for a
sequence number in the middle of a program so that execution can be
started or restarted at the block of the sequence number. 

Example) Sequence number 02346 in a program (O0002) is
searched for.

Program

O0001 ;
N01234 X100.0 Z100.0 ;
S12 ;
   :
O0002 ;
N02345 X20.0 Z20.0 ;
N02346 X10.0 Y10.0 ;
   :
O0003 ;
   :

Selected program

Target sequence
number is found.

This section is
searched starting at
the beginning. 
(Search operation is
performed only within a
program.)

Procedure for sequence number search

1 Select MEMORY mode.

2 Press PROG .

3 ⋅ If the program contains a sequence number to be searchedfor,
perform the operations 4 to 7 below.

⋅ If the program does not contain a sequence number to be searched
for,select the program number of the program that contains the
sequence number to be searched for.

4 Key in address N .

5 Key in a sequence number to be searched for.

6 Press the [N SRH] key.

7 Upon completion of search operation, the sequence number searched
for is displayed in the upper–right corner of the screen.
If the specified sequence number is not found in the program currently
selected, P/S alarm No. 060 occurs.

9.4
SEQUENCE
NUMBER SEARCH



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

607

Those blocks that are skipped do not affect the CNC.  This means that the
data in the skipped blocks such as coordinates and M, S, and T codes does
not alter the CNC coordinates and modal values.
So, in the first block where execution is to be started or restarted by using
a sequence number search command, be sure to enter required M, S, and
T codes and coordinates.  A block searched for by sequence number
search  usually represents a point of shifting from one process to another.
When a block in the middle of a process must be searched for to restart
execution at the block, specify M, S, and T codes, G codes, coordinates,
and so forth as required from the MDI after closely checking the machine
tool and NC states at that point.

During search operation, the following checks are made:
 ⋅ Optional block skip

During sequence number search operation, M98Pxxxx (subprogram call)
is not executed.  So a P/S alarm (No.060) is raised if an attempt is made
to search for a sequence number in a subprogram called by the program
currently selected.

O1234
     :
     :
M98 P5678 ;
     :
     :

Main program Subprogram

O5678
     :
N88888
     :
M99 ;
     :

If an attempt is made to search for N8888 in the example above, an alarm is raised.

Number Contents

60
Command sequence number was not found in the se-
quence number search.

Explanations

� Operation during Search

� Checking during search

Limitations

� Searching in
sub–program

Alarm



OPERATION9. EDITING PROGRAMS B–64124EN/01

608

Programs registered in memory can be deleted,either one program by one
program or all at once.  Also, More than one program can be deleted by
specifying a range.

A program registered in memory can be deleted.

Procedure for deleting one program

1 Select the EDIT mode.

2 Press PROG to display the program screen.

3 Key in address O .

4 Key in a desired program number.

5 Press the DELETE  key.

The program with the entered program number is deleted.

All programs registered in memory can be deleted.

Procedure for deleting all programs

1 Select the EDIT mode.

2 Press PROG  to display the program screen.

3 Key in address O .

4 Key in –9999.

5 Press edit key DELETE  to delete all programs.

9.5
DELETING
PROGRAMS

9.5.1
Deleting One Program

9.5.2
Deleting All Programs



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

609

Programs within a specified range in memory are deleted.

Procedure for deleting more than one program by specifying a range

1 Select the EDIT mode.

2 Press PROG  to display the program screen.

3 Enter the range of program numbers to be deleted with address and
numeric keys in the following format:
OXXXX,OYYYY
where XXXX is the starting number of the programs to be deleted and
YYYY is the ending number of the programs to be deleted.

4 Press edit key DELETE  to delete programs No. XXXX to No. YYYY.

9.5.3
Deleting More Than One
Program by Specifying a
Range



OPERATION9. EDITING PROGRAMS B–64124EN/01

610

With the extended part program editing function, the operations described
below can be performed using soft keys for programs that have been
registered in memory.
Following editing operations are available :
⋅ All or part of a program can be copied or moved to another program.
⋅ One program can be merged at free position into other programs.
⋅ A specified word or address in a program can be replaced with another

word or address.

9.6
EXTENDED PART
PROGRAM EDITING
FUNCTION



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

611

A new program can be created by copying a program.

A

Oxxxx

A

Oxxxx

After copy

A

Oyyyy

Copy

Before copy

Fig. 9.6.1  Copying an entire program

In Fig. 9.6.1, the program with program number xxxx is copied to a newly
created program with program number yyyy. The program created by
copy operation is the same as the original program except the program
number.

Procedure of copying an entire program

1 Enter the EDIT mode.

2 Press function key PROG .

3 Press soft key [(OPRT)].

4 Press the continuous menu key.

5 Press soft key [EX–EDT].

6 Check that the screen for the program to be copied is selected 
and press soft key [COPY].

7 Press soft key [ALL].

8 Enter the number of the new program (with only numeric keys ) and

press the INPUT  key.

9 Press soft key [EXEC].

9.6.1
Copying an Entire
Program

Continuous
menu key 

0 9Numeric keys

(OPRT)

(EX–EDT)

COPY

ALL

EXEC

�



OPERATION9. EDITING PROGRAMS B–64124EN/01

612

A new program can be created by copying part of a program.

B

Oxxxx Oxxxx

After copy

B

Oyyyy

Copy

Before copy

Fig. 9.6.2  Copying part of a program

A

C

B

A

C

In Fig. 9.6.2, part B of the program with program number xxxx is copied
to a newly created program with program number yyyy.  The program for
which an editing range is specified remains unchanged after copy
operation.

Procedure for copying part of a program

1 Perform steps 1 to 6 in III–9.6.1.

2 Move the cursor to the start of the range to be copied and press soft key
[CRSR�].

3 Move the cursor to the end of the range to be copied and press soft key
[�CRSR] or [�BTTM] (in the latter case, the range to the end of the
program is copied regardless of the position of the cursor).

4 Enter the number of the new program (with only numeric keys) and

press the INPUT key.

5 Press soft key [EXEC].

9.6.2
Copying Part 
of a Program

CRSR�

0 9

�CRSR     �BTTM

EXEC

Numeric keys  �



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

613

A new program can be created by moving part of a program.

B

Oxxxx Oxxxx

After copy

B

Oyyyy

Copy

Before copy

Fig. 9.6.3  Moving part of a program

A

C

A

C

In Fig. 9.6.3, part B of the program with program number xxxx is moved
to a newly created program with program number yyyy; part B is deleted
from the program with program number xxxx.

Procedure for moving part of a program

1 Perform steps 1 to 5 in III–9.6.1.

2 Check that the screen for the program to be moved is selected and
press soft key [MOVE].

3 Move the cursor to the start of the range to be moved and press soft
key [CRSR�].

4 Move the cursor to the end of the range to be moved and press soft key
[�CRSR] or [�BTTM](in the latter case, the range to the end of the
program is copied regardless of the position of the cursor).

5 Enter the number of the new program (with only numeric keys) and

press the INPUT  key.

6 Press soft key [EXEC].

9.6.3
Moving Part of a
Program

CRSR�

EXEC

0 9Numeric keys

�CRSR �BTTM

MOVE

�



OPERATION9. EDITING PROGRAMS B–64124EN/01

614

Another program can be inserted at an arbitrary position in the current
program.

Oxxxx

Before merge

B

Oyyyy

Merge

Fig. 9.6.4  Merging a program at a specified location

A

Oxxxx

After merge

B

Oyyyy

B

A

C

C

Merge
location

In Fig. 9.6.4, the program with program number XXXX is merged with the
program with program number YYYY.  The OYYYY program remains
unchanged after merge operation.

Procedure for merging a program

1 Perform steps 1 to 5 in III–9.6.1.

2 Check that the screen for the program to be edited is selected and press
soft key [MERGE].

3 Move the cursor to the position at which another program is to be
inserted and press soft key [�’CRSR] or [�BTTM’](in the latter case,
the end of the current program is displayed).

4 Enter the number of the program to be inserted (with only numeric

keys) and press the INPUT  key.

5 Press soft key [EXEC].
The program with the number specified in step 4 is inserted before the
cursor positioned in step 3.

9.6.4
Merging a Program

EXEC

0 9

�’CRSR �BTTM’

MERGE

Numeric keys �



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

615

The setting of an editing range start point with [CRSR�] can be changed
freely until an editing range end point is set with [�CRSR] or [�BTTM].
If an editing range start point is set after an editing range end point, the
editing range must be reset starting with a start point.
The setting of an editing range start point and end point remains valid until
an operation is performed to invalidate the setting.
One of the following operations invalidates a setting:

⋅ An edit operation other than address search, word search/scan, and
search for the start of a program is performed after a start point or end
point is set.

⋅ Processing is returned to operation selection after a start point or end
point is set.

In copying program and moving program, if [EXEC] is pressed without
specifying a program number after an editing range end point is set, a
program with program number O0000 is registered as a work program.
This O0000 program has the following features:
⋅ The program can be edited in the same way as a general program. 

(Do not run the program.)

⋅ If a copy or move operation is newly performed, the previous
information is deleted at execution time, and newly set information
(all or part of the program) is reregistered.  (In merge operation, the
previous information is not deleted.)  However, the program, when
selected for foreground operation, cannot be reregistered in the
background.  (A BP/S alarm No. 140 is raised.)  When the program is
reregistered, a free area is produced.  Delete such a free area with the

RESET  key.

⋅ When the program becomes unnecessary, delete the program by a 
normal editing operation.

When the system is waiting for a program number to be entered,
no edit operation can be performed.

If a program number is specified by 5 or more digits, a format error is
generated.

9.6.5
Supplementary
Explanation for
Copying, Moving 
and Merging

Explanations

� Setting an editing range

� Without specifying a
program number

� Editing when the system
waiting for a program
number to be entered

Limitations

� 8�	��� �� ��"��� ���

���"�
	 ��	���



OPERATION9. EDITING PROGRAMS B–64124EN/01

616

��
�	 ��<  �������

7�

���

��+��F ����+� '	�(��'�'�	
 1)'�� ��&F'	* �� '	���
'	*

� &��*��+� ��&F �� '	���
'�	 '� 
��+'	�
�%�

�)� &�1�� 1�� '	
���(&
�% %(�'	* ��&F'	*0 +�3'	*0 ��

'	���
'	* � &��*��+ �	% +�+��F (��% ��� �%'
'	* +(�


�� ������%� 2)�	 
)'� ����+ ���(��0 &���� 
)� ��F

1)'�� &����'	* �(	�
'�	 ��F  �
D	�F 
)� &��*��+ ��'	* �%'
�% '� %���
�%�

PROG

RESET

Alarm



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

617

Replace one or more specified words.
Replacement can be applied to all occurrences or just one occurrence of
specified words or addresses in the program.

Procedure for hange of words or addresses

1 Perform steps 1 to 5 in III–9.6.1.

2 Press soft key [CHANGE].

3 Enter the word or address to be replaced.

4 Press soft key [BEFORE].

5 Enter the new word or address.

6 Press soft key [AFTER].

7 Press soft key [EXEC] to replace all the specified words or addresses
after the cursor.
Press soft key [1–EXEC] to search for and replace the first occurrence
of the specified word or adress after the cursor.
Press soft key [SKIP] to only search for the first occurrence of the
specified word or address after the cursor.

[CHANGE] X 1 0 0 [BEFORE] Y 2 0 0
[AFTER][EXEC]

[CHANGE] X 1 0 0 Y 2 0 0 [BEFORE]

X 3 0 [AFTER][EXEC]

[CHANGE] I F [BEFORE] W H I L E [AFTER]

[EXEC]

[CHANGE] X [BEFORE] , C 1 0 [AFTER][EXEC]

9.6.6
Replacement of 
Words and Addresses

EXEC

BEFORE

CHANGE

AFTER

1–EXECSKIP

Examples

� Replace X100 with Y200

� Replace X100Y200 with
X30

� Replace IF with WHILE

� Replace X with ,C10



OPERATION9. EDITING PROGRAMS B–64124EN/01

618

The following custom macro words are replaceable:
IF, WHILE, GOTO, END, DO, BPRNT, DPRINT, POPEN, PCLOS
The abbreviations of custom macro words can be specified.
When abbreviations are used, however, the screen displays the
abbreviations as they are key input, even after soft key [BEFORE] and
[AFTER] are pressed.

Up to 15 characters can be specified for words before or after replacement.
(Sixteen or more characters cannot be specified.)

Words before or after replacement must start with a character representing
an address.(A format error occurs.)

Explanation

� Replacing custom
macros

Restrictions

� The number of
characters for
replacement

� The characters for
replacement



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

619

Unlike ordinary programs, custom macro programs are modified,
inserted, or deleted based on editing units.
Custom macro words can be entered in abbreviated form.
Comments can be entered in a program.
Refer to the III–10.1 for the comments of a program.

When editing a custom macro already entered, the user can move the
cursor to each editing unit that starts with any of the following characters
and symbols:

(a) Address
(b) # located at the start of the left side of a substitution statement
(c) /, (,=, and ;
(d) First character of IF, WHILE, GOTO, END, DO, POPEN, BPRNT,

DPRNT and PCLOS
On the CRT screen, a blank is placed before each of the above characters
and symbols.  
(Example) Head positions where the cursor is placed
N001 X–#100 ;
#1 =123 ;
N002 /2 X[12/#3] ;
N003 X–SQRT[#3/3�[#4+1]] ;
N004 X–#2 Z#1 ;
N005 #5 =1+2–#10 ;
IF[#1NE0] GOTO10 ;
WHILE[#2LE5] DO1 ;
#[200+#2] =#2�10 ;
#2 =#2+1 ;
END1 ;

When a custom macro word is altered or inserted, the first two characters
or more can replace the entire word.
Namely,
WHILE → WH GOTO → GO XOR → XO AND → AN
SIN → SI ASIN → AS COS → CO ACOS → AC
TAN → TA ATAN → AT SQRT → SQ ABS → AB
BCD → BC BIN → BI FIX → FI FUP → FU 
ROUND → RO END → EN EXP → EX THEN → TH
POPEN → PO BPRNT → BP DPRNT → DP PCLOS → PC
 (Example) Keying in
WH [AB [#2 ] LE RO [#3 ] ] 
has the same effect as
WHILE  [ABS  [#2 ] LE ROUND [#3 ] ]
The program is also displayed in this way.

9.7
EDITING OF
CUSTOM MACROS

Explanations

� Editing unit

� Abbreviations of custom
macro word



OPERATION9. EDITING PROGRAMS B–64124EN/01

620

Editing a program while executing another program is called background
editing. The method of editing is the same as for ordinary editing
(foreground editing).
A program edited in the background should be registered in foreground
program memory by performing the following operation:
During background editing, all programs cannot be deleted at once.

Procedure for background editing

1 Enter EDIT or MEMORY mode. 
Memory mode is allowed even while the program is being executed.

2 Press function key PROG .

3 Press soft key [(OPRT)], then press soft key [BG–EDT].
The background editing screen is displayed (PROGRAM
(BG–EDIT) is displayed at the top left of the screen).

4 Edit a program on the background editing screen in the same way as
for ordinary program editing.

5 After editing is completed, press soft key [(OPRT)], then press soft
key [BG–EDT].  The edited program is registered in foreground
program memory.

Alarms that may occur during background editing do not affect
foreground operation.  Conversely, alarms that may occur during
foreground operation do not affect background editing.  In background
editing, if an attempt is made to edit a program selected for foreground
operation, a BP/S alarm (No. 140) is raised.  On the other hand, if an
attempt is made to select a program subjected to background editing
during foreground operation (by means of subprogram calling or program
number search operation  using an external signal), a P/S alarm (Nos. 059,
078) is raised in foreground operation.  As with foreground program
editing, P/S alarms occur in background editing.  However, to distinguish
these alarms from foreground alarms, BP/S is displayed in the data input
line on the background editing screen.

9.8
BACKGROUND
EDITING

Explanation

� Alarms during
background editing



OPERATIONB–64124EN/01 9. EDITING PROGRAMS

621

The password function (bit 4 (NE9) of parameter No. 3202) can be locked
using parameter No. 3210 (PASSWD) and parameter No. 3211
(KEYWD) to protect program Nos. 9000 to 9999.  In the locked state,
parameter NE9 cannot be set to 0.  In this state, program Nos. 9000 to 9999
cannot be modified unless the correct keyword is set.
A locked state means that the value set in the parameter PASSWD differs
from the value set in the parameter KEYWD.  The values set in these
parameters are not displayed.  The locked state is released when the value
already set in the parameter PASSWD is also set in parameter KEYWD.
When 0 is displayed in parameter PASSWD, parameter PASSWD is not
set.

Procedure for locking and unlocking

1 Set the MDI mode.

2 Enable parameter writing.  At this time, P/S alarm No. 100 is issued
on the CNC.

3 Set parameter No. 3210 (PASSWD).  At this time, the locked state is
set.

4 Disable parameter writing.

5 Press the RESET  key to release the alarm state.

1 Set the MDI mode.

2 Enable parameter writing.  At this time, P/S alarm No. 100 is issued
on the CNC.

3 In parameter No. 3211 (KEYWD), set the same value as set in
parameter No. 3210 (PASSWD) for locking.  At this time, the locked
state is released.

4 Set bit 4 (NE9) of parameter No. 3202 to 0.

5 Disable parameter writing.

6 Press the RESET  key to release the alarm state.

7 Subprograms from program Nos. 9000 to 9999 can now be edited.

The locked state is set when a value is set in the parameter PASSWD.
However, note that parameter PASSWD can be set only when the locked
state is not set (when PASSWD = 0, or PASSWD = KEYWD).  If an
attempt is made to set parameter PASSWD in other cases, a warning is
given to indicate that writing is disabled.  When the locked state is set
(when PASSWD = 0 and PASSWD = KEYWD), parameter NE9 is
automatically set to 1.  If an attempt is made to set NE9 to 0, a warning
is given to indicate that writing is disabled.

Parameter PASSWD can be changed when the locked state is released
(when PASSWD = 0, or PASSWD = KEYWD).  After step 3 in the
procedure for unlocking, a new value can be set in the parameter
PASSWD.  From that time on, this new value must be set in parameter
KEYWD to release the locked state.

9.9
PASSWORD
FUNCTION

;��%��"

9����%��"

Explanations
� Setting parameter

PASSWD

� Changing parameter
PASSWD



OPERATION9. EDITING PROGRAMS B–64124EN/01

622

When 0 is set in the parameter PASSWD, the number 0 is displayed, and
the password function is disabled.  In other words, the password function
can be disabled by either not setting parameter PASSWD at all, or by
setting 0 in parameter PASSWD after step 3 of the procedure for
unlocking.  To ensure that the locked state is not entered, care must be
taken not to set a value other than 0 in parameter PASSWD.

After the locked state has been released, it can be set again by setting a
different value in parameter PASSWD, or by turning the power to the NC
off then on again to reset parameter KEYWD.

CAUTION
Once the locked state is set, parameter NE9 cannot be set
to 0 and parameter PASSWD cannot be changed until the
locked state is released or the memory all–clear operation
is performed.  Special care must be taken in setting
parameter PASSWD.

� Setting 0 in parameter
PASSWD

� Re–locking



OPERATIONB–64124EN/01 10. CREATING PROGRAMS

623

10 CREATING PROGRAMS
Programs can be created using any of the following methods:

⋅ CREATING PROGRAMS USING THE MDI PANEL
⋅ PROGRAMMING IN TEACH IN MODE
⋅ CONVERSATIONAL AUTOMATIC PROGRAMMING FUNCTION
⋅ MANUAL GUIDE 0i
⋅ AUTOMATIC PROGRAM PREPARATION DEVICE (FANUC

SYSTEM P)

This chapter describes creating programs using the MDI panel, Teach IN
mode, and conversational programming with graphic function.  This
chapter also describes the automatic insertion of sequence numbers.



OPERATION10. CREATING PROGRAMS B–64124EN/01

624

Programs can be created in the EDIT mode using the program editing
functions described in III–9.

Procedure for Creating Programs Using the MDI Panel

1 Enter the EDIT mode.

2 Press the PROG key.

3 Press address key O and enter the program number.

4 Press the INSERT key.

5 Create a program using the program editing functions described in
III–9.

Comments can be written in a program using the control in/out codes.

Example) O0001 (FANUC SERIES 16) ;
M08  (COOLANT ON) ;

 When the INSERT  key is pressed after the control–out code “(”,

comments, and control–in code “)” have been typed, the typed
comments are registered.

 When the INSERT  key is pressed midway through comments, to enter

the rest of comments later, the data typed before the INSERT  key is

pressed may not be correctly registered (not entered, modified, or lost)
because the data is subject to an entry check which is performed in
normal editing.

Note the following to enter a comment:

 Control–in code “)” cannot be registered by itself.

 Comments entered after the INSERT  key is pressed must not begin with

a number, space, or address O.

 If an abbreviation for a macro is entered, the abbreviation is converted
into a macro word and registered (see Section 9.7).

 Address O and subsequent numbers, or a space can be entered but are
omitted when registered.

10.1
CREATING
PROGRAMS USING
THE MDI PANEL

Procedure

Explanation

� Comments in a program



OPERATIONB–64124EN/01 10. CREATING PROGRAMS

625

Sequence numbers can be automatically inserted in each block when a
program is created using the MDI keys in the EDIT mode.
Set the increment for sequence numbers in parameter 3216.

Procedure for automatic insertion of sequence numbers

1 Set 1 for SEQUENCE NO. (see III–11.4.3).

2 Enter the EDIT mode.

3 Press PROG to display the program screen.

4 Search for or register the number of a program to be edited and move
the cursor to the EOB (;) of the block after which automatic insertion
of sequence numbers is started.
When a program number is registered and an EOB (;) is entered with

the INSERT  key, sequence numbers are automatically inserted starting

with 0.  Change the initial value, if required, according to step 10, then
skip to step 7.

5 Press address key N and enter the initial value of N.

6 Press INSERT .

7 Enter each word of a block.

8 Press EOB .

10.2
AUTOMATIC
INSERTION OF
SEQUENCE
NUMBERS

Procedure



OPERATION10. CREATING PROGRAMS B–64124EN/01

626

9 Press INSERT .  The EOB is registered in memory and sequence numbers

are automatically inserted.  For example, if the initial value of N is 10
and the parameter for the increment is set to 2, N12 inserted and
displayed below the line where a new block is specified.

EDIT * * * *     * * *    * * * 13 : 18 : 08

PROGRAM O0040  N00012

O0040 ;
N10 G92 X0 Y0 Z0 ;

%

LIB C.A.P (OPRT)

_

N12

PRGRM

10  In the example above, if N12 is not necessary in the next block,

pressing the DELETE  key after N12 is displayed deletes N12.

 To insert N100 in the next block instead of N12, enter N100 and

press ALTER after N12 is displayed.  N100 is registered and initial

value is changed to 100.



OPERATIONB–64124EN/01 10. CREATING PROGRAMS

627

The TEACH IN JOG mode and TEACH IN HANDLE mode are added.  In
these modes, a machine position along the X, Y, and Z axes obtained by
manual operation is stored in memory as a program position to create a
program.
The words other than X, Y, and Z, which include O, N, G, R, F, C, M, S,
T, P, Q, and EOB, can be stored in memory in the same way as in EDIT
mode.

Procedure for Creating Programs in TEACH IN Mode

The procedure described below can be used to store a machine position
along the X, Y, and Z axes.

1 Select the TEACH IN JOG mode or TEACH IN HANDLE mode.

2 Move the tool to the desired position with jog or handle.

3 Press PROG  key to display the program screen.  Search for or register

the number of a program to be edited and move the cursor to the
position where the machine position along each axis is to be
registered (inserted).

4 Key in address X .

5 Press the INSERT  key.  Then a machine position along the X axis is

stored in memory.

(Example) X10.521 Absolute positon (for mm input)
X10521 Data stored in memory

6 Similarly, key in Y , then press the INSERT  key.  Then a machine

position along the Y axis is stored in memory.  Further, key in Z ,

then press the INSERT  key.  Then a machine position along the Z axis is

stored in memory.

All coordinates stored using this method are absolute coordinates.

O1234 ;
N1 G92 X10000 Y0 Z10000 ;
N2 G00 G90 X3025 Y23723 ;
N3 G01 Z–325 F300 ;
N4 M02 ;

X

Z

Y

P0

(10.0, 0, 10.0)

P1

P2

(3.025, 23.723, 10.0)

(3.025, 23.723, –0.325)

  

10.3
CREATING
PROGRAMS IN
TEACH IN MODE
(PLAYBACK)

*��������

Examples



OPERATION10. CREATING PROGRAMS B–64124EN/01

628

1 Set the setting data SEQUENCE NO. to 1 (on).  (The incremental value
parameter (No. 3216) is assumed to be “1”.)

2 Select the TEACH IN HANDLE mode.

3 Make positioning at position P0 by the manual pulse generator.

4 Select the program screen.

5 Enter program number O1234 as follows:

O 1 2 3 4 INSERT

This operation registers program number O1234 in memory.
Next, press the following keys:

EOB  INSERT  

An EOB (;) is entered after program number O1234.  Because no
number is specified after N, sequence numbers are automatically
inserted for N0 and the first block (N1) is registered in memory.

6 Enter the P0 machine position for data of the first block as follows:

G 9 2 INSERT X INSERT Y INSERT Z

INSERT EOB INSERT

This operation registers G92X10000Y0Z10000; in memory.  The
automatic sequence number insertion function registers N2 of the
second block in memory.

7 Position the tool at P1 with the manual pulse generator.

8 Enter the P1 machine position for data of the second block as follows:

G 0 0 INSERT G 9 0 X INSERT Y

INSERT EOB INSERT

This operation registers G00G90X3025Z23723; in memory.  The
automatic sequence number insertion function registers N3 of the third
block in memory.

9 Position the tool at P2 with the manual pulse generator.

10 Enter the P2 machine position for data of the third block as follows:

G 0 1 INSERT Z INSERT F 3 0 0

INSERT EOB INSERT

This operation registers G01Z –325F300; in memory.  
The automatic sequence number insertion function registers N4 of the
fourth block in memory.

11 Register M02; in memory as follows:

M 0 2 INSERT EOB INSERT

N5 indicating the fifth block is stored in memory using the automatic

sequence number insertion function.  Press the DELETE  key to delete it.

This completes the registration of the sample program.



OPERATIONB–64124EN/01 10. CREATING PROGRAMS

629

The contents of memory can be checked in the TEACH IN mode by using
the same procedure as in EDIT mode.

PROGRAM O1234  N00004

(RELATIVE) (ABSOLUTE)
X       –6.975 X        3.025
Y       23.723 Y      23.723
Z     –10.325 Z      –0.325

O1234  ;
N1 G92 X10000 Y0 Z10000  ;
N2 G00 G90 X3025 Y23723  ;
N3 G01 Z–325 F300  ;
N4 M02 
%

THND * * * *     * * *    * * * 14 : 17 : 27

LIB (OPRT)

;

_

PRGRM

When a value is keyed in after keying in address X , Y , or Z ,

then the INSERT  key is pressed, the value keyed in for a machine position

is added for registration.  This operation is useful to correct a machine
position by key–in operation.

Commands to be entered before and after a machine position must be
entered before and after the machine position is registered, by using the
same operation as program editing in EDIT mode.

Explanations

� Checking contents of the
memory

� Registering a position
with compensation

� Registering commands
other than position
commands



OPERATION10. CREATING PROGRAMS B–64124EN/01

630

Programs can be created block after block on the conversational screen
while displaying the G code menu.
Blocks in a program can be modified, inserted, or deleted using the G code
menu and conversational screen.

Procedure for Conversational Programming with Graphic Function

1 Enter the EDIT mode.

2 Press PROG .  If no program is registered, the following screen is

displayed.  If a program is registered, the program currently selected
is displayed.

PROGRAM O0000  N0000

EDIT * * * *     * * *    * * * 11 : 59 : 46

DIR C.A.P (OPRT)

_

PRGRM

3 Key in the program number of a program to be registered after keying

in address O, then press INSERT . For example, when a program with

program number 10 is to be registered, key in O 1 0 , then

press INSERT .  This registers a new program O0010.

10.4
CONVERSATIONAL
PROGRAMMING
WITH GRAPHIC
FUNCTION

Procedure 1
Creating a program



OPERATIONB–64124EN/01 10. CREATING PROGRAMS

631

4 Press the [C.A.P] soft key. The following G code menu is displayed
on the screen.
If soft keys different from those shown in step 2 are displayed, press
the menu return key  to display the correct soft keys.

PROGRAM O1234  N00004
G00 : POSITIONING
G01 : LINEAR IPL
G02 : CIRCULAR IPL. CW
G03 : CIRCULAR IPL. CCW
G04 : DWELL
G09 : EXACT STOP CHECK
G10 : OFFSET&TLC VALUE SETTING (0)
G17 : XY PLANE
G18 : ZX PLANE
G19 : YZ PLANE
G20 : INCH
G21 : METRIC

_
EDIT * * * *     * * *    * * * 14 : 26 : 15

BLOCKG.MENUPRGRM

5 Key in the G code corresponding to a function to be programmed.
When the positioning function is desired, for example, the G code
menu lists the function with the G code G00.  So key in G00.  If the
screen does not indicate a function to be programmed, press the page

key 
PAGE

 to display the next G code menu screen.  Repeat this

operation until a desired function appears.  If a desired function is not
a G code, key in no data.

6 Press the soft key [BLOCK] to display a detailed screen for a keyed in
G code.  The figure below shows an example of detailed screen for
G00.

* * * *     * * *    * * *

PROGRAM
G00  :  POSITIONING

O1234  N00000

G00 G G G
X 100. Y 50.0
Z (X, Y, Z, )
H OFFSET NO.
M
S
T
B
 :

EDIT 14 : 32 : 57

(OPRT)PRGRM G.MENU BLOCK



OPERATION10. CREATING PROGRAMS B–64124EN/01

632

When no keys are pressed, the standard details screen is displayed.

* * * *     * * *    * * *

O0010  N00000PROGRAM

G G G G
X Y
Z
H F
R M
S T
B  I
J K
P Q
L
 :

EDIT 14 : 41 : 10

(OPRT)PRGRM G.MENU BLOCK

7 Move the cursor to the block to be modified on the program screen.
At this time, a data address with the cursor blinks.

8 Enter numeric data by pressing the numeric keys and press the

[INPUT] soft key or INPUT  key.  This completes the input of one data

item.

9 Repeat this operation until all data required for the entered G code is
entered.

10 Press the INSERT  key.  This completes the registration of data of one

block in program memory.  On the screen, the G code menu screen is
displayed, allowing the user to enter data for another block.  Repeat
the procedure starting with 5 as required.

11 After registering all programs, press the [PRGRM] soft key.  The
registered programs are converted to the converssational format and
displayed.

12 Press the RESET  key to return to the program head.

1 Move the cursor to the block to be modified on the program screen
and press the [C.A.P] soft key.  Or, press the [C.A.P] soft key first to

display the conversational screen, then press the 
PAGE

 or 
PAGE

 page

key until the block to be modified is displayed.

2 When data other than a G code is to be altered, just move the cursor to
the data and key in a desired value, then press the [INPUT] soft key or

INPUT  key.

3 When a G code is to be altered, press the menu return key  and the
soft key [G.MENU].  Then the G code menu appears.  Select a desired
G code, then key in the value.  For example, to specify a cutting feed,
since the G code menu indicates G01, key in G01.  Then press the soft
key [BLOCK].  The detailed screen of the G code is displayed, so enter
the data.

Procedure &
.����!��" a block



OPERATIONB–64124EN/01 10. CREATING PROGRAMS

633

4 After data is changed completely, press the ALTER  key.  This operation

replaces an entire block of a program.

1 On the conversational screen, display the block immediately before a
new block is to be inserted, by using the page keys.  On the program
screen, move the cursor with the page keys and cursor keys to
immediately before the point where a new block is to be inserted.

2 Press the soft key [G.MENU] to display the G code menu.  Then enter
new block data.

3 When input of one block of data is completed in step 2, press the INSERT

key.  This operation inserts a block of data.

1 On the conversational screen, display the contents of a block to be

deleted, then press the DELETE  key.

2 The contents of the block displayed are deleted from program
memory.  Then the contents of the next block are displayed on the
conversational screen.

Procedure (
Inserting a block

Procedure +
Deleting a block



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

634

11 SETTING AND DISPLAYING DATA
To operate a CNC machine tool, various data must be set on the MDI panel
for the CNC.  The operator can monitor the state of operation with data
displayed during operation.
This chapter describes how to display and set data for each function.

The screen transition for when each function key on the MDI panel is
pressed is shown below.  The subsections referenced for each screen are
also shown.  See the appropriate subsection for details of each screen and
the setting procedure on the screen.  See other chapters for screens not
described in this chapter.

See Chapter 7 for the screen that appears when function key MESSAGE  is

pressed.  See Chapter 12 for the screen that appears when function key

GRAPH
CUSTOM  is pressed.  See Chapter 13 for the screen that appears when function

key HELP  is pressed.  Refer to the manual issued by the machine tool

builder for the screen that appears when function key GRAPHCUSTOM  is pressed.

The  machine may have a data protection key to protect part programs,
tool compensation values, setting data, and custom macro variables.
Refer to the manual issued by the machine tool builder for where the data
protection key is located and how to use it.

General

Explanations

MESSAGE

PROG

SYSTEM

OFFSET
SETTINGPOSHELP

⋅Screen transition chart

MDI function keys
(Shaded keys (       ) are described
in this chapter.)

GRAPH
CUSTOM

� �
�
 ���������� %�!



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

635

POS

�����	 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F POSPOSITION DISPLAY SCREEN

Current position screen

8��'
'�	 %'�&��F ��

1��� ����%'	�
�

�F�
�+

⇒ ��� :::;�������

?'�&��F �� &��


��(	
 �	% �(	


'+�

⇒ ��� :::;�����6�

?'�&��F �� ��
(��

�&��%

⇒ ��� :::;�����5�

8��'
'�	 %'�&��F�

����
'3� ����%'	�
�

�F�
�+

⇒ ��� :::;�������

��
�� &��'
'�	 %'�&��F

�� ���) ����%'	�
�

�F�
�+

⇒ ��� :::;�������

��	(�� )�	%��

'	
���(&
'�	

⇒��� :::;>�7�

ABS REL ALL HNDL (OPRT)

?'�&��F �� �&��N

�
'	* +�	'
��

⇒��� :::;�����7�

MONI (OPRT)

?'�&��F �� &��


��(	
 �	% �(	


'+�

⇒ ��� :::;�����6�

?'�&��F �� &��


��(	
 �	% �(	


'+�

⇒ ��� :::;�����6�

Current position screen

?'�&��F �� ��
(��

�&��%

⇒ ��� :::;�����5�

?'�&��F �� ��
(��

�&��%

⇒ ��� :::;�����5�

��

'	* �� ����
'3�

����%'	�
� 3��(��

⇒ ��� :::;�������

��

'	* �� ����
'3�

����%'	�
� 3��(��

⇒ ��� :::;�������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

636

Program screen

?'�&��F �� &��N

*��+ ��	
�	
�

⇒��� :::;�������

?'�&��F �� �(���	


����� �	% +�%��

%�
�

⇒��� :::;�������

PRGRM CHECK CURRNT NEXT (OPRT)

PROG

�����	 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� �$�D � �� �?: +�%�

PROGPROGRAM SCREEN

MDI
MEM

?'�&��F �� �(���	


����� �	% 	�E


�����

⇒��� :::;�������

8��*��+ ��'	* �E��(
�%

�����(
� ����%'	�
� 3��(�

?'�
�	�� 
� *�

��%�� 3��(��

⇒��� :::;�����>�

8��*��+ ��'	* �E��(
�%

 ���
'3� ����%'	�
� 3��(�

?'�
�	�� 
� *�

��%�� 3��(��

⇒��� :::;�����>�

?'�&��F �� &��N

*��+ 	(+��� �	%

��/(�	�� 	(+���

⇒��� :::;���6���

H���I H $GI

��++�	%

��� �?: �&���
'�	

⇒��� :::;�����5�

(Displayed in the
MDI mode)

[MDI]  *

*:  Displayed in MDI mode

MDI *

1/2

1*
To next page

1*
To next page



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

637

RSTR DIR (OPRT)

MDI
MEM

8��*��+ ���
��


�����	

⇒��� :::;>�>�

H��A?CGIHPRGRMI

?'�&��F �� �'��

%'���
��F

⇒��� :::;>�5�

��

'	* ��

��)�%(��

⇒��� :::;>�5�

Program screen

H?: I

2/2

1*1*

?'�&��F �� &��*��+

+�+��F �	% &��N

*��+ %'���
��F

⇒��� :::;�������

FL.SDL (OPRT)

MEM

Program screen



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

638

8��*��+ �%'
'	*

�����	

⇒ ��� :::;=

8��*��+ +�+��F

�	% &��*��+ %'N

���
��F

⇒ ��� :::;�������

PRGRM LIB (OPRT)

PROG

EDIT

FLOPPY (OPRT)

EDIT

-'�� %'���
��F

�����	 ���

���&&F %'���

⇒ ��� :::;@�@

Program screen

PROGRAM  SCREEN
�����	 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

'	 
)� $?:� +�%�

PROG

Program screen

C.A.P.

Conversational
programming
screen
⇒��� :::;���>



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

639

���
1��� �&���
��O�

&�	�� �1'
�)

���� �(����� ���>����

Tool offset value

?'�&��F �� 
���

�����
 3��(�

⇒ ��� :::;���>���

OFFSET SETTING WORK (OPRT)

�����	 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

OFFSET

SETTING

OFFSET

SETTING
OFFSET/SETTING SCREEN

?'�&��F �� ��
N


'	* %�
�

⇒ ��� :::;���>��

��

'	* �� 
���

�����
 %�
�

⇒ ��� :::;���>���

8���+�
�� ��

'	*

⇒ ��� :::;���>���
��

'	* �� 1���

��'*'	 �����
 3��(�

⇒ ��� :::;���>�6���

'	* ��/(�	��
	(+��� ��+&��'��	

�	% �
�&

⇒ ��� :::;���>�>�

��

'	* 
)� 	(+��� �� &��
� ��/('��%

⇒ ��� :::;���>�5�

��

'	* �(	 
'+� �	%

&��
� ��(	


⇒ ��� :::;���>�5�

?'�&��F'	* ��
N


'	* 
'+�

⇒ ��� :::;���>�5�

���� ��	*
)

+���(��+�	


⇒ ��� :::;���>���

MACRO MENU OPR (OPRT)TOOLLF

8����

'	* 
��� �'�� ��(	
��

�����'	* �E��(
'	* %�
�

���� �(����� ���>����

?'�&��F'	* �E
�	%�% 
��� �'�� +�	�*�+�	
 %�
�

���� �(����� ���>����

$%'
'	* �E
�	%�% 
��� �'�� +�	�*�+�	
 %�
�

���� �(����� ���>����

?'�&��F'	* &�

��	

+�	(

���� �(����� ���>�=�

?'�&��F'	* &�

��	

%�
�

���� �(����� ���>�=�

��

'	* +����

3��'�����

���� �(����� ���>�@�

Tool offset value

?'�&��F �� 1���N

&'��� ����%'	�
�

�F�
�+

⇒ ��� :::;���>�6

?'�&��F ��

+���� 3��'�����

���� �(����� ���>�@�

?'�&��F'	* ���
1���

�&���
��O� &�	��

���� �(����� ���>����

?'�&��F'	* 
��� �'��

+�	�*�+�	
 %�
�

���� �(�����
���>����



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

640

Parameter screen

PARAM DGNOS SYSTEM (OPRT)

PITCH (OPRT)

SYSTEM

SYSTEM

SYSTEM SCREEN

PMC

?'�&��F ��

&���+�
�� �����	

⇒ ��� :::;���5��

��

'	* �� &���+�
��

⇒ ��� :::;���5��

?'�&��F ��

%'�*	��'�

�����	

⇒ ��� :::;7��

SV.PRM SP.PRM

?'�&��F �� &'
�)

����� %�
�

⇒ ��� :::;���5���

�����	 
��	�'
'�	 
�'**���% �F 
)� �(	�
'�	 ��F

Parameter screen



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

641

The table below lists the data set on each screen.

Table.11. Setting screens and data on them

No. Setting screen Contents of setting Referenceitem

1 Tool offset value Tool offset value
Tool length offset value
Cutter compensation value

III–11.4.1

Tool length measurement III–11.4.2

2 Setting data(handy) Parameter write
TV check
Punch code
Input unit (mm/inch)
I/O channel
Automatic insert of Sequence No.
Conversion of tape format (F10/11)

III–11.4.3

Sequence number comparison and stop III–11.4.4

3 Setting data (mirror image) Mirror image III–11.4.3

4 Setting data (timer) Parts required III–11.4.5

5 Macro variables Custom macro common variables
(#100 to #199)
(#500 to #999)

III–11.4.8

6 Parameter Parameter III–11.5.1

7 Pitch error Pitch error compensation data III–11.5.2

8 software operator’s panel Mode selection
Jog feed axis selection
Jog rapid traverse
Axis selection for Manual pulse generator
Multiplication for manual pulse generator
Jog feedrate
Feedrate override
Rapid traverse override
Optional block skip
Single block
Machine lock
Dry run
Protect key
Feed hold

III–11.4.10

9 Tool life data
(Tool life management)

Life count III–11.4.11

10 Tool life data
(Extended tool life man-
agement)

Life count type (cycle or minute)
Life value
Life counter
Tool number
H code
D code
New tool group
New tool number
Skipping tool
Clearing tool

III–11.4.12

11 Workpiece coordinate sys-
tem setting

Workpiece origin offset value III–11.4.6

� -�����" ������s



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

642

Press function key POS  to display the current position of the tool.

The following three screens are used to display the current position of the
tool:
⋅Position display screen for the work coordinate system.
⋅Position display screen for the relative coordinate system.
⋅Overall position display screen.
The above screens can also display the feedrate, run time, and the number
of parts.  In addition, a floating reference position can be set on these
screens.

Function key POS  can also be used to display the load on the servo motor

and spindle motor and the rotation speed of the spindle motor (operating
monitor display).

Function key POS  can also be used to display the screen for displaying

the distance moved by handle interruption.  See III– 4.8 for details on this
screen.

11.1
SCREENS
DISPLAYED BY
FUNCTION KEY
<POS>

POS



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

643

Displays the current position of the tool in the workpiece coordinate
system.  The current position changes as the tool moves.  The least input
increment is used as the unit for numeric values.  The title at the top of
the screen indicates that absolute coordinates are used.

Display procedure for the current position screen in the workpiece coordinate system

1 Press function key POS .

2 Press soft key [ABS].

MEM STRT MTN ***          09:06:35
[  ABS  ]   [  REL  ]   [  ALL  ]   [  HNDL ]   [ OPRT ]

ACTUAL POSITION(ABSOLUTE)     O1000 N00010

PART COUNT       5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000

X 123.456
Y 363.233
Z 0.000

Bits 6 and 7 of parameter 3104 (DAL, DAC) can be used to select whether
the displayed values include tool length offset and cutter compensation.

11.1.1
*������� �����
! �� ���

$��%  ������
��

-!���	

Explanations

� Display including
compensation values



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

644

Displays the current position of the tool in a relative coordinate system
based on the coordinates set by the operator.  The current position changes
as the tool moves.  The increment system is used as the unit for numeric
values.  The title at the top of the screen indicates that relative coordinates
are used.

Display procedure for the current position screen with the relative coordinate system

1 Press function key POS .

2 Press soft key [REL].

MEM STRT MTN ***          09:06:35
[  ABS  ]   [  REL  ]   [  ALL  ]   [  HNDL ]   [ OPRT ]

ACTUAL POSITION(RELATIVE)     O1000 N00010

PART COUNT       5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000

X 123.456
Y 363.233
Z  0.000

See Explanations for the procedure for setting the coordinates.

The current position of the tool in the relative coordinate system can be
reset to 0 or preset to a specified value as follows:

Procedure to set the axis coordinate to a specified value

1 Enter an axis address (such as X or Y) on the screen for the relative
coordinates.  The indication for the specified axis blinks and the soft
keys change as shown on the left.

2 ⋅ To reset the coordinate to 0, press soft key [ORGIN].  The relative
coordinate for the blinking axis is reset to 0.

⋅ To preset the coordinate to a specified value, enter the value and
press soft key [PRESET].  The relative coordinate for the blinking
axis is set to the entered value.

11.1.2
*������� �����
! �� ���

���
����  ������
��

-!���	

Explanations

� Resetting the relative
coordinates

*��������

ORIGIN

246.912
Y 913.780
Z 578.246

>X
MEM

PRESET

X



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

645

Procedure to reset all axes

1 Press soft key [(OPRT)].

2 Press soft key [ORIGIN].

3 Press soft key [ALLEXE].
The relative coordinates for all axes are reset to 0.

Bits 4 and 5 of parameter 3104 (DRL, DRC) can be used to select whether
the displayed values include tool length offset and cutter compensation.

Bit 3 of parameter 3104 (PPD) is used to specify whether the displayed
positions in the relative coordinate system are preset to the same values
as in the workpiece coordinate system when a coordinate system is set by
a G92 command or when the manual reference position return is made.

*��������

ORIGIN

EXEC

RELABS ALL (OPRT)

ALLEXE

� Display including
compensation values

� Presetting by setting a
coordinate system



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

646

Displays the following  positions on a screen :  Current positions of the
tool in the workpiece coordinate system, relative coordinate system, and
machine coordinate system, and the remaining distance.  The relative
coordinates can also be set on this screen.  See III–11.1.2 for the
procedure.

Procedure for displaying overall position display screen

1 Press function key POS .

2 Press soft key [ALL].

 (RELATIVE)
X   246.912
Y   913.780
Z  1578.246

 (ABSOLUTE)
X   123.456
Y   456.890
Z   789.123

 (MACHINE)
X     0.000
Y     0.000
Z     0.000

(DISTANCE TO GO)
X     0.000
Y     0.000
Z     0.000

MEM **** *** ***          09:06:35
[  ABS  ]    [  REL  ]    [  ALL  ]    [  HNDL ]    [ OPRT ]

ACTUAL POSITION         O1000 N00010

PART COUNT     5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000

The current positions of the tool in the following coordinate systems are
displayed at the same time:
� Current position in the relative coordinate system 

(relative coordinate)
� Current position in the work coordinate system

(absolute coordinate)
� Current position in the machine coordinate system

(machine coordinate)
� Distance to go (distance to go)

The distance remaining is displayed in the MEMORY or MDI mode.  The
distance the tool is yet to be moved in the current block is displayed.

The least command increment is used as the unit for values displayed in
the machine coordinate system.  However, the least input increment can
be used by setting bit 0 (MCN) of parameter 3104.

The total position display screen also supports the resetting of the relative
coordintes to 0 or presetting of them to specified values. See the procedure
for resetting the relative coordintes described in Subsection III–11.1.2

11.1.3
0���
�� *�������

�����
!

*��������

Explanations

�  ������
�� �����
!

� ����
��� �� "�

� .
����� �������
��

�!���	

� Resetting the relative
coordinates



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

647

A workpiece coordinate system shifted by an operation such as manual
intervention can be preset using MDI operations to a pre–shift workpiece
coordinate system.  The latter coordinate system is displaced from the
machine zero point by a workpiece zero point offset value.
A command (G92.1) can be programmed to preset a workpiece coordinate
system.  (See II–7.2.4 in the section for programming.)

Procedure for Presetting the Workpiece Coordinate System

1 Press function key POS .

2 Press soft key [(OPRT)].

3 When [WRK–CD] is not displayed, press the continuous menu
key .   

4 Press soft key [WRK–CD].

5 Press soft key [ALLAXS] to preset all axes.

6 To preset a particular axis in step 5, enter the axis name ( X , Y ,

...) and 0 , then press soft key [AXS–CD].

This function can be executed when the reset state or automatic operation
stop state is entered, regardless of the operation mode.

As with absolute coordinates, bit 3 (PPD) of parameter No. 3104 is used
to specify whether to preset relative coordinates (RELATIVE).

11.1.4
Presetting the
Workpiece Coordinate
System

*��������

2 B;�?

�GG�� ��;�?

ABS REL ALL !D8 "

Explanations

� Operation mode

� Presetting relative
coordinates



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

648

The actual feedrate on the machine (per minute) can be displayed on a
current position display screen or program check screen by setting bit 0
(DPF) of parameter 3105.

Display procedure for the actual feedrate on the current position display screen

1 Press function key POS  to display a current position display screen.

MEM STRT MTN ***          09:06:35
[  ABS  ]    [   REL  ]    [  ALL  ]    [  HNDL ]    [ OPRT ]

ACTUAL POSITION(ABSOLUTE)     O1000 N00010

PART COUNT       5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000

X 123.456
Y 363.233
Z 0.000

              Actual feedrate is displayed after ACT.F.

The actual feedrate is displayed in units of millimeter/min or inch/min
(depending on the specified least input increment) under the display of the
current position.

The actual rate is calculated by the following expression:

Fact � �
n

i�1

(fi)2�
where

n : Number of axes

fi : Cutting feed rate in the tangential direction of each axis or rapid
traverse rate

Fact :  Actual feedrate displayed

The display unit: mm/min (metric input).
inch/min (Inch input,  Two  digits below the decimal
point are displayed.)

The feedrate along the PMC axis can be omitted by setting bit 1 (PCF) of
parameter 3105.

In the case of feed per revolution and thread cutting, the actual feedrate
displayed is the feed per minute rather than feed per revolution.

11.1.5
����
� �����
��

�����
!

*��������

���
�
�����

� ����
� �����
�� �
���

� ����
� �����
�� �����
!

�� ���� ��� ����������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

649

In the case of movement of rotary axis, the speed is displayed in units of
deg/min but is displayed on the screen in units of input system at that time.
For example, when the rotary axis moves at 50 deg/min, the following is
displayed: 0.50 INCH/M

The program check screen also displays the actual feedrate.

� ����
� �����
�� �����
!

�� ���
�! 
���

� ����
� �����
�� �����
!

�� ��� ����� ������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

650

The run time, cycle time, and the number of machined parts are displayed
on the current position display screens.

Procedure for displaying run time and parts count on the current position display screen

1 Press function key POS  to display a current position display screen.

MEM STRT MTN ***          09:06:35
[  ABS  ]     [  REL  ]     [  ALL  ]     [  HNDL ]     [ OPRT ]

ACTUAL POSITION(RELATIVE)     O1000 N00010

PART COUNT       5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000

X 123.456
Y 363.233
Z 0.000

The number of machined parts (PART COUNT), run time (RUN
TIME), and cycle time (CYCLE TIME) are displayed under the
current position.

Indicates the number of machined parts.  The number is incremented each
time M02, M30, or an M code specified by parameter 6710 is executed.

Indicates the total run time during automatic operation, excluding the stop
and feed hold time.

Indicates the run time of one automatic operation, excluding the stop and
feed hold time.  This is automatically preset to 0 when a cycle start is
performed at reset state.  It is preset to 0 even when power is removed.

Details of the run time and the number of machined parts are displayed
on the setting screen.  See III–11.4.5.

The number of machined parts and run time cannot be set on current
position display screens.  They can be set by parameters No. 6711, 6751,
and 6752 or on the setting screen.

Bit 0 (PCM) of parameter 6700 is used to specify whether the number of
machined parts is incremented each time M02, M30, or an M code
specified by parameter 6710 is executed, or only each time an M code
specified by parameter 6710 is executed.

11.1.6
�����
! �� ��� #�	�


�� *
���  ����

*��������

���
�
�����

� PART COUNT

� �98 #6.

�  > ; #6.

� �����
! �� ��� �����

������

� *
�
	���� ������"

� Incrementing the number
of machined parts



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

651

The reading on the load meter can be displayed for each servo axis and
the serial spindle by setting bit 5 (OPM) of parameter 3111 to 1.  The
reading on the speedometer can also be displayed for the serial spindle.

Procedure for displaying the operating monitor

1 Press function key POS  to display a current position display screen.

2 Press the continuous–menu key .

3 Press soft key [MONI].

X :                 *  *  *  80%    S1 :                       201%

Y :  *  *  *  *  *   0%               (SPEED METER RPM)

Z :  *  *  *  *  *   0%              S1 :              *  *  *  1500

OPERATING MONITOR  O0001 N00001
 (LOAD METER)

[

MEM STRT MTN ***          09:06:35
[  MONI  ]     [          ]     [          ]     [          ]     [ (OPRT) ]

PART COUNT       5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M

The reading on the load meter can be displayed for up to four servo axes
by setting parameters 3151 to 3154.
When all these parameters are set to 0, data is displayed only to the 3rd
axis.

When serial spindles are used, the reading on the load meter and
speedometer can be displayed only for the main serial spindle.

The bar graph for the load meter shows load up to 200% (only a value is
displayed for load exceeding 200%).  The bar graph for the speedometer
shows the ratio of the current spindle speed to the maximum spindle speed
(100%).

The reading on the load meter depends on servo parameter 2086 and
spindle parameter 4127.

11.1.7
0���
���" .������

�����
!

*��������

Explanations

� �����
! �� ��� ����� 
���

� �����
! �� ��� �������


���

� 9��� �� "�
��

� Load meter



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

652

Although the speedometer normally indicates the speed of the spindle
motor, it can also be used to indicate the speed of the spindle by setting
bit 6 (OPS) of parameter 3111 to 1.
The spindle speed to be displayed during operation monitoring is
calculated from the speed of the spindle motor (see the formula below).
The spindle speed can therefore be displayed, during operation
monitoring, even when no position coder is used.  To display the correct
spindle speed, however, the maximum spindle speed for each gear
(spindle speed at each gear ratio when the spindle motor rotates at the
maximum speed) must be set in parameters No. 3741 to 3744.

The input of the clutch and gear signals for the first serial spindle is used
to determine the gear which is currently selected.  Control the input of the
CTH1A and CTH2A signals according to the gear selection, by referring
to the table below.

(Formula for calculating the spindle speed to be displayed)
Spindle speed 
displayed during =
operation monitoring

Speed of spindle motor

Maximum speed of
spindle motor

Maximum spindle 
× speed with the 

gear being used

The following table lists the correspondence between clutch and gear
selection signals CTH1A and CTH2A, used to determine the gear being
used, and parameters:

CTH1A CTH2A Parameter
Serial

spindle
spec

0 0 =No.3741 (Maximum spindle speed with gear 1) HIGH

0 1 =No.3742 (Maximum spindle speed with gear 2) MEDIUM
HIGH

1 0 =No.3743 (Maximum spindle speed with gear 3) MEDIUM
LOW

1 1 =No.3744 (Maximum spindle speed with gear 4) LOW

The speed of the spindle motor and spindle can be displayed, during
operation monitoring, only for the first serial spindle and the spindle
switching axis for the first serial spindle.  It cannot be displayed for the
second spindle.

If the value of a load meter exceeds 100%, the bar graph turns purple.

� -�����	����

�  ���� �� "�
��



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

653

This section describes the screens displayed by pressing function key

PROG  in MEMORY or MDI mode.The first four of the following screens

display the execution state for the program currently being executed in
MEMORY or MDI mode and the last screen displays the command values
for MDI operation in the MDI mode:

1. Program contents display screen
2. Current block display screen
3. Next block display screen
4. Program check screen
5. Program screen for MDI operation

Function key PROG  can also be pressed in MEMORY mode to display the

program restart screen and scheduling screen.
See III–4.4 for the program restart screen.
See III–4.5 for the scheduling screen.

11.2
SCREENS
DISPLAYED BY
FUNCTION KEY <PROG> 
(IN MEMORY MODE OR

MDI MODE)

PROG



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

654

Displays the program currently being executed in MEMORY or MDI
mode.

Procedure for displaying the program contents

1 Press function key PROG  to display the program screen.

2 Press chapter selection soft key [PRGRM].
The cursor is positioned at the block currently being executed.

O2000 ;
N100 G92 X0 Y0 Z70. ;
N110 G91 G00 Y–70. ;
N120 Z–70. ;

N140 G41 G03 X–17.5 Y17.5 R17.5 ;
N150 G01 X–25. ;
N160 G02 X27.5 Y27.5 R27.5 ;
N170 G01 X20. ;
N180 G02 X45. Y45. R45. ;

> _                               S   0  T0000
MEM STRT    ***        16:05:59
[ PRGRM ]  [ CHECK ]  [ CURRNT ]  [ NEXT ]  [ (OPRT) ]

PROGRAM              O2000 N00130

N130 G42 G39 I–17.5 ;

11.2.1
*��"�
	  �������

�����
!



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

655

Displays the block currently being executed and modal data in the
MEMORY or MDI mode.

Procedure for displaying the current block display screen

1 Press function key PROG .

2 Press chapter selection soft key [CURRNT].
The block currently being executed and modal data are displayed.
The screen displays up to 22 modal G codes and up to 11 G codes
specified in the current block.

  (CURRNT)     (MODAL)

G01 X 17.500 G67 G01 F 2000
G17 F 2000 G54 G17
G41 H 2 G64 G91
G80 G69 G22

G15 G94
G40 .1 G21  H  2  D
G25 G41

G49   T
G80
G98   S
G50

 
> _                               S   0  T0000
MEM STRT    ***       16:05:59
[ PRGRM ] [ CHECK ] [ CURRNT ] [ NEXT ] [ (OPRT) ]

PROGRAM              O2000 N00130

11.2.2
 ������ =���% �����
!

-�����

*��������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

656

Displays the block currently being executed and the block to be executed
next in the MEMORY or MDI mode.

Procedure for displaying the next block display screen

1 Press function key PROG .

2 Press chapter selection soft key [NEXT].
The block currently being executed and the block to be executed next
are displayed.
The screen displays up to 11 G codes specified in the current block
and up to 11 G codes specified in the next block.

G01 X 17.500 G39 I –17.500
G17 F    2000 G42
G41 H   2
G80

  (CURRNT)     (NEXT)

> _                               S   0  T0000
MEM STRT    *** 16:05:59
[ PRGRM ][ CHECK ][ CURRNT ][ NEXT ][ (OPRT) ]

PROGRAM              O2000 N00130

11.2.3
8��� =���% �����
!

-�����

*��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

657

Displays the program currently being executed, current position of the
tool, and modal data in the MEMORY mode.

Procedure for displaying the program check screen

1 Press function key PROG .

2 Press chapter selection soft key [CHECK].
The program currently being executed, current position of the tool,
and modal data are displayed.

O0010 ;
G92 G90 X100. Y200. Z50. ;
G00 X0 Y0 Z0 ;
G01 Z250. F1000 ;
(ABSOLUTE)(DIST TO GO) G00  G94
G80

X    0.000 X    0.000  G17  G21  G98
Y    0.000 Y    0.000  G90  G40  G50
Z    0.000 Z    0.000  G22  G49  G67

B
H M

T D
F S

> _                               S   0  T0000
MEM STRT    ***        16:05:59
[ PRGRM ][ CHECK ][ CURRNT ][ NEXT ][ (OPRT) ]

PROGRAM              O2000 N00130

The screen displays up to four blocks of the current program, starting from
the block currently being executed.  The block currently being executed
is displayed in reverse video.  During DNC operation, however, only three
blocks can be displayed.

The position in the workpiece coordinate system or relative coordinate
system and the remaining distance are displayed.  The absolute positions
and relative positions are switched by soft keys [ABS] and [REL].

Up to 12 modal G codes are displayed.

During automatic operation, the actual speed, SACT, and repeat count are
displayed.  The key input prompt (>_) is displayed otherwise.

Then bit 2 (PCT) of parameter No. 3108 is set to 1, the T codes specified
with the PMC (HD.T/NX.T) are displayed instead of those specified in
the program.  Refer to the FANUC PMC Programming Manual
(B–61863E) for details of HD.T/NX.T.

11.2.4
*��"�
	  ���% -�����

*��������

Explanations

� *��"�
	 �����
!

�  ������ �������� �����
!

� Modal G codes

� Display during automatic
operation

� T codes



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

658

Displays the program input from the MDI and modal data in the MDI
mode.

Procedure for displaying the program screen for MDI operation

1 Press function key PROG .

2 Press chapter selection soft key [MDI].
The program input from the MDI and modal data are displayed.

O0000 G00 X100.0 Z200.0 ;
M03 ;
G01 Z120.0 F500 ;
M98 P9010 ;
G00 Z0.0 ;
%

G00  G90  G94  G40  G80  G50  G54  G69
G17  G22  G21  G49  G98  G67  G64  G15
                                           H      M
         T                                D
         F                        S

> _                                                                 S   0  T0000
MDI **** *** ***      16:05:59
[ PRGRM ]  [ MDI ]  [ CURRNT ]  [ NEXT ]  [ (OPRT) ]

PROGRAM  (MDI)                O2000 N00130

Program

Modal information

See III–4.2 for MDI operation.

The modal data is displayed when bit 7 (MDL) of parameter 3107 is set
to 1.  Up to 16 modal G codes are displayed.

During automatic operation, the actual speed, SACT, and repeat count are
displayed.  The key input prompt (>_) is displayed otherwise.

11.2.5
*��"�
	 -����� ���

.�6 0���
����

Procedure

Explanations

� .�6 ����
����

� .��
� �����	
����

� Displaying during
automatic operation



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

659

This section describes the screens displayed by pressing function key

PROG  in the EDIT mode.  Function key PROG  in the EDIT mode can

display the program editing screen and the program list screen (displays

memory used and a list of programs).  Pressing function key PROG  in the

EDIT mode can also display the conversational graphics programming
screen and the floppy file directory screen.  See III–9 and 10 for the
program editing screen and conversational graphics programming screen.
See III–8 for the floppy file directory screen.

Displays the number of registered programs, memory used, and a list of
registered programs.

Procedure for displaying memory used and a list of programs

1 Select the EDIT mode.

2 Press function key PROG .

3 Press chapter selection soft key [DIR].

    PROGRAM (NUM.) MEMORY (CHAR.)
  USED: 60 3321

FREE:   2   429

O0010 O0001 O0003 O0002 O0555 O0999
O0062 O0004 O0005 O1111 O0969 O6666
O0021 O1234 O0588 O0020 O0040

> _                               S   0  T0000
MDI **** *** ***      16:05:59
[ PRGRM ]    [   DIR   ]   [              ]   [  C.A.P.  ]   [ (OPRT) ]

PROGRAM DIRECTORY       O0001 N00010

11.3
SCREENS
DISPLAYED BY
FUNCTION KEY <PROG>  
(IN THE EDIT MODE)

PROG

11.3.1
Displaying Memory
Used and a List 
of Programs

*��������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

660

PROGRAM NO. USED
PROGRAM NO. USED : The number of the programs registered 

(including the subprograms)
FREE : The number of programs which can be

registered additionally.

MEMORY AREA USED
MEMORY AREA USED : The capacity of the program memory in which

data is registered (indicated by the number of
characters).

FREE : The capacity of the program memory which
can be used additionally (indicated by the
number of characters).

Program Nos. of programs registered are indicated.
Program names or program sizes coupled with program update dates are
displayed.
The display toggles between the screen listing program names (Fig.
11.3.1 (a)) and the screen listing program sizes and program update dates
(Fig. 11.3.1 (b)) each time the [DIR+] soft key is clicked. 
A program update date is also changed when the corresponding program
number is changed.

    PROGRAM (NUM.) MEMORY (CHAR.)
  USED: 60 3321

FREE:   2   429

O0001 (MACRO–GCODE.MAIN)
O0002 (MACRO–GCODE.SUB1)
O0010 (TEST–PROGRAM.ARTHMETIC NO.1)
O0020 (TEST–PROGRAM.F10–MACRO)
O0040 (TEST–PROGRAM.OFFSET)
O0050
O0100 (INCH/MM CONVERT CHECK NO.1)
O0200 (MACRO–MCODE.MAIN)

> _
EDIT **** *** ***     16:05:59
[ PRGRM ]   [    DIR+    ]   [            ]   [            ]   [  (OPRT)  ]

PROGRAM DIRECTORY       O0001 N00010

Fig. 11.3.1 (a)

Explanations

� Details of memory used

� *��"�
	 ����
�! ����



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

661

    PROGRAM (NUM.) MEMORY (CHAR.)
  USED: 60 3321

FREE:   2   429

O0001 360 1996–06–12 14:40
O0002 240 1996–06–12 14:55
O0010 420 1996–07–01 11:02
O0020 180 1996–08–14 09:40
O0040 1,140 1996–03–25 18:40
O0050 60 1996–08–26 16:40
O0100 120 1996–04–03 13:11

> _
EDIT **** *** ***     16:05:59
[ PRGRM ]   [    DIR+    ]   [            ]   [           ]   [  (OPRT)  ]

PROGRAM DIRECTORY       O0001 N00010

Fig. 11.3.1 (b)

Always enter a program name between the control out and control in
codes immediately after the program number.  
Up to 31 characters can be used for naming a program within the
parentheses.  If 31 characters are exceeded, the exceeded characters are
not displayed. 
Only program number is displayed for the program without any program
name. 

(∆∆∆∆…∆)� ;

8��*��+ 	(+��� 8��*��+ 	�+� !(& 
� �� �)����
���"

����

Software series of the system is displayed.
It is used for maintenance ; user is not required this information.

Programs are displayed in the same order that they are registered in the
program library list.  However, if bit 4 (SOR) of parameter 3107 is set to
1, programs are displayed in the order of program number starting from
the smallest one.

When no program has been deleted from the list, each program is
registered at the end of the list.
If some programs in the list were deleted, then a new program is
registered, the new program is inserted in  the empty location in the list
created by the deleted programs.

Example)  When bit 4 (SOR) of parameter 3107 is 0

1. After clearing all programs, register programs O0001, O0002, O0003,
O0004, and O0005 in this order.  The program library list displays the
programs in the following order:
O0001, O0002, O0003, O0004, O0005

2. Delete O0002 and O0004.  The program library list displays the
programs in the following order:
O0001, O0003, O0005

3. Register O0009.  The program library list displays the programs in the
following order:
O0001, O0009, O0003, O0005

� *��"�
	 �
	�

� -���3
�� ������

� Order in which programs
are displayed in the
program library list

� Order in which programs
are registered



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

662

In addition to the normal listing of the numbers and names of CNC
programs stored in memory, programs can be listed in units of groups,
according to the product to be machined, for example.

To assign CNC programs to the same group, assign names to  those
programs, beginning each name with the same character string.

By searching through the program names for a specified character string,
the program numbers and names of all the programs having names
including that string are listed.
To enable this function, bit 1 (GPL) of parameter No. 3106 must be set
to 1.

Procedure for Displaying a Program List for a Specified Group

1 Enter EDIT or background editing mode.

2 Press the PROG  function key.

3 Press the PROG  function key or [DIR] soft key to display the program

list.

    PROGRAM (NUM.) MEMORY (CHAR.)
  USED: 60 3321

FREE:   2   429

O0020 (GEAR–1000 MAIN)
O0040 (GEAR–1000 SUB–1)
O0060 (SHAFT–2000 MAIN)
O0100 (SHAFT–2000 SUB–1)
O0200 (GEAR–1000 SUB–2)
O1000 (FRANGE–3000 MAIN)
O2000 (GEAR–1000 SUB–3)
O3000 (SHAFT–2000 SUB–2)

> _
EDIT  **** *** *** ***      16:52:13
[ PRGRM ]   [    DIR+    ]   [            ]  [           ]   [  (OPRT)  ]

PROGRAM DIRECTORY       O0001 N00010

4 Press the [(OPRT)] operation soft key.

5 Press the [GROUP] operation soft key.

6 Press the [NAME] operation soft key.

7 Enter the character string corresponding to the group for which a
search is to be made, using the MDI keys.  No restrictions are imposed
on the length of a program name.  Note, however, that search is made
based on only the first 32 characters.

Example: To search for those CNC programs having names that
begin with character string “GEAR–1000,” enter the
following:
>GEAR–1000*_

11.3.2
Displaying a Program
List for a Specified
Group

*��������

BG–EDT O–SRH GROUP

(NAME) PR–GRP



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

663

8 Pressing the [EXEC] operation soft key displays the group–unit
program list screen, listing all those programs whose name includes
the specified character string.

    PROGRAM (NUM.) MEMORY (CHAR.)
  USED: 60 3321

FREE:   2   429

O0020 (GEAR–1000 MAIN)
O0040 (GEAR–1000 SUB–1)
O0200 (GEAR–1000 SUB–2)
O2000 (GEAR–1000 SUB–3)

> _
EDIT **** *** *** ***      16:52:25
[ PRGRM ]   [    DIR    ]   [             ]  [            ]   [  (OPRT)  ]

PROGRAM DIRECTORY (GROUP) O0001 N00010

[Group–unit program list screen displayed 
when a search is made for “GEAR–1000*”]

When the program list consists of two or more pages, the pages can be
changed by using a page key.

In the above example, the asterisk (*) must not be omitted.  The asterisk
indicates an arbitrary character string (wild card specification).

“GEAR–1000*” indicates that the first nine characters of the target
program names must be “GEAR–1000,” followed by an arbitrary
character string.  If only “GEAR–1000” is entered, a search is made only
for those CNC programs having the nine–character name “GEAR–1000.”

A question mark (?) can be used to specify a single arbitrary character.
For example, entering “????–1000” enables a search to be made for
programs having names which start with four arbitrary characters,
followed by “–1000”.

EXEC

Explanations

� * and ?



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

664

[Example of using wild cards]
(Entered character string) (Group for which the search will be made)
(a) “*” CNC programs having any name
(b) “*ABC” CNC programs having names which end

with “ABC”
(c) “ABC*” CNC programs having names which start

with “ABC”
(d) “*ABC*” CNC programs having names which

include “ABC”
(e) “?A?C” CNC programs having four–character

names, the second and fourth characters
of which are A and C, respectively

(f) “??A?C” CNC programs having five–character
names, the third and fifth characters of
which are A and C, respectively

(g) “123*456” CNC programs having names which start
with “123” and which end with “456”

If no program is located as a result of a search for an entered character
string, warning message “DATA NOT FOUND” is displayed on the
program list screen.

A group–unit program list, generated by a search, is held until the power
is turned off or until another search is performed.

After changing the screen from the group–unit program list to another
screen, pressing the [PR–GRP] operation soft key (displayed in step 6)
redisplays the group–unit program list screen, on which the program
names for the previously searched group are listed.  Using this soft key
eliminates the need to enter the relevant character string again to redisplay
the search results after changing the screen.

Assume that the main programs and subprograms for machining gear part
number 1000 all have names which include character string
“GEAR–1000.”  The numbers and names of those programs can be listed
by searching through the names of all CNC programs for character string
“GEAR–1000.”  This function facilitates the management of the CNC
programs stored in large–capacity memory.

� When the specified
character string cannot
be found

� Holding the group for
which a search is made

� Group for which
previous search was
made

Examples



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

665

Press function key OFFSETSETTING  to display or set tool compensation values and

other data.
This section describes how to display or set the following data:

1. Tool offset value
2. Settings
3. Run time and part count
4. Workpiece origin offset value
5. Custom macro common variables
6. Pattern menu and pattern data
7. Software operator’s panel
8. Tool life management data

This section also describes measurement of tool length and the sequence
number comparison and stop function.
The pattern menu, pattern data, software operator’s panel, and tool life
management data depend on the specifications of the machine tool
builder.  See the manual issued by the machine tool builder for details.

11.4
SCREENS
DISPLAYED BY 
FUNCTION KEY
 <OFFSET SETTING>

OFFSET
SETTING



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

666

Tool offset values, tool length offset values, and cutter compensation
values are specified by D codes or H codes in a program.  Compensation
values corresponding to D codes or H codes are displayed or set on the
screen.

Procedure for setting and displaying the tool offset value

1 Press function key OFFSETSETTING .

2 Press chapter selection soft key [OFFSET] or press OFFSETSETTING  several

times until the tool compensation screen is displayed.

OFFSET                                O0001 N00000
NO.    GEOM(H)    WEAR(H)    GEOM(D)    WEAR(D)
001      10.000      0.000      0.000      0.000

   002      –1.000      0.000      0.000      0.000
   003        0.000      0.000      0.000      0.000
   004      20.000      0.000      0.000     0.000
   005        0.000      0.000      0.000      0.000
   006        0.000      0.000      0.000      0.000
   007        0.000      0.000     0.000      0.000
   008        0.000      0.000      0.000      0.000
ACTUAL POSITION (RELATIVE)
      X     0.000           Y          0.000
      Z     0.000

> _
MDI **** *** ***      16:05:59
[ OFFSET ]  [ SETING ]  [ WORK ]  [              ]  [ (OPRT) ]

3 Move the cursor to the compensation value to be set or changed using
page keys and cursor keys, or enter the compensation number for the
compensation value to be set or changed and press soft key
[NO.SRH].

4 To set a compensation value, enter a value and press soft key [INPUT].
To change the compensation value, enter a value to add to the current
value (a negative value to reduce the current value) and press soft key
[+INPUT].  Or, enter a new value and press soft key [INPUT].

A decimal point can be used when entering a compensation value.

An external input/output device can be used to input or output a tool offset
value.  See III–8.  A tool length offset value can be set by measuring the
tool length as described in the next subsection.

11.4.1
-�����" 
�� �����
!��"

��� #��� 0����� ?
���

*��������

Explanations

� ����	
� ����� �����

� 0���� ������" 	�����



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

667

Compensation data items are classified by D code or H code and by
geometry or wear.

The entry of compensation values may be disabled by setting bit 0 (WOF)
and bit 1 (GOF) of parameter 3290.
And then, the input of tool compensation values from the MDI can be
inhibited for a specified range of offset numbers.  The first offset number
for which the input of a value is inhibited is set in parameter No. 3294.
The number of offset numbers, starting from the specified first number,
for which the input of a value is inhibited is set in parameter No. 3295.
Consecutive input values are set as follows:

1) When values are input for offset numbers, starting  from one for which
input is not inhibited to one for which input is inhibited, a warning is
issued and values are set only for those offset numbers for which input
is not inhibited.

2) When values are input for offset numbers, starting from one for which
input is inhibited to one for which input is not inhibited, a warning is
issued and no values are set.

� #��� ������ 	�	��!

� Disabling entry of
compensation values



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

668

The length of the tool can be measured and registered as the tool length
offset value by moving the reference tool and the tool to be measured until
they touch the specified position on the machine.  
The tool length can be measured along the X–, Y–, or Z–axis.

Procedure for tool length measurement

1 Use manual operation to move the reference tool until it touches the
specified position on the machine (or workpiece.)

2 Press function key POS  several times until the current position

display screen with relative coordinates is displayed.

MEM STRT MTN ***          09:06:35
[  ABS  ]   [  REL  ]   [  ALL  ]   [  HNDL ]   [ OPRT ]

ACTUAL POSITION(RELATIVE)     O1000 N00010

PART COUNT       5
RUN TIME    0H15M CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000

X 123.456
Y 363.233
Z  0.000

3 Reset the relative coordinate for the Z–axis to 0 (see III–11.1.2 for
details).

4 Press function key OFFSETSETTING  several times until the tool compensation

screen is displayed.

5 Use manual operation to move the tool to be measured until it touches
the same specified position.  The difference between the length of the
reference tool and the tool to be measured is displayed in the relative
coordinates on the screen.

6 Move the cursor to the compensation number for the target tool (the
cursor can be moved in the same way as for setting tool compensation
values).

7 Press the address key Z .

If either X or Y key is depressed instead of Z key, the X or Y

axis relative coordinate value is input as an tool length compensation
value.

11.4.2
#��� ;��"��

.�
����	���

*��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

669

8 Press the soft key [INP.C.].  The Z axis relative coordinate value is
input and displayed as an tool length offset value.

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇ
ÇÇ
ÇÇ
ÇÇ

A prefixed position

Reference
tool

The difference is set as a tool
length offset value

INP.C.



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

670

Data such as the TV check flag and punch code is set on the setting data
screen.  On this screen, the operator can also enable/disable parameter
writing, enable/disable the automatic insertion of sequence numbers in
program editing, and perform settings for the sequence number
comparison and stop function.
See III–10.2 for automatic insertion of sequence numbers.
See III–11.4.4 for the sequence number comparison and stop function.
This subsection describes how to set data.

Procedure for setting the setting data

1 Select the MDI mode.

2 Press function key OFFSETSETTING .

3 Press soft key [SETING] to display the setting data screen.
This screen consists of several pages.

Press page key 
PAGE

 or 
PAGE

 until the desired screen is displayed.

An example of the setting data screen is shown below.

SETTING (HANDY)                    O0001 N00000

> _
MDI **** *** ***      16:05:59
[ OFFSET ]  [ SETING ]  [  WORK  ]   [            ]   [ (OPRT) ]

PARAMETER WRITE = 1 (0:DISABLE 1:ENABLE)

TV CHECK = 0 (0:OFF   1:ON)

PUNCH CODE = 1 (0:EIA   1:ISO)

INPUT UNIT = 0 (0:MM    1:INCH)

I/O CHANNEL = 0 (0–3:CHANNEL NO.)

SEQUENCE NO. = 0 (0:OFF   1:ON)

TAPE FORMAT = 0 (0:NO CNV  1:F15)

SEQUENCE STOP = 0 (PROGRAM NO.)

SEQUENCE STOP = 0 (SEQUENCE NO.)

SETTING (HANDY)                    O0001 N00000

> _
MDI **** *** ***      16:05:59
[ OFFSET ]  [ SETING ]   [   WORK   ]   [           ]   [ (OPRT) ]

MIRROR IMAGE X = 0 (0:OFF   1:ON)

MIRROR IMAGE Y = 0 (0:OFF   1:ON)

MIRROR IMAGE Z = 0 (0:OFF   1:ON)

11.4.3
�����
!��" 
��

������" -�����" Data

Procedure



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

671

4 Move the cursor to the item to be changed by pressing cursor keys

 ,  ,  , or .

5 Enter a new value and press soft key [INPUT].

Setting whether parameter writing is enabled or disabled.
0 :  Disabled
1 :  Enabled

Setting to perform TV check.
0 :  No TV check
1 :  Perform TV check

Setting code when data is output through reader puncher interface.
0 :  EIA code output
1 :  ISO code output

Setting a program input unit, inch or metric system
0 :  Metric
1 :  Inch

Using channel or interface of reader/puncher interface.
0 :  Channel 0
1 :  Channel 1
2 :  Channel 2
3 :  Channel 3

Setting of whether to perform automatic insertion of the sequence number
or not at program edit in the EDIT mode.
0 :  Does not perform automatic sequence number insertion.
1 :  Perform automatic sequence number insertion.

Setting the F15 tape format conversion.
0 :  Tape format is not converted.
1 :  Tape format is converted.
See II. PROGRAMMING for the F15 tape format.

Setting the sequence number with which the operation stops for the
sequence number comparison and stop function and the number of the
program to which the sequence number belongs

Setting of mirror image ON/OFF for each axes.
0 :  Mirror image off
1 :  Mirror image on

Page key 
PAGE

 or 
PAGE

 can also be pressed to display the SETTING

(TIMER) screen.  See III–11.4.5 for this screen.

Contents of settings

� PARAMETER WRITE

� TV CHECK

� PUNCH CODE

� INPUT UNIT

� I/O CHANNEL

� SEQUENCE STOP

� TAPE FORMAT

� -C98  -#0*

� MIRROR IMAGE

� Others



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

672

If a block containing a specified sequence number appears in the program
being executed, operation enters single block mode after the block is
executed.

Procedure for sequence number comparison and stop

1 Select the MDI mode.

2 Press function key OFFSETSETTING .

3 Press chapter selection soft key [SETING].

4 Press page key 
PAGE

 or 
PAGE

 several times until the following screen

is displayed.

SETTING (HANDY)                    O0001 N00000

> _
MDI **** *** ***      16:05:59
[ OFFSET ]  [ SETING ]   [  WORK  ]   [           ]   [ (OPRT) ]

PARAMETER WRITE = 1 (0:DISABLE 1:ENABLE)
TV CHECK = 0 (0:OFF   1:ON)
PUNCH CODE = 1 (0:EIA   1:ISO)
INPUT UNIT = 0 (0:MM    1:INCH)
I/O CHANNEL = 0 (0–3:CHANNEL NO.)
SEQUENCE NO. = 0 (0:OFF   1:ON)
TAPE FORMAT = 0 (0:NO CNV  1:F10/11)
SEQUENCE STOP =     0 (PROGRAM NO.)
SEQUENCE STOP =    11 (SEQUENCE NO.)

5 Enter in (PROGRAM NO.) for SEQUENCE STOP the number (1 to
9999) of the program containing the sequence number with which
operation stops.

6 Enter in (SEQUENCE NO.) for SEQUENCE STOP (with five or less
digits) the sequence number with which operation is stopped.

7 When automatic operation is executed, operation enters single block
mode at the block containing the sequence number which has been
set.

11.4.4
-�B����� 8�	���

 �	�
����� 
�� -���

*��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

673

After the specified sequence number is found during the execution of the
program, the sequence number set for sequence number compensation
and stop is decremented by one.  When the power is turned on, the setting
of the sequence number is 0.

If the predetermined sequence number is found in a block in which all
commands are those to be processed within the CNC control unit, the
execution does not stop at that block.
Example
  N1 #1=1 ;
  N2 IF [#1 EQ 1] GOTO 08 ;
  N3 GOTO 09 ;
  N4 M98 P1000 ;
  N5 M99 ;
In the example shown above, if the predetermined sequence number is
found, the execution of the program does not stop.

If the predetermined sequence number is found in a block which has a
canned–cycle command, the execution of the program stops after the
return operation is completed.

If the predetermined sequence number appears twice or more in a
program, the execution of the program stops after the block in which the
predetermined sequence number is found for the first time is executed.

If the predetermined sequence number is found in a block which is to be
executed repeatedly, the execution of the program stops after the block is
executed specified times.

Explanations

� Sequence number after
the program is executed

� Exceptional blocks

� -��� �� ��� �
���� �!���

� When the same
sequence number is
found several times in
the program

� Block to be repeated a
specified number of
times



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

674

Various run times, the total number of machined parts, number of parts
required, and number of machined parts can be displayed.  This data can
be set by parameters or on this screen (except for the total number of
machined parts and the time during which the power is on, which can be
set only by parameters).
This screen can also display the clock time.  The time can be set on the
screen.

Procedure for Displaying and Setting Run Time, Parts Count and Time 

1 Select the MDI mode.

2 Press function key OFFSETSETTING .

3 Press chapter selection soft key [SETING].

4 Press page key 
PAGE

 or 
PAGE

 several times until the following screen

is displayed.

PARTS TOTAL = 14
PARTS REQUIRED =  0
PARTS COUNT = 23

POWER ON = 4H 31M    
OPERATING TIME = 0H  0M 0S
CUTTING TIME = 0H 37M 5S
FREE PURPOSE = 0H  0M 0S
CYCLE TIME = 0H  0M 0S
           DATE = 2002/06/21    
           TIME= 11:32:52

> _
MDI **** *** ***      16:05:59
[ OFFSET ]   [  SETING ]   [   WORK   ]   [           ]  [ (OPRT) ]

SETTING (TIMER)                   O0001 N00000

5 To set the number of parts required, move the cursor to PARTS
REQUIRED and enter the number of parts to be machined.

6 To set the clock, move the cursor to DATE or TIME, enter a new date
or time, then press soft key [INPUT].

This value is incremented by one when M02, M30, or an M code specified
by parameter 6710 is executed.  This value cannot be set on this screen.
Set the value in parameter 6712.

It is used for setting the number of machined parts required.
When the “0” is set to it, there is no limitation to the number of parts.
Also, its setting can be made by the parameter (NO. 6713).

11.4.5
�����
!��" 
�� -�����"

��� #�	�/ *
���  ����/


�� #�	�

*��������

Display items

� *��#- #0#�;

� *��#- �C96��



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

675

This value is incremented by one when M02, M30, or an M code specified
by parameter 6710 is executed.  The value can also be set by parameter
6711.  In general, this value is reset when it reaches the number of parts
required.  Refer to the manual issued by the machine tool builder for
details.

Displays the total time which the power is on.  This value cannot be set
on this screen but can be preset in parameter 6750.

Indicates the total run time during automatic operation,  excluding the
stop and feed hold time.
This value can be preset in parameter 6751 or 6752.

Displays the total time taken by cutting that involves cutting feed such as
linear interpolation (G01) and circular interpolation (G02 or G03).  This
value can be preset in parameter 6753 or 6754.

This value can be used, for example, as the total time during which coolant
flows.  Refer to the manual issued by the machine tool builder for details.

Indicates the run time of one automatic operation, excluding the stop and
feed hold time.  This is automatically preset to 0 when a cycle start is
performed at reset state.  It is preset to 0 even when power is removed.

Displays the current date and time.  The date and time can be set on this
screen.

When the command of M02 or M30 is executed, the total number of
machined parts and the number of machined parts are incremented by one.
Therefore, create the program so that M02 or M30 is executed every time
the processing of one part is completed.  Furthermore, if an M code set
to the parameter (NO. 6710) is executed,  counting is made in the similar
manner.  Also, it is possible to disable counting even if M02 or M30 is
executed (parameter PCM (No. 6700#0) is set to 1).  For details, see the
manual issued by machine tool builders.

Negative value cannot be set.  Also, the setting of “M” and “S” of run time
is valid from 0 to 59.
Negative value may not be set to the total number of machined parts.

Neither negative value nor the value exceeding the value in the following
table can be set.

Item Maximum value Item Maximum value

Year 2085 Hour 23

Month 12 Minute 59

Day 31 Second 59

� *��#-  098#

� *0$� 08

� 0*��#68� #6.

�  9##68� #6.

� �� *9�*0-

�  > ; #6.

� ��#� 
�� #6.

Limitations

� 9�
"�

Restrictions

� ��� ��	� 
�� �
�� �����

settings

� #�	� ������"�



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

676

Displays the workpiece origin offset for each workpiece coordinate
system (G54 to G59, G54.1 P1 to G54.1 P48 and G54.1 P1 to G54.1
P300) and external workpiece origin offset.  The workpiece origin offset
and external workpiece origin offset can be set on this screen.

Procedure for Displaying and Setting the Workpiece Origin Offset Value

1 Press function key OFFSETSETTING .

2 Press chapter selection soft key [WORK].
The workpiece coordinate system setting screen is displayed.

(G54)
  NO.     DATA
  00 X   0.000
 (EXT) Y   0.000

Z   0.000

  01 X  20.000
 (G54) Y  50.000

Z  30.000

  NO.     DATA
  02 X 152.580
 (G55) Y 234.000

Z 112.000

  03 X 300.000
 (G56) Y 200.000

Z 189.000

WORK COORDINATES               O0001 N00000

> _                               S   0  T0000
MDI **** *** ***      16:05:59
[ OFFSET ]  [ SETING ]  [ WORK ]  [             ]  [ (OPRT) ]

3 The screen for displaying the workpiece origin offset values consists
of two or more pages.  Display a desired page in either of the
following two ways:

� Press the page up 
PAGE

 or page down 
PAGE

 key.

� Enter the workpiece coordinate system number (0 : external
workpiece origin offset, 1 to 6:  workpiece coordinate systems G54
to G59, P1 to P48 :  workpiece coordinate systems G54.1 P1 to
G54.1 P48, P1 to P300 : workpiece coordinate systems G54.1 P1
to G54.1 P300) and press operation selection soft key [NO.SRH].

4 Turn off the data protection key to enable writing.

5 Move the cursor to the workpiece origin offset to be changed.

6 Enter a desired value by pressing numeric keys, then press soft key
[INPUT].  The entered value is specified in the the workpiece origin
offset value.  Or, by entering a desired value with numeric keys and
pressing soft key [+INPUT], the entered value can be added to the
previous offset value.

7 Repeat 5 and 6 to change other offset values.

8 Turn on the data protection key to disable writing.

11.4.6
�����
!��" 
�� -�����"

��� $��%����� 0��"��

0����� ?
���

*��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

677

This function is used to compensate for the difference between the
programmed workpiece coordinate system and the actual workpiece
coordinate system.  The measured offset for the origin of the workpiece
coordinate system can be input on the screen such that the command
values match the actual dimensions.
Selecting the new coordinate system matches the programmed coordinate
system with the actual coordinate system.

Procedure for Direct Inputting of Measured Workpiece Origin Offsets

O’

O

Origin

Previous 
offset

New offset

Surface A

Surface B

Programmed 
workpiece origin

 α

β

X

x

Y y

1 When the workpiece is shaped as shown above, position the reference
tool manually until it touches surface A of the workpiece.

2 Retract the tool without changing the Y coordinate.

3 Measure distance α between surface A and the programmed origin of
the workpiece coordinate system as shown above.

4 Press function key OFFSETSETTING .

11.4.7
Direct Input of
Measured Workpiece
Origin Offsets

*��������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

678

5 To display the workpiece origin offset setting screen, press the
chapter selection soft key [WORK].

   NO.      DATA         NO.       DATA
   00 X 0.000 02 X 0.000
  (EXT) Y 0.000 (G55) Y 0.000
    Z 0.000 Z 0.000
   

   01 X 0.000 03 X 0.000
  (G54) Y 0.000 (G56) Y 0.000
    Z 0.000 Z 0.000

WORK COORDINATES                O1234 N56789
(G54)

> Z100.                              S   0  T0000
MDI **** *** ***      16:05:59
[ NO.SRH ]  [ MEASUR ]   [            ]  [ +INPUT ]  [ INPUT ]

6 Position the cursor to the workpiece origin offset value to be set.

7 Press the address key for the axis along which the offset is to be set
(Y–axis in this example).

8 Enter the measured value (α) then press the [MEASUR] soft key.

9 Move the reference tool manually until it touches surface B of the
workpiece.

10 Retract the tool without changing the X coordinate.

11 Measure distance β then enter the distance at X on the screen in the
same way as in steps 7 and 8.

Offsets for two or more axes cannot be input at the same time.

This function cannot be used while a program is being executed.

Limitations

� Consecutive input

� During program
execution



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

679

Displays common variables (#100 to #199 and #500 to #999) on the
screen.  When the absolute value for a common variable exceeds
99999999, ******** is displayed.  The values for variables can be set on
this screen.  Relative coordinates can also be set to valiables.

Procedure for displaying and setting custom macro common variables

1 Press function key OFFSETSETTING .

2 Press the continuous menu key  , then press chapter selection
soft key [MACRO].The following screen is displayed:

   NO.      DATA         NO.       DATA
   100 1000.000 108 0.000
   101 0.000 109 40000.000
   102 –50000.000 110 153020.00
   103 0.000 111 0001.000
   104 1238501.0 112 0.000
   105 0.000 113 20000.000
   106 0.000 114 0.000
   107 0.000 115 0.000
  ACTUAL POSITION (RELATIVE)
      X 0.000    Y 0.000
      Z 0.000

VARIABLE                          O0001 N00000

> _                               S   0  T0000
MDI **** *** ***      16:05:59
[ NO.SRH ]   [          ]  [  INP.C.  ]    [          ]    [ INPUT ]

3 Move the cursor to the variable number to set using either of the
following methods:
–  Enter the variable number and press soft key [NO.SRH].
–  Move the cursor to the variable number to set by pressing page keys

PAGE
 and/or 

PAGE

 and cursor keys  ,  ,  , and/or .

4 Enter data with numeric keys and press soft key [INPUT].

5 To set a relative coordinate in a variable, press address key X ,

Y , or Z , then press soft key [INP.C.].

6 To set a blank in a variable, just press soft key [INPUT].  The value
field for the variable becomes blank.

11.4.8
�����
!��" 
�� -�����"

 ����	 .
���

 �		�� ?
��
����

*��������

Continuous menu key

MACRO



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

680

This subsection uses an example to describe how to display or set
machining menus (pattern menus) created by the machine tool builder.
Refer to the manual issued by the machine tool builder for the actual
pattern menus and pattern data.  See II. PROGRAMMING for the pattern
data entry function.

Procedure (example) for displaying the pattern data and the pattern menu

1 Press function key OFFSETSETTING .

2 Press the continuous menu key  , then press chapter selection
soft key [MENU].
The following screen (pattern menu screen) is displayed:

 1.  TAPPING
 2.  DRILLING
 3.  BORING
 4.  POCKET
 5.  BOLT HOLE
 6.  LINE ANGLE
 7.  GRID
 8.  PECK
 9.  
10.

MENU : HOLE PATTERN                  O0000 N00000

> _
MDI **** *** ***      16:05:59
[ MACRO ]  [ MENU ]  [  OPR  ]  [         ]  [ (OPRT) ]

3 Enter a pattern number and press soft key [SELECT].

In this example, press 5 , then press [SELECT].

The following screen (pattern data screen) is displayed:

NO. NAME DATA COMMENT
500 TOOL 0.000
501 STANDARD X 0.000 *BOLT HOLE
502 STANDARD Y 0.000 CIRCLE*
503 RADIUS 0.000 SET PATTERN
504 S. ANGL 0.000 DATA TO VAR.
505 HOLES NO 0.000 NO.500–505.
506 0.000
507 0.000

ACTUAL POSITION (RELATIVE)
     X      0.000          Y      0.000
     Z      0.000

VAR. : BOLT HOLE                  O0001 N00000

> _
MDI **** *** ***      16:05:59
[ OFFSET ]  [SETING]  [           ]  [          ]  [ (OPRT) ]

11.4.9
�����
!��" *
����� �
�



�� *
����� .���

*��������

Continuous menu key

MENU



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

681

4 Enter necessary pattern data and press INPUT .

5 After entering all necessary data, enter the MEMORY mode and press
the cycle start button to start machining.

HOLE PATTERN :  Menu title
An optional character string can be displayed within 12 characters.

BOLE HOLE :  Pattern name
An optional character string can be displayed within 10 characters.

The machine tool builder should program character strings of menu title
and pattern name by custom macro, and load them into the program
memory.

BOLT HOLE :  Pattern data title
An optional character string can be displayed within 12 characters.

TOOL :  Variable name
An optional character string can be displayed within 10 characters.

BOLT HOLE CIRCLE :  Comment statement
An optional character string comment can be displayed up to 12
characters/line by 8 lines.

The machine tool builder should program the character strings of variable
name and comment statement by custom macro, and load them into the
program memory.

Explanations

� ���
�
���� �� ���

�
����� 	��� ������

� ���
�
���� �� ���

�
����� �
�
 ������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

682

With this function, functions of the switches on the machine operator’s
panel can be controlled from the CRT/MDI panel.
Jog feed can be performed using numeric keys.

Procedure for displaying and setting the software operator’s panel

1 Press function key OFFSETSETTING .

2 Press the continuous menu key , then press chapter selection soft
key [OPR].

3 The screen consists of several pages.

Press page key 
PAGE

 or 
PAGE

 until the desired screen is displayed.

OPERATOR’S PANEL                O0000 N00000

 MODE :  MDI    MEM      EDIT    HNDL    JOG    REF

 STEP MULTI. :    *1         *10       *100
 RAPID OVRD. :    100%    50%     25%      F0
 JOG FEED :     2.0%
                     **************
 FEED OVRD. :  100%
                             ***
ACTUAL POSITION (ABSOLUTE)
    X     0.000        Y     0.000
    Z     0.000

>_
MDI **** *** ***      16:05:59
[ MACRO ]  [            ]  [   OPR  ]   [TOOLLF]   [ (OPRT) ]

OPERATOR’S PANEL                O0000 N00000

BLOCK SKIP : OFF �  ON
SINGLE BLOCK : � OFF  ON
MACHINE LOCK : OFF �  ON
PROTECT KEY : � PROTECT   RELEASE
FEED HOLD : � OFF

ACTUAL POSITION (ABSOLUTE)
 X     0.000        Y     0.000

    Z    0.000

                                   S   0  T0000
MDI **** *** ***      16:05:59
[ MACRO ]  [           ]  [   OPR  ]  [ TOOLLF ]   [  (OPRT)  ]

11.4.10
�����
!��" 
�� -�����"

��� -���3
��

0���
���D� *
���

*��������

Continuous menu key

MOPR



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

683

4 Move the cursor to the desired switch by pressing cursor key  or

 .

5 Push the cursor move key  or  to match the mark � to an

arbitrary position and set the desired condition.

6 On a screen where jog feed is enabled, pressing a desired arrow key,

shown below, performs jog feed.  Press the 5  key together with an

arrow key to perform jog rapid traverse.

1

8

2

4 5 6

9

The valid operations on the software operator’s panel are shown below.
Whether to use the MDI panel or machine operator’s panel for each group
of operations can be selected by parameter 7200.
Group1 : Mode selection
Group2 : Selection of jog feed axis, jog rapid traverse
Group3 : Selection of manual pulse generator feed axis, selection of

manual pulse magnification x1, x10, x100
Group4 : Jog federate, federate override, rapid traverse override
Group5 : Optional block skip, single block, machine lock, dry run
Group6 : Protect key
Group7 : Feed hold

The groups for which the machine operator’s panel is selected by
parameter 7200 are not displayed on the software operator’s panel.

When the screen indicates other than the software operator’s panel screen
and diagnostic screen, jog feed is not conducted even if the arrow key is
pushed.

The feed axis and direction corresponding to the arrow keys can be set
with parameters (Nos. 7210 to 7217).

Eight optionally definable switches are added as an extended function of
the software operator’s panel.  The name of these switches can be set by
parameters (Nos. 7220 to 7283) as character strings of max. 8 characters.
For the meanings of these switches, refer to the manual issued by machine
tool builder.

���
�
�����

� Valid operations

� Display

� Screens on which jog
feed is valid

� Jog feed and arrow keys

� �����
� �������

�3������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

684

Tool life data can be displayed to inform the operator of the current state
of tool life management.  Groups which require tool changes are also
displayed.The tool life counter for each group can be preset to an arbitrary
value.  Tool data (execution data) can be reset or cleared. To register or
modify tool life management data, a program must be created and
executed.  See Explanations in this section for details.
When bit 6 (EXT) of parameter 6801 is 1, extended tool life management
applies.  See III–11.4.12.

Procedure for display and setting the tool life management data

1 Press function key OFFSETSETTING .

2 Press the continuous menu key  to display chapter selection soft
key [TOOLLF].

3 Press softkey [TOOLLF].

4 One page displays data on two groups.  Pressing page key

 
PAGE

 or 
PAGE

 successively displays data on the following groups.  Up

to four group Nos.,  for which the Tool Change signal is being issued,
are displayed at the bottom of each page.  An arrow shown in the
figure is displayed for five or more groups, if exists.

TOOL LIFE DATA  :               O3000 N00060
                   SELECTED GROUP 000

GROUP  001 : LIFE   0150   COUNT  0000
0034 0078 0012 0056
0090 0035 0026 0061
0000 0000 0000 0000
0000 0000 0000 0000

GROUP  002 : LIFE   1400   COUNT   0000
0062 0024 0044 0074
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000

TO BE CHANGED  : 003 004 005 006 –––>
> _
MEM **** *** ***      16:05:59
[ MACRO ] [  MENU  ] [   OPR   ] [ TOOLLF  ] [ (OPRT) ]

11.4.11
�����
!��" 
�� -�����"

#��� ;��� .
�
"�	���

�
�


*��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

685

5 To display the page containing the data for a group, enter the group
number and press soft key [NO.SRH].
The cursor can be moved to an arbitrary group by pressing cursor key

 or  .

6 To change the value in the life counter for a group, move the cursor to
the group, enter a new value (four digits), and press [INPUT].  The life
counter for the group indicated by the cursor is preset to the entered
value.  Other data for the group is not changed.

7 To reset the tool data, move the cursor on the group to reset, then press
the [(OPRT)], [CLEAR], and [EXEC] soft keys in this order.
All execution data for the group indicated by the cursor is cleared
together with the marks (@, #, or *).



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

686

TOOL LIFE DATA  :            O3000 N00060
                   SELECTED GROUP 000

GROUP  001 : LIFE  0150  COUNT   0007
0034 0078 0012 0056
0090 0035 0026 0061
0000 0000 0000 0000
0000 0000 0000 0000

GROUP  002 : LIFE  1400  COUNT   0000
0062 0024 0044 0074
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000

TO BE CHANGED  : 003 004 005 006 –––>
> _
MEM **** *** ***      16:05:59
[ MACRO ] [  MENU  ] [   OPR   ] [ TOOLLF ][ (OPRT) ]

* # @

 The first line is the title line.

 In the second line the group number of the current command is
displayed.
When there is no group number of the current command, 0 is displayed.

 In lines 3 to 7 the tool life data of the group is displayed.
The third line displays group number, life and the count used.
The life count is chosen by parameter LTM (No. 6800#2) as either
minutes(or hours) or number of times used.
In lines 4 to 5, tool numbers are displayed.  In this case, the tool is
selected in the order, 0034 → 0078 → 0012 → 056 → 0090 ...
The meaning of each mark before the tool numbers is :
    * : Shows the life has finished.
    # : Shows that the skip command has been accepted.
   @ : Shows that the tool is currently being used.
The life counter counts for tool with @.
“*” is displayed when the next command is issued by the group to
which it belongs.

 Lines 8 to 12 are next group life data to the group displayed in lines 3
to 7.

 In the thirteenth line the group number when the tool change signal is
being emitted is displayed.  The group number display appears in
ascending order.  When it cannot be completely displayed, “–––>” is
displayed.

���
�
�����

� �����
! ��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

687

The extended tool life management function provides more detailed data
display and more data editing functions than the ordinary tool life
management function.
Moreover, if the tool life is specified in units of time, the time which has
been set can be increased or reduced (life count override).
When bit 6 (EXT) of parameter 6801 is set to 0, the ordinary tool life
management function applies.  See III–11.4.11.

Procedure for displaying and Setting extended tool life management

1 Press function key OFFSETSETTING .

2 Press the continuous menu key  to display chapter selection soft
key [TOOLLF].

3 Press soft key [TOOLLF] to display the tool life management data
screen.
On this screen, place the cursor on a group of items to be edited.

4 Press soft key [(OPRT)].

5 Press soft key [EDIT].
The extended tool life management data editing screen for the group
indicated by the cursor is the displayed.

LIFE DATA EDIT     GROUP : 001  O0010 N00001
 TYPE : 1 (1:C 2:M) NEXT GROUP: ***
 LIFE : 9800 USE GROUP : ***
 COUNT : 6501 SELECTED GROUP : 001

NO. STATE T–CODE H–CODE D–CODE
01 * 0034 011 005
02 # 0078 000 033
03 @ 0012 004 018
04 * 0056 000 000
05 0090 000 000
06 * 0076 023 012

> _
MDI **** *** ***      16:05:59
[ INSERT ]   [ DELETE ]   [ STATE ]   [  END  ]   [ INPUT ]

Tool life management data can be edited as follows:

6 Select the MDI mode.

7 Stop, pause, or reset the CNC by the feed hold, single block stop, or
reset operation (tool life management data cannot be edited while data
is set by a program.).
The following editing can be performed.  See each step for details:
⋅ Setting the life count type, life value, current life count, 
    and tool data (T, H, or D code) : 7–1
⋅ Adding a tool group : 7–2
⋅ Adding a tool number (T code) : 7–3

11.4.12
�����
!��" 
�� -�����"

������� #��� ;���

.
�
"�	���

Procedure

TOOLLF

Continuous menu key



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

688

⋅ Deleting a tool group : 7–4
⋅ Deleting tool data (T, H, or D code) : 7–5
⋅ Skipping a tool : 7–6
⋅ Clearing the life count 

(resetting the life) : 7–7

7–1 Setting the life count type, life value, current life count, and tool
data (T, H, or D code)

(1)Position the cursor on the data item to be changed.

(2)Enter a desired value.

(3)Press the softkey [INPUT].

7–2 Adding a tool group

(1) In step 3, select a group for which no data is set and display the
editing screen.

(2) Enter tool numbers.

(3) Press soft key [INSERT].

⋅ In this case, the type of the life counter is determined by the setting of
LTM (No. 6800#2), and 0 is set in both the life expectancy and life
counter.

⋅ 0 is set in both the H code and D code.

⋅ The cursor remains on the tool number until the T code is specified.

7–3 Adding a tool number

(1) Move the cursor to the tool data (T, H, or D code) after which a new
number is to be added.

(2) Enter the tool number.

(3) Press soft key [INSERT].

Example),Inserting tool No. 1500 between No. 1 and No. 2.

NO. STATE T–CODE H–CODE D–CODE
01 * 0034 11 5
02 # 0078 0 33

Move the cursor to 5 in D–CODE column and press soft key
[INSERT].

NO. STATE T–CODE H–CODE D–CODE
01 * 0034 11 5
02 1500 0 0
03 # 0078 0 33



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

689

7–4 Deleting a tool group

(1) In step 3, position the cusor on a group to be deleted and display the
editing screen.

(2) Press soft key [DELETE].

(3) Press soft key [GROUP].

(4) Press soft key [EXEC].

7–5 Deleting tool data (T, H, or D code)

(1) Position the cursor on the data item (T, H, or D code) to be deleted.

(2) Press soft key [DELETE].

(3) Press soft key [<CRSR>].

⋅ The line containing the cursor is deleted.

⋅ When a tool with mark @ (being used) is deleted, mark @ shifts to the
tool whose life has expired most recently or which has been skipped. 

In this case, marks * and # are displayed in reverse video. �  �

7–6 Skipping a tool

(1) Position the cursor on the data item (T, H, or D code) for the tool to
be skipped.

(2) Press soft key [STATE].

(3) Press soft key [SKIP].

7–7 Clearing the life count (resetting the life)

(1) Position the cursor on the data item (T, H, or D code) of the tool to be
cleared.

(2) Press soft key [STATE].

(3) Press soft key [CLEAR].

8 To complete the edit operation, press soft key [END].
The tool life management screen is displayed again.



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

690

LIFE DATA EDIT         GROUP  :  001  O0010 N00001
 TYPE : 1 (1:C 2:M) NEXT GROUP: ***
 LIFE : 9800 USE GROUP : ***
 COUNT : 6501 SELECTED GROUP : 001

NO. STATE T–CODE H–CODE D–CODE
01 * 0034 011 005
02 # 0078 000 033
03 @ 0012 004 018
04 * 0056 000 000
05 0090 000 000
06 * 0076 023 012

> _
MDI **** *** ***      16:05:59
[ INSERT ]  [ DELETE ]  [ STATE ]  [  END  ]   [ INPUT ]

NEXT GROUP : 
Number of the tool group whose life is to be calculated by the next M06
command
USE GROUP : 
Number of the tool group whose life is being calculated 
SELECTED GROUP :
Number of the tool group whose life is being calculated or was calculated
last
TYPE: 1: Life count is represented in units of cycles.
TYPE: 2 : Life count is represented in units of minutes.
LIFE : Life expectancy
COUNT : Life counter
STATE : State of the tool

Tool state In use Not in use

Available @ _(Space)

Skip �

Skipped �

NOTE
When bit 3 (EMD) of parameter 6801 is set to 0, @ is
displayed until the next tool is selected.

T–CODE : Tool number
H–CODE : H code
D–CODE : D code

Explanations

� Displays

#

w M (Note)�



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

691

When the extended tool life management function is provided, the
following items are added to the tool life management screen:

 NEXT:  Tool group to be used next
 USE:  Tool group in use
 Life counter type for each tool group (C:  Cycles, M:  Minutes) 

NEXT *** USE *** SELECTED GROUP: 001
GROUP 001 : C LIFE 9800 COUNT  6501

*0034 #0078 @0012 *0056
 0090 *0076

GROUP 002 : C LIFE 9800 COUNT 1001
*0011 #0022 *0201 *0144
*0155 #0066  0176  0188
 0019  0234  0007  0112
 0156  0090  0016  0232

TO BE CHANGED : 006 012 013 014 –––>

TOOL LIFE DATA                    O0001  N00001

> _                               S   0  T0000
MDI **** *** ***      16:05:59
[ NO.SRH ]  [            ]  [ CLEAR ]  [  EDIT  ]   [ INPUT ]

The tool life count can be overridden provided that the life counter is
indicated in units of minutes and LFV (bit 2 of parameter 6801) is 1.
Override values can be specified using the override switch on the
operator’s panel within the range from 0 to 99.9.  If 0 is specified, tool life
is not counted.  If the count of actual cutting time is less than 4 seconds,
the override value is invalid.

Example
When cutting is performed for 10 minutes with an override of 0.1, the tool
life counter counts one minute.

The symbol * for indicating that the life of a tool has expired can be
displayed either when the machine starts using the next tool or when the
life of the tool actually expires.  Either of these methods can be selected
using EMD (bit 3 of parameter 6801).

 Modification of the life expectancy or life counter does not affect the
tool states or tool change signal.

 When the type of the life counter is changed, be sure to change the life
expectancy and life count as well.

� Tool life management
screen

� Life count override

� Display of the mark
indicating that the life of
a tool has expired

� Influence of changes in
data



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

692

When the CNC and machine are connected, parameters must be set to
determine the specifications and functions of the machine in order to fully
utilize the characteristics of the servo motor or other parts.
This chapter describes how to set parameters on the MDI panel.
Parameters can also be set with external input/output devices such as the
Handy File (see III–8).
In addition, pitch error compensation data used for improving the
precision in positioning with the ball screw on the machine can be set or

displayed by the operations under function key SYSTEM .

See III–7 for the diagnostic screens displayed by pressing function key

SYSTEM .

11.5
SCREENS
DISPLAYED BY
FUNCTION KEY
 <SYSTEM>

SYSTEM



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

693

When the CNC and machine are connected, parameters are set to
determine the specifications and functions of the machine in order to fully
utilize the characteristics of the servo motor.  The setting of parameters
depends on the machine.  Refer to the parameter list prepared by the
machine tool builder.
Normally, the user need not change parameter setting.

Procedure for displaying and setting parameters

1 Set 1 for PARAMETER WRITE to enable writing.  See the procedure
for enabling/disabling parameter writing described below.

2 Press function key SYSTEM .

3 Press chapter selection soft key [PARAM] to display the parameter
screen.

PARAMETER (SETTING) O0010 N00002
   
   0000 SEQ INI ISO TVC
  0 0 0 0 0 0 0 0 
   0001 FCV
          0 0 0 0 0 0 0 0
   0012 MIR
  X 0 0 0 0 0 0 0 0
    Y 0 0 0 0 0 0 0 0
    Z 0 0 0 0 0 0 0 0
   0020 I/O CHANNEL                          0
  0022                                      0

> _
THND **** *** ***      16:05:59
[ PARAM ]  [ DGNOS ]  [  PMC  ]  [ SYSTEM ]  [ (OPRT) ]

4 Move the cursor to the parameter number to be set or displayed in
either of the following ways:

 Enter the parameter number and press soft key [NO.SRH] .

 Move the cursor to the parameter number using the page keys, 

PAGE
 and 

PAGE

 , and cursor keys, , , , and   .

5 To set the parameter, enter a new value with numeric keys and press
soft key [INPUT].  The parameter is set to the entered value and the
value is displayed.

6 Set 0 for PARAMETER WRITE to disable writing.

11.5.1
�����
!��" 
�� -�����"

*
�
	�����

*��������



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

694

Procedure for enabling/displaying parameter writing

1 Select the MDI mode or enter state emergency stop.

2 Press function key OFFSETSETTING .

3 Press soft key [SETING] to display the setting screen.

SETTING (HANDY)                    O0001 N00000

> _                               S   0  T0000
MDI **** *** ***      16:05:59
[ OFFSET ]  [ SETING ]  [ WORK ]  [            ]  [ (OPRT) ]

PARAMETER WRITE = 1 (0:DISABLE 1:ENABLE)
TV CHECK = 0 (0:OFF   1:ON)
PUNCH CODE = 1 (0:EIA   1:ISO)
INPUT UNIT = 0 (0:MM    1:INCH)
I/O CHANNEL = 0 (0–3:CHANNEL NO.)
SEQUENCE NO. = 0 (0:OFF   1:ON)
TAPE FORMAT = 0 (0:NO CNV  1:F10/11)
SEQUENCE STOP = 0 (PROGRAM NO.)
SEQUENCE STOP = 11(SEQUENCE NO.)

4 Move the cursor to PARAMETER WRITE using cursor keys.

5 Press soft key [(OPRT)], then press [1: ON] to enable parameter
writing.
At this time, the CNC enters the P/S alarm state (No. 100).

6 After setting parameters, return to the setting screen.  Move the cursor
to PARAMETER WRITE and press soft key [(OPRT)] , then press 
[0: OFF].

7 Depress the RESET  key to release the alarm condition.  If P/S alarm No.

000 has occurred, however, turn off the power supply and then turn it
on, otherwise the P/S alarm is not released.

See III–8 for setting parameters with external input/output devices such
as the Handy File.

Some parameters are not effective until the power is turned off and on
again after they are set.  Setting such parameters causes P/S alarm 000.
In this case, turn off the power, then turn it on again.

Refer to the FANUC Series 0i-C/0i Mate-C Parameter Manual
(B–64120EN) for the parameter list.

Some parameters can be set on the setting screen if the parameter list
indicates �Setting entry is acceptable”.  Setting 1 for PARAMETER
WRITE is not necessary when three parameters are set on the setting
screen.

Explanations
� Setting parameters with

external input/output
devices

� Parameters that require
turning off the power

� Parameter list

� -�����" �
�




OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

695

If pitch error compensation data is specified, pitch errors of each axis can
be compensated in detection unit per axis.  
Pitch error compensation data is set for each compensation point at the
intervals specified for each axis.  The origin of compensation is the
reference position to which the tool is returned.
The pitch error compensation data is set according to the characteristics
of the machine connected to the NC.  The content of this data varies
according to the  machine model.  If it is changed, the machine accuracy
is reduced.
In principle, the end user must not alter this data.
Pitch error compensation data can be set with external devices such as the
Handy File (see III–8).  Compensation data can also be written directly
with the MDI panel.
The following parameters must be set for pitch error compensation.  Set
the pitch error compensation value for each pitch error compensation
point number set by these parameters.
In the following example, 33 is set for the pitch error compensation point
at the reference position.

1

2

3

333231 34 35 36 37

–1

–2

34 35 36 3731 32 33

+3 –1 –1 +1 +2 –1 –3

Reference position

8'
�) ����� ��+&�	��
'�	 3��(� !�����(
� 3��(�"

Compensation number parameter
for the reference position (No.
3620)

Compensation number pa-
rameter for the compensa-
tion point having the largest
value (No. 3622)

Compensation magnification
parameter (No. 3623)

Compensation number parameter
for the compensation point having
the smallest value (No. 3621)

Compensation
position number

Compensation interval
parameter (No. 3624)

Compensation
value to be set

� Number of the pitch error compensation point at the reference position
(for each axis):  Parameter 3620

� Number of the pitch error compensation point having the smallest
value (for each axis):  Parameter 3621

� Number of the pitch error compensation point having the largest value
(for each axis):  Parameter 3622

� Pitch error compensation magnification (for each axis):  Parameter
3623

� Interval of the pitch error compensation points (for each axis):
Parameter 3624

� Travel distance per revolution of pitch error compensation of the
rotary axis type (for each axis):  Parameter 3625

11.5.2
�����
!��" 
�� -�����"

*���� ����

 �	����
���� �
�




OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

696

The bidirectional pitch error compensation function allows independent
pitch error compensation in different travel directions.  (When the movement
is reversed, compensation is automatically carried out as in a backlash.)

To use this function, specify pitch error compensation for each travel
direction, that is, separately for the positive and negative directions of a
movement.

When using bidirectional pitch error compensation (setting the BDP bit
(bit 0 of parameter 3605) to 1), specify the following parameters in
addition to the pitch error compensation parameter.

� Number of the pitch error compensation point at the negative end (for
travel in the positive direction, for each axis):  Parameter 3621

� Number of the pitch error compensation point at the positive end (for
travel in the positive direction, for each axis):  Parameter 3622

� Number of the pitch error compensation point at the negative end (for
travel in the negative direction, for each axis):  Parameter 3626

� Pitch error compensation at the reference position when travel is made
to the reference position from the direction opposite to the reference
position return direction (absolute value, for each axis):  Parameter
3627

Procedure for displaying and setting the pitch error compensation data

1 Set the following parameters:

� Number of the pitch error compensation point at the reference
position (for each axis):  Parameter 3620

� Number of the pitch error compensation point having the smallest
value (for each axis):  Parameter 3621

� Number of the pitch error compensation point having the largest
value (for each axis):  Parameter 3622

� Pitch error compensation magnification (for each axis):  Parameter
3623

� Interval of the pitch error compensation points (for each axis):
Parameter 3624

� Travel distance per revolution of pitch error compensation of the
rotary axis type (for each axis):  Parameter 3625

When using bidirectional pitch error compensation (setting the BDP bit
(bit 0 of parameter 3605) to 1), specify the following parameters in
addition to the pitch error compensation parameter.

� Number of the pitch error compensation point at the negative end (for
travel in the positive direction, for each axis):  Parameter 3621

� Number of the pitch error compensation point at the positive end (for
travel in the positive direction, for each axis):  Parameter 3622

� Number of the pitch error compensation point at the negative end (for
travel in the negative direction, for each axis):  Parameter 3626

Bidirectional pitch error
compensation

*��������



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

697

� Pitch error compensation at the reference position when travel is
made to the reference position from the direction opposite to the
reference position return direction (absolute value, for each axis):
Parameter 3627

2 Press function key SYSTEM .

3 Press the continuous menu key , then press chapter selection soft
key [PITCH].
The following screen is displayed:

8:�;$  D �$��:�� D���� ������

NO. DATA
0000 0
0001 0
0002 0
0003 0
0004 0
0005 0
0006 0
0007 0
0008 0
0009 0

NO. DATA
0010 0
0011 0
0012 0
0013 0
0014 0
0015 0
0016 0
0017 0
0018 0
0019 0

NO. DATA
0020 0
0021 0
0022 0
0023 0
0024 0
0025 0
0026 0
0027 0
0028 0
0029 0

(X)

> _
MEM **** *** ***      16:05:59
[ NO.SRH ]  [ ON:1 ]  [ OFF:0 ]  [ +INPUT ]  [ –INPUT ]

4 Move the cursor to the compensation point number to be set in either
of the following ways:

 Enter the compensation point number and press the [NO.SRH] soft
key.

 Move the cursor to the compensation point number using the page

keys, 
PAGE

 and 
PAGE

, and cursor keys, , , , and

.

5 Enter a value with numeric keys and press the [INPUT] soft key.

8:��A

Continuous menu key



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

698

The program number, sequence number, and current CNC status are
always displayed on the screen except when the power is turned on, a
system alarm occurs, or the PMC screen is displayed.
If data setting or the input/output operation is incorrect, the CNC does not
accept the operation and displays a warning  message.
This section describes the display of the program number, sequence
number, and status, and warning messages displayed for incorrect data
setting or input/output operation.

The program number and sequence number are displayed at the top right
on the screen as shown below.

O2000 ;
N100 G92 X0 Y0 Z70. ;
N110 G91 G00 Y–70. ;
N120 Z–70. ;
N130 G42 G39 I–17.5
N140 G41 G03 X–17.5 Y17.5 R17.5 ;
N150 G01 X–25. ;
N160 G02 X27.5 Y27.5 R27.5
N170 G01 X20. ;
N180 G02 X45. Y45. R45. ;

> _
EDIT **** *** ***        16:05:59
[ PRGRM ]  [ CHECK ]  [ CURRNT ]  [ NEXT ]  [ (OPRT) ]

PROGRAM              O2000  N00130
��/(�	��

���

8��*��+

���

The program number and sequence number displayed depend on the
screen and are given below:

On the program screen in the EDIT mode on Background edit screen :
The program No. being edited and the sequence number just prior to the
cursor are indicated.

Other than above screens :
The program No. and the sequence No. executed last are indicated.

Immediately after program number search or sequence number
search :

Immediately after the program No. search and sequence  No. search, the
program No. and the sequence No. searched are indicated.

11.6
DISPLAYING THE
PROGRAM NUMBER,
SEQUENCE
NUMBER, AND
STATUS, AND
WARNING
MESSAGES FOR
DATA SETTING OR
INPUT/OUTPUT
OPERATION

11.6.1
�����
!��" ��� *��"�
	

8�	��� 
�� -�B�����

8�	���



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

699

The current mode, automatic operation state, alarm state, and program
editing state are displayed on the next to last line on the screen allowing
the operator to readily understand the operation condition of the system.
If data setting or the input/output operation is incorrect, the CNC does not
accept the operation and a warning message is displayed on the next to last
line of the screen.  This prevents invalid data setting and input/output
errors.

EDIT STOP MTN FIN ALM hh:mm:ss INPUT

––EMG––

(8)(1) (2) (3) (4)

(5)

(6) (7)

(Display soft keys)

(9) Data is out of range.
(Note)  Actually, this is displayed in the area starting from (2).

(Note)  Actually, 5 is displayed in
the area for (3) and (4).

NOTE
Actually, !��" is displayed at the position where !@" is now
displayed.

MDI : Manual data input, MDI operation
MEM : Automatic operation (memory operation)
RMT : Automatic operation (DNC operation, or such like)
EDIT : Memory editing
HND : Manual handle feed
JOG : Jog feed
TJOG : TEACH IN JOG
THND : TEACH IN HANDLE
INC : Manual incremental feed
REF : Manual reference position return

**** : Reset (When the power is turned on or the state in which
program execution has terminated and automatic operation has
terminated.)

STOP : Automatic operation stop (The state in which one block has
been executed and automatic operation is stopped.)

HOLD : Feed hold (The state in which execution of one block has been
interrupted and automatic operation is stopped.)

STRT : Automatic operation start–up (The state in which the system
operates automatically)

MTN : Indicates that the axis is moving.
DWL : Indicates the dwell state.
*** : Indicates a state other than the above.

FIN : Indicates the state in which an auxiliary function is being
executed. (Waiting for the complete signal from the PMC)

*** : Indicates a state other than the above.

11.6.2
Displaying the Status
and Warning for Data
Setting or Input/Output
Operation

���
�
�����

Description of each display

(1)  ������ 	���

(2) ����	
��� ����
����
��
���

(3) ���� 	����"
��
���@�3��� ��
���

(4) State in which an
auxiliary function is
being executed



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

700

––EMG–– : : Indicates emergency stop.(Blinks in reversed display.)
––RESET–– : Indicates that the reset signal is being received.

ALM : Indicates that an alarm is issued.  (Blinks in reversed display.)
BAT : Indicates that the battery is low.  (Blinks in reversed display.)
Space : Indicates a state other than the above.

hh:mm:ss  –   Hours, minutes, and seconds

INPUT : Indicates that data is being input.
OUTPUT : Indicates that data is being output.
SRCH : Indicates that a search is being performed.
EDIT : Indicates that another editing operation is being performed

(insertion, modification, etc.)
LSK : Indicates that labels are skipped when data is input.
RSTR : Indicates that the program is being restarted
Space : Indicates that no editing operation is being performed.

When invalid data is entered (wrong format, value out of range, etc.),
when input is disabled (wrong mode, write disabled, etc.), or when
input/output operation is incorrect (wrong mode, etc.), a warning message
is displayed.  In this case, the CNC does not accept the setting or
input/output operation (retry the operation according to the message).
The following are examples of warning messages:

(Display sof tkeys)

Example 1)
When a parameter is entered

> 1
EDIT    WRONG MODE

(Display soft keys)

Example 2)
When a parameter is entered

> 999999999
MDI    TOO MANY DIGITS

(Display soft keys)

Example 3)
When a parameter is output to an external input/output device

> _
MEM    WRONG MODE

(5) Emergency stop or
reset status

(6) ��
�	 ��
���

(7)  ������ ��	�

(8) *��"�
	 ������" ��
���

(9) Warning for data setting
or input/output
operation



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

701

By pressing the  function key MESSAGE , data such as alarms, alarm history

data, and external messages can be displayed.
For information relating to alarm display, see Section III.7.1.  For
information relating to alarm history display, see Section III.7.2.
For information relating to external message display, see the relevant
manual supplied by the machine tool builder.

External operator messages can be preserved as history data.
Preserved history data can be displayed on the external operator message
history screen.

Procedure for external operator message history display

1 Press the MESSAGE  function key.

2 Press the continuous menu key , then press the chapter selection
soft key [MSGHIS].  The screen shown below appears.

MESSAGE HISTORY O0000 N00000
02/01/01 17:25:00 PAGE:1

NO.  ****

 MEM  STRT  MIN  FIN  ALM  09:36:48
[ ] [ MSGHIS ] [ ] [ ] [ (OPRT) ]

Date and Page number
Message nuumber

Display range
(Up to 255 characters)

NOTE
Up to 255 characters can be specified for an external
operator message.  By setting MS1 and MS0 (bits 7 and 6
of parameter No. 3113), however, the number of characters
that can be preserved as external operator message history
data can be restricted, and the number of history data items
selected.

11.7
SCREENS
DISPLAYED BY 
FUNCTION KEY 
<MESSAGE>

MESSAGE

11.7.1
External Operator
Message History
Display

*��������

MSGHIS

Continuous menu key



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

702

When an external operator message number is specified, updating of the
external operator message history data is started; this updating is
continued until a new external operator message number is specified or
deletion of the external operator message history data is specified.

To clear external operator message history data, press the [CLEAR] soft
key.  This clears all external operator message history data.  (Set MSGCR
(bit 0 of parameter No. 3113) to 1.)
Note that when MS1 and MS0 (bits 7 and 6 of parameter No. 3113), used
to specify the number of external operator message history data items to
be displayed, are changed, all existing external operator message history
data is cleared.

Explanations

� Updating external
operator message
history data

� Clearing external
operator message
history data



OPERATIONB–64124EN/01 11. SETTING AND DISPLAYING DATA

703

When screen indication isn’t necessary, the life of the back light for LCD
can be put off by turning off the back light.
The screen can be cleared by pressing specific keys.  It is also possible to
specify the automatic clearing of the screen if no keys are pressed during
a period specified with a parameter.
But, the life of the back light may be contracted all the more when the
clearing of screen and re–indication of screen are repeated beyond the
necessity.  This effect can be expected when a screen is cleared for more
than one hour.

Holding down the CAN  key and pressing an arbitrary function key clears

the screen.

Procedure for erase screen display

Hold down the CAN  key and press an arbitrary function key (such as

POS  and PROG ).

Press an arbitrary function key.

11.8
CLEARING THE 
SCREEN

11.8.1
Erase Screen Display

*��������

� Clearing the screen

� Restoring the screen



OPERATION11. SETTING AND DISPLAYING DATA B–64124EN/01

704

The CNC screen is automatically cleared if no keys are pressed during the
period (in minutes) specified with a parameter.  The screen is restored by
pressing any key.

Procedure for automatic erase screen display

The CNC screen is cleared once the period (minutes) specified with
parameter No. 3123 has elapsed, provided the following conditions are
satisfied:

Conditions for clearing the CNC screen
� Parameter No. 3123 is set to other than 0.

� None of the following keys have been pressed:
MDI keys
Soft keys
External input keys

� No alarm has been issued.

The cleared CNC screen is restored once at least one of the following
conditions is satisfied:

Conditions for restoring the CNC screen
� Any of the following keys has been pressed:

MDI keys
Soft keys
Externally input keys

� An alarm has been issued.

Some machines feature a special key for restoring the screen.  For an
explanation of the location and use of this key, refer to the corresponding
manual, supplied by the machine tool builder.

If parameter No. 3123 is set to 0, clearing of the screen using the CAN  key

and a function key (III–11.8.1) is disabled.

CAUTION
Pressing any key while the screen is being cleared restores

the screen.  In such a case, however, the function assigned

to the pressed key is initiated.  Do not press the         ,

, or  key to restore the screen, therefore.ALTERINSERT

DELET

11.8.2
Automatic Erase
Screen Display

� Clearing the screen

� Restoring the screen

Explanations

� Clearing the screen
using        + function keyCAN



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

705

12 GRAPHICS FUNCTION
Two graphic functions are available.  One is a graphic display function,
and the other is a dynamic graphic display function.

The graphic display function can draw the tool path specified by a
program being executed on a screen.  The graphic display function also
allows enlargement and reduction of the display.

The dynamic graphic display function can draw a tool path and machining
profile.
In tool path drawing, automatic scaling and solid drawing are possible.
In machining profile drawing, the status of machining in progress can be
drawn through simulation.  Blank figures can also be drawn.

The background drawing function enables drawing to be performed by
one program while machining is performed by another program.

This chapter mainly explains drawing procedures and drawing
parameters for the following:

1. Drawing the tool path specified by a program being executed, with the
graphic display function

2. Drawing the tool path with the dynamic graphic display function



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

706

It is possible to draw the programmed tool path on the screen, which
makes it possible to check the progress of machining, while observing the
path on the screen.
In addition, it is also possible to enlarge/reduce the screen.
Before drawing, graphic parameters must be set.
When the dynamic graphics function is used, the graphics function
described in this section cannot be used.  See Section 12.2 for the dynamic
graphics function.

Graphics display procedure

1 Press function key CUSTOM GRAPH .

The graphic parameter screen shown below appears.  (If this screen
does not appear, press soft key [PARAM].)

GRAPHIC PARAMETER

MDI * * * *     * * *    * * * 14 : 23 : 54

O0000 N00000

GRAPH

AXES P=   
   (XY=0.YZ=1,ZY=2, XZ=3, XYZ=4, ZXY=5)
RANGE (MAX.)
X= 115000 Y= 150000 Z= 0
RANGE (MIN.)
X= 0 Y= 0 Z= 0
SCALE K= 70
GRAPHIC CENTER
X= 57500 Y= 75000 Z= 0
PROGRAM STOP N= 0
AUTO ERASE A= 1

8� ��

>

2 Move the cursor with the cursor keys to a parameter to set.

3 Enter data, then press the INPUT  key.

4 Repeat steps 2 and 3 until all required parameters are specified.

5 Press soft key [GRAPH].

12.1
GRAPHICS DISPLAY

*��������



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

707

6 Automatic operation is started and machine movement is drawn on
the screen.

MEM * * * *     * * *    * * * 14 : 23 : 03

0001 00012

� �8A8� ��

Z

X Y S  0T

X         0.000
Y         0.000
Z         0.000

The size of the graphic screen will be as follows:

Gc : Center of the screen

��

75++

120mm 75++

120mm

Fig. 12.1 (a)  Graphic range

As shown in Fig. 12.1 (a), the maximum graphics range is an area of
approx. 144 mm (width) × 90 mm (height).

To draw a section of the program within the actual graphics range, set the
graphics range using one of the following two methods:

1 .  Set the center coordinates of the range and the magnification.

2 . Set the maximum and minimum coordinates for the range in the
program.

Whether 1 or 2 is used depends on which parameters are set last.  A
graphics range which has been set is retained when the power is turned
off.

Explanation

� RANGE 
(Actual graphic range)

� Setting the graphics
range



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

708

Set the center of the graphic range to the center of the screen.  If the
drawing range in the program can be contained in the above actual
graphics range, set the magnification to 1 (actual value set is 100).

When the drawing range is larger than the maximum graphics range or
much smaller than the maximum graphics range, the graphics
magnification should be changed. The graphics magnification is 0.01 to
100.00 times, which is usually determined  as follows;

Graphics magnification=Graphics magnification (H), or graphics
magnifications (V), whichever is smaller

Graphics magnification H =α/(length on program to horizontal
direction axis)

Graphics magnification V=β/(length on program to vertical
direction axis)

α:144mm
β:90mm

Gc : Center of screen

Program

Gc
Program

Graphics range before 
magnification '� �&&�'�%

Graphics range after 
magnification is applied

The graphics magnification is always based on the center of the screen.

��

Graphics range before 
magnification '� �&&�'�%

Graphics range after 
magnification is applied

Fig. 12.1 (b)  Applying graphics magnification (Example of enlargement)

1.  Setting the center
coordinate of the
graphics range and
graphics magnification



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

709

When the actual tool path is not near the center of the screen, method 1
will cause the tool path to be drawn out of the geaphics range if graphics
magnification is not set properly.
To avoid such cases, the following six graphic parameters are prepared;

Graphic range (Max.) X
Graphic range (Max.) Y
Graphic range (Max.) Z
Graphic range (Min.) X
Graphic range (Min.) Y
Graphic range (Min.) Z

With the above parameters,  the center of screen (Gcx, Gcy, Gcz) is
determined by the CNC as follows;

Gcx = (X (MAX.) + X (MIN.) ) /2
Gcy = (Y (MAX.) + Y (MIN.) ) /2
Gcz = (Z (MAX.) + Z (MIN.) ) / 2

The unit of the value will be 0.001 mm or 0.0001 inch depending on the
input unit.
Graphics magnification is applied automatically.  When the graphics
range is specified, the center coordinates and magnification do not need
to be calculated.

The graphic origin and graphic center point will not be changed even if
the workpiece coordinate origin is changed.
In other words, the workpiece coordinate origin is always consistent with
the graphic origin.

(Example)

Graphics origin

Gc (=30mm, 50mm)

�



G92 X60. Y90. ;
After execution

Graphics origin=workpiece coordinate origin

�



Graphics point (60mm, 90mm)

As shown in the above example, when the command of G92 is specified, the drawing is moved as indicated 
by          . The position of the graphics origin or graphics center does not change.

Graphics point
Gc

Fig. 12.1 (c)  Workpiece coordinate origin and graphics origin

2.  Setting the maximum
and minimum
coordinates for the
drawing range in the
program

� Workpiece coordinate
system and graphics



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

710

⋅ AXES
Specify the plane to use for drawing.  The user can choose from the
following six coordinate systems.

�

�

X

X X

X

�� �

�

�

�

�

�

(1) (2) (3)

(4) (5)
(6)

= 0  :  Select (1)
= 1  :  Select (2)
= 2  :  Select (3)
= 3  :  Select (4)
= 4  :  Select (5)
= 5  :  Select (6)

The rotating angle (horizontal, vertical) for isometric display of 5) and 6) is
fixed at 45°in both cases.

Fig. 12.1 (d)  Coordinate system

⋅ RANGE (Max., Min.)
Set the graphic range displayed on the screen by specifying maximum
and minimum values along each axis.

X=Maximum value X=Minimum value
Y=Maximum value Y=Minimum value
Z=Maximum value Z=Minimum value
Valid range:  0 to 
9999999

NOTE
1 The units are 0.001 mm or 0.0001 inch.  Note that the

maximum value must be greater than the minimum value for
each axis.

2 When setting the graphics range with the graphics
parameters for the maximum and minimum values, do not
set the parameters for the magnification and screen center
coordinates afterwards.  Only the parameters set last are
effective.

⋅ SCALE
Set the graphic magnification
The setting range is 0 to 10000 (unit:0.01 time).

⋅ GRAPHIC CENTER
X=
Y=
Z=
Set the coordinate value on the workpiece coordinate system at
graphic center. 

� Graphics parameter



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

711

NOTE
1 When MAX. and MIN. of RANGE are set, the values will be

set automatically once drawing is executed
2 When setting the graphics range with the graphics

parameters for the magnification and screen center
coordinates, do not set the parameters for the maximum
and minimum values afterward.  Only the parameters set
last are effective.

⋅ PROGRAM STOP
N=
Set the sequence No. of the end block when necessary to partially
display.
This value is automatically cancelled and set to –1 once drawing is
executed.

⋅ AUTO ERASE
1 : Erase the previous drawing automatically when the automatic

operation is started under reset condition.
2 : Not erase automatically.

Since the graphic drawing is done when coordinate value is renewed
during automatic operation,  etc.,  it is necessary to start the program by
automatic operation.  To execute drawing without moving the machine,
therefore, enter the machine lock state.

When the AUTO operation is started under reset condition,  the program
is executed after deleting the previous drawing automatically (Automatic
deleting=1).  It is possible not to delete the previous drawing by graphic
parameter (Automatic deleting=0).

When necessary to display a part of a program, search the starting block
to be drawn by the sequence No.  search,  and set the sequence No. of the
end block to the PROGRAM STOP N= of the graphic parameter before
starting the program under cycle operation mode.

The tool path is shown with a dashed line (  ) for rapid traverse and
with a solid line ( ) for cutting feed.

In case the feed rate is considerably high, drawing may not be executed
correctly, decrease the speed by dry–run,  etc.  to execute drawing.

� Executing drawing only

� Deleting the previous
drawing

� Drawing a part of a
program

� Drawing using dashed
lines and solid lines

Limitations

� Feedrate



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

712

There are the following two functions in Dynamic Graphics.

Path graphic

Solid graphic

This is used to draw the path of tool center com-
manded by the part program.

This is used to draw the workpiece figure machined by
tool movement commanded by the part program.

The path graphic function is used to precisely check the part program for
drawing the tool path with a line.  The solid graphic function is used to
draw the workpiece figure to be machined with a program.  Thus, it is easy
to recognize roughly the part program.  These two functions can be used
freely by switching them.

The path graphic feature calls a program from memory and draws the tool
path specified by the program.  This feature provides the following
functions.

The user can choose the drawing plane from four types of plane views,
two types of isometric projection views, and biplane view.

When an isometric projection view is used, the drawing can be rotated
horizontally and vertically.

A drawing can be enlarged or reduced by specifying a magnification from
0.01 to 100 with respect to the actual size.  In addition, a drawing can be
automatically enlarged or reduced by setting maximum and minimum
values.

A range of the program can be drawn by specifying a starting sequence
number and ending sequence number.

The user can specify whether to apply tool length offset and cutter
compensation to drawing.  This way, either the actual programmed path
or the tool path can be drawn.

When a tool path is drawn on a screen, the colors used can be chosen from
seven colors including white.  The color of the tool path can be changed
according to the T code.

The CNC automatically determines the maximum and minimum drawing
coordinates for each program.  This means that drawing can be performed
with a magnification automatically determined according to these
maximum and minimum values.

Except for biplane views the user can enlarge all types of drawings by a
factor of up to 100 while looking at the drawing that has been made.

The current tool position can be displayed on the screen.

The current position can also be indicated using coordinates.

Coordinate axes and actual size dimension lines are displayed together
with the drawing so that actual size can be referenced.

12.2
DYNAMIC
GRAPHIC DISPLAY

12.2.1
Path Drawing

1. Drawing plane

2. Drawing rotation

3. Drawing enlargement
and reduction 

4. Partial drawing

5. Programmed path
and tool path drawing

6. Color

7. Automatic scaling

8. Partial enlargement 
drawing

9. Indicating the current tool
position with a mark 

10. Indicating the coordinates of
the current position

11. Displaying coordinate 
axes and actual size
dimensions lines 



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

713

The first six functions above (1. to 6.) are available by setting the graphic
parameters.  The seventh to ninth functions (7. to  9.) are mainly executed
using soft keys after drawing has been setup.  The tenth function (10.) is
enabled by setting a parameter.  The eleventh function (11.) can be used
at any time.

Path drawing procedure

1 To draw a tool path, necessary data must be set beforehand.

So press the function button CUSTOM GRAPH  some times.  The “PATH

GRAPHIC (PARAMETER)” is displayed.

MDI * * * *     * * *    * * * 14 : 25 : 07

PATH GRAPHIC (PARAMETER–1) O0000 N00002

AXES P=
(XY=0, YZ=1, ZY=2, XZ=3, XYZ=4, ZXY=5, 2P=6)
ANGLE
 ROTATION A= 0
 TILTING A= 0
SCALE K= 0.00
CENTER OR MAX./MIN.

     X=130.000 Y= 110.000 Z= 50.000
      I= 0.000 J= –10.000 K= 0.000
START SEQ. NO. N= 0
END SEQ. NO. N= 0
NO.      A=

8� �� POSEXEC SCALE

         4

MDI * * * *     * * *    * * * 14 : 25 : 51

PATH GRAPHIC (PARAMETER–2) O0000 N00001

TOOL. COMP P=
COLOR (0123456)   
 PATH P= 0
 TOOL Q= 0
 AUTO CHANGE R= 0

�

8� �� POSEXEC SCALE

2 There are two screens for setting drawing parameters.
Press the page key according to the setting items for selecting
screens.

3 Set the cursor to an item to be set by cursor keys.

4 Input numerics by numeric keys.

Procedure



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

714

5 Press the INPUT  key.

The input numerics are set by these operations and the cursor
automatically moves to the next setting items.  The set data is held even
after the power is turned off.

6 Set the operation mode to the memory mode, press function key

PROG , and call the part program which should be drawn.

7 Press function key CUSTOM GRAPH  several times to redisplay the PATH

GRAPHIC (PARAMETER) screen, then press soft key [EXEC] to
display the PATH GRAPHIC (EXECUTION) screen.

MEM * * * *     * * *    * * * 10 : 10 : 40

8��A � �8A:� !$$�C�:D�" O1126  N01126

Y

X

25.8

$ ��$�C�D ��� � ��D8  $2:�?

8 Press soft key [(OPRT)], then press soft key [AUTO] or [START].
Pressing [AUTO] enables automatic scaling.  See item 7 in
introduction of path drawing and the description of soft key [AUTO]
in Explanations for details.  Drawing is now started.  During drawing,
the message “DRAWING” blinks at the lower–right corner of the CRT
screen.

9 Press soft key [STOP] to pause drawing.  The indication of “STOP”
blinks at the lower right corner on the CRT screen.  Press soft key
[START] to start drawing.  In addition, press soft key [REWIND] to
redraw from the top of program before pressing soft key [START].

10 Execute the last of part program (M02/M30) to end drawing.  This
will cause, blinking of the �DRAWING” light to turn off.  The tool
path view drawn can be retained until the power is turned off
unless a new tool path view is drawn.



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

715

11 For partial drawing enlargement, display the PATH GRAPHIC
(SCALE) screen by pressing the soft key [ZOOM] on the PATH
GRAPHIC (PARAMETER) screen of step 1 above.  The tool path is
displayed.  Next, press soft key [(OPRT)].

MEM * * * *     * * *    * * * 10 : 10 : 40

8��A � �8A:� !���G$" O1126  N01126

���G$

1.00

Y

X

25.8

$$� ↑→← ↓

12 Perform positioning of marks displayed at the center of the screen
to the center of the part enlarged using soft keys [←], [→], [↓],
and [↑].

13 Set the relative magnification rate for the tool path view which is
being drawn using the address keys “P” and “M”.  When you press
address key P or M, the following results:

Address key Function

P The relative magnification rate increases by 0.1.

M The relative magnification rate decreases by 0.1.

The relative magnification rate is continuously changed by keeping
the address keys depressed.  It is possible to magnify up to 100
times in reference to the actual dimensions.

14 Press the soft key [EXEC] after setting the relative magnification
rate.  Then, the screen automatically changes to “TOOL PATH
(EXECUTION)” and the drawing of set partial enlargement view
starts.  The set partial enlargement status is valid until soft key
[AUTO] or [ERASE] is pressed.

Partial enlargement



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

716

15 To display a mark at the current tool position, display the PATH
GRAPHIC (POSITION) screen by pressing soft key [POS] on the
PATH GRAPHIC (PARAMETER) screen of step 1 above.  This
mark blinks at the current tool center position on the tool path.

14 : 27 : 47

8��A � �8A:� !8D�:�:D�" O1126  N01126

Y

X

25.8

8� �� $$� ���G$

MDI * * * *     * * *    * * *

8D�

The relationship between the setting value and drawing screen is as shown
below:

Setting value Drawing screen

0 Plane view (XY)

1 Plane view (YZ)

2 Plane view (ZY)

3 Plane view (XZ)

4 Isometric projection (XYZ)

5 Isometric projection (ZXY)

6 Biplane view (XY,XZ)

The following coordinate systems are selected.

X

Y Z
XY YZ

ZY XZ

X

Y Z

Y

Z

P=0 P=1

P=2 P=3

Fig. 12.2.1 (a)  Coordinate systems for the plane view

Mark display

Explanations

� AXES

� Plane view (XY,YZ,ZY,XZ)



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

717

Projector view by isometric can be drawn.

Y

XYZ

X

Z Y

ZXY

XZ

P=4 P=5

Fig. 12.2.1 (b)  Coordinate systems for the isometric projection

X

Y Z

X

8�6

Fig. 12.2.1 (c)  Coordinate systems for the biplane view

Biplanes (XY and XZ) can be drawn simultaneously. The maximum and
minimum coordinate values must be set to draw the biplane view.  The
maximum and minimum coordinate values can also be set by performing
automatic scaling

The direction of the coordinate axis is set when the isometric projection
is the setting of the drawing screen.   The direction is set by horizontal and
vertical rotation angles.  The unit is expressed in degrees.

The horizontal rotation angle is set in the range of –180°to +180°in
reference to the vertical axis.  Set a positive value for clockwise rotation
of the coordinate axis.  Thus, the direction of projection (visual arrow)
becomes counterclockwise.

Rotating

Fig. 12.2.1 (d)  Rotating

� Isometric projection
(XYZ,ZXY)

� Biplane view

� ANGLE

� ROTATION



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

718

The tilting angle of the vertical axis is set in the range of –90°to +90°in
reference to the horizontal axis crossing the vertical axis at a right angle.
When a positive value is set, the vertical axis slants to the other side of
the graphic screen.  Thus, the projection direction (arrow direction)
becomes the horizontal direction.

Tilting

Fig. 12.2.1 (e)  Tilting

Set the magnification rate of drawing from 0.01 to 100.00.  When 1.0 is
set, drawing is carried out in actual dimensions.  When 0 is set, the
drawing magnification rate is automatically set based on the setting of
maximum and minimum coordinate values of drawing.

When a graphics (drawing) magnification of 0 is set, maximum
coordinates on the X–axis, Y–axis, and Z–axis in the workpiece
coordinate system must be set in addresses X, Y, and Z, and minimum
coordinates must be set in addresses I, J, and K, to specify the graphics
(drawing) range.  For biplane view drawing, maximum and minimum
coordinates for drawing must be specified.
When a drawing magnification other than 0 is set, the X, Y, and Z
coordinates of the drawing center in the workpiece coordinate system
must be set in addresses X, Y, and Z.  Addresses I, J, and K are not used.
The table below summarizes the setting requirements described above.

Setting the drawing
magnification rate

Setting
magnification rate Address X/Y/Z Address I/J/K

Other than 0
Drawing center coordinate
value of X, Y, and Z axes

Ignored

0 or biplane view 
drawing

Drawing maximum 
coordinate value of 

X, Y, and Z axes

Drawing minimum 
coordinate value of 

X, Y, and Z axes

Set the start and end sequence numbers of drawing in five digits each.  The
part program for drawing is executed from the head and only the part
enclosed by the start sequence and end sequence numbers is drawn.  When
0 is commanded as the start sequence number, drawing is performed from
the head of the program.  In addition, when 0 is commanded as the end
sequence number, drawing is performed up to the end of program.  The
sequence number is referred to regardless of either main program or
subprogram.

� TILTING

� SCALE

� CENTER OR MAX./MIN.

� START SEQ. NO. and
END SEQ. NO.



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

719

It is possible to set whether the tool path is drawn by making the tool
length offset or cutter compensation valid or invalid.

Setting  value Tool length offset or cutter compensation

0 Perform drawing by making tool compensation valid
(An actual tool path is drawn.)

1 Perform drawing by making tool compensation invalid 
(A programmed path is drawn.)

Always set 0 before drawing when indicating the mark of the current tool
position.

Specify the color of the tool path.  In the case of monochrome it is not
required to set it.  The relationship between the setting value and color is
as shown below:

Setting value Color

0 White

1 Red

2 Green

3 Yellow

4 Blue

5 Purple

6 Light blue

⋅ PATH Specify the color of the tool path.
⋅ TOOL Specify the color of the current position mark of the tool.
⋅ AUTO CHANGE  Set if for changing the color of the tool path

automatically according to the T –code command.

Setting value Function

0 The color of the tool path is not changed.

1 The color of the tool path is changed automatically.

When 1 is set, the setting value of the color designation of PATH is
incremented by 1 every time the T code is commanded. At the same time,
the color of the tool path changes. If the setting value exceeds 6, it returns
to 0.

Software key Function

[AUTO] Automatic scaling is performed.  Obtain the maximum and 
minimum coordinates of the part program before performing
drawing, specify them for the maximum and minimum values of
drawing parameters, and set the drawing magnification rate to
0 before starting drawing.  Thus, the tool path view is properly
laid out on the screen.

[START] Drawing starts.  When the [START] is pressed while the 
drawing is not in STOP, the part program starts from the top of
the part program.  Press the [START] while the drawing is in
stop to allow drawing to be carried out continuously.

[STOP] Stop drawing.  (Single block stop)

[REWIND] Press this key to start drawing from the top of part program.
Searches for the beginning of a part program.

[ERASE] Erase the tool path view which has been drawn.

� TOOL COMP.

� COLOR

� Soft key functions on the
“PATH GRAPHIC
[EXECUTION]”screen



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

720

No part program which has not been registered in memory can be drawn.
Also, it is necessary that the M02 or M30 should be commanded at the
end of the part  program.

The period of mark blinking is short when the tool is moving and becomes
longer when the tool stops.
The mark indicating the current  position of tool is displayed on the XY
plane view when the biplane drawing is performed.

Parameter 6501 (CSR, bit 5) is used to specify whether to use � or x as
the mark for indicating the current tool position and the center of a
partially enlarged drawing.

Parameter 6500 (DPO, bit 5) is used to specify whether to display the
coordinates of the current position on the tool path drawing screen.

If a program specifies a coordinate system change, parameter 6501 (ORG,
bit 0) is used to specify whether to draw without changing the coordinate
system or to draw by regarding the current drawing position as the current
position in the new coordinate system.

If machine operation is not allowed, no drawing can be carried out.  No
drawing can be made during machine operation.  The setting data and
switches required for drawing are as shown below:

Setting data and switch Status

Tool offset amount Set it properly when performing drawing
while the tool offset amount becomes valid.

Single block Off

Optional block skip Set it properly.

Feed hold Off

The partial enlargement can be carried out on the plane view and isometric
projection view.  No partial enlargement can be made in the drawing of
the biplane view.

In dynamic graphics display, drawing cannot be executed while the
machine is operating even though this is possible in ordinary graphics
display (see III–12.1).  However, after drawing is executed, the operator
can see how the tool moves along the tool path by operating the machine
while displaying the mark for the current position of the tool.
It is necessary that the setting data and switches related to the machine
operation should be the same status between drawing operation and
machining operation  for properly displaying the current  position of tool
on the drawn tool path.

� Graphic program

� Mark for the tool current
position

� Position mark

� Display of the coordinate
value

�  �
�"��" ��� �������
��

�!���	

Restrictions

� Graphic condition

� Partial enlargement

� Tool current position



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

721

The solid graphics draws the figure of a workpieces machined by the
movement of a tool.
The following graphic functions are provided :

Solid model graphic is drawn by surfaces so that the machined figure can
be recognized concretely.

It is possible to draw a blank figure before machining.
A rectangular parallelepiped and a circular column or cylinder can be
drawn.  A circular column or cylinder parallel to the X–axis, Y–axis, or
Z–axis can be selected.

It is possible to draw the progress of machining by simulation.

It is possible to draw the final finish machined figure.

The user can choose from four drawing directions and eight tilting angles.

It is possible to draw XY plane views as well as solid model views.  Height
of the workpiece is discriminated by color for color or brightness for
monochrome.

In addition to a solid drawing, a triplane view can be drawn.  The user can
choose from four types of plane view and side view positions.   The user
can freely change the cross–section position of a side view.

It is possible to install tools in the direction which is parallel to the X or
Y axis as well as the Z axis.

It is possible to change tools during machining by the part program
command.

12.2.2
Solid Graphics

1. Solid model graphic

2. Blank figure graphics

3. Drawing of machining 
progress

4. Drawing of final machined 
figure

5. Changing of drawing direction

6. Plane view graphics

7. Triplane view graphic

8. Horizontal hole machining

9. Tool change during machining



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

722

Solid graphics drawing procedure

1 To draw a machining profile, necessary data must be set beforehand.

So press the function key CUSTOM GRAPH .

The screen of ”SOLID GRAPHIC (PARAMETER)” is displayed.

SOLID GRAPHIC (PARAMETER) O0000 N00003
BLANK FORM P=
   X= 0.000 Y= 0.000   Z= 0.000
    I= 120.000 J= 100.000 K= 40.000

TOOL FORM P= 2
R= 7.500 K= 0.000

PROJECTION P= 3
Q= 1 R= 0

INTENSITY P= 4
(0123456) Q= 2 R= 1
START SEQ.NO. N= 0
END SEQ.NO. N= 0
ANIM. SPEED N= 0

MDI * * * *     * * *    * * * 14 : 42 : 17
.#

�G��B $$�  $L:$28� ��

2 Use a cursor key to move the cursor to an item to be set.

3 Input numerics for the item at the cursor using the numeric key.

4 Press the INPUT .

Input numerics can be set by these operations and the cursor moves to the
next setting item automatically.  The set data is retained even if the power
is turned off.
See Explanations for details on settings.

5 To draw a blank figure, display the SOLID GRAPHIC (BLANK)
screen by pressing soft key [BLANK] on the SOLID GRAPHIC
(PARAMETER) screen of step 1 above.
 

�DG:? � �8A:� !�G��B" O1126  N1126

Z

Y

X

MEM  * * * *     * * *    * * * 10 : 10 : 40

��$2 – D�P D�

Procedure

� SOLID GRAPHIC
(BLANK)



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

723

6 Press soft key [ANEW].  This allows the blank figure drawing to be
performed based on the blank figure data set.

7 Press soft keys [+ROT] [–ROT] [+TILT], and [–TILT], when
performing drawing by changing the drawing directions.  Parameters
P and Q for the drawing direction are changed and the figure is
redrawn with the new parameters.

8 Set the operation mode to the memory mode, press function key

PROG , and call the subject part program of drawing.

9 To draw a machining profile, display the SOLID GRAPHIC
(EXECUTION) screen by pressing soft key [EXEC] on the SOLID
GRAPHIC (PARAMETER) screen of step 1 above.  

ÅÅÅÅÅ
ÅÅÅÅÅ
ÅÅÅÅÅÅÅÅÅÅÅÅ

ÅÅÅÅÅÅÅ
ÅÅÅÅÅÅÅ
ÅÅÅÅÅÅÅÔÔ

ÔÔ
ÔÔ
ÔÔ

�DG:? � �8A:� !$$�C�:D�"

Z

Y

X

O1126  N01126

���� -��� ��D8  $2:�?

O1126  N01126

Y

X

�DG:? � �8A:� !$$�C�:D�"

���� -��� ��D8  $2:�?

� SOLID GRAPHICS
(EXECUTION)



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

724

10 Press soft key [(OPRT)] and press either soft key [A.ST] or [F.ST].
When [A.ST] is pressed, the status of machining in progress is drawn
by simulation.  When [F.ST] is pressed, the profile during machining
is not drawn.  Only the finished profile produced by the program is
drawn. This allows drawing to be started. 
When “STOP” is not displayed at the lower right corner of the screen,
the program is executed from its head.  “DRAWING” blinks at the
lower right corner of CRT screen during drawing.

11 Press soft key [STOP] to stop drawing temporarily.  Drawing is
stopped after drawing the current block and “STOP” blinks at the
lower right corner of CRT screen.  Press soft key [A.ST] or [F.ST]
when restarting drawing.  Press soft key [REWIND] and then the
[A.ST] or [F.ST] if redrawing from the head.  It is possible to continue
drawing after changing the solid graphic parameters in temporary
stop.

12 When the end of program (M02 or M03) is executed, the drawing
ends and the blinking of “DRAWING” stops. Then, the final finish
figure is drawn on the CRT screen. The drawn figure view is retained
until the power is turned off as long as a new machine figure view is
drawn.

13 The color, intensity, or drawing direction of a machining figure which
has been drawn can be changed and the figure redrawn.
To redraw the figure, first change the parameters for the color,
intensity, or drawing direction on the SOLID GRAPHIC
(PARAMETER) screen shown in step 1, then press soft key
[REVIEW] to display the SOLID GRAPHIC (REVIEW) screen.

ÔÔ

ÔÔ

ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅ

�DG:? � �8A:� ! $L:$2"

Z

Y

X

O1126  N01126

ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅÔÔ

ÔÔ

��$2 P D� – D� P�:G� –�:G�

14 Press soft key [(OPRT)], then press soft key [ANEW].  The machining
figure is redrawn with the color, intensity, or drawing direction set in
step 13.

� REVIEW



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

725

15 To redraw the figure in a different mode, press soft key [+ROT],
[–ROT], [+TILT], or [–TILT]. Parameters P and Q for the drawing
direction are changed and the figure is redrawn with the new
paramaters.

16 The machined figure can be drawn on the tri–plane view.
To draw a triplane view, press the rightmost soft key (next–menu key)
on the SOLID GRAPHIC (PARAMETER) screen of step 1 above, then
press soft key [3–PLN] and [(OPRT)].  The SOLID GRAPHIC
(3–PLANE) screen appears.

SOLID GRAPHIC (3–PLANE) 01126  N01126

← ↑ ↓→

Each time soft key [           ] is pressed, the side–view drawings dis-
played change as follows.

Right view and rear view

Rear view and left view

Left view and front view

Front view and right view

17

18 The sectional position of side view can be changed by the soft keys
[←], [→], [↑], and [↓]. 
With the sectional position of the left/right side view, the marks � and
� indicating the sectional position can be moved using the soft keys
[←] and [→].  
With the sectional position of rear/front side view, the marks � and �
indicating the sectional position can be moved using the soft keys [↑],
and [↓].  Keep the keys depressed to change sectional/views
continuously.

� Triplane view drawing



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

726

Set the type of blank figure under P.  The relationship between the setting
value and figure is as follows:

P Blank figure

0 Rectangular parallelepiped  (Cubed)

1 Column or cylinder (parallel to Z–axis)

Set the X–axis, Y–axis, and Z–axis coordinate values of standard point
of materials in workpiece coordinate system to the addresses X, Y, and Z.
The standard point of materials is the corner point  in the negative
direction in the case of rectangular parallelepiped blank figure and the
center point of bottom in the case of column and cylinder materials.

Set the dimensions of materials.  The relationship between the addresses
I, J, and K and setting value is as shown below:

Material I J K

Rectangular Length in X–axis
direction

Length in Y–axis
direction

Length in Z–axis
direction

Column Radius of circle 0 Length of column

Cylinder Radius of external
circle

Radius of internal
circle

Length of cylinder

Z

K
Y

J

I(X,Y,Z) J
I

X

(X,Y,Z)

K

Explanations

GRAPHICS PARAMETER

� BLANK FORM

♦ BLANK FORM (P)

♦ Material positions
(X,Y,Z)

♦ Material dimensions
(I,J,K)



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

727

Set the machining direction of tools.

P Machining direction of tools

0,1 Parallel to the Z–axis (perform machining from the + direction)

Set the dimensions of tool.  The relationship between the displayed
address and setting value is as shown below:

Address Setting numerics

R Radius of tool

K Distance from the program point to tool tip  (normally 0)

K

 

Program point

Tip of the tool

The relationship between graphic method and direction and setting value
is as shown below:

P Graphic method and direction

0, 4 Oblique projection view (+ X–axis)

1, 5 Oblique projection view (+ Y–axis)

2, 6 Oblique projection view (– X–axis)

3, 7 Oblique projection view (–Y–axis)

This setting value can also be incremented or decremented by the soft
keys [+ROT] or [– ROT].  In this case, if the setting value exceeds 7, it
returns to 0.  If it is smaller than 0, it becomes 7.

Direction of the vertical axis is fixed in Z–axis.

� TOOL FORM
♦ Machining tool 

orientation (P)

♦ Dimensions of tools 
(R,K)

� PROJECTION

♦ Graphics method
and direction (P)

♦ VERTICAL AXIS (R)



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

728

Specify the intensity of the drawing screen when performing drawing on
the monochrome, and the color of the drawing screen when performing
drawing on the color screen.  The relationship between the setting,
intensity, and color is as shown below:
However, when the plane view is displayed on the monochrome. The
brighter surface, whichever is specified by P or Q becomes the top surface.

Setting value Intensity Color

0 Maximum brightness White

1 Red

2 Dark Green

3 ↓ Yellow

4 Light Blue

5 Purple

6 Light blue

The relationship between the display address, surface, and line on the
machined figure view is as shown below:

Address Oblique projectionview Plane view Triplane view

P Upper surface Upper surface Upper/lower surface

Q Side surface Middle surface Left/right surface

R Ridge Ridge Ridge

Remarks The intensity/color of
front surface is 
between P and Q

Lower surface
is blank

The intensity/color of
plane view is between
P and Q

P Q

P+Q

P

Q

Blank

P

P+Q Q

Oblique projection view

Plane view

Triplan view

� INTENSITY



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

729

Specify the start sequence number and end sequence number of each
drawing in a five–digit numeric.  The subject part program is executed
from the head.  But only the part enclosed by the start sequence number
and end sequence numeric is drawn.  When 0 is commanded as the start
sequence number, the program is drawn from its head.  When 0 is
commanded as the end sequence number, the program is drawn to its end.
The comparison of sequence number is performed regardless of main
program and subprogram.

Set interval of animated simulation drawing ranging from 0 to 255.
Every time the machining proceeds by the number set, the drawing is
repeated.  If 0 is set, drawing is repeated at every 1 block execution.

Soft key Function

[A.ST] Simulate and draw the progress of machining.

[F.ST]
No figure during machining is drawn and only the final
finish figure by that program is drawn.

[STOP]
When pressed, stops drawing at the end of block (single
block stop).

[REWIND]
Press this key to perform drawing from the head of part
program.  Heading is performed automatically after execu-
tion of program end (M02/M30).

No part program which has not been registered in memory can be drawn.
It is also necessary that the M02 or M30 be commanded at the end of the
part program.

It is possible to specify BLANK FORM and TOOL FORM in the part
program.  The command format is as shown below.  If it is commanded
during execution of drawing, the item corresponding to the screen of
“SOLID GRAPHIC (PARAMETER)” is set and drawing continues with the
set data.

 Command of BLANK FORM

G10 L90 P_X_Y_Z_I_J_K_ ;

The command value succeeding the address is the same as the
numeric set to the address being displayed at the item of BLANK
FORM of “SOLID GRAPHIC (PARAMETER)”.  If BLANK FORM
is commanded, drawing continues after a new blank figure is
drawn.

 Command of TOOL FORM
G10 L91 P_R_K_ ;

The command value succeeding the address is the same as the
numeric set to the address being displayed at the item of TOOL
FORM of screen “SOLID GRAPHIC (PARAMETER)”.  If 0 is
commanded with the tool radius value, no machining simulation
is performed thereafter.

Parameter 6500 (DPO, bit 5) is used to specify whether to display the
coordinates of the current position on SOLID GRAPHIC screen.

� START SEQ. NO. and
END SEQ. NO.

� ANIM. SPEED

� Soft key functions on the
“SOLID GRAPHIC
(EXECUTION)”screen

� Graphics program

� Specifying the blank
form and tool form in the
part program

� Display of the coordinate
value



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

730

In solid graphics, parameter 6501 (TLC, bit 1) is used to specify whether
to apply tool length offset.

Parameter 6501 (3PL, bit 2) is used to select whether to draw a triplane
view with the third–angle or first–angle projection.

Parameter 6501 (RID, bit 3) is used to specify whether to draw ridges in
plane view drawing.

Parameter 6501 (FIM, bit 4) is used to specify whether to display a solid
graphics in the rough mode or in the fine mode.  When a solid graphics
is drawn in the fine mode, the drawing speed is slower than when drawn
in the rough mode.

In triplane drawing, a value can be specified for changing the position of
the cross section while the soft key is held down.  A value from 0 to 10
can be set.  When 0 is specified, a value of 1 is used. (Parameter No. 6515)

� TOOL COMP.

� Graphic method

� Ridge drawing

� Display mode

� Cross section position
change



OPERATIONB–64124EN/01 12. GRAPHICS FUNCTION

731

Right view and rear view

[            ]

Rear view and left view

Front view and right view Left view and front view

[            ]

[            ][            ]

Rear view

Top view

Right side viewLeft side view

Front view

Example)  The side views of the figure below are illustrated.

In the above figure, the side views displayed are switched as follows.

Press

Press

Press Press

Examples

� Side view selection in
triplane drawing



OPERATION12. GRAPHICS FUNCTION B–64124EN/01

732

Some examples of cross–sectional views are given below for the left view
and front view shown on the previous page.

ÕÕÕÕÕ
ÕÕÕÕÕ
ÕÕÕÕÕ

Sectional view 1

Õ
Õ
Õ
Õ
Õ ÕÕ

ÕÕ
ÕÕ
ÕÕ

ÕÕÕ
ÕÕÕ

ÕÕÕ
ÕÕÕ
ÕÕÕ
ÕÕÕ

Õ
Õ
Õ

ÕÕ
ÕÕ
ÕÕ

Sectional view 2

If the machine operation is not enabled, no drawing can be made.  No
drawing can be made during operation of machine.  The main setting data
and switches needed on drawing are as shown below:

Setting data/switch Status needed for drawing

Tool offset value
It is necessary to set the cutter compensation
value properly. The tool length offset is ignored.

Single block Off

Optional block skip Properly set it.

Feed hold Off

Tools which set the tool figure are limited to the cylinder figure
(equivalent to flat end mill).

In solid graphics, paths based on helical interpolation cannot be drawn.

� Cross section position
selection in triplane
drawing

Limitations

� ��
���� ���������

� #��� ���	

� A����
� ��������
����



OPERATIONB–64124EN/01 13. HELP FUNCTION

733

13 A;* �98 #608
The help function displays on the screen detailed information about
alarms issued in the CNC and about CNC operations.  The following
information is displayed.

When the CNC is operated incorrectly or an erroneous machining
program is executed, the CNC enters the alarm state.  The help screen
displays detailed information about the alarm that has been issued and
how to reset it.  The detailed information is displayed only for a limited
number of P/S alarms.  These alarms are often misunderstood and are
rather difficult to understand.

If you are not sure about a CNC operation, refer to the help screen for
information about each operation.

When setting or referring to a system parameter, if you are not sure of the
number of the parameter, the help screen displays a list of parameter Nos.
for each function.

Help Function Procedure

1 Press the HELP  key on the MDI panel. HELP (INITIAL MENU) screen

is displayed.

Fig. 13 (a)  HELP (INITIAL MENU) screen

HELP (INITIAL MENU) O1234   N00001

              ***** HELP *****

              1.  ALARM DETAIL
              2.  OPERATION METHOD
              3.  PARAMETER TABLE

S     0 T0000
MEM   ****  *** *** 10:12:25
[  ALAM  ] [   OPR   ] [  PARA  ] [       ] [       ]

The user cannot switch the screen display from the PMC screen or
CUSTOM screen to the help screen.  The user can return to the normal

CNC screen by pressing the HELP  key or another function key.

� Detailed information of
alarms

� Operation method

� Parameter table

 Procedure



OPERATION13. HELP FUNCTION B–64124EN/01

734

2 Press soft key [ALAM] on the HELP (INITIAL MENU) screen to
display detailed information about an alarm currently being
raised.

Normal explana–
tion on alarm

Fig. 13 (b)  ALARM DETAIL screen when alarm P/S 027 is issued

Function 
classification

Alarm details

Alarm No.

HELP (ALARM DETAIL) O0010 N00001

NUMBER : 027
M‘SAGE  : NO AXES COMMANDED IN G43/G44
FUNCTION  : TOOL LENGTH COMPENSATION C
ALARM  :

IN TOOL LENGTH COMPENSATION TYPE C,
NO AXIS IS DESIGNATED IN G43 & G44
BLOCKS. IN TOOL LENGTH COMPENSATION
TYPE C, IT TRIES TO LATCH ON TO 
ANOTHER AXIS WITHOUT OFFSET CANCE–
LING.

>100 S     0 T0000
MEM **** *** *** 10:12:25
[   ALAM   ] [    OPR    ] [   PARA   ] [       ] [       ]

Note that only details of the alarm identified at the top of the screen
are displayed on the screen.
If the alarms are all reset while the help screen is displayed, the alarm
displayed on the ALARM DETAIL screen is deleted, indicating that no
alarm is issued.

Fig. 13 (c)  ALARM DETAIL screen when no alarm is issued

HELP  (ALARM DETAIL) O1234 N00001

NUMBER :
M‘SAGE :
FUNCTION :
ALARM :

                       <<ALARM IS NOT GENERATED>>

       ENTER THE DETAIL–REQUIRED ALARM NUMBER,
        AND PRESS [SELECT] KEY

>100 S     0 T0000
MEM **** *** *** 10:12:25
[  ALAM  ] [   OPR   ] [  PARA  ] [       ] [       ]

ALARM DETAIL screen



OPERATIONB–64124EN/01 13. HELP FUNCTION

735

3 To get details on another alarm number, first enter the alarm number,
then press soft key [SELECT].  This operation is useful for
investigating alarms not currently being raised.

Fig. 13 (d)  How to select each ALARM DETAILS

>100 S     0 T0000
MEM **** *** *** 10:12:25
[       ] [       ] [        ] [       ] [ SELECT ]

The following is the screen when P/S alarm 100 is selected as
example.

Fig. 13 (e)  ALARM DETAIL screen when P/S 100 is selected

HELP (ALARM DETAIL) O1234 N00001

NUMBER : 100
M‘SAGE : PARAMETER WRITE ENABLE
FUNCTION :
ALARM :

      <<ALARM IS NOT GENERATED>>

>100 S     0 T0000
MEM **** *** *** 10:12:25
[       ] [       ] [        ] [       ] [ SELECT ]

4 To determine an operating procedure for the CNC, press the soft key
[OPR] key on the HELP (INITIAL MENU) screen.  The OPERATION
METHOD menu screen is then displayed. 

HELP (OPERATION METHOD) O1234   N00001

1.PROGRAM EDIT
2.SEARCH
3.RESET
4.DATA INPUT WITH MDI
5.DATA INPUT WITH TAPE
6.OUTPUT
7. INPUT WITH FANUC CASSETTE
8.OUTPUT WITH FANUC CASSETTE
9.MEMORY CLEAR

MEM 00 : 00 : 00* * * *     * * *    * * *

S 0 T0000

8� � !D8 �"�G�� D8 

Fig. 13 (f)  OPERATION METHOD menu screen

To select an operating procedure, enter an item No. from the keyboard
then press the [SELECT] key.

OPERATION METHOD
     screen



OPERATION13. HELP FUNCTION B–64124EN/01

736

Fig. 13 (g)  How to select each OPERATION METHOD screen

>1 S     0 T0000
MEM   ****  ***  *** 10:12:25
[              ]  [              ] [                ] [              ] [ SELECT ]

When “1.  PROGRAM EDIT” is selected, for example, the screen in
Figure 13 (h) is displayed.
On each OPERATION METHOD screen, it is possible to change the
displayed page by pressing the PAGE key.  The current page No. is
shown at the upper right corner on the screen.

HELP (OPERATION METHOD) 01234 N00001
<< 1.  PROGRAM EDIT >> 1/4
*DELETE ALL PROGRAMS

MODE : EDIT
SCREEN : PROGRAM
OPR : (O–9999) – <DELETE>

*DELETE ONE PROGRAM
MODE : EDIT
SCREEN : PROGRAM
OPR : (O+PROGRAM NUMBER) – <DELETE>

Each item

Page/maximum
page
Operation
Set mode
Operation
location
Operating 
procedure

Fig. 13 (h)  Selected OPERATION METHOD screen

>_ S     0 T0000
MEM ****   ***   *** 10:12:25
[  ALAM  ]  [   OPR   ]  [   PARA   ]  [             ]  [             ]

5 To return to the OPERATION METHOD menu screen, press the
RETURN MENU key to display “[OPR]” again, and then press the
[OPR] key again.
To directly select another OPERATION METHOD screen on the
screen shown in Figure 13 (h), enter an item No. from the keyboard
and press the [SELECT] key.

Fig. 13 (i)  How to select another OPERATION METHOD screen

>3 S     0 T0000
MEM **** *** *** 10:12:25
[             ]  [             ]  [               ]  [               ]  [  SELECT  ]

6 If you are not sure of the No. of a system parameter to be set, or to refer
to a system parameter, press the [PARA] key on the HELP (INITIAL
MENU) screen.  A list of parameter Nos. for each function is
displayed.  (See Figure 13 (j).)
It is possible to change the displayed page on the parameter screen.

RETURN MENU key

PARAMETER TABLE
screen



OPERATIONB–64124EN/01 13. HELP FUNCTION

737

The current page No. is shown at the upper right corner on the screen.

Fig. 13 (j)  PARAMETER TABLE screen

HELP (PARAMETER TABLE) 01234  N00001
1/4

* SETTEING (No. 0000∼)
* READER/PUNCHER INTERFACE (No. 0100∼)
* AXIS CONTROL

/SETTING UNIT (No. 1000∼)
* COORDINATE SYSTEM (No. 1200∼)
* STROKE LIMIT (No. 1300∼)
* FEED RATE (No. 1400∼)
* ACCEL/DECELERATION CTRL (No. 1600∼)
* SERVORELATED (No. 1800∼)
* DI/DO (No. 3000∼)

>_ S        0 T0000
MEM   ****   ***   *** 10:12:25
[  ALAM  ]   [   OPR   ]   [   PARA   ]   [              ]   [                ]

7 To exit from the help screen, press the HELP  key or another function

key.

[ALAM]

ALARM
DETAIL
screen

OPERATION
METHOD

screen

PARAME-
TER TABLE

screen

[OPR] [PARA]

 key
CNC

screen

Each opera-
tion instruc-
tion screen

[OPR]

(NO.)+[SELECT]

(NO.)+[SELECT]

           key 
or 
function key

HELP 
INITIAL MENU

screen

HELP

           key 
or
function key

HELP

HELP

PAGE key

           key 
or 
function key

HELP

(NO.)+[SELECT]

Explanation

� Configuration of the Help
Screen



OPERATION14. SCREEN HARDCOPY B–64124EN/01

738

14 SCREEN HARDCOPY
The screen hardcopy function outputs the information displayed on the
CNC screen as 640*480–dot bitmap data.  This function makes it possible
to produce a hard copy of a still image displayed on the CNC.
The created bitmap data can be displayed on a PC.

Screen Hardcopy Procedure

1 Check the parameter settings.  To use the screen hardcopy function,
set bit 7 (HDC) of parameter 3301 to 1 and parameter 20 (I/O channel
selection) to 4 (memory card I/F).  Set other relative parameters (bits
0, 2, and 3 of parameter 3301) as needed.

2 Insert a memory card.

3 To start the function, set hardcopy start signal HDREQ <G067#7> to
1.  Alternatively, hold down the [SHIFT] key for five seconds.

4 To end the function, press the [CAN] key.  Alternatively, set hard
copy stop signal HDABT <G067#6> to 1.

5 While the screen hardcopy operation is in progress, the hardcopy in
progress signal <F061#3> is tied to 1.  For several tens of seconds (or
several seconds, for a monochrome LCD) before the hardcopy
operation ends, the screen image stands still.

6 When the screen hardcopy operation is completed, the hardcopy in
progress signal <F061#3> goes 0.

While the screen hardcopy operation is in progress, the screen image
keeps still.  This means that the clock displayed on the screen indicates
the beginning and end of the operation.  When the clock stops counting
seconds, the hard copy operation starts.  The clock resumes counting
seconds when the screen hard copy operation ends.

NOTE
1 During the screen hardcopy operation, key input is disabled

for several tens of seconds.  Until the screen hardcopy
operation ends, the screen image lies still.  During this
period, the hardcopy in progress signal <F061#3> is tied to
1.  No other signal is output.  Avoid turning off the power
indiscriminately during that period.

2 A normal hard copy may not be produced while the screen
image is moving.

Supplementary
explanation



OPERATIONB–64124EN/01 14. SCREEN HARDCOPY

739

A hard copy of the following screens cannot be produced.

1 System alarm screen

2 Screen while RS–232–C is being used

3 Screen during automatic or manual operation (A hard copy can be
produced in a rest of the operation.)

The bitmap files created by the screen hardcopy function are named as
follows, in order in which they are created after power–up:

‘HDCPY000.BMP’ (Name of the first hardcopy file created after
power–up)

‘HDCPY001.BMP’ (Name of the second hardcopy file created after
power–up)

:

:

‘HDCPY099.BMP’

NOTE
1 A screen hardcopy file produced after the file HDCPY099.

BMP is output will be named as HDCPY000.BMP.
2 If a BMP file output by the screen hardcopy function has the

same name as a file present on a memory card, the file on
the memory card is overwritten unconditionally.

3 When the hardcopy function is carried out after power is
turned off and on again, the first output file is named as
HDCPY000.BMP again.  If the inserted memory card has a
file having the same name, the file is unconditionally
overwritten.  Note this when continuously producing hard
copies of various screens.

The number of colors used in created bitmap data depend on the LCD
hardware and the display mode of the CNC screen.  Table 14 (a) indicates
the relationships.

Table 14 (a)  Colors of BMP data created by the screen hardcopy function

LCD
hardware

CNC screen
display
mode

Colors
displayed
on CNC

Colors used in created
BMP data

Remarks

Monochrom
e LCD

— 2 colors 2 colors Shades of gray are not supported.

Color LCD VGA–comp
atible mode
3119#7=1

Character:
16 colors

Graphic:
16 colors

When bit 0 of parameter
3301 is set to 0:  256 colors
When bit 0 of parameter
3301 is set to 1:  16 colors

Note that colors may not be normally displayed
in the 16–color mode.

VGA mode
3119#7=0

256 colors 256 colors

Limitations

File name

Colors of data



OPERATION14. SCREEN HARDCOPY B–64124EN/01

740

Table 14 (b) indicates the sizes of bitmap data created by the screen
hardcopy function.

Table 14 (b) Sizes of bitmap data created by the screen hardcopy
function

Bitmap colors File size (bytes)

Monochrome (2 colors) 38,462

Color (16 colors) 153,718

Color (256 colors) 308,278

If bit 2 (HCA) of parameter 3301 is set to 1, an alarm message can be
output when the hardcopy operation ends in failure.
(P/S alarm Nos. 5212 to 5214)
For descriptions of these alarms, see APPENDIX G, “ALARM LIST.”

Data size

Alarm message



IV.  MANUAL GUIDE 0i



����������	�� ����������	
���� �����������	
����

��������

�����	�
�������
�



�����������	
���� ����������	
���� ����������	��

��������

���� ���������
�

���	�
��	�����������������������������������������������������

������ ������!����������"�#��������$��� �%�������������� �#��������

������������ �#������������&#����������������������������������'�#&��%�

������������� �&���� �����(���#� ��'�� ���� ���� �����&#������ �����& ���#�

����� �����������������������&������������������&#�����%� ��� �������$)���

*�*� ������ � #��� (�� ���������� ��� �� ������� ��� �����&#�����)� ��#�� ���

���#�������� ���� �#����������������%�*� ���'� �#����������+��#���

(���##� ��������($�#� (������ �#�����������������%�

�

,���� ������ � ������� ���� #��� (�� �����#&��� ��� ���� ��������� ��� ����

�� ���������������������  ��������&����&����($�����*�*%����	�
�

�	��� ��� ��� �� -���������&��.� ������  ���� ���� ����� ������ ����

��������� ��� �������� �� *�*� ����� ������ %� ���	�
� �	��� ���

�����������������#�������'������������#�������� ������������������������

�������*�*��#����%�/��������������� ��������&����������������������

&����0�������&���1��������������#������������������� ������&#����%�

�

���	�
��	������������������&��������������'������������������ �%�

"$� ������������� ���� �������� ����� ������ � ����)� ���� &���� #���  �+��

#���������������� ����$���������$����������$��������������������� %�

2������� ����� ��� ����� ������(��� �&����� ������ � ������� ���� ��� ��� ��

����$�������  �����������#�%�



����������	�� ����������	
���� �����������	
����

����3���

���� �������������
�

���	�
��	������ ���4&���������������#������������(����������&����

�&�����*�*����������%����#���(���##�����������$��� ��($��������������

-*	!/2�.��&��(&��������������������%�5�� �������#����)�����&����

#�������#��������$��������������  ��1��������������#�%�

�

��� ����&��������������#������������������ �6������������'����������7)�

���$�#������������(�#+���&����������� ���8�������������������������#��

-��/.� ���%�"&�)� ����&���� &��� ���&��� ����� ��������� ������ � ���$�

����� �������� ����������-�#����.������������ ���� ����*�*%� ��� ���������

������ �����#����)������������#�������������������� ����������&�������

#����#���������(�� %�

�

���	�
��	������ &����0��� -�����#���#������#$#���.� ���� �������

����������)��&#�������������)�����������������)�������������#+������������

 �#������%� /����� -�����#��� #������ #$#���.� #��� (�� #������ ��� �

�'������� ������ ����������������� ������ ��������	�
��	��� ��%�

/����������������& ��������� ������� ��� ������������������  ��1�������

�������#�%� �

�

���	�
� �	��� ��� ����� &����0��� -#����&�� ������  ���).� �����

���#�� ���� &���� #��� ������ #����&�� ���&���� ����� #������� ��� ������ ����

#��#���%� /���� -#����&�� ������  ���.� ��������� ����������� ��#��

#����&�� #��#&������� �&#�� ��� 9�� (��#+�� �������� ���� �&'�����$�

#��#&������������99���������%�

�

���	�
��	����������������������� �+������#��������������������

�������������� ��������� ���� ����&���:��������%�2�#���� ����������� ����

������  ���� ����&���)� �������)� $�&� �$� ����� ��� ������� ��� ��������

������ ������#��$�&���������*�*������� �������%����	�
��	���

��� ������� &����� ��� �&�#����� ��� ������ ���� �����%� /����� ���� ���� ����

�� ������ ����� *�*� ������  ���� ����� ��� ���$� ��� &��� ���� ������#�

�������#�� ��� ������ ����� ������ ����� �� ������ %� /����� ����� ����  ����

�����#��� ����� &��� ���� ���(����� ������ � ������)� ������ �������#����

������������������  ��1��������������#�%������$�#���)�����&������������

�(����$� ��� &��� ���	�
� �	��� ��� ��� �� ������ ��� ���#�� ���$� ����

#� �����(��%� �



�����������	
���� ����������	
���� ����������	��

����;���

���� ���
�����������
������������
�

������ ���������
�

/������	�
��	������ �#�����#���(��(��&����&����� ��$� �� ��($�

��������� ���� -*	!/2�.� �&��(&����� ��� ���� ��� �����%� 5�� � �����

�#����)�����&����#��������������& (�������������� ���������$���������

#�������������%�

�

��������������&�������������#������������������ �6������������'�������

���7)� ���$� ��� ���� ����� ��� ���� ���� *�*� ���������� ���� ��� -��/%.�

<�������	�
��	�����)�(�#+���&������������������$�������(��%�

/���&���� &������&����������������������� ����$������������������������

-�#����.������������ ��������*�*%�/������� ���������������������� �

����#����)�#��#+����������-2.��& (���������������������*�*��#��������

���������� ����������������������� �$�&������ �������%�/��#������ ����

�#����� ������ � �& (��)� ����#�� ���� -,=2�.� �&��(&����� ��� �������

+�$� �����)� ������ -2''''.� 6������ ''''� ��� ��$� �& (��� ��� ������ �

 � ��$������� ����� ��������#��$�&������ ��� ����7)� ���� ����� ������ ����

#&����� ����� 6����� �����7� +�$� ��� ���� ��� +�$� �����%� /��� -2.�

�& (��� ��� ���� ���� ��� ���� �#����� ����� #������ ��� ���� �& (��� $�&�

�������%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

������������� ����(������������#&������$��#������������*�*)�����*�*�

�#����������������$������������#������������� �������������%�!���#������

-
���������.������+�$��������������$�&���� ������&��� ��� ������������1��

 �����#����)���������������������& (���������������� ������$�&������

���#�������������%�

�

�����

������	
���	��	
	

������	

	

�����	��	���
���	�����	��	���	

��	��	���
���	�����	���	�����	

��	����	�	������	

	

���	���	��	���
���	���	����	���	��	

���	��	�����	���
���	��	��	����	

	

����	

	



����������	�� ����������	
���� �����������	
����

��������

������ ���������
�

/������	�
��	������ �#�����#���(��(��&����&����� ��$� �� ��($�

��������� ���� -*	!/2�.� �&��(&����� ��� ���� ��� �����%� 5�� � �����

�#���������&����#��������������& (���������������� ���������$���������

#�������������%�

�

�

�

�

�

�

�

�

�

�

�

�

	

�����
	���	���
���	��	

���	���	������	
���	��	

����
	���	���
���	����	

	

	

���	����	��	���	����	��
	



�����������	
���� ����������	
���� ����������	��

����>���

������ ����������������������������
�

/��#����������������������� )������� �����& (������ ���������� �$�&�

��������#����������������	�
��	������ �����#����%���������$��� �

���������������$����������)��������	�
��	���������������#�����

�����������������������?&������������ ��& (���������������������$�����

&�����������%�/������	�
��	���������������#��������&�������(��

#���&�������������*�*1���������������%�/��#� ��������������#�����)�

������ ���� -,=2�.� +�$� ��� ������� +�$� �����%�<����� ���� ������$���

�#����� ���� (���� �������	�
��	��� ��� �������� �#����)� $�&������

����� ����� ��� ����� ���� �������� ���� �� �� ����� �����%� =��&��� ��� ����

���	�
��	�������#�����($��������������-*	!/2�.�+�$��������

���+�$������%�

�

�

�

�

�

�

�

�

�

�

�

�

	������������������#����)�����&����#����������������#�  ��������� ����

����� ������ � ����#��$� ��� &��� ���� ��&�� �����+�$�� ��� �������� �� �����

������ %�/����������+�$�����������������������������#������������ ����

(���� ��'�� ���� ������#� �&����#�� ��� ����� ����� ����� ������ �

������� ���%�

�

/�� ������ ����� ������ ����#��$� &����� ���� ������)� ������ ���#�� ���� #&�����

��������������� ���������&���(����������%������������������������������

�������� ����� ������ -�����.� ���� #&������ #&����� ��������%� ��� $�&� �����

4&���#������������������� )�����#&��������&���(������#��$��������������

���"��#+�6�2"7�#����#����-8.���������#����%���$���������� �����������

�����(����������������������2"�����(������������������������� %�/�+��

���� �� �� ��� &���������� ���� ���� ������� �������� ����� ������ ����� ����

������ ���������(�����������%�

�

!&������ �� &���� ������ ��� ������� ���� ��'�� -/9�;8.� ����� ���� ����$�

#������������� %�/���&������&���#��#+� ����� ����#&����� ��������������

����� ���� -8.� ��� ���� �� �� ����� ��� ���� ����� ������ � �& (��� ���� �����

������-/9�;@�2"A.� 6������ @�2"A� ������� �����������-�2").�(&�� ����

�2"� +�$� ��� ���� ��� +�$� �����7%� /��� ����� ������ ����� ���� (��

������$��� ��� -B/9�;8.� ��� ���� ������1�� (&����� ����%� /�� ������� �� ����

������������������������� )�����������-��!�=/.�+�$���� �������+�$�

�����%� /��� ���� #�  ���� ��� ��������� ����� ���� ����� ������ � ���� ����

#&������������������������������������%�

�����	 	

	

	

	

	

	

	

	

	

	

!������"!
	���"!�	���"!����"!������"	



����������	�� ����������	
���� �����������	
����

����C���

�

�

�

�

�

�

�

�

�

�

�

�

�

/��#������������ ����������������)� ��������#&��������������� )�������

��������� )��������������������D�
/�=D�+�$%�

!� �����$)� ��� ������� ��� ��� )� ���� ���� #&����� ��� ���� ��� )� ���� �����

����������D�
�/�D�+�$%�

�

/���&���� #���#�����&�� ��� ������� ����� ������ � ����� ���������&��� ����

����������+�$������������#����������� �������� ���%�<���������&�������

�������� �� ������ )� ���� #������� ����  ���� ����#��$� ��� ����� ������ �

 � ��$%�/���'������ ����������������#���)�����&�������������������������

�����+�$� ��� ���� ������$� &���� 6����� ��� ����� ��������� ��� ��� ���� -
����

�����.� �����+�$%�/���� ���&���� ���� &���� ��� �������	�
��	��� ���

 �����#�����6����-�����1��#����7%�

�

��'�)���������������&#������������#����� ��������������������� ������

������������������ %�

�

�����	 	

���# 	

$	

	

	

	

	

	

	

	

!������"!
	���"!�	���"!����"!������"	



�����������	
���� ����������	
���� ����������	��

���3����

������ ��� �!!��!!�!��� ��
�

<�� ����� ������$� �������� ����)� ������ ��� ����� #������� �� ���� �����

������ �6�������������� �����������$��'����7)����#���&��� ����������� ���

������ ����� ������ ����� ���� ����� ������ � ����#��$%� ��� ������)� �������)�

�����������������������������������&���������*�*1���������������%�!�)�

���	�
��	��� ��� ��������� ����� �����+�$�%� /����� ����� �����+�$��

���������������������������#���������&������������������ ��������������

������ %�/�������������#��+�$�� �+��������  ���� &#��������%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

/��� ������ +�$��������� #�������� ��� ���� -,��#������������#�.� +�$%� 2��

����� �#����)� ���� &���� #��� ������ ����� ������ �(�&�� ���� ��������

���#���������?&��� ���������������������� %�"$�&���������#&�����+�$��

����������+�$������)�����&����#����������������#&����������$���������

������ ���� ������ ����� ������ ���� ����� ����$%� !� �� �������� ��?&����

�& ���#�������� �����)����������������������#��(���($�&���������#&�����

��������������+�$������������+�$������%� �

�


��1�� ���+� ��� ��� �'� ���� ��� ������ ����������%� <�1��� ������ ����

��������������� �������������������������� E�

5�������E� ����

*������E�5�����

�

5����)� ���1�� ��������� ���� #&����� ��� ���� -5��.� ����$� 6���� #&����� ���

�&�� ���#���$������������������������$������$�&�����������������#����7%� �

��'�)� ��1��� ������ ���� ��� ���� ��� +�$� ������ ���� ����� ������ ����

-��,	/.�+�$%�/��� ����$� ���&��� ���� ����#���� -���%�.%�/�� ������ ����

#������������ �����)� ��������#&�����������������-*22
��/.�����$�

6&����� �������+�$������������������+�$7����� ����������� ���� ������

#&����� +�$� 6������ ������ +�$� ��� ������� +�$� �����7� &����� ���� ����$�

����#�����-5
22%.������&������������� �����������������������#����

��������#�)� ��� ��������$���(���� ����� ��� ��������� ������ %�/�� ���� �����

����� ������������������������ )�����������-�**�,/.������+�$��������

PROCESS CONTROL INFORMATION 
 

-- FEED --- F= 
-- SPINDLE -- DIR= 
 S= 
-- COOLANT -- CLT= 
-- TOOLING --  NUM= 
 H= 
 D= 
-- TL COMPG --LEN= 
 DIA= 

 
 
INPUT DESIRED FEED RATE 
0 ~ 30000 
NUM= 
 
[         ][ ][ ][CLEAR][ACCEPT] 



����������	�� ����������	
���� �����������	
����

���39���

������$� &���%� /��� ����� ������ ��� ��������� ����� ���� ������ � ���� ����

#&������� �����������$�&����������$����#�����%�

�

�

�

�

�

�

�

�

�

�

�

�

�


��1�� ���� ����#&�������������� ��� ����-��.������ ��������������� ����

������ �������� ���%�/���&����#��� ��&���$����������� ����� ������

����� ���� ����� ������ � ��� � ���� ������� �#����� ��� &��� ���� ��������#��

�����+�$�������������������������� ���������������������� %�

�

�

�����	 	

�%��� 	

�& 	

$	

	

	

	

	

	

	

!������"!
	���"!�	���"!����"!������"	



�����������	
���� ����������	
���� ����������	��

���3F���

������ 
" �#���!!�!��� ��
�

���� ����� ��� ����� ������ ���#���� ����� ������ ��� ���� ����� ������ )�

 �#���������� ��� �������&�&���$�����������#� ���������� �#�������

���������%���#���������� ��� ���� ��������� ���&����� ���������������

����� #������� ���� ��� ���� ��� ���� ����� (������� ���� ���#������ ������%�

<��������������������(�������#�����������$��� ����������*�*������&���

�������� �����'��� ��� ���%� ������+���� ������#����� ������� ��� ����

����*�*�#�����������$��� )����#�&����� ��$�&�������������������������

��#�����$������ �����%�"&���������#��������&���'� ���)�������������&���

�������#����#����*���%�

�

/���##��������-��*������������#�.�����������-��*2�.������+�$����

����������$�&���%�/���������������$�������*��������� ��&%�/�����#����

����� ��&��������������������#������&��������($�$�&��#��������$��� %�

/���  ��&� ��� �������� ����� �������� �����%� /��� ������ �& (��� ��� �����

��������������#&������������������������������������ ��&%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

/��� &���� #��� &��� ���� #&����� ����� +�$�� ��� ���� ��� +�$� ������ ���

#�����������������$����������#��������������%�/��� ��&��#�������������

����������$��%� /���� ��)� ���� ������ ��� �����#�� ����� ���� ����� ����������

���&��������������������%�*��������$)����� ���������(�#+�&��(�$��������

����������������(���������&��������������������%�

�

!��#�� ��� ���� ���+���� ���� #���������� �������� ����� ������ ��� �����

���#������������#������&������� ��&��$��� �&�������������� �������

��������������������������#%������������#������������������)�������������

�CF����&�����������������������+�#�����������$��� %�"$��$��������-CF.�

���� ��������� ���� -��,	/.� +�$� ��� ���� ��� +�$� �����)� ���� �����

����� �����������CF����������$��%�/���&�������������#�� ���������� ����

�����+�$�� ������$��� ��� ���� (���� � ��� ���� ����%� /����� ���� �����+�$��

#���������������� ��������������������$����(�&�����������#%�

�


	���	���			�	��	&	


��	�����	���	


��	�����	���	


�'	��	�����	


�%	���	�����	


�(	����	


�)	����	����	�������	


�*	����	����	


�&	��	����	����	


�)	�+	����	����	

	

	

	

��
	���	���	���	

����	

�����	�&	���	
�&	���	

!	 "!	 "!	 "!	 "!	 "	



����������	�� ����������	
���� �����������	
����

���3����

�

�

�

�

�

�

�

�

�

�

�

�

�

�

<���� ���� &���� ������ ������� ���� ����� ����#)� ��'��(����� ����� ������ ���

������$��%� <���� ���� &���� �������� ���� -�=�,G%.� �����+�$)� ��$�

������#�������� �������������������#����������$��%�����������$)�����&����

#��� #����� � ����� ���� ����#���� ����#� ��������� ��� ���� ����� ������ �����

���$�����%� �

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�����
� ����������������������������������������������

����������������������������������������������������
������ ���!���� �"�������#�$�%&'�

�

/��� &���� #��� ������� ���&��� ��� ���� ������� ($� ��������� ���� 
���� ������

�����+�$��������������$�&���)��������#��$�������������?&���������� ������

���������������#����%�/��������� ���������� ������ ��������������������

�#����)� ���� &���� �� ��$� ���� ��� �$��� ��� ���� #�  ���� ���� ������ ����

-��!�=/.�+�$�����������+�$������%�5����&���'� ���)� ���1������ ����

H�� ���� I��'��� ��� 9%�%� !��#�� ��� ����� #����� ��� ����� ���� �CF�

#�  ���� ��)� ��� ��#�)� ���� #�  ���� ��� ����)� ��� ��&��� �$��� ���

-�CFH9%I9%@�2"A.� 6������ -�2".� ��� ���� ���� ��� "��#+� +�$� ��� ����

	
*'	�����
	����	������	�����	

�,	-./0�1,�23	
*'	0455627�	6	849:.�/0/	

04497�26;/	-,-;/5	<-/=/0;/7	>,	
�(	;4	


�*?	�-	-@�1;/7	;4	-/;	6	2/8	849:.�/0/	

04497�26;/	-,-;/5	49�3�2�	�@/2�	;@/	

849:.�/0/	A/94	.4�2;	411-/;	B6=C/-�	

�@�-	5/62-	;@6;	6==	;@/	849:.�/0/	

04497�26;/	-,-;/5-	69/	-@�1;/7	>,	;@/	

-65/	654C2;�	

	

	

	

	

	!���	 "!
�����	"!	 "!	 "!	 "	

	
*'	�����
	����	������	�����	


*'��������	411-/;-	;@/	
�(	04497-�	

>,	B/0;49	�	�2	�	627	�	6D/-�	

	

	

	

	

	

	

	

	

	

	

	

	

	

	

	!���	 "!
�����	"!	 "!	 "!	 "	

���	 '��	

'��	

���	
��	���
��	

���	���
��	

�	���	

���	

��



�����������	
���� ����������	
���� ����������	��

���3����

����+�$������7)��������������������-��!�=/.�+�$�����������+�$�

�����%� ������ ���������� ���� ����� ��� #���� ����� ���� ����� ������ � ����

�J�������  ��������������$�������������#�����������&������#�  ����

��������%�/���������������&������������ �������� ���)����1�� ��������

#&����������������������CFH9%I9%�(��#+%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

*�  ������&#����� �������������)�����������#�)� ���� ���� ����#�� #���

����(����������&����� ���� ������ ����������(���%�=� � (��� ���&���

���� -��!�=/.�+�$� ��� ������� +�$� ������ ��� ������� ��$� ����� ������

���������������(&������������������������� %�5���&��������������������&���

�������(&������������ ������(���������%�

�

�����	 	

�%��� 	

�& 	


*'������ 	

$	

	

	

	

	

	

	

	

!������"!
	���"!�	���"!����"!������"	



����������	�� ����������	
���� �����������	
����

���33���

������ �" �#���!!�!��� ��
�

��#����� ���� &���� ($� ���� *�*� ��� ��?&���� ���� �'�#&����� ��� �#�����

�&'�����$����#�����%�����'� �������������������� �#�������������������

�� ����� ������ %� K&��� ��+�� ���� ������ #�  ����� ��� ����� ���������)�

��#�����#���(�� �������������#��$� ����� ��������� ������ �($�&����� ����

��������#����8��������&����#���&�������-��*������������#�%.�/������#��

��*������������#������������-��*2�.������+�$��������������$�&���%�

/���������������$�������*��������� ��&%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

/�����*����  ��&� ������$� ��� �� ����� ��� ���� ��*����  ��&� ������$%�

/����������& (�������������������������#&���������������������$������

����������������#����%�/�����*���� ��&�������$���� ����&�����������

�� ����� ��$� ��� ���� ��*���� ����� ������$%� /��� &���� #�������� ����

������$��� ����� ��� ���� ����� �#����� ($� &����� ���� ,����	�� ����

,��������#&�����+�$������������+�$������%�/���� ��&�������$����

�����-#��#&���.������������� ��������������#������������������������&����

����&�����������(��������)���������������%�

�

��� �&�� �'� ���)��������� ��� ������� ��� ��������� ���#���� ����� �&�� �����

������ %�!�)������&������������&���������#��������� ��&����������

��������$�����������+�������%�2���������������������������$�#������-��9�

2,/�2��
�!/2,.%�"$� �$����� -9.� ���� ����� ��������� ���� -��,	/.�

+�$�����������+�$������)������������'�������������#�����������%�/���

&���� ����� ����#�� ����)� ����� ���&��� ���� -�=�,G%.� +�$� �� �����

������$��)����������$����������#�������������������������(��%�

�	���	���			�	��	%	

���	���
���	����	

���	��������	����	

��'	���
���	��	

��%	�������	��	

��(	������	���	

���	������	����	

��#	����	����
	

��&	�����	�������	

��)	����	�������	

	

	

	

��
	���	���	���	

����	

�����	%�	���	�%�	���	

!	 "!	 "!	 "!	 "!	 "	



�����������	
���� ����������	
���� ����������	��

���3;���

�

�

�

�

�

�

�

�

�

�

�

�

�

�

K&�����������������#��������� ��&)����#�������������&�����������������

��� �$��� ��� ���� #�  ���������� ��� ����� ����%� 5��� �&�� �'� ���)���1���

������-��9@�2"A.��������������������-��!�=/.�+�$�����������+�$�

������ ��� ������� ����� �����&#����� ����� ���� ����� ������ %� <�1��� �����

�������������#&������������-��98.�(��#+�����������������&������������ �

����$%�

�

�

�

�

�

�

�

�

�

�

�

�

�

	���	��������	����	

���	8�==	06C-/	;@/	.69;	.943965	;4	-;4.	

/D/0C;�42	42=,	�1	;@/	��������	����	

1C20;�42	�-	60;�B/�	�@�-	�-	C-C6==,	6	

.C-@	>C;;42	42	;@/	4./96;49	.62/=�	

�1	;@/	4.;�426=	-;4.	>/045/-	60;�B/�	;@/	

4./96;49	8�==	>/	9/EC�9/7	;4	.9/--	;@/	

0,0=/	-;69;	>C;;42	;4	042;�2C/�	

	

	

	

	!���	 "!
�����	"!	 "!	 "!	 "	

�����	 	

�%��� 	

�& 	


*'������ 	

��� 	

$	

	

	

	

	

	

!������"!
	���"!�	���"!����"!������"	



����������	�� ����������	
���� �����������	
����

���3����

���� ��������$�	�����%����
�
�

���	�
� �	��� ��� &����0��� -#������ #$#���  �#������).� ���#��

������� ���� &���� ��� ������ #������ #$#��� (��#+�%� /����� #������ #$#����

���������&�����##��������������������� �#�����������&���%�

�

%�&���� '������

������ (���������������

������ 	��������

����)� *�������

����+� $�������

����,� -������

����.� �����/������

����������

� ���/���0�

����1� -��0�/������

��)��� &��������������%������

��)��� &������������2������3
45�

��)�)� &������������2������3�
5�

��)�+� &������������2������

��)�,� &��������������67"����

��)�.� &��������������(������

��)�1� &������������������3
45�

�

���"���/���0�

��)�8� &������������������3�
5�

(� ���� '������

���)�� �������2�$�"�������������

� ���/���0� ���)�� �������2��������

��))�� ��9���:��"�����67"����

�

���"���/���0�
��))�� ��9���:��"�����(������

�� )����� '������

���,�� %��0��������$�"���

���,�� %��0��������-������:������

���,)� %��0��������6����:������

���,+� %��0��������(���:���

���,,� %��0�����(���������������

����������

� ���/���0�

���,.� %��0���2�	��������

��))�� ��9���:��"�����67"����

��))�� ��9���:��"�����(������

�

���"���/���0�

��)))� ��9���:��"�����*���0�


���*���� '������

���.�� ����;����2�$�"���

���.�� ����;����2�-������:������

���.)� ����;������6����:������

���.+� ����;������(���:���

���.,� (���������������

����������

� ���/���0�

���..� 	��������

�

���"���/���0� ��))+� ��9���:��"���2������



�����������	
���� ����������	
���� ����������	��

���3>���

������ ����������
�

/��&���-#������#$#��� �#������.�����������-*I*
�.������+�$��������

������$�&���%�/���#$#��� �#������� ��&������������%�

/���� #$#��� �#������� ��&� ������ ���� ���� #������ #$#���� �&�������� ($�

���	�
��	�����%�/��� ��&����(��+���&��������������������%�/���

�������& (�������������������������#&��������������������� ���� �������

���� ��&%�

/���&����#���&������������+�$������������+�$����������#������� ����

������$��������#$#��� �#������� ��&������%�/��� ��&��#�������������

����������$��%�/������)����� ��������������#��(�$�����������������������

���&��������������������%�*��������$)����� ������������(�#+�(�$��������

�������������������&�������&��������������������%�

�

"$��$����������& (������������#����������$���������� ��&����������

�������������-��,	/.�+�$�����������+�$������)����������� ����������

������#����#������#$#���(��#+������������%�

�

/���#������#$#������ �������� ������������������������������������#����

��������#�� �#����%� 2�� ����� �#����)� ���� &���� #��� ���&�� ���� ��������

����� ������������#��#������#$#��%�<����������� ����������������$��)�

������������ ���� ��?&������ #������#$#��%�5����&�� �'� ���)���1��� ������

��������� ���������������9����#������#$#��%�

�

������ ��������#&�����������������-5L.�����$)������#������������� ���

&�� ��� ������ ���� ������ #$#��� ��������%� 
��1�� ���� ����� ���&�� ($� ���������

-3�.�����������������������-��,	/.�+�$�����������+�$������%�/���

��������� ����� ���� (�� ���� ��� -3�%��%.� <�1��� ���� ���� ����������

����� ��������������� ����$E�

<�L�9� E���*G������/I,��6�2�<�

7�

*�L�3%���� E�*
��=��*��

��L�9� E�=�5�=��*�� ,2!�/�2�� =�/	=�� 6����,2��/�

=�/	=�7� � �

5�L�3�%�� E�5��=�/��

,�L�3�� E�<�

�/����6��� ��#�&���7�

��� $�&� ������ ���� ����� �����)� $�&� ����� ����#�� ����� ���� ��������

#������������� ��� ���� ����� ����$� ��� �� �&����#�� �������� ��� (���+���%�

/���������������&�������#��#+�����������$�������$������������������������

�#����%� �

�

/�� ������� �� #������ #$#��� ����� �� ����� ������ )� ������ ���� -�**�,/.�

�����+�$���� ����������$�&���%�I�&������ ���� ���� ���&������(��#+���� ����

������� �#����� -�9���� <9%� *9�%� �9%� 53�%� ,3�%� 8.%� I�&� ����� ����

�������� �� ?&���� #� ���'� ����� ������ � (��#+� ����� $�&�� ����� ������ �

�����&�������+�������������������� ���#������#$#��%� �

�

2��������������#�����6������#��������#��(������!�#�����9%�%�7)� ��������

���� ���������� �����+�$� #�&���� ���� � -��/.� �����+�$� ��� ������%�

,�������� ����� �����+�$� #�&���� ���� ����� ����$� �#����� ���� ����

#������������� #������ #$#��� ��� ������%� I�&� #��� #������ ���� ���&��

������$������ ����� �#�����($� �$����� ������������&������ ��������������



����������	�� ����������	
���� �����������	
����

���3C���

-��,	/%.� /���)� ($� ��������� ���� -�**�,/.� �����+�$)� ���� ���������

#������#$#���(��#+����#�����������������%�

�

/���#������#$#�������������($����	�
��	����������#�����&����

��� �� ����� ��� ��  �#������� �$��� (��#+� ���� ���&��� (��#+%� !�)� ������

����������� �#��������$���(��#+)��&#������9���)����������������#����)�

������-*I*
�.��������������#�����������������#���)��9F9������9F9�%�

5����'� ���)���#������#$#��������� ���&���(��������������������%�

�

�9����<9%�*9�%��9%�53�%�,3�%�8� �

�9F99�"�%�
�9�%�G�%�M�%���3%�*�%�9�%��999%�8�

�

�����

�� ����������	
������������ ������"���/����������

�����������:������������ ���/���0�����:��"���/���0� �
� <�� �����:��"���/���0�����/����������:��������

����������� ���/���0�
)� *�������������������������� �����������������

&�!�;���������:"�������������/���������:�!������������
�+����������

�



�����������	
���� ����������	
���� ����������	��

���;����

������ �����+����� '������#��, &��
�

�������� �� '�������,���-&� )��+�%�&���� '������
�

�������#��&&����.�
/�
���������� ��������

=� ��(&������*>%
� ��?�	��������!����"���!����

)�?�	��������!�����!����

(� (�
�$��(
� 	��������:���������"�:�����:�!��0�������������������

�������:����"����"�������������

�� $
�
$
�(
�%<6�*�<��

$
*�$��

��?� �

)�?� �

�� �

	�$�*
� ("������:��������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������

�

���&&����.�
//�
���������� ��������

=� ��(&������*>%
� ��?�	��������!����"���!����

)�?�	��������!�����!����

+�?�%��0����������

,�?�&�������������0����������

(� (�
�$��(
� 	��������:���������"�:�����:�!��0�������������������

�������:����"����"�������������

�� $
�
$
�(
�%<6�*�<��

$
*�$��

��?� �

)�?� �

4� (�**����	
%*&� ("����������������:������"�������������

�� �

	�$�*
� ("������:��������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������

�

��������.�
/0�
���������� ��������

=� ��(&������*>%
� ��?����������������

)�?�$�;�������������

+�?�$�������������

,�?�$�;�������������������

(� (�
�$��(
� 	��������:���������"�:�����:�!��0�������������������

�������:����"����"�������������

�� $
�
$
�(
�%<6�*�<��

$
*�$��

��?� �

)�?� �

�� �

	�$�*
� ("������:��������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������

�� *&$
�	�����
�	� ������:������������������

6� 6%��	�
�6%

	� 6����������������������3�����5�

�



����������	�� ����������	
���� �����������	
����

���;9���

��������.�
/1�
���������� ��������

=� ��(&������*>%
� ��?�
������/ ������������

)�?�
������/ ������������

+�?�
������/ �������������:�����!�������/������

(� (�
�$��(
� 	��������:���������"�:�����:�!��0�������������������

�������:����"����"�������������

�� $
�
$
�(
�%<6�*�<��

$
*�$��

��?� �

)�?� �

�� �

	�$�*
� ("������:��������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������

�

2������.�
/3�
���������� ��������

=� ��(&������*>%
� ��?�
������/ ������������

)�?�
������/ ������������

+�?�
������/ �������������:�����!�������/������

(� (�
�$��(
� 	��������:���������"�:�����:�!��0�������������������

�������:����"����"�������������

�� $
�
$
�(
�%<6�*�<��

$
*�$��

��?� �

)�?� �

�� �

	�$�*
� ("������:��������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������

�

(����-������.�
/4�
���������� ��������

(� (�
�$��(
� 	��������:���������"�:�����:�!��0�������������������

�������:����"����"�������������

�� $
�
$
�(
�%<6�*�<��

$
*�$��

��?� �

)�?� �

�� �

	�$�*
� ("������:��������

4� 6&��*���<��*� 6��:�������������������:�����������������������������

���������/������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������

�

2� )�-������.�
/5�
���������� ��������

(� (�
�$��(
� 	��������:��������/�������"�:�����:�!��0���������

�����������������:����"����"�������������3������;��

;��"�5�

�� �

	�$�*
� ("������:��������

4� 6&��*���<��*� 6��:�������������������:�����������������������������

���������/������

%� 	=
���*��
� 	!����������������/�������:����������"�����:������



�����������	
���� ����������	
���� ����������	��

���;F���

�������� (��6���-&� )��+�%�&���� '������
�

�����!�"�%�&����������.�
/0/�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� %<��*���3A��A�65� A�������������:����������������

B� %<��*���3>��A�65� >�������������:����������������

�� %<��*�)�3A��A�65� A�������������:�)��������������

(� %<��*�)�3>��A�65� >�������������:�)��������������

	� %<��*�+�3A��A�65� A�������������:�+��������������


� %<��*�+�3>��A�65� >�������������:�+��������������

�

�����
� ������������������ ���������������:���������������������

������/"����������:�A�����>������:������������
���������

�

	����7�86�&������*�&9�"�%�&����������.�
/0//�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� 6*�$*�%<��*�3A��A�65� 6�����������A�������������:����������3��������������5�

B� 6*�$*�%<��*�3>��A�65� 6�����������>�������������:����������3��������������5�

�� ����
� �������:����������

(� ���-
$�<��&<�
� �"�/����:������������������

	� %�*(&�=�	*&� 	��������������������/��!����)�������3������;��;��"��

��� 5�


� ���
��
��*&� 	��������������������/��!�����������������������������

����������������3������;��;��"����� 5�

�� <��**����%<��*��� &�����"�/����:����������������������������� �

�� <��**����%<��*�)� &�����"�/����:�)��������������������������� �

C� <��**����%<��*�+� &�����"�/����:�+��������������������������� �

D� <��**����%<��*�,� &�����"�/����:�,��������������������������� �

�

�����
� 	��������������:��������%�(*&�=�	*&�������
�

�
��&*&��������������
� ������������������ ���������������:�����<��**����

&<�
�����������

�



����������	�� ����������	
���� �����������	
����

���;����

	����7�����:6�&������*�&9�"�%�&����������.�
/0/0�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� 6*�$*�%<��*�3A��A�65� 6�����������A�������������:���������� � 3��������������5�

B� 6*�$*�%<��*�3>��A�65� 6�����������>�������������:����������3��������������5�

�� ����
� �������:����������

(� %�*(&�=�	*&��� 	��������������������/��!�����������������������)���

�����������3������;��;��"����� 5�

	� %�*(&�=�	*&�)� 	��������������������/��!����)������������������+���

�����������3������;��;��"����� 5�


� %�*(&�=�	*&�+� 	��������������������/��!����+������������������,���

�����������3������;��;��"����� 5�

�� %�*(&�=�	*&�,� 	��������������������/��!����,������������������.���

�����������3������;��;��"����� 5�

�� %�*(&�=�	*&�.� 	��������������������/��!����.������������������1���

�����������3������;��;��"����� 5�

C� %�*(&�=�	*&�1� 	��������������������/��!����1������������������8���

�����������3������;��;��"����� 5�

D� %�*(&�=�	*&�8� 	��������������������/��!����8������������������E���

�����������3������;��;��"����� 5�

�� %�*(&�=�	*&�E� 	��������������������/��!����E������������������F���

�����������3������;��;��"����� 5�

%� %�*(&�=�	*&�F� 	��������������������/��!����F�����������������������

�����������3������;��;��"����� 5�

4� %�*(&�=�	*&���� 	��������������������/��!������������������������

����������������3������;��;��"����� 5�

�

�����
� ������������������ ���������������:�����%�*(&�=�	*&�

����������

�



�����������	
���� ����������	
���� ����������	��

���;����


��#�"�%�&����������.�
/0/1�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� 6*�$*�%<��*�3A��A�65� 6�����������A�������������:�������������� � 3���������

�����5�

B� 6*�$*�%<��*�3>��A�65� 6�����������>�������������:��������������3���������

�����5�

�� �
��*&���<���*<�*&
�

�6*�6�	
�

����������������������������� �

=� �
��*&���<���*<�*&
�

)�	�6�	
�

��������������������)��������

�� ���-
$�<��&<�
�

��<���*<�*&
��6*�

6�	
�

�"�/����:�����������������������������

C� ���-
$�<��&<�
�

��<���*<�*&
�)�	�

6�	
�

�"�/����:��������������������)��������

D� ����
�<��*&
��6*�6�	
� �������:��������������

�� ����
�<��*&
�)�	�

6�	
�

�������:�����)��������

�� <��**����%<��*��� &�����"�/����:����������������������������� �

(� <��**����%<��*�)� &�����"�/����:�)��������������������������� �

	� <��**����%<��*�+� &�����"�/����:�+��������������������������� �


� <��**����%<��*�,� &�����"�/����:�,��������������������������� �

�

�����
� ������������������ ���������������:�����<��**����

&<�
�����������

�



����������	�� ����������	
���� �����������	
����

���;3���

�:6����"�%�&����������.�
/0/3�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� 6*�$*�%<��*�3A��A�65� 6�����������A�������������:�������������� � 3���������

�����5�

B� 6*�$*�%<��*�3>��A�65� 6�����������>�������������:��������������3���������

�����5�

�� �
��*&���<���*<�*&
�

�6*�6�	
�

����������������������������� �

=� �
��*&���<���*<�*&
�

)�	�6�	
�

��������������������)��������

�� ���-
$�<��&<�
�

��<���*<�*&
��6*�

6�	
�

�"�/����:�����������������������������

C� ���-
$�<��&<�
�

��<���*<�*&
�)�	�

6�	
�

�"�/����:��������������������)��������

D� ����
�<��*&
��6*�6�	
� �������:��������������

�� ����
�<��*&
�)�	�

6�	
�

�������:�����)��������

�� <��**����%<��*��� &�����"�/����:����������������������������� �

(� <��**����%<��*�)� &�����"�/����:�)��������������������������� �

	� <��**����%<��*�+� &�����"�/����:�+��������������������������� �


� <��**����%<��*�,� &�����"�/����:�,��������������������������� �

�

�����
� ������������������ ���������������:�����<��**����

&<�
�����������

�

��� &��"�%�&����������.�
/0/4�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:������������

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:������������

$� $�	��6� $���"���:������������ �

�� 6*�$*�����
� (�������������:��������������������

(� ���-
$�<��&<�
� � �"�/����:���������������������������

	� <��**����%<��*��� &�����"�/����:����������������������������� �


� <��**����%<��*�)� &�����"�/����:�)��������������������������� �

�� <��**����%<��*�+� &�����"�/����:�+��������������������������� �

�� <��**����%<��*�,� &�����"�/����:�,��������������������������� �

�

�����
� ������������������ ���������������:�����<��**����

&<�
�����������

�



�����������	
���� ����������	
���� ����������	��

���;;���

�� �7�86�&������*�&9�"�%�&����������.�
/0/5�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:���������

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:���������

$� $�	��6� $���"���:��������� �

�� 6*�$*�����
� (�������������:��������������������

(� %�*(&�����
� (������������/��!����)�������������

	� ���-
$�<��&<�
� � �"�/����:������������������������


� <��**����%<��*��� &�����"�/����:����������������������������� �

�� <��**����%<��*�)� &�����"�/����:�)��������������������������� �

�� <��**����%<��*�+� &�����"�/����:�+��������������������������� �

C� <��**����%<��*�,� &�����"�/����:�,��������������������������� �

�

�����
� ������������������ ���������������:�����<��**����

&<�
�����������

�

�� �7�����:6�&������*�&9�"�%�&����������.�
/0/;�
���������� ��������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� &����������3"�"��� �������;��;��"�5�

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:���������

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:���������

$� $�	��6� $���"���:��������� �

�� 6*�$*�����
� (�������������:��������������������

(� %�*(&�����
��� (������������/��!�����������������)��������

	� %�*(&�����
�)� (������������/��!����)������������+��������


� %�*(&�����
�+� (������������/��!����+������������,��������

�� %�*(&�����
�,� (������������/��!����,������������.��������

�� %�*(&�����
�.� (������������/��!����.������������1��������

C� %�*(&�����
�1� (������������/��!����1������������8��������

D� %�*(&�����
�8� (������������/��!����8������������E��������

�� %�*(&�����
�E� (������������/��!����E������������F��������

%� %�*(&�����
�F� (������������/��!����F����������������������

4� %�*(&�����
���� (������������/��!����������������������������

�



����������	�� ����������	
���� �����������	
����

���;����

�������� �� '�������,���-&� )��+�(� ���� '������
�

(� ����"���6�'�.�
/0�
���������� ��������

*� *&�(D�
66� $���;������"��������"������

C� (�*�	
%*&�<��*<<��

2�A�6�

("�������������:������"����������������������9���

����������3@��9��5�

&� ����6&������<��*� �������������"���

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������

	� *<<��	���
*
$� *�������������

�� (�*���<��*�<��

*<<��$�	��6�

("���������"����:��������������"������������

(� (�
�$��(
�<��

*<<���A�6�

	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� ��(&������*>%
� ��?�6�������������������"���������A�>�������

)�?�-�����������������"���������A�>�������

�� (�
�$��(
���<���*<�

*<<��$�	��6�

	��������:��������������"�:�����:�!��0�������������

�"���������������������A�>�������

-� 6*�$*�%<��*� ��?�6������"�����������������

)�?�6������"���������������)�

+�?�6������"���������������+�

,�?�6������"���������������,�

�

(� ����"�(���!'�.�
/0/�
���������� ��������

�� �

	$�*
� ����������:���������������������������"������������

	� *<<��	���
*
$� *�������������

�� (�*���<��*�<��*<<��

$�	��6�

("���������"����:��������������"������������

(� (�
�$��(
�<��

*<<���A�6�

	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� ��(&������*>%
� ��?�6�������������������"���������A�>�������

)�?�-�����������������"���������A�>�������

�� (�
�$��(
���<���*<�

*<<��$�	��6�

	��������:��������������"�:�����:�!��0�������������

�"���������������������A�>�������

-� 6*�$*�%<��*� ��?�6������"�����������������

)�?�6������"���������������)�

+�?�6������"���������������+�

,�?�6������"���������������,�

�



�����������	
���� ����������	
���� ����������	��

���;>���

�������� (��6���-&� )��+�(� ���� '������
�

�:6����"�(�<�#�+��6���.�
/00�
���������� ��������

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:������7"����

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:������7"����

�� �
��*&���<���*<�*&
�

A��A�6�

��������:��7"���������������A��9���

=� �
��*&���<���*<�*&
�

>��A�6�

��������:��7"���������������>��9���

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� ����"�������:�������������������������

�� ����
� ������:����A��9���

$� (<$�
$�$�	��6� $���"���:��������������:������7"����

�

�����
� ������������������ ��������������	
%*&�����

(<$�
$�$�	��6�����������

�

��� &��"�(�<�#�+��6���.�
/00/�
���������� ��������

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:������������

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:������������

$� $�	��6� $���"���:������������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� ����"�������:�������������������������

�

�����
� ������������������ ��������������	
%*&�����������

�



����������	�� ����������	
���� �����������	
����

���;C���

�������� �� '�������,���-&� )��+��� )����� '������
�

�� )������"���6�'�.�
/3�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"����:����0������������������:��������

/�������:����0���

C� (�*�	
%*&�<��*<<��2�A�6� ("�������������:������"����������������������9���

����������3@��9��5�

&� -<**<������6&���<��*� �������������"����:�����/�����������

D� 6�	
�����6&���<��*� �������������"����:����������!���������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��*<<���A�6� ("������:������������������������9���3@5�����������

	� *<<��	���
*
$� *�������������

�� (�*���<��*�<��

*<<��$�	��6�

("���������"����:��������������"������������

(� (�
�$��(
�<��*<<���A�6� 	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

�

�� )������"�2������+���!'�.�
/3/�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"������/�����������

D� 6�	
�����6&���<��*� �������������"����:����������!���������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��*<<���A�6� ("������:������������������������9���3@5�����������

	� *<<��	���
*
$� *�������������

�� (�*���<��*�<��

*<<��$�	��6�

("���������"����:��������������"������������

(� (�
�$��(
�<��*<<���A�6� 	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

�

�� )������"���#��+���!'�.�
/30�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"������/�����������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��*<<���A�6� ("������:������������������������9���3@5�����������

	� *<<��	���
*
$� *�������������

6� (�**
$�(<�%
�6�*�<��

�<�

<::�����"�/����:��"�����$��������������

(� (�
�$��(
�<��*<<���A�6� 	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

$� �%%$<�(&G
6(�%
�$�	��6� ��������"���:���������������������������������

�



�����������	
���� ����������	
���� ����������	��

��������

�� )������"��'��+���.�
/31�
���������� ��������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��

*<<���A�6�

("������:������������������������9���3@5�����������

@� (&���
$���<��*� (���:���������"���������������:������!���������

(� (�
�$��(
�<��

*<<���A�6�

	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

�� �%%$<�(&�$�	��6� ��������"���:��������������������

D� *<<��6�����	���
*
$� 	���������:���������:��������������������

&� *<<��
�	�(�
�$��(
� (������������"��������������:��������������������

�

�� )������"����&&����.�
/34�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"����:����0��������

(� (�
�$��(
�<��

*<<���A�6�

	��������:���������"�:�����:�!��0�������������

������������������������@��9���

$� ��(&������*>%
� ��?�����������������!�����"���!����

+�?�%��0����������!����"���!����

����5�* ���)�����,������������/��"����

�� �

	$�*
� ("������:��������

4� (�**����	
%*&� ("����������������:������"�������������

�

�����
� *����� �������"�������������������������/�:�������0���

����������

�



����������	�� ����������	
���� �����������	
����

����9���

�������� (��6���-&� )��+��� )����� '������
�

�:6����"�(�<�#�+��6���.�
/00�
���������� ��������

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:������7"����

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:������7"����

�� �
��*&���<���*<�*&
�

A��A�6�

��������:��7"���������������A��9���

=� �
��*&���<���*<�*&
�

>��A�6�

��������:��7"���������������>��9���

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� 	������:����0�������������:����!��0�������"�:�������

����/�������:����0����"�"��� �������;��;��"��

�� ����
� ������:����A��9���

$� (<$�
$�$�	��6� $���"���:��������������:������7"����

�

�����
� ������������������ ��������������(<$�
$�$�	��6�

������������:��������"���:��"���������������

�

��� &��"�(�<�#�+��6���.�
/00/�
���������� ��������

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:������������

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:������������

$� $�	��6� $���"���:������������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� 	������:����0�������������:����!��0�������"�:�������

����/�������:����0����"�"��� �������;��;��"��

�

��� )�"�(�<�#�+��6���.�
/000�
���������� ��������

&� (
�*
$�%<��*�3A��A�65� (������������A�������������:����������������

B� (
�*
$�%<��*�3>��A�65� (������������>�������������:����������������

�� 	�6*��(
�-
*=

��

(
�*
$6�

	��������/��!��������������������������)����������

�������

$� $�	��6� $���"���:�����)���������3�"���/�����������"�5�

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

�� 	
%*&� 	������:����0�������������:����!��0�������"�:�������

����/�������:����0����"�"��� �������;��;��"��

�� ����
� ������:����A��9������"���������������:������������

�



�����������	
���� ����������	
���� ����������	��

����F���

������	� �� '�������,���-&� )��+�
���*���� '������
�


���*����"���6�'�.�
/4�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"����:�����;�����������������:��������

/�������:�����;�� �

C� (�*�	
%*&�<��*<<��2�A�6� ("�������������:������"����������������������9���

����������3@��9��5�

&� -<**<������6&���<��*� �������������"����:�����/�����������

D� 6�	
�����6&���<��*� �������������"����:����������!���������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��*<<���A�6� ("������:������������������������9���3@5�����������

	� *<<��	���
*
$� *�������������

�� (�*���<��*�<��

*<<��$�	��6�

("���������"����:��������������"������������

(� (�
�$��(
�<��*<<���A�6� 	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

�


���*����"�2������+���!'�.�
/4/�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"������/�����������

D� 6�	
�����6&���<��*� �������������"����:����������!���������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��*<<���A�6� ("������:������������������������9���3@5�����������

	� *<<��	���
*
$� *�������������

�� (�*���<��*�<��

*<<��$�	��6�

("���������"����:��������������"������������

(� (�
�$��(
�<��*<<���A�6� 	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

�


���*����"���#��+���!'�.�
/40�
���������� ��������

*� -<**<��*&�(D�
66� $���;������"������/�����������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��*<<���A�6� ("������:������������������������9���3@5�����������

	� *<<��	���
*
$� *�������������

6� (�**
$�(<�%
�6�*�<��

�<�

<::�����"�/����:��"�����$��������������

(� (�
�$��(
�<��*<<���A�6� 	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

$� �%%$<�(&G
6(�%
�$�	��6� ��������"���:���������������������������������

�



����������	�� ����������	
���� �����������	
����

��������


���*����"��'��+���.�
/41�
���������� ��������

�� �

	�$�*
�<��

*<<��$�	��6�

("������:���������������������������"������������


� �

	�$�*
�<��

*<<���A�6�

("������:������������������������9���3@5�����������

@� (&���
$���<��*� (���:���������"���������������:������!���������

(� (�
�$��(
�<��

*<<���A�6�

	��������:���������"�:�����:�!��0�������������

������������������������@��9���

=� �%�(�*G	<=��(�*� ��?�(��� ��"����!���"������!� �

)�?�(��� ��"��"���"��!� �

�� �%%$<�(&�$�	��6� ��������"���:��������������������

D� *<<��6�����	���
*
$� 	���������:���������:��������������������

&� *<<��
�	�(�
�$��(
� (������������"��������������:��������������������

�


���*����"����&&����.�
/44�
	��������� (�������

*� -<**<��*&�(D�
66� $���;������"����:����0��������

(� (�
�$��(
�<��

*<<���A�6�

	��������:���������"�:�����:�!��0�������������

������������������������@��9���

$� ��(&������*>%
� ��?�����������������!�����"���!����

+�?�%��0����������!����"���!����

����5�* ���)�����,������������/��"����

�� �

	$�*
� ("������:��������

4� (�**����	
%*&� ("����������������:������"�������������

�

�����
� *����� �������"�������������������������/�:��������;��

����������

�



�����������	
���� ����������	
���� ����������	��

��������

������
� (��6���-&� )��+�
���*���� '������
�

��#��&�&��������*�!�"�(�<�#�+��6���.�
/001�
���������� ��������

�� 	�6*��(
�-
*=

��

(
�*
$6�

	��������/��!����)���������������������������������:�

����;��

	� �$<<B
�=�	*&� =������:���������;��

�� 	
%*&� 	������:�����;������������:����!��0�������"�:�������

����/�������:����0����"�"��� �������;��;��"��


� �$<<B
�����
� �������:���������;��

�� ����
� �������:��������������������;���������������:����

A��9���

&� (
�*
$�%<��*�3A��A�65� A�������������:���������������:�������"�����������

����;���

B� (
�*
$�%<��*�3>��A�65� >�������������:���������������:�������"�����������

����;���

$� �$<<B
�%<6�*�<��

$�	��6�

$���"���:��������!�������"���������������;�������

�����������

-� $
�
$
�(
�%<6�*�<�� @�������������:�����!��0�������"�:����

(� %�*(&�����
� (������������/��!����)������������;���

�� ���-
$�<���$<<B
� �"�/����:������������;���

�

�����
�� %���������:������������������;���������"������:����

(
�*
$�%<��*���$<<B
�%<6�*�<��$�	��6�
��������
�����������������"���/������������!� ��

)� �:���� ���������;������������� ��%�*(&�����
�
���������/����������

�



����������	�� ����������	
���� �����������	
����

����3���

���� �����������
������
�
�

���	�
��	������ ������������ -#����&��������  ���).�($����#��

����&����#���������#����&�����&����#�����������������������#��#���%�/����

-#����&�� ������  ���.� ��������� ����������� ��#�� #����&��

#��#&��������&#�����9��(��#+���������������&'�����$�#��#&������������

99���������%�

��� -#����&�� ������  ���).� ��� ��������� #��� ������ #����&�� ���&����

#���������� ��� ������ ���� #��#���� ���� �����$� #������ �� �����  ������ �*�

������ ������9:��F:������������#�������#����&�����&��%�

2��$������ ������#�  ����������&�������8�������#�  ������&#�����

�&'�����$��&�#������ &���(���������� ��&���$������ ����������$%�

<����� ��������� �� #����&�� ���&��)� �&'�����$� #��#&������� 6������ �����

#�����������#��#&������7�#���(��&��������(�������������������#����������

���&�����������&��%�

�

�����
� ���(����"��%������������"�����,��:��"��������/��

��������

�



�����������	
���� ����������	
���� ����������	��

����;���

������ ���������!��+������6��������������
�

�������� ��&&���������6��������������� �����
�

,�������� -*2�/	=.� #�&���� ���� �������� �#����� ���� #����&��

������  �������(��������$��%�

�

�������� ��&� ������+����'�#�����#����+������6����������
�

,�������� -*2�/	=.� #�&���� ���� �������� �#����� ���� #����&��

������  �������(��������$��%�

������ ���� #����&�� ������  ���� ���������� �#����)� ���� ��'�� �#�����

�������� ��� ������ ���� &���� ��� ����#���������� �� ���� ������ � ��� ��� (��

#������)����������������'�����������������(��������%�

�

<���� $�&������ ��� #������ �� ���� ������ )� ������ @��<A%� � /�� ���+�

���������'������������� )�������@��/A%�

�

�

�

�

�

�

�

�

�

�

�

�

�����
� ��������"������������������������� �!��0����

���������"���/������������������������������ ��(�
�������������������"�/����:�������������� �
�����������"���/���������������������F++��"�����
������H����;��"�� � �����������"���������9�����������
���"��������FFFF��������

� �:�����������!������������������"�/������������� �
/����������������������(�(������ ������:����!����
!��������������!������������������/����������:�
�����"������������������������

�

����	�����	��	���	�������	���
���	

	

�������	���
���	��	������
	

!��"F	 ����	��	���
����	

!���"F	���	�����	���
����	

	

	

	

	
!				��			"!				���				"!										"!											"!							"	



����������	�� ����������	
���� �����������	
����

��������

�

�

�

�

�

�

�

�

�

�

�����
� �:����������������"����:����������"������������ ��

������I
A�*J����������!� �:�����������"��
������������*������:��������������������������
�"�/����������������F++�������/�����������

�

�������	���	��	������
	���
���	

	

������
	���
���	�����	GH	�****	

����	���
���	����	�	����	

��	���	�������	�������	���
������
	I	

	

	

	
!�����	"					!	���	"					!						"					!						"					!						"	



�����������	
���� ����������	
���� ����������	��

����>���

�������� ����������+������6����������
�

������������
<��������&��������#������������� �����$)������������� ��#�������������

�����������������(��������$��������%�

���������� ��������

6*�$*�%<��*�A� A�������������:��������"��:��"���������������

6*�$*�%<��*�>� >�������������:��������"��:��"���������������

�

	��
*&<	� * ����:����������!������������������ �

3���������G���G���5�

�

	$�*
� ���������"�������������������

�

@�	H%A� � E� *���� �&'�����$� #��#&������� �#����%� /��� ���&��� ��� ���

�����(�����������������������#��������������%�

@255!�/A�E�*���� �� #&����� #� ���������� �������� �#����%� 6������(��� ���

���$������������ �������%C��9N36*7�����������97�

@2OA� E�5�'��������������������������������� � ��$%�

@�H�/A� E�*��#��� ������ ������ ��������� ���� �'��� ��� � #����&��

������  ���%�

�

�����
� - �����������������������F+,)K)36*%5������������

���������:�����������������/�������������
L�%%$<�(&�%<��*L�

�

�++!���
2�� ���� ����� ��� � �#����)� ��� ���#�� ���� ������ ������ ��� ���� ������&��

#��&��� ��� ������ ����� ��� ���#��(��)� ��������� ���� @255!�/A� +�$� #�&����

���������������#����������������������#&�����#� ���������������������(��

������$��%�

�

�

�

�

�

�

�

�

� �

�

@�2�2	/A� �E��������&��&����#�  �������#&�����#� ����������

@��9A� � E�2&��&����9�

@��FA� � E�2&��&����F�

@���A� � E�2&��&�����������������#��#������

@=�/	=�A� � E� =��&��������� ����#����)���������������������

�

�����#�����$)���������������& (�������%� � 2������������������� ��$%�

������ ��������� ���� ��#�����$� ����)� ������ @=�/	=�A� ��� ���&��� ��� ����

��� ����#����%� �

�����	�����������	�����
	

	

�����	���	F	��	������	

	

	

	
!��	���"				!	
(�		"				!	
('		"				!	
(�		"				!�����"	



����������	�� ����������	
���� �����������	
����

����C���

/���)������������� �����������)���� ����$��������&���������������������

����� � ��$�($����������@2OA%�

<���� ��9� ��� ��F� ��� ����#���)� ���� -255!�/� �2%.� ��� � ����� (��

������$��%�!�)����&��������#�����$���������& (�������%�

�

�����
� - ���������/���.�3	(	5��:�������������F+,��������

�����/�;���::�����"�/�����������������/��
����������

�

��&� ���,����+� ����6��+��6���
&�����#����&��������  ���)� ���� ����������#����&�� ���&��� ����#�����

��� ������ �����+�$�� ���� ������$��%� /���� �#����� ������� ���� &���� ���

������ �����������������������#����&�����&�������$%�

�

�

�

�

�

"$��&���������������������+�$)���'�������+�$�����������(��������$��%�

�

�

�

�

�

@
���A� � E�!���#����
����

@�=*� � � � A� � E� !���#����*<���#�

@�=*� � � � A� � E� !���#����**<���#�

@*2=��=A� � E� !���#����#������=�

@*G��5%A� �E�!���#����#�� �������

@�2�5IA� �E��� ����� ���������  ��&� �#����� ���� ��#�� ���&��� ���

������$��)� ���� #��� (�� &���� ����  ����$���� �� ����� �����

����������&��$��������%�

@=�*�
*A� �E�*��#&������� ���� ������ #����&�� ���&���� ��� ����� �����)�

����  &��� (�� ����� ������  ����$���� �� ����� ��� #����&��

���&�����������������������&��%�

@�=�,GA� � E�5��&������������#��������������$��)�����#���(��&��������

#��#+�������������������&��%����������)��#�������������

�����������������(��%�

@�*�*�MA� �E�*������� �������� #����&�� ���&���� ����� �*�  ������

������ %� �

� � ����������������#���������)���#����&��������  ���������

(����������������'��������� ����#����%�

@!/2,A� � E�!���� �� #����&�� ������  ���� ���� ������ ����$���� ����

��� ��������)� ���#����'��� ������ ����#����%��*������� �

�����(�������� ���%�

�

�����
� 	"������������"������������������ ������G�����G�

����:������G��������$�������A>�����������/��

	

!���	"!���				"!���			"!�����	"!������	 "	

	

!������	 "!�����	"!
����	"!��	���"!	����	"	



�����������	
���� ����������	
���� ����������	��

���>����

��������

�<���&���+�#�������������+��� ����6��+��6���
���$�&�����#��������)�����������#��������������$��)����������$�&����������

�����������&����������������������������%�

����� ���&��� ���� ���� ������ #���������� ���&�� ����� ���� ������� ��� ��

�������)� ��� #��� (�� ����� ����� ($� #��#&������� ���� #����� ������

#����������(���������������&���������������(������������'�%�

���������� ��������


�	�%<��*�A� A�������������:������������������


�	�%<��*�>� >�������������:������������������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

*<�(&�6*�*
� 6������:��������:����!������:��0� ����"�!�������

������������������/��!���������/���:��"���

I�<J�?����������������

I��6*J�?�*����������!������������������:��"���

�

	$�*
� ���������

�

�����
� *���:��������������������������� ���!��������������

��F+,�K+3�(	5�������������

�

@�	H%A� � E�*�����&'�����$�#��#&��������#����%�/������&��������������(��

�������������������#�����������������������%�

@255!�/A� � E�*������#&�����#� �������������������#����%�6������(������

���$������������ �������%C��9N36*7�����������97�

@2OA� � E�5�'���������&����������������������� � ��$%�

@*��*�
A� � E� *��#��� ����� ���&�������� ��������� ���� ���&��� ��� ����

#����&�������� �������#����%�

�

��#�+,� ����6��+��6��!�
/���������������$����� ����$����#����&�����&�����������������������$�

(������'�������������%�

�

� � ���'�#�/�
	�����#����&�����&���������#�����

2������#����&�������� � ����� �#����)���������� ����#&����� ��� ���� ���&���

(��#+� ����� ��� ��� (�� �������)� ���� ����� ������ @�2�5IA%� /��� ���&���

������#�����#������������������������#�������&������������$��)����������

$�&� �����������������%� � ������ ���� ��?&�������������� ���� �����������

@2OA%�/���)������� @=�*�
*A� ���#��#&������������ ���� #����&�� ���&����

($�&�������������$�������������%�

�

� � ���'�#�0�
�����$��������������#��$������#����&�������� �������#�����

2������#����&�������� �������#����)��������������#&����������������������

������(�� �������)����������������&�)������������������,	/%�

/���)�������@=�*�
*A����#��#&����������������#����&�����&����($�&�����

��������$�������������%� �



����������	�� ����������	
���� �����������	
����

���>9���

�����
� *������������������� ��������(��������������%�*�

�

��!���������� ����6��+��6���
,������������#&���������������&���(��#+��  �������$�(�������������������

������ �� ���� ���&��� ���&��� (�� ��������%� /���)� &����� ���� ���#��&���

���#��(�������'� �����F������)��������������&���(��#+%�

/���)� ������ @=�*�
*A� ��� #��#&����� ���� ��� ���� #����&�� ���&���� &�����

��������$�������������%�

�

��&������ ����6��+��6���
,������������#&���������������������������&���(��#+�������&����$ (������

(���������)�����������������
�/�%�/������ ���D�=��I2	�!	=��

/2� �
�/�� "
2*OPD� ����� ������%� � ,����� @I�!A� ��� ������� ����

���&��%�,�����@�2A�����(������������������%�

/���)� ������ @=�*�
*A� ��� #��#&����� ���� ��� ���� #����&�� ���&���� &�����

��������$�������������%�

�

�'������� ����6��+��6���
/��#������ ���� ���&��� �$������ ��������&��$� ���&�� #����&�� ���&��)� ������

������������������&���(��#+)��������������������������&���(��#+%�

�

�



�����������	
���� ����������	
���� ����������	��

���>F���

�������� �'� )���������6��(��6��!�
�

�������� #����&�� ���&���� #��� (�� #��#+��� ��� ���� �#����� ($� ����� ���

������������&#�����0�� ������)�0�� �����&�)����������%�

2�� ���� ������ � ����� �#����)� ������ @�=�,GA%� � /��� ������#� ��������

�#����� ������ (����� ����� ������%� � �� �������� �#���� �������� ��� ����

(���� ���������#����%�

�

�

�

�

�

,�������� ���� ���������� �����+�$� #�&���� ���� ��'�� �����+�$� ����� ���

������%�

�

�

�

�

�

@
�=��A� � E��&(������#������#���%�

@!��

A� � E���+�����#������#��������%�

@�	/2A� � E��#���� �� �#���� ��#���� �&�� ���#���$� ��� ������ ���

����������������������������#����%�

@=��
A� � E�����#����&�����&�������������#���%�

@=�/	=�A� � E�=��&��������#����&�������� �������#����%�

@←A�@→A�@↑A�@↓A�E� ����� �� ����� ������ ��� ��#�� ����#����%� *&����� +�$�
#���(��&������������ ���%�

@*��/�=A� � E�������������������&����������#������������#����%�

�

	

!���
	"!�����	"!	����	"!	���	"!�����"	

	

!		←		"!		→		"!		↑		"!		↓		"!����	"	



����������	�� ����������	
���� �����������	
����

���>����

�������� ���*������������������
�

��������#����&�����&����#���(��#�������������*������� ������������ �

�����#���%�

,����� @�*�*�MA%� � /��� ��� ��� D�=��I2	�!	=��/2�*2�M�=/�

�*�,=2�=��PD��������%� �

<����$�&�������@I�!A)�#����������������%�,�����@�2A�����(����������

#���������%�

*����&�����&��������#����������������������������#���������� �%�

�

�,����+�(��6��� �,�-�&� 
" �#��

6����������� �� �����������

����� →� ����

����3(=5� � ��)�

����3((=5� � ��+�

(������$� $� ��)������+�

(���:������ (� ����

("������������������ � �,������,)�

("������������������

�������
� �,��

�



�����������	
���� ����������	
���� ����������	��

���>����

�����
�� (��;�������(���������/���0�������������

���������� ��:��������/���0����!����������"�����!���
�����������

� �:���������"���������������;��"����������������"�����
!����/��������������������������:������(���������
�����!�����!� ���������:�������;�������

)� �:������������� �:��"����:���!������������������������
����������(������������;�������!����/�������:���
���������"��:��"������������� �/�:����������������
/���0�

+� �:�����������;��������:��������"��:��"�����������
���������(����������������������������"��:��"������
��:�����������������������/�����������!���������"��
�����������������9�����:������3�:��������� ����
������������9��"�����������������������"��:��"������
������:�5�

,� ��;��"���:�"����������������������/����������:�������
�9�����������3AG>5��:������;�������(����������
��������;��"���"�����!� ����;������������������
*���������������������:����������������"����������
"������!������ ���!����������/�������"������::�

�

�!�"���� �

�
	��!�����6��

�� �������

	��!�� �����#�

�� �������
��<��

��� �������� �������� ±FFFFFFFF����
����� ����������� ����������� ±FFFFFFFF������

�

�!�*���� �

�
	��!�����6��

�� �������

	��!�� �����#�

�� �������
��<��

��� ��������� ��������� ±FFFFFFFF����
����� ������������ ������������ ±FFFFFFFF������

�

�����
.� - ���������/�����3�C$5��:�������������F+,��������

��������L$L�����"��"�������������"��������:�������- �
����������������������L�L�����LCL������"��"������������
������������������

1� 
;����:��������;�������������;��"������"��"��
������"�"�� �:�������;��������������� �!������;���/��
���������



����������	�� ����������	
���� �����������	
����

���>3���

������ �����&��+������6��(��6��������
�

/����#����������#��(����������������������#����&�����&�������)����#�����

���������������#����&�����&���������#����%�

��������������#����&�����&�����������������������������������������������

�������������&��#������%� � =�������������'���������������#�����$%� �

�

�������� �� �
�

���������� ��������


�	�%<��*�A� A�������������:������������������


�	�%<��*�>� >�������������:������������������

$�	��6�$� $���"���:���������/"����"��;��"����� �

(
�*
$��� A�������������:���������������

(
�*
$�C� >�������������:���������������

*<�(&�6*�*
� 6������:��������:����!������:��0� ����"�!�������

������������������/��!���������/���:��"��� �

I�<J�?���������������� �

I��6*J�?*����������!������������������:��"���

�

	$�*
� ���������"�������������������

�

�����
� *���:��������������������������� ���!��������������

��F+,�K+3�(	5�������������

�

@�	H%A� � E�*�����&'�����$�#��#&��������#����%�/������&��������������(��

���������������������#��������������%�

@2OA� � E�5�'���#����&����������������������� � ��$%�

@*��*�
A� � E� *��#��� ��#� ���&��� ����� ��������� ���� ���&��� ��� ����

#����&�������� �������#����%�

�

�������� ���������
�

���������� ��������

$�	��6�$� $���"���:����������$��/"����"��;��"����� �

�

	$�*
� ���������

�

�����
� *���:��������������������������� ���!��������������

��F+,�K+3�(	5�������������

�

@2OA� � E�5�'�#������=����&����������������������� � ��$%�

@*��*�
A� � E� *��#���#������=����&������������������������&������

����#����&�������� �������#����%�

�



�����������	
���� ����������	
���� ����������	��

���>;���

�������� �'��+������
�

���������� ��������

(���
$�(� (���:���������"����/"����"��;��"����� �

�

	$�*
� ���������

�

�����
� *���:��������������������������� ���!��������������

��F+,�K+3�(	5�������������

�

@2OA� � E�5�'�#�� ����������&����������������������� � ��$%�

@*��*�
A� � E� *��#���#�� ����������&������������������������&���

�������#����&�������� �������#����%�

�

�������� ��&� �����!!�����������+�(��6���
�

&���������#��#&������������#����&�����&��)��&#�����(������������������

��� ��#� ���� �'� ���)� ������ �$�(�� #����� ������#�� ������� ���� #�����

���������� ���&�������������(��%� ��� �����#���)� �����#�������������#�������

#�����������������&����������%�

�

@,=�M%A:@��H/A�E�� *����� ������ ��� ���&��� ���&��� (�� ����#���� ���

#������%� /��� �#����� ���� (���+�� � ���� �� ��

���&�������&���(������#���%�

@2OA� � E�!���#������#��������&��)�(���+���)�������$%�

@*��*�
A� � E�*��#���������#��������������%���������)�����������

�#�&��� ���&��� �����  � ��$� ������ +������� ��� ���

�������%�



����������	�� ����������	
���� �����������	
����

���>����

������ �����&��+������6����& 6&������
�

/����#��������'����������������������#����&��#��#&�������)��&#�����������

���� #����� ������� ��� ����������� ������)� ����� ���� �&�������� ($� #����&��

������  ���%�

�����&����������������#����&���������#�����������������������$���(����

����� ����� ��� ����� ��� (�� ��� ���� �������� �����%� �� �������� ���&��� ���

����#�����($��������������%�

2�������#������������������#����&�����&�������)� ������������&����� ��

�������?&����������������%�/���������� ��� ������&���� ���#��#&����� ����

#����������������������  �������$����#�����������������&���(��#+)�����

��������#��#&������������������%�

/����&##����������&���(��#+��#���(�����#�����������������(��#+�%�

�

�

�������� 	����
�

697� <�����������#���������&������������������

6�7� 2��$�H�������&�����

� �B� /����������������� ��������������0����������%�

6(7� 2��$�I�������&�����

� �B� /����������������� ���������������#�������%�

6#7� �������������H����I��������&�����

� �B� /����������������������������&��������#��#&�����%�

�

�

�

�

�

�

�

6F7� <�����������#���������&������#��$���������#���������������)�����

D/2	*G�
�!/D�������#�����������������%�

6�7� �������H����J�������&�����

�B� /��� ������ �� ��� #��#&������ �&�� ���#���$)� ���� ��� ����

�������������� ����%� �

� ��� �������� H� ���� I� ��� ���&����)� ����� ����� ����� (��

�������%�

�

�

�

�

�

�

�

�

� A����>�

�3�"���������� �����"�����5�

A����>�



�����������	
���� ����������	
���� ����������	��

���>>���

6�7� <�����������#������ ���&��� ����������)�����D/2	*G�
�!/D� ���

���#�����������������%� �

6�7� "����H�����I)��������������&�����

�B� /��� #����� ������ (������� ���� ���#������ ���&��� ���

#��#&�����%�

�

�

�

�

�

� �

�

�

�

� <���� ���� ���#������ ���&��� ��� ��� ��#)� ���� #����� ������

����#����� �#����� ��� ������$��)� ��� ����#�� �� ��#�����$�

���%�

�

6�7� <�����������#���������&����������������#)�����D/2	*G�
�!/D�

������#�����������������%�

� ���������& ����������������&����������#������������#����������6�)K7�

�����#������������$����&����%�

6�7� 2��$���������&�����

�B� /��� ����������� ������ ����#����� �#����� ��� ������$��)� ���

����#������#�����$����%�

� /��������������(���������%�

�

�

�

�

�

�

�

�

�

�

6(7� "����H�����I��������&�����

�B� /��� ����������� ������ ����#����� �#����� ��� ������$��)� ���

����#������#�����$����%�

� /��������������(������� ����%�

�

�

�

�

�

�

�

�

�

��

3A�>5�

(�����������

*������������������

*����������������

*����������

������

*����������

������



����������	�� ����������	
���� �����������	
����

���>C���

6#7� �������������H����I��������&�����

�B� /��� ����������� ������ ����#����� �#����� ��� ������$��)� ���

����#������#�����$����%�

� /��������������(������� ����%�

�

�

�

�

�

�

�

�

�

�

� ��� ���� ����������� ������������� (������� ���� �����������

�����������������������&#�������������&�������#�����#���

����� ���� ���&����� H� ��� I)� �� ��������  ������� ���

������$��� ��� ����#���� ����� �������� ����� ���� (����

���&����%�

A����@�

��
*����������

������

*����������������



�����������	
���� ����������	
���� ����������	��

���C����

�������� �� �
�

697� <�����������#���������&�����������������)�����D/2	*G�
�!/D�

����������#���������������#�

6�7� ������K��������&�����

�B� /������#������(���������%�

6(7� H)�I�����=��������&�����

�B� /��� ����#����� �#����� ���� ������� D
���� ����� ��#D� ���

D!����� ����� ��#D� ��� ������$��)� ��� ����#�� �� ��#�����$�

���%�

�

�

�

�

�

�

�

�

�

6#7� H)�J)�������K��������&�����

�B� /������#��������� ����%�

�

�����
� �:��������������3����"�5�/��!������������������������

���������::����:����������������������������������
:��"������������ ���/���������������"���:���������
�������"���:��"���!��������/������������������� �

�

6�7� 2��$�=�������&�����

�B� "$� ���#��$���� D/2	*G� 
�!/D� ���� ���&������ �� �����

������L�������������I�#�����������������  �������$�

������ ���&��)� ����� ��#� #��� (�� ����� ����%� "&�� ����

����#����� �#����� ���� ������� D
���� ����� ��#D� ��� D!�����

�������#D����������$��)��������#������#�����$����%�

�

�

�

�

�

�

�

�

6�����

������

$�


���������3A��@5�

$�

*����������������

$�



����������	�� ����������	
���� �����������	
����

���C9���

6F7� <�����������#���������&�����������������)�����D/2	*G�
�!/D�

������#���������������#�

6�7� H�����I��������&�����

�B� /�������&������&�� ���#���$�#��#&�����������������#������

(������� ����%�

�

�

�

�

�

�

�

�

6�7� <�����������#���������&��������������6�������#������������������

����(��������� ����7)����� D/2	*G�
�!/D� ������� ���#������ ���

�������#�

6�7� =)�������K��������&�����

�B� /���#���������������#������#��������������$��)��������#��

����#�����$����%�/������#������(���������%�

�

�

�

�

�

�

�

�

6(7� H)�I)�������K��������&�����

�B� /���#���������������#������#��������������$��)��������#��

����#�����$����%�/������#������(������� ����%�

�

�

�

�

�

�

�

�

�

*����������������


���������3A�>5�

(�����������

$�

(������3��C5�

(�����������

(�����������

(������3��C5�
���������

� 3A�>5�

(�����������



�����������	
���� ����������	
���� ����������	��

���CF���

6�7� <�����������#���������&��������������6�������#������������������

����(��������� ����7)� ���� D/2	*G�
�!/D� ��� ���#������ ��� ����

��#�

6�7� =)������O��������&�����

�B� /�����������������������#��#&�����)������������#������(��

�������%�

�

�

�

�

�

�

�

�

�

6(7� H)�I)�������K��������&�����

�B� /�����������������������#��#&�����)������������#������(��

����� ����%�

�

�

�

�

�

�

�

�

�

�

�����
� �:��������������3����"�5�/��!������������������������

���������::����:����������������������������������
:��"������������ ���/���������������"���:���������
�������"���:��"���!��������/������������������� �

�

6#7� =�����H)�I��������&�����

�B� /��� ����#����� �#����� ���� ������� D
���� ����� ��#D� ���

D!����� ����� ��#D� ��� ������$��)� ��� ����#�� �� ��#�����$�

���%�

�

�

�

�

�

�

�

�

�

�

*����������������

$�

(������3��C5�

*����������������

(������3��C5�

���������

� 3A�>5�

�����

���������

$�

$�

���������3A�>5�

*����������������*����������������

6��������������



����������	�� ����������	
���� �����������	
����

���C����

637� <�����������#���������&���D��#D������������6�������#������������

������ ���� (���� ����� ����� ���� ���$� =� ��� ��� (�� ���&����7)� ����

D/2	*G�
�!/D�������#���������������#%�

6�7� =)�H�����I��������&�����

�B� /��� ����#����� �#����� ���� ������� D
���� ����� ��#D� ���

D!������������#D����������$��)��������#������#�����$����%�

/������#������(������� ����%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

6(7� =)�H�����I��������&�����

�B� /��� ����#����� �#����� ���� ������� D
���� ����� ��#D� ���

D!������������#D����������$��)��������#������#�����$����%�

/������#������(���������%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

*����������

������

$��

$��


���������3A�>5�

6��������������

*����������

������
��������������

$��

$��

(������

3��C5�

$��

6��������������

*����������

������*����������

������

*����������

������

��������������



�����������	
���� ����������	
���� ����������	��

���C����

�������� 	�������������&���������� !�
�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

"$� ���&������ ������ �&##������� ���&���� ��� �������)� ����� 6F7� ����� ���

��������������������#��#���(�����#�����������������������(�����������%�

/�����������������697�����6F7���������� ����)�������6�7����������������%�

� ���� ���� �(���� ��&�������(��� �����)� ���������� ��� ���� ����#����� ���

����������#�)��������������� �+�������� ��������#����#��������������#��

����&�� ���#���$�����#���%�

�

��#�697�E�

� �� ���� K� ���� ���&����%� 6�� ������ ������ ��� ����� ����%� /���� ��#� ���

�������%7� �


����6F7�E�

� 2��$�D/2	*G�
�!/D�������&����%�

��#�6�7�E�

� =)�������K��������&����%�

�

3)5�

(�������:�3�5�

3���D�5�

(�������:�3+5�

3���D�5�

6����������� �

�:3�5�
$��

3)5�

3)5�

3)5�



����������	�� ����������	
���� �����������	
����

���C3���

�������� �� ��'�������� �!����-��'����!!����	���!���#��� !�
�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

"$� ���&������ ������ �&##������� ���&���� ��� �������)� ��#� 6F7� ����� ���

�����������������������������#��#���(�����#�����������������������(����

�������%�/��� ���� ������� ��� 697� ���� 6F7� ���� ����� ����)������� 6�7� ���

������������%�<����6�7����������)������������ ����%�

�


����697������#�697�E�

� 
��������������������6�������#����������&�������������������������

����(��������� ����7)������#�����������������6�������#��������K�

�������&�����������������������������(��������� ����7�

��#�6F7�E�

� =�����D/2	*G�
�!/D��������&����%�


����6�7������#�6�7�E�

� 
����������)�H����)������#������=)��)�K�����D/2	*G�
�!/D�

�

<��������������&���697����6�7���������#)���������(���������� �������#�)�

��������#������#��������� &���������#�����������$��)��������#�����&���(���

���%�

�

3�5�

3)5�

$�

3�5�3+5�

*����������������
3+5� 3)5�

$�

3�5�

$�

3+5�

3)5�

*����������������

*����������������

*����������������

*����������������



�����������	
���� ����������	
���� ����������	��

���C;���

�������� �� ��'�������� �!������ ��!!����	������#��� �
�

�

�

�

�

�

�

�

�

�

�

�

�

"$� ���&������ ������ �&##������� ���&���� ��� �������)� ��#� 6F7� ����� ���

�������������������697�������#�6�7�������������#����)�#���(�����#���������

������ ��� ���� �(���� �������%� /��� ���� ������� ��� 697� ���� 6F7� ����

����� ����)�������6�7����������������%�

� �������� &������������(�����#���������(���)�������#������ �+�������

� ��������#����#�������������697�������#�6�7�����&�� ���#���$�����#���%�

"&�)� ����� ���&��� �� D
���� ����� ��#D� ���� D!����� ����� ��#D� �� ���)�

����#�����#�����������#�����$���� ���������#������#����%�

�


����697�E�

� 
��������������������6�������#����������&�������������������������

����(��������� ����7�

��#�6F7�E�

� =�����D/2	*G�
�!/D��������&����%�

��#�6�7�E�

� ��#������=)�������K�

�

3+5�
3�5�

$�

3)5�

*����������

������

*����������

������



����������	�� ����������	
���� �����������	
����

���C����

�������� �� ��'�������� �!������ ��!!����0��� !�
�

�

�

�

�

�

�

�

�

�

�

�

�

"$� ���&������ ������ �&##������� ���&���� ��� �������)� ��#� 6F7� ����� ���

����������� ��� ��#�� 697� ���� 6�7� ����� ��� ���� #����� #��� (�� ���#������ ���

��������������(�����������%� �

/�����������������697�����6F7���������� ����)�������6�7����������������%�

� �������� &������������(�����#���������(���)�������#������ �+�������

� ��������#����#����������#��697�����6�7�����&�� ���#���$�����#���%�"&�)�

����� ���&��� �� D
���� ����� ��#D� ���� D!����� ����� ��#D� �� ���)� ����#��

���#�����������#�����$���� ���������#������#����%�

�

��#�697�E�

� ��#������������K)�������������������6�������#����������������������

(��������� ����7�

��#�6F7�E�

� =�����D/2	*G�
�!/D��������&����%�

��#�6�7�E�

� ��#������=)�������K�

�

$��

3+5�
3�5�

$�

3)5�

*����������

�����

6�����

������

(������3���C�5�

(������

3���C�5�
*����������

�����



�����������	
���� ����������	
���� ����������	��

���C>���

������ �����&!��+��6<�&���,���& 6&������
�

/����#��������'���������������������������&'�����$�#��#&������%�

"$�&����� ������&'�����$�#��#&������)� ����#������������������������� ����

����������������#���(������� ����%�5&����� ���)�������� ������#����&�)�

�&#����� ���� � �&������ ������ ��� � ������������� ��� � ���� �� ����� ����&��

#���(���������������$%�

�

�������� 
�����&�
�

697� ������� ��������#���&'�����$�#��#&�������#���(��&����

6�7� !�����������

�� *����������6H)�I7����������������

6(7� 
����

�� *����������6H)�I7��������������

�� ����������������6�7�

6#7� ��#�

�� *����������6H)�I7��������������

�� *����������6�)�K7����#������

�� !��#��$���������#�

�

6F7� *��#&��������$���������(�������&'�����$�#��#&�������

6�7� *��#&����������#����������

�� �����������#������($�������#����������

�� �����������#������($��������)�����������������#��

�� �����������#������($������������������

�� �����(�������������������

�� *�����������(�������F�������

�� *�����������(������������������#�

�� *�����������(�������F���#��

6(7� *��#&����������������

�� �������������������������F��������

�� ������������������#����&�����������������������F��������

6#7� !��#��$������#�6*��������������&�7�

�� ��� ��#� ������� 9� ������ ���� ���� #������ #���������� ����

(��������� �����

�� ��� ��#� ������� F� ������� ���� ���� ����&�� ���� (����

����� �����

�� �����#�����������������

�



����������	�� ����������	
���� �����������	
����

���CC���

�������� ������������
�

��&� ������,����+� �& 6&������
�

2�� ���� ���������$� �#����� ���� �� ������ �����)� ������ @�	H%A%� /���

����������#��#&��������$��� ��&��#����������������%�

"$���������� ����#&�����+�$)� �#����� ����&��� ���� ��&�#�  �����&�����

$�&���������������������#�%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

@2OA� � E�	��������#�����#��#&��������$���

@*��*�
A� � E� *��#��� ����#����� ����������� ���� ���&��� ��� ����

������&���#�����

�

�����
� =����/���.�3��A5��:�������������F+,)��������������

�������"�:����"9����� �����"���������������� ������
���!���/�;��- �������������������������"����
������ �������� � ������:����������:��������
����"�������� ���

� *������������������;����/���:����������"9����� �
����"����������"��

�

����	�����������	��	�����	�����	

	

	

	

	

	

	

	

	

	

	

	

	

	

	

	

��	�����	��	�����	������	

	

	
!	 "!	 "!	 "!		��	 "!�����	 "	

��	 '�	 %�	 (�	

��	 #�	 &�	



�����������	
���� ����������	
���� ����������	��

��>�����

���������#����+��� �& 6&������
�

� "���������!�� �+��#�-,���&��� ���#������
���������� ��������

	�6*�	� 	��������/��!������������������!��0�������������������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

�

� "���������!�� �+��#�-,��������=����&����#�#�!��� ��
���������� ��������

%<��*�A� A�������������:�����/����������

%<��*�>� >�������������:�����/����������

	�6*�	� 	��������/��!����������������������/����������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

�

� "���������!�� �+��#�-,������������������
���������� ��������

%<��*�A� A�������������:�����/����������

%<��*�>� >�������������:�����/����������

(
�*
$��� A�������������:���������������������

(
�*
$�C� >�������������:���������������������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

�

� "�����'-����������+���&����
I�&�#�������� ���������������������������������%�5&����� ���)�$�&�#���

����� �������������������������������������������(���� ���������&�����

���#���#�������#�%�

/���� #��� (�� &���&�� ���� ����� ������ ���� ���� ������ ��� ��� ������#�����

 ��������� ���#�������������#����������������%�

�

697� <�������#��$���������������������������������������

���������� ��������

-�6
�%<��*�A� A�������������:�����/���������������������������:������

�����

-�6
�%<��*�>� >�������������:�����/���������������������������:������

�����

%�66�%<��*��� A�������������:�����������������������������

%�66�%<��*�B� >�������������:�����������������������������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

6&��*�	�6*�	� =����������������"���/�������:����/ ����:�����������������

�������������������:�����

6&��*�	�$(� 6�����������:���������������/ �����!���:��0� ��

�



����������	�� ����������	
���� �����������	
����

��>�9���

6F7� <�������#��$��������������������������� �

� "$���������� @HI)HIA)�$�&�#������#��$��� ���������� ������������

������%�

� "$����������@HI)��A)�$�&�#�������#�������(�����$���($�&��������

�����������%�

���������� ��������

-�6
�%<��*�A� A�������������:�����/���������������������������:������

�����

-�6
�%<��*�>� >�������������:�����/���������������������������:������

�����

%�66�%<��*��� A�������������:�����������������������������������

%�66�%<��*�B� >�������������:�����������������������������������

%�66�%<��*�%� A�������������:�����)
��
���������������������������

%�66�%<��*�4� >�������������:�����)
��
���������������������������

6&��*�	�6*�	� =����������������"���/�������:����/ ����:�����������������

�������������������:��������������

6&��*�	�$(� 6�����������:���������������/ �����!���:��0� ��

�

� "����!!�������-�������0�&���!�
�

/��� #����� ������ ��� ���� ������ #��� (�� #��#&�����%� 5&����� ���)� �����

#��#&�������#��������(������������������������������������� ��������������

���������($��� ��������#�%�

/����#���(��&���&����������������������������������������������� �����

������������&���($����� �&����?&�������������������&�%�

�

6�7� <�������#��$��������������������������������������� �

� ��������$)����������������������� ������������$�������
����9%�

���������� ��������

%�66�%<��*�A� A�������������:�����������������������������

-�6
�%<��*�>� >�������������:�����������������������������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

6&��*�	�6*�	� =����������������"���/�������:����/ ����:�����������������

�������������������:����� �

	��������

6&��*�	�$(� 6�����������:���������������/ �����!���:��0� ��

�

� "$����������@��H/A����������������������#�����$�����)����� �����

����� ��� ��#����� ����
����F� ��� ������$��%�"$� ��������� @,=�M%A)�

$�&�#������&����������������&���#���������
����9%�

�

6(7� <�������#��$���������������������������

� "$���������� @HI)HIA)�$�&�#������#��$��� ���������� ������������

������%�

� "$����������@HI)��A)�$�&�#�������#�������(�����$���($�&��������

�����������%�

� /��� ���������� ����� ��� �� ���� ������$��� �����#�����$� ���� 
����9�

����
����F%�

���������� ��������

%�66�%<��*�A� A�������������:�����������������������������������

%�66�%<��*�>� >�������������:�����������������������������������



�����������	
���� ����������	
���� ����������	��

��>�F���

���������� ��������

%�66�%<��*��� A�������������:�����)�����������������������������

%�66�%<��*�B� >�������������:�����)�����������������������������

6&��*�	�6*�	� =����������������"���/�������:����/ ����:�����������������

�������������������:�����

6&��*�	�$(� 6�����������:���������������/ �����!���:��0� ��

�

� "����!!�������-�������&������#��� �
/���#�����������(��������������������#�#���(��#��#&�����%�5�����������)�

���� ���������(������������ ����&����� ��������#��#���(��&���� ���� ����

#��#&������%�

/�������&���&����������������� ���������� ���������(��������������� �����

������������&���($����� �&����?&�������������������&�%�

�

6�7� <�������#��$���������������������������������������

��������	
� ���� ��������� ����� ������ ���� ������	��� ��� ����

������

���������� ��������

%�66�%<��*�A� A�������������:�����������������������������������

%�66�%<��*�>� >�������������:�����������������������������������

����
��� �������:������:����MA��9�����������;�������������"�����

����0!��������������

6&��*�	�6*�	� =����������������"���/�������:����/ ����:�����������������

�������������������:�����

6&��*�	�$(� 6�����������:���������������/ �����!���:��0� ��

�

� "$� ��������� @��H/A� ������ ��������� ���� ��#�����$� ����)� ����

�����������#���������������#����������$��%�"$����������@,=�M%A)�

$�&�#������&����������������&���#�������������
���%�

� "$����������@��H/A����������������������#�����$�����)����� �����

����� ��� ��#����� ����
����F� ��� ������$��%�"$� ��������� @,=�M%A)�

$�&�#������&����������������&���#���������
����9%�

���������� ��������

(
�*
$��� A�������������:���������������

(
�*
$�C� >�������������:���������������

$�	��6�$� $���"���:���������/"����"��;��"����� �

6
�
(*� 6�������������� �������������:�����!�������/����������

/ �����!���:��0� ��

�

6(7� <�������#��$���������������������������

� "$���������� @HI)HIA)�$�&�#������#��$��� ���������� ������������

������%�

� "$� ��������� @HI)� �A)� $�&� #��� ����#�� ���� �(���� �$��� &����� ���

�����������%�

���������� ��������

%�66�%<��*�A� A�������������:�����������������������������������

%�66�%<��*�>� >�������������:�����������������������������������

%�66�%<��*��� A�������������:�����)�����������������������������

%�66�%<��*�B� >�������������:�����)�����������������������������

6&��*�	�6*�	� =����������������"���/�������:����/ ����:�����������������

�������������������:��������������

6&��*�	�$(� 6�����������:���������������/ �����!���:��0� ��



����������	�� ����������	
���� �����������	
����

��>�����

�

� �����#���������������#����������$���?&������ ������������#��������7%�



�����������	
���� ����������	
���� ����������	��

��>�����

"� ���!!�������-�������0��� !�
2�������#��������������(����)����������������#��#���(��������������

����#�����������(���������� �#���(��#��#&�����%�

���������� ��������

(
�*
$�A�� A�������������:�����������������

(
�*
$�>�� >�������������:�����������������

$�	��6�$�� $���"���:�����������/"����"��;��"����� �

(
�*
$�A)� A�������������:��������)��������

(
�*
$�>)� >�������������:��������)��������

$�	��6�$)� $���"���:��������)��/"����"��;��"����� �

6
�
(*� 6�������������� �������������:�����!�������/����������

/ �����!���:��0� ��

�

�<� 6������+��6<�&���,� �& 6&������
������ ��������� ���� ��� ���� ��#�����$� ����� ���� ��#�� ��� ���� �(����

#��#&��������$���)�������@2OA%� � /����&'�����$�#��#&��������������)�����

������������&��� ����������� ����� ����#��������������� ��� �6H)�I7���� ����

�����������%�

"$� ��������� @*��*�
A)� $�&� #��� ���&��� ��� ���� �&'�����$� #��#&�������

 ��&��#����%�

�



����������	�� ����������	
���� �����������	
����

��>�3���

�������� 	����
�

����������������&'�����$�#��#&�����������������)���������������#����������

����������#���(��#��#&�����%�

/��� ���������� �����+�$�� ���� ������$��� ��� ���� �&'�����$� #��#&�������

 ��&��#����%�

�

@��,�/A� �E����&��#�������������������#��#&����������������$���

@���
�A� � E����&��#���������������#��#&����������������$���

�

5�����������������#��#&������)���������� �������� ����������������������

�����������)��������������������#�������'���������%�

�

��&� ������,����+� �& 6&������
2�� ����  ��&� �#����� ���� ���� �&'�����$� #��#&������� ��� �� ����)� ������

@���
�A%�/������������� ��&��#���������������#��#&��������������%�

"$� ��������� ���� #&����� +�$)� $�&� #��� �#����� ����&��� ����  ��&�

#�  �����&�����$�&�����������$��������$�&�������������#�%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

���������#����+��� �& 6&������
�

� "����&���+��'��&������!!�!�0������!�
���������� ��������

%<��*�A� A�������������:�����������������������������������

%<��*�>� >�������������:�����������������������������������

%<��*��� A�������������:�����)�����������������������������������

���"���/��������:������������������

%<��*�B� >�������������:�����)�����������������������������������

���"���/��������:������������������

�

����	�����������	��	��
�	<���?	

	

	

	

	

	

	

	

	

	

��	��
�	��	���	

	

	

	

	
!	����	 "!	��
�	 "!	 "!		��	 "!�����	 "	

��	 '�	



�����������	
���� ����������	
���� ����������	��

��>�;���

� "����&���+���&������ ����6&�������'��&������!!�!�0������!�
/��� ������ ��� �� ����� ����� ��� ��#����&���� ��� �� ����� ���� ���#�� �������

����&��������������#���(��#��#&�����%�

���������� ��������

%<��*�A� A�������������:�����������������������������������

%<��*�>� >�������������:�����������������������������������

%<��*��� A�������������:�����)�����������������������������������

���"���/��������:������������������

%<��*�B� >�������������:�����)�����������������������������������

���"���/��������:������������������

�

�<� 6������+��6<�&���,� �& 6&������
������ ��������� ���� ��� ���� ��#�����$� ����� ���� ��#�� ��� ���� �(����

#��#&��������$���)�������@2OA%�/����&'�����$�#��#&���������������� ��)�

���������#���������&���������������������������������#����������6H)�I7�

���������6�7������������%�

"$� ��������� @*��*�
A)� $�&� #��� ���&��� ��� ���� �&'�����$� #��#&�������

 ��&��#����%�

�

�



����������	�� ����������	
���� �����������	
����

��>�����

�������� �� �
�

��� ����� ��� ���� �&'�����$� #��#&������� ���� ��� ��#)� ���� ���� ������

#��������������#������#����������#���(��#��#&�����%�5&����� ���)� ����

��#��������#���(�����#������($����������������+��������������������������%�

/��� ���������� �����+�$�� ���� ������$��� ��� ���� �&'�����$� #��#&�������

 ��&��#����%�

�

@��,�/A� �E����&��#�������������������#��#&����������������$���

@*��/�=A� �E����&��#���������#������������#��#&����������������$���

@*�=*
�A� � E����&��#���������#��#������#��$�������������$���

�

5���������������������#������������#��#&������)����$�����?&������ �����

�����������������������������#���)��������������������#�������'���������%�

�

��&� ������,����+� �& 6&������
2�� ����  ��&� �#����� ���� �&'�����$� #��#&������� ��� ��� ��#)� ������

@*�=*
�A%� /��� ����������  ��&� �#����� ���� ���#��$���� �� #��#��� ���

������$��%�

"$���������� ���� #&�����+�$�)� $�&�#��� �#����� ����&��� ���� ��&� ��� ��

&����� $�&� ����� ���� ��� � ����� $�&� ����� ��� ����#�%� � /��� #&������$�

����#������� �������������������$�����%�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

�

����	�����������	��	�����	<���				?	

	

	

	

	

	

	

	

	

	

��	�����	��	����	J	�����	

	

	

	

	
!	�����	 "!	����	 "!	�����	 "!		��	 "!�����	 "	

��	 '�	 %�	



�����������	
���� ����������	
���� ����������	��

��>�>���

���������#����+��� �& 6&������
�

� "������ ���!!�!�/���������#���!� ������ ���#������'�!�-����#��������#�
���������� ��������

%<��*�A� A�������������:����������������������������

%<��*�>� >�������������:����������������������������

(
�*
$��� A�������������:���������������

(
�*
$�C� >�������������:���������������

�

� "������ ���!!�!�0������!���#���!���#�6!�'�!�-����#��������#�
���������� ��������

%<��*�A� A�������������:����������������������������������

%<��*�>� >�������������:����������������������������������

%<��*��� A�������������:�����)����������������������������������

���"���/��������:�����������������

%<��*�B� >�������������:�����)����������������������������������

���"���/��������:�����������������

$�	��6�$� $���"���:����������/"����"��;��"����� �

6
�
(*� 6�������������� �����:�����!�������/��������/ �����!�

��:��0� ��

�

"� ����� ���!!�!�1������!�
���������� ��������

%<��*�A� A�������������:����������������������������������

%<��*�>� >�������������:����������������������������������

%<��*��� A�������������:�����)����������������������������������

���"���/��������:�����������������

%<��*�B� >�������������:�����)����������������������������������

���"���/��������:�����������������

%<��*�%� A�������������:�����+����������������������������������

���"���/��������:�����������������

%<��*�4� >�������������:�����+����������������������������������

���"���/��������:�����������������

�

�<� 6������+��6<�&���,� �& 6&������
�������������������������#�����$������������#����������(����#��#&�������

�$���)�������@2OA%�/����&'�����$�#��#&���������������� ��)����������#��

���� ���&��� ��� �������� ����� ���� ���� ������ #���������� 6H)� I7� ��� #������

������#����������6�)�K7���������#%�

<���� #��#��� ���#���#������ ��� ����#���� ($� @*�=*
�A)� ���� ����&�� ����

#������������#��������������#��#&�����������������&���������������������

�������������� �%�

�

"$� ��������� @*��*�
A)� $�&� #��� ���&��� ��� ���� �&'�����$� #��#&�������

 ��&��#����%�



����������	�� ����������	
���� �����������	
����

��>�C���

������ ��'��!�
�

�������� ��& 6&�������+����6�����������
�

���� #��� (�� �������� ���� ������ ��� �� ��� ���� #����&�� ������  ����

�#�����($�&�������#+���#��#&�������$���#��#&������)�����������%�

�

���������E�

9�Q9�� @��,	/A� →� � � F�� �
�

!&(���#�����E�

9��9�� @��,	/A� →� � � �� � �
/���&(���#����� ��������������� �69�)������'� ���7E�

� � �� � �→� � � � �� � �→� � � 9� � � @��,	/A�→� � � C� � �
�

�&������#������E�

9�R9�� @��,	/A� →� � � 9��� �
�

��������E�

9�:9�� @��,	/A� →� � � 9� � �
�

!���E�

!��� @��,	/A� →� � � �%3� �
�

*2!�E�

*;��@��,	/A� →� � � �%3� �
�

/���E�

/�3�@��,	/A� →� � � 9� � �
�

!?&���������E�

=C� @��,	/A� →� � � �� � �
�

�����
�� ����M���N�G�������������!���������������/����������

��������*��������������"/��7"��������������
����������6�����M�)�M�+�!����/������"�����������M)�

)� *�������"��������:�6����(<6��*�������67"���������
����/������������� �����������������"��������*���
������������"/��7"������������:������:�����!����/��
����������(1��M�61��!����/������"���������(1��
��� �

� (���"�������/�����������;��"�� ����"���������������
�����/���

�



�����������	
���� ����������	
���� ����������	��

��>9����

�������� ����!�!'�6&#�-�����#�������������������6��������������
�

�����
�� �������������:��� �:��"��������/����������:�����

�����"����������
)� 	"����������"����������������������:���������������

������������������������/ �����"�����������������
��0����:���:"�������/"��������������;���������
������ �����������"��������������!����/��:���������
������

+� �:�����(�(���!�������"������::��"����������"��
����������������������������"��:��"������������"��
"����������������!����/��������;����/"�����"����������
"��������"�����������������!����/�����������

�

�������� ����!�!'�6&#�-�����#���������������� ����<� 6����
�

�����

�� =��������������	
����������������������������

���������:����������9��"���������:����!����������
;����/�����������������"�/�������"����/ ������
:"�������������� �!������;���/��"����/ �������
:"��������
��%��������"�/���?�<�������<�)FF�
� � � <+������<+)FF�
� � � <.������<.�FF�
� � � <1������<1EFF�
� � � <8)�����<8FFF�
� � � <E������<E1FF�
� � � <F8�����<FF�F�
��������;����/���� ?�K)�������K)+FFF�� �
� � K+�������K+��FF�� �
� � K��������K��FFF�

)� =��������������	
������������������)�����/ ����

�:������������������ ����������������������������
�9��"����!����/�����"�����/ ������:"�������6���
���"�����������������:����������)�����/ �������
�;����/�����������"�������:�!����������� �

� �"�����������!�������������������/"��������������
�������!������������������������������������������
�������9��"������������� �/�����������!�������
��������������� �����������������/����/�;�����
�������� �

�



����������	�� ����������	
���� �����������	
����

��>99���

���� ����������
�

����� � 
�������������������������������������������������

�

/��������� ��& (�������������(��&����������� �����$������� ���������

����������*������� �#���������%�<������������)��������� ������������

(��������$��������*������� �#��������������������������%�

�

� � ��� ��� ��� ��� ��� �	� �
� ���

���
� � ���� ��� ���� ��
� ���� � ���� ����

�

� �K=� L��� E������#�#�  ��������:K���� ��������(���&��&���������*������� �

#����������

� � L�9� E������#�#�  �������=���� ��������(���&��&����%�

� =�� L��� E�	������������������������-�����.�

� � L�9� E�	������������������������-=�����.�

� 5*� L��� E� ���&������������������������������(���

� � L�9� E� ���&��������������������������������(���

� ��9� L��� �E� � ���&���������#&�����=�#� ����������������������(���

� � L�9� �E� � ���&���������#&�����=�#� ������������������������(���

� *� L��� �E� � 2�������& (������&���������������(������.��9.L9�

� � L�9� �E� � 2�������& (������&�������������(������-��9.L9�

� *�,� L��� �E� � !������������#��������������$����������(��������%�

� � L�9� �E� � 2������������#��������������$����������(��������%�

� �CC� L��� �E� � �CC���������&��&�������������������#����������*������� �

� � L�9� �E� � �CC�����&��&�������������������#����������*������� �

�

� � ��� ��� ��� ��� ��� �	� �
� ���

���	� � � � ���� � � ��� ���� ����

�

� *2
� L��� �E� 	������������#�����������&����#����������

� � L�9� �E� 	���#����������������� �����C����S�C�3�������&����#����������

� � � � 6#����&��������  �����#����7�

� O�I� L��� �E� ���� #&����� +�$�)� 	�)� ���)� 
���� ���� =����� ���� ��������� ���

���+�$��

� � L�9� �E� 2��$�	����������#&�����+�$���������������������+�$��

• � 	�)����)�
��������=�����+�$�������(��������$�������������������
�����+�$������#����&�������� �������#����%�

• � �����#����&�������� �������#����)���#&���������� �����������������
��������($��������	��#&�����+�$������#�����$%�

� !/,� L��� �E� -!/�=/�,2��/.����������$��������������������������������

� � L�9� �E� -�,,=2�*G� ,2��/.� ��� ������$��� ��� �� ������ ������ �����

�������

� �	H� L��� �E� /��� ��&������&'�����$�#��#&����������������$���($�������������

#�  ����

� � L�9� �E� /��� ��&������&'�����$�#��#&����������������$���($���������



�����������	
���� ����������	
���� ����������	��

��>9F���

��	� �	�����
�

���������� ������� ����������� �������� ��������� ���&����������� ������

���� #����#�� ����� ��� ���� ��� ���  ���� ��� �'�#&��� ����� ������ )� ����

����������,:!����� ������������%�

<����������� ��������������������������,:!����� �����������)����������

��������������*���������1�� ��&��%� � �

�

�&���� ��! ��������

(�"��� �������� ���������������������<��������������������;�����

������� 	����� �����/���0�������:�����"��!����!�����!�����������"��������������������

������������������������:�������:����������

+����

$�:������� �,)�	����:���
����(������( ����

� � � � ����� ���������������9�����:������������������

(�"��� *����::�����������������������������������:����	�������������������

������� (��:��������	����������!�����������"������������������������������������������

��������::������/���

+��)�

$�:������� �,)�	����:���
����(������( ����

� � � � ����� ���������������9�����:������������������

(�"��� ��������������������/���/���"��������"���������������������������

������� (��:����������������/���0����������!�����������"������������������������������

������:�������������"���������������������

+��,�

$�:������� �,)�	����:���
����(������( ����

� � � � %��0������

(�"��� *�������������:�����!����������������������/���"���������������:�������������

���������

������� (��:��������������������������!�����������"�����������������������������

�����������������������������

+��.�

$�:������� �,)�	����:���
����(������( ����

� � � � %��0������

(�"��� (������$������:�����!���������������������/���"�����������"���:��������$��������

������

������� (��:������������"���:��������$�����!�����������"�����������������������������

������������������������"��

+��1�

$�:������� �,)�	����:���
����(������( ����

� � � � %��0��������������������:�(������$�

(�"��� (������$�������������������/�����:������/���"��������"�����������������

�������������������$�

������� (��:����������������/���0����������!�����������"������������������������������

������:�������������"���������������������

+��E�

$�:������� �,)�	����:���
����(������( ����

� � � � %��0��������������������:�(������$�

(�"��� *�������:����������������:�����!��������/�������"�:����3@������5��������:������

������� (��:��������/���0���������/���0���������������������:������������!��������

���"������������������������������������������������

+��)�

$�:������� �,)�	����:���
����(������( ����

� � � � %��0������ �

(�"��� *������������!�������������:���������������������������������:����

������� (��:��������/���0���������������������:������������!�����������"���������������

���������������������������������

+��+�

$�:������� �,)�	����:���
����(������( ����

� � � � (���:���������%��0������

�



V.  MAINTENANCE



MAINTENANCEB–64124EN/01 1. METHOD OF REPLACING BATTERY

815

1 METHOD OF REPLACING BATTERY
In a system using this CNC, batteries are used as follows:

Use Component connected tobattery

Memory backup in the CNC control unit CNC control unit

Preservation of the current position indicated
by the separate absolute pulse coder

Separate detector interface
unit

Preservation of the current position indicated
by the absolute pulse coder built into the
motor

Servo amplifier

Used batteries must be discarded according to appropriate local
ordinances or rules.  When discarding batteries, insulate them by using
tape and so forth to prevent the battery terminals from short–circuiting.



MAINTENANCE1. METHOD OF REPLACING BATTERY B–64124EN/01

816

Part programs, offset data, and system parameters are stored in CMOS
memory in the control unit.  The power to the CMOS memory is backed
up by a lithium battery mounted on the front panel of the control unit.  The
above data is not lost even when the main battery goes dead.  The backup
battery is mounted on the control unit at shipping.  This battery can
maintain the contents of memory for about a year.
When the voltage of the battery becomes low, alarm message “BAT”
blinks on the display and the battery alarm signal is output to the PMC.
When this alarm is displayed, replace the battery as soon as possible.  In
general, the battery can be replaced within one or two weeks, however,
this depends on the system configuration.
If the voltage of the battery becomes any lower, memory can no longer
be backed up.  Turning on the power to the control unit in this state causes
system alarm 935 (ECC error) to occur because the contents of memory
are lost.  Clear the entire memory and reenter data after replacing the
battery.  
Therefore, FANUC recommends that the battery be replaced once a year
regardless of whether alarms are generated.
The power to the control unit must be turned on when the battery is
replaced.  If the battery is disconnected when the power is turned off, the
contents of memory are lost.
Observe the following precautions for lithium batteries:

WARNING
If an unspecified battery is used, it may explode.
Replace the battery only with the specified battery
(A02B–0200–K102.)

In addition to the Lithium battery built into the CNC control unit,
commercial D–size alkaline batteries can be used by installing the battery
case externally.

NOTE
A lithium battery is installed as standard at the factory.

1.1
BATTERY FOR
MEMORY BACKUP
(3VDC)



MAINTENANCEB–64124EN/01 1. METHOD OF REPLACING BATTERY

817

(1)Prepare a new lithium battery (ordering drawing number:
A02B–0200–K102).

(2)Turn on the power of the control unit once for about 30 seconds.

(3)Turn off the power of the control unit.

(4)Remove the old battery from the top of the CNC control unit.
First unplug the battery connector then take the battery out of its case.
The battery case of a control unit without option slots is located at the
top right end of the unit.  That of a control unit with 2 slots is located
in the central area of the top of the unit (between fans).

(5) Insert a new battery and reconnect the connector.

NOTE
Complete steps (3) to (5) within 10 minutes.  Do not leave
the control unit without a battery for any longer than the
period shown, as this will result in the contents of memory
being lost.

Lithium battery
A02B–0236–K102

Battery
case

Connector

WARNING
Incorrect battery replacement may cause an explosion.  Do
not use a battery other than that specified (specification:
A02B–0200–K102).

Replacing the lithium
battery



MAINTENANCE1. METHOD OF REPLACING BATTERY B–64124EN/01

818

(1)Prepare two new alkaline dry cells (size D).

(2)Turn on the power of the control unit once for about 30 seconds.

(3)Turn off the power of the control unit.

(4)Remove the battery case cover.

(5)Replace the batteries, paying careful attention to their orientation.

(6)Replace the battery case cover.

NOTE
When replacing the dry cells, use the same procedure as
that for lithium battery replacement procedure, described
above.

Dry cell × 2

Cover

Connection terminal
on the rear

Battery case

Mounting hole × 4

Replacing the alkaline
dry cells (size D)



MAINTENANCEB–64124EN/01 1. METHOD OF REPLACING BATTERY

819

Power from the external batteries is supplied through the connector to
which the lithium battery is connected.  The lithium battery, provided as
standard, can be replaced with external batteries in the battery case
(A02B–0236–C281) according to the battery replacement procedures
described above.

NOTE
1 Install the battery case (A02B–0236–C281) in a location where the batteries can be replaced

even when the control unit power is on.
2 The battery cable connector is attached to the control unit by means of a simple lock system.

To prevent the connector from being disconnected due to the weight of the cable or tension
within the cable, fix the cable section within 50 cm of the connector.

Use of alkaline dry cells
(size D)

Connection



MAINTENANCE1. METHOD OF REPLACING BATTERY B–64124EN/01

820

One battery unit can maintain current position data for six absolute pulse
coders for a year.
When the voltage of the battery becomes low, APC alarms 3n6 to 3n8 (n:
axis number) are displayed on the LCD display.  When APC alarm 3n7
is displayed, replace the battery as soon as possible.  In general, the battery
should be replaced within one or two weeks, however, this depends on the
number of pulse coders used.
If the voltage of the battery becomes any lower, the current positions for
the pulse coders can no longer be maintained.  Turning on the power to
the control unit in this state causes APC alarm 3n0 (reference position
return request alarm) to occur.  Return the tool to the reference position
after replacing the battery.  
Therefore, FANUC recommends that the battery be replaced once a year
regardless of whether APC alarms are generated.
See Section 7.1.3 for details of connecting the battery to separate absolute
pulse coders.

Obtain four commercially available alkaline batteries (size D).

(1)Turn on the power of the machine (turn on the servo amplifier).

(2)Loosen the screws of the battery case, and remove the cover.

(3)Replace the dry batteries in the case.
Note the polarity of the batteries as shown in the figure below (orient
two batteries one way and the other two in the opposite direction).

Å
Å

Å
ÅÅ

Å

Ç

ÇÇÅ

Å
Å

Screws

Cover

(4)After installing the new batteries, replace the cover.

(5)Turn off the power to the machine.

WARNING
If the batteries are installed incorrectly, an explosion may
occur.  Never use batteries other than the specified type
(Size D alkaline batteries).

1.2
BATTERY FOR
SEPARATE
ABSOLUTE PULSE
CODERS (6VDC)

Replacing batteries



MAINTENANCEB–64124EN/01 1. METHOD OF REPLACING BATTERY

821

CAUTION
The battery must be replaced with the power of the machine
turned on (the servo amplifier turned on).  
Note that, if batteries are replaced while no power is
supplied to the CNC, the recorded absolute position is lost.

The battery for the absolute pulse coder built into the motor is installed
in the servo amplifier.  For how to connect and replace the battery, refer
to the following manuals:

� FANUC SERVO MOTOR αis series Maintenance Manual
� FANUC SERVO MOTOR βis series Maintenance Manual
� FANUC SERVO MOTOR βis series (I/O Link Option) Maintenance

Manual

1.3
BATTERY FOR
ABSOLUTE PULSE
CODER BUILT INTO
THE MOTOR (6VDC)



APPENDIX



APPENDIXB–64124EN/01 A. TAPE CODE LIST

825

A TAPE CODE LIST
ISO code EIA code Meaning

Character 8 7 6 5 4 3 2 1 Character 8 7 6 5 4 3 2 1
Without
CUSTOM
MACRO B

With
CUSTOM
MACRO B

0 � � � 0 � � Number 0

1 � � � � � 1 � � Number 1

2 � � � � � 2 � � Number 2

3 � � � � � 3 � � � � Number 3

4 � � � � � 4 � � Number 4

5 � � � � � 5 � � � � Number 5

6 � � � � � 6 � � � � Number 6

7 � � � � � � � 7 � � � � Number 7

8 � � � � � 8 � � Number 8

9 � � � � � 9 � � � � Number 9

A � � � a � � � � Address A

B � � � b � � � � Address B

C � � � � � c � � � � � � Address C

D � � � d � � � � Address D

E � � � � � e � � � � � � Address E

F � � � � � f � � � � � � Address F

G � � � � � g � � � � � � Address G

H � � � h � � � � Address H

I � � � � � i � � � � � � Address I

J � � � � � j � � � � � Address J

K � � � � � k � � � � Address K

L � � � � � l � � � � Address L

M � � � � � m � � � � Address M

N � � � � � n � � � � Address N

O � � � � � � � o � � � � Address O

P � � � p � � � � � � Address P

Q � � � � � q � � � � Address Q

R � � � � � r � � � � Address R

S � � � � � s � � � � Address S

T � � � � � t � � � � Address T

U � � � � � u � � � � Address U

V � � � � � v � � � � Address V

W � � � � � � � w � � � � Address W

X � � � � � x � � � � � � Address X

Y � � � � � y � � � � Address Y

Z � � � � � z � � � � Address Z



APPENDIXA. TAPE CODE LIST B–64124EN/01

826

ISO code EIA code Meaning

Character 8 7 6 5 4 3 2 1 Character 8 7 6 5 4 3 2 1
Without

CUSTOM
MACRO B

With
CUSTOM
MACRO B

DEL � � � � � � � � � Del � � � � � � � � × ×
NUL � Blank � × ×
BS � � � BS � � � � × ×
HT � � � Tab � � � � � � × ×

LF or NL � � � CR or EOB � �

CR � � � � � × ×
SP � � � SP � � � �

% � � � � � ER � � � �

( � � � (2–4–5) � � � �

) � � � � � (2–4–7) � � � �

+ � � � � � + � � � � ∆
– � � � � � – � �

: � � � � �

/ � � � � � � � / � � � �

. � � � � � . � � � � � �

# � � � � � Parameter
(No. 6012)

$ � � � ∆ �
& � � � � � & � � � � ∆ �
� � � � � � ___ ∆ �
* � � � � � Parameter

(No. 6010)
∆

, � � � � � , � � � � � �

; � � � � � � � ∆ ∆
< � � � � � ∆ ∆
= � � � � � � � Parameter

(No. 6011)
∆

> � � � � � � � ∆ ∆
? � � � � � � � ∆ �
@ � � � ∆ �
” � � ∆ ∆
[ � � � � � � � Parameter

(No. 6013)
∆

] � � � � � � � Parameter
(No. 6014)

∆



APPENDIXB–64124EN/01 A. TAPE CODE LIST

827

NOTE
1 The symbols used in the remark column have the following meanings.

(Space) : The character will be registered in memory and has a specific meaning.
It it is used incorrectly in a statement other than a comment, an alarm occurs.

× : The character will not be registered in memory and will be ignored.
∆ : The character will be registered in memory, but will be ignored during program

execution.
� : The character will be registered in memory.  If it is used in a statement other than

a comment, an alarm occurs.
� : If it is used in a statement other than a comment, the character will not be

registered in memory.  If it is used in a comment, it will be registered in memory.
2 Codes not in this table are ignored if their parity is correct.
3 Codes with incorrect parity cause the TH alarm. But they are ignored without generating the

TH alarm when they are in the comment section.
4 A character with all eight holes punched is ignored and does not generate TH alarm in EIA code.



APPENDIX
B. LIST OF FUNCTIONS AND 

TAPE FORMAT B–64124EN/01

828

B LIST OF FUNCTIONS AND TAPE FORMAT
Some functions cannot be added as options depending on the model.
In the tables below, PI :presents a combination of arbitrary axis
addresses using X,Y,Z,A,B and C (such as X_Y_Z_A_).
x = 1st basic axis (X usually) 
y = 2nd basic axis (Y usually) 
z = 3rd basic axis (Z usually)

Functions Illustration Tape format

Positioning (G00) PI

Start point

G00    _ ;PI

Linear  interpolation (G01) PI

Start point

G01    _ F_;PI

Circular interpolation 
(G02, G03)

(x, y)

G03(x, y)

JR

I

G02

Start
point

Start point

R

I

J

G17
G02

G03
X_ Y_

R_

I_ J_
F_ ;

G18
G02

G03
X_ Z_

R_

I_ K_
F_ ;

G19
G02

G03
Y_ Z_

R_

J_ K_
F_ ;

Helical interpolation
(G02, G03) Z

Start
point

(xyz)

(x, y)

(In case of X–Y plane)

G17
G02

G03
X_ Y_

R_

I_ J_
α_ F_ ;

G18
G02

G03
X_ Z_

R_

I_ K_
α_ F_ ;

G19
G02

G03
Y_ Z_

R_

J_ K_
α_ F_ ;

α : Any axis other than circular 
interpolation axes.

Dwell (G04)
G04

X_ ;
P_



APPENDIXB–64124EN/01
B. LIST OF FUNCTIONS AND

 TAPE FORMAT

829

Functions Tape formatIllustration

AI advanced preview control 
(G05.1)

G05.1 Q1; AI advanced preview control 
mode on

G05.1 Q0 ; AI advanced preview control 
mode off

Cylindrical interpolation
(G07.1)

G07.1 IP_r_; Cylindrical interpolation mode
G07.1 IP0 ; Cylindrical interpolation mode cancel
r: Radius of cylinder

Advanced preview control (G08) G08 P1: Advanced preview control mode on
G08 P0: Advanced preview control mode off

Exact  stop (G09) Velocity

Time

PI _;G09 G02

G03

G01

Change of offset value by 
program (G10)

G10 L10 P_R_;(Geomerty offset value/H)
G10 L11 P_R_;(Wear offset value/H)
G10 L12 P_R_;(Geomerty offset value/D)
G10 L13 P_R_;(Wear offset value/D)

Polar coordinate (G15, G16)
Yp

Xp
(x y)

Xp

Yp
Local coordinate

Work coordinate system

G17 G16 Xp_ Yp_ ;. 
G18 G16 Zp_ Xp_ ;. 
G19 G16 Yp_ Zp_ ;. 
G15 ; Cancel

Plane selection
(G17, G18, G19)

G17 ;
G18 ;
G19 ;

Inch/millimeter 
conversion (G20, G21)

G20 : Inch input
G21 : Millimeter input

Stored stroke check
(G22, G23)

(XYZ)

(IJK)

G22 X_Y_Z_I_J_K_;

G23 Cancel;

Reference position return
check (G27)

PI

Start point

G27    _ ;PI

Reference position return
(G28)

2nd, reference position return
(G30) PI

Reference position

Intermediate position

(G28)

2nd reference
position (G30) Start point

G27    _ ;PI



APPENDIX
B. LIST OF FUNCTIONS AND 

TAPE FORMAT B–64124EN/01

830

Functions Tape formatIllustration

Return from reference 
position to start point (G29)

PI
Intermediate position

Reference position G29    _ ;PI

Skip function (G31) PI

Start point
Skip signal

G31    _ F_;PI

Thread cutting (G33) F G33    _ F_;
F : lead

PI

Cutter compensation C
(G40 – G42)

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇ

G41

G42

G40

Tool

G17
G18
G19

G41
G42 D_ ;

D : Tool offset
G40 : Cancel

Normal direction control 
(G40.1, G41.1, G42.1) 
(G150, G151, G152)

G41.1 (G151) 
    Normal direction control left
G42.1 (G152) 
    Normal direction control right
G40.1 (G150) 
    Normal direction control cancel

Tool length offset  A 
(G43, G44, G49)

Z

Offset
G43

Z_ H_ ;
G44

G43
H_ ;

G44

H : Tool offset
G49 : Cancel

Tool length offset B 
(G43, G44, G49)

H : Tool offset
G49 : Cancel

G17
G18
G19

H_ ;
G43

G44

Z_
Y_
X_

G17
G18
G19

H_ ;
G43

G44

Tool length offset C 
(G43, G44, G49)

G43
�_ H_ ;

G44

� : An optional address of one axis
H : Tool offset number
G49 : Cancel



APPENDIXB–64124EN/01
B. LIST OF FUNCTIONS AND

 TAPE FORMAT

831

Functions Tape formatIllustration

Tool offset (G45 – G48)

IP

IP

Increase

Decrease
2 times
increase
2 times
decrease

Compensation 
value

P# ?#�I
G45
G46
G47
G48

D : Tool offset number

Scaling (G50, G51)

P1’

P1 P2

P4 P3

P2’

P4’ P3’
PI

P# ?#�I
G45
G46
G47
G48

D : Tool offset number

Programmable mirror 
image (G50.1, G51.1)

Mirror PIG51.1      _ ;
G50.1 ; Cancel. . . . 

Setting of local
coordinate system
(G52) x

y
PI

Local coordinate
system

Work coordinate
system

G52    _ ;PI

Command in machine
coordinate system
(G53)

G53    _ ;PI

Selection of work 
coordinate system
(G54 – G59)

PIWork zero
point
offset

Work coordinate
system

Machine coordinate system

G54

   :
G59

P# �I

Single direction 
positioning (G60)

PI G60    _ ;PI

Cutting mode (G64)
Exact stop mode (G61)
Tapping mode (G63)

Automatic corner override
(G62)

v

t
G64

v

G61
t

G64_  ; Cutting mode
G61_ ; Exact stop mode
G63_ ; Tapping mode
G62_ ; Automatic corner override



APPENDIX
B. LIST OF FUNCTIONS AND 

TAPE FORMAT B–64124EN/01

832

Functions Tape formatIllustration

Custom macro
(G65, G66, G67)

G65 P_ L_ ;

Macro

O_ ;

M99 ;

One–shot call
  G65 P_ L_ 
<Argument assignment> ;
   P : Program No.
   L :  Number of repeatition
Modal call
  G66 P_L_  <Argument
  G67 ;  Cancel assignment>;

Coordinate system rotation
(G68, G69)

Y

X
(x y)

(In case of X–Y plane)

 �

G68
G17 X_ Y_ 

G18 Z_ X_

G19 Y_ Z_

R α ;

G69 ;  Cancel

Canned cycles 
(G73, G74, G76, G80 – G89)

Refer to II.13.  FUNCTIONS TO
SIMPLIFY PROGRAMMING

G80 ; Cancel

G73
G74
G76
G81
   :
G89

X_ Y_ Z_ P_ Q_ R_ F_ K_ ;

Absolute/incremental 
programming (G90/G91)

G90_ ; Absolute command
G91_ ; Incremental command
G90_ G91_ ; Combined use

Change of workpiece 
coordinate system (G92)

Maximum spindle speed
clump (G92)

ÇÇ
ÇÇ

PI

G92    _ ; Change of workpiece coordinate
system

G92S_ ; Maximum spindle speed clump

PI

Workpiece coordinate
system preset (G92.1)

G92.1      0;PI

Feed per minute, Feed
per revolution (G94, G95)

mm/min inch/min
mm/rev inch/rev

G94 F_ ; Feed per minute
G95 F_ ; Feed per revolution

Constant surface speed
control (G96, G97)

Surface speed
(m/min or feet/min)

Spindle speed 
N (min–1)

G96 S_ ; Starts constant surface speed control
(Surface speed command)

G97 S_ ; Constant surface speed is cancelled
(Maximum spindle speed command)

Initial point return / R point 
return (G98, G99)

G99

G98
Initial
level

R level

Z point

G98_ ;
G99_ ;



APPENDIXB–64124EN/01 C. RANGE OF COMMAND VALUE

833

C RANGE OF COMMAND VALUE

Increment system

IS–B IS–C

Least input increment 0.001 mm 0.0001 mm

Least command increment 0.001 mm 0.0001 mm

Max. programmable dimension ±99999.999 mm ±9999.9999 mm

Max. rapid traverse  Note 240000 mm/min 100000 mm/min

Feedrate range  Note 1 to 240000 mm/min 1 to 100000 mm/min

Incremental feed 0.001, 0.01, 0.1, 
1 mm/step

0.0001, 0.001, 0.01,
0.1 mm/step

Tool compensation 0 to ±999.999 mm 0 to ±999.9999 mm

Dwell time 0 to 99999.999 sec 0 to 99999.999 sec

Increment system

IS–B IS–C

Least input increment 0.0001 inch 0.00001 inch

Least command increment 0.001 mm 0.0001 mm

Max. programmable dimension ±9999.9999 inch ±393.70078 inch

Max. rapid traverse  Note 240000 mm/min 100000 mm/min

Feedrate range  Note 0.01 to 9600 
inch/min

0.01 to 4000 
inch/min

Incremental feed 0.0001, 0.001, 0.01,
0.1 inch/step

0.00001, 0.0001,
0.001, 0.01 inch/step

Tool compensation 0 to ±99.9999 inch 0 to ±99.9999 inch

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

Linear axis
� In case of millimeter

input, feed screw is
millimeter

� 6� �
�� �� ���� �����/

���� ����3 �� 	����	����



APPENDIXC. RANGE OF COMMAND VALUE B–64124EN/01

834

Increment system

IS–B IS–C

Least input increment 0.0001 inch 0.00001 inch

Least command increment 0.0001 inch 0.00001 inch

Max. programmable dimension ±9999.9999 inch ±9999.9999 inch

Max. rapid traverse  Note 9600 inch/min 4000 inch/min

Feedrate range  Note 0.01 to 9600 
inch/min

0.01 to 4000 
inch/min

Incremental feed 0.0001, 0.001, 0.01,
0.1 inch/step

0.00001, 0.0001,
0.001, 0.01 inch/step

Tool compensation 0 to ±99.9999 inch 0 to ±99.9999 inch

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

Increment system

IS–B IS–C

Least input increment 0.001 mm 0.0001 mm

Least command increment 0.0001 inch 0.00001 inch

Max. programmable dimension ±99999.999 mm ±9999.9999 mm

Max. rapid traverse  Note 9600 inch/min 4000 inch/min

Feedrate range  Note 1 to 240000 mm/min 1 to 100000 mm/min

Incremental feed 0.001, 0.01, 0.1, 1
mm/step

0.0001, 0.001, 0.01,
0.1 mm/step

Tool compensation 0 to ±999.999 mm 0 to ±999.9999 mm

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

� 6� �
�� �� ���� �����/

���� ����3 �� ����

� 6� �
�� �� 	����	����

�����/ ���� ����3 �� ����



APPENDIXB–64124EN/01 C. RANGE OF COMMAND VALUE

835

Increment system

IS–B IS–C

Least input increment 0.001 deg 0.0001 deg

Least command increment 0.001 deg 0.0001 deg

Max. programmable dimension ±99999.999 deg ±9999.9999 deg

Max. rapid traverse Note 240000 deg/min 100000 deg/min

Feedrate range Note 1 to 240000 deg/min 1 to 100000 deg/min

Incremental feed 0.001, 0.01, 0.1, 
1 deg/step

0.0001, 0.001, 0.01,
0.1 deg/step

NOTE
The feedrate range shown above are limitations depending
on CNC interpolation capacity.  As a whole system,
limitations depending on servo system must also be
considered.

Rotation axis



APPENDIXD. NOMOGRAPHS B–64124EN/01

836

D NOMOGRAPHS



APPENDIXB–64124EN/01 D. NOMOGRAPHS

837

The leads of a thread are generally incorrect in δ1 and δ2, as shown in  Fig.
D.1 (a), due to automatic acceleration  and  deceleration.
Thus distance allowances must be made to the extent of δ1 and δ2 in the
program.

Fig. D.1 (a)  Incorrect thread position

δ� δ�

�2 � T1V

V � 1
60

RL

T1 : Time constant of servo system (sec)
V : Cutting speed (mm/sec)
R : Spindle speed (min-1)
L : Thread feed (mm)

Time constant T1 (sec) of 
the servo system: Usually 
0.033 s.

(1). . . . . . . (mm)

�1 � {t–T1 � T1 exp(–
t

T1
)}V

a � exp(– t
T1

)

(2). . . . . . . 

(3). . . . . . . 

T1 : Time constant of servo system (sec)
V : Cutting speed (mm/sec)

Time constant T1 (sec) of 
the servo system: Usually 
0.033 s.

The lead at the beginning of thread cutting is shorter than the specified
lead L, and the allowable lead error is  ∆L.  Then as follows.

a � �L
L

When the value of HαI is determined, the time lapse until the thread
accuracy is attained.  The time HtI is substituted in (2) to determine δ1:
Constants V and T1 are determined in the same way as for δ2.  Since the
calculation of δ1 is rather complex, a nomography is provided on the
following pages.

D.1
INCORRECT
THREADED LENGTH

Explanations

� How to determine δ2

� How to determine δ1



APPENDIXD. NOMOGRAPHS B–64124EN/01

838

First specify the class and the lead of a thread.  The thread accuracy, α,
will be obtained at (1), and depending on the time constant of cutting feed
acceleration/ deceleration, the δ1 value when V = 10mm / s will be
obtained at (2).  Then, depending on the speed of thread cutting, δ1 for
speed other than 10mm/ s can be obtained at (3).

Time constant of 
servo system

V=40mm/
sec

V=20mm/
sec

(3)

0

δ1 a

L

L

(1)

(2)

δ1(V=10mm/
sec)

T1

T2

Fig. D.1 (b)  Nomograph

See the graph in  reference later in
the manual for an actual example.

NOTE
The equations for δ1, and δ2 are for when the acceleration/
deceleration time constant for cutting feed is 0.

� How to use nomograph



APPENDIXB–64124EN/01 D. NOMOGRAPHS

839

Fig. D.2 (a)  Incorrect threaded portion

δ� δ�

R : Spindle speed (min-1)
L : Thread lead (mm)

* When time constant T of the 
servo system is 0.033 s.

�2 �
LR

1800 * (mm)

�1 �
LR

1800 *
(–1–lna)

� �2(–1–lna)

Following a is a permited value of  thread.

a –1–lna

0.005 4.298

0.01

0.015

0.02

3.605

3.200

2.912

(mm)

(mm)

R : Spindle speed (min-1)
L : Thread lead (mm)

* When time constant T of the 
servo system is 0.033 s.

R=350min-1

L=1mm

a=0.01 then

�2 �
350 � 1

1800
� 0.194

�1 � �2 � 3.605 � 0.701

(mm)

(mm)

D.2
SIMPLE
CALCULATION OF
INCORRECT THREAD
LENGTH

Explanations

� A�3 �� �����	��� δ&

� A�3 �� �����	��� δ�

Examples



APPENDIXD. NOMOGRAPHS B–64124EN/01

840

Fig. D.2 (b)  Nomograph for obtaining approach distance δ1

� ���������



APPENDIXB–64124EN/01 D. NOMOGRAPHS

841

When servo system delay (by exponential acceleration/deceleration at
cutting or caused by the positioning system when a servo motor is used)
is accompanied by cornering, a slight deviation is produced between the
tool path (tool center path) and the programmed path as shown in Fig. D.3
(a).
Time constant T1 of the exponential acceleration/deceleration is fixed to
0.

θ

V1

V2

Tool path

Fig. D.3 (a) Slight deviation between the tool path and
 the programmed path

Programmed path

This tool path is determined by the following parameters:
• Feedrate (V1, V2)
• Corner angle (�)
• Exponential acceleration / deceleration time constant (T1) at 

cutting (T1 = 0)  
• Presence or absence of buffer register.
The above parameters are used to theoretically analyze the tool path and
above tool path is drawn with  the parameter which is set as an example.
When actually programming, the above items must be considered and
programming must be performed carefully so that the shape of the
workpiece is within the desired precision.
In other words, when the shape of the workpiece is not within the
theoretical precision, the commands of the next block must not be read
until the specified feedrate becomes zero. The dwell function is then used
to stop the machine for the appropriate period.

D.3
TOOL PATH AT
CORNER



APPENDIXD. NOMOGRAPHS B–64124EN/01

842

The tool path shown in Fig. D.3 (b) is analyzed based on the following
conditions:
Feedrate is constant at both blocks before and after cornering.
The controller has a buffer register.  (The error differs with the reading
speed of the tape reader, number of characters of the next block, etc.)

θ

V

VX1

VY1
φ1

VY2
VX2

φ2

V

Z

X0

Fig. D.3 (b)  Example of tool path

VX1 � V cos �1

VY1 � V sin �1

VX2 � V cos �2

VY2 � V sin �2

V : Feedrate at both blocks before and after cornering
VX1 : X–axis component of feedrate of preceding block
VY1 : Y–axis component of feedrate of preceding block
VX2 : X–axis component of feedrate of following block
VY2 : Y–axis component of feedrate of following block
θ : Corner angle
φ1 : Angle formed by specified path direction of preceding block 

and X–axis
φ2 : Angle formed by specified path direction of following block 

and X–axis

Analysis

� Description of conditions
and symbols



APPENDIXB–64124EN/01 D. NOMOGRAPHS

843

Fig. D.3 (c)  Initial value

Y0

X0

V

0

The initial value when cornering begins, that is, the X and Y coordinates
at the end of command distribution by the controller, is determined by the
feedrate and the positioning system time constant of the servo motor.

X0 � VX1(T1 � T2)

Y0 � VY1(T1 � T2)

T1:Exponential acceleration / deceleration time constant. (T=0)
T2:Time constant of positioning system (Inverse of position loop gain)

The equations below represent the feedrate for the corner section in
X–axis direction and Y–axis direction.

VX(t) � (VX2–VX1)[1–
VX1

T1–T2
{T1 exp(–

t
T1

)–T2 exp(–
t

T2
)} � VX1]

� VX2[1–
VX1

T1–T2
{T1 exp(–

t
T1

)–T2 exp(–
t

T2
)}]

VY(t) �
VY1–VY2
T1–T2

{T1 exp(–
t

T1
)–T2 exp(–

t
T2

)} � VY2

Therefore, the coordinates of the tool path at time t are calculated from the
following equations:

X(t) ��
t

0

VX(t)dt–X0

�
VX2–VX1
T1–T2

{T1
2 exp(– t

T1
)–T2

2 exp(– t
T2

)}–VX2(T1 � T2–t)

Y(t) ��
t

0

VY(t)dt–Y0

�
VY2–VY1
T1–T2

{T1
2 exp(– t

T1
)–T2

2 exp(– t
T2

)}–VY2(T1 � T2–t)

� Initial value calculation

� Analysis of corner tool
path



APPENDIXD. NOMOGRAPHS B–64124EN/01

844

When a servo motor is used, the positioning system causes an error
between input commands and output results. Since the tool advances
along the specified segment, an error is not produced in linear
interpolation. In circular interpolation, however, radial errors may be
produced, sepecially for circular cutting at high speeds.
This error can be obtained as follows:

�r � 1
2

(T1
2 � T2

2(1 � �2)) V
2

r

�rX

Z

(1). . . . . . . 

Command path

Actual path

�r : Maximum  radius  error (mm)
v : Feedrate (mm/s)
r : Circle  radius (mm)
T1 : Exponential  acceleration/deceleration  time  constant (sec) 

at  cutting (T=0) 
T2 : Time  constant  of  positoning  system (sec).  (Inverse  of  positon  

loop  gain)
� : Feed forward coefficient (%)

r

In the case of bell–shaped acceleration/deceleration and linear acceleration/
deceleration after cutting feed interpolation, an approximation of this radius
error can be obtained with the following expression:

Linear acceleration/deceleration after cutting feed interpolation

Bell–shaped acceleration/deceleration after cutting feed interpolation

Thus, the radius error in the case of bell–shaped acceleration/deceleration
and linear acceleration/deceleration after interpolation is smaller than in 
case of exponential acceleration/deceleration by a factor of 12, excluding
any error caused by a servo loop time constant.

�r � � 1
24

T1
2 � 1

2
T2

2(1 � �2)�V2r

�r � � 1
48

T1
2 � 1

2
T2

2(1 � �2)�V2r

Since the machining radius r (mm) and allowable error ∆r  (mm) of the
workpiece is given in actual machining, the allowable limit feedrate v
(mm /sec) is determined by equation (1).
Since the acceleration/deceleration time constant at cutting which is set
by this equipment varies with the machine tool, refer to the manual issued
by the machine tool builder.

D.4
RADIUS DIRECTION
ERROR AT CIRCLE
CUTTING



APPENDIXB–64124EN/01
E. STATUS WHEN TURNING POWER ON,

WHEN CLEAR AND WHEN RESET

845

E STATUS WHEN TURNING POWER ON, WHEN CLEARAND WHEN RESET
Parameter CLR (No. 3402#6) is used to select whether resetting the CNC
places it in the cleared state or in the reset state (0: reset state/1: cleared
state).
The symbols in the tables below mean the following : 
�:The status is not changed or the movement is continued.
×:The status is cancelled or the movement is interrupted.

Item When turning power on Cleared Reset

Setting 
data

Offset value � � �
data

Data set by the MDI
setting operation

� � �

Parameter � � �

Various 
data

Programs in memory � � �
data

Contents in the buffer
storage

× × � : MDI mode
× : Other mode

Display of sequence
number

� � (Note 1) � (Note 1)

One shot G code × × ×

Modal G code Initial G codes.
(The G20 and G21 codes return to
the same state they were in when
the power was last turned off.)

Initial G codes.
(G20/G21 are not
changed.)

�

F Zero Zero �

S, T, M × � �

K (Number of repeats) × × ×

Work coordinate value Zero � �



APPENDIX
E. STATUS WHEN TURNING POWER ON,

WHEN CLEAR AND WHEN RESET B–64124EN/01

846

Item ResetClearedWhen turning power on

Action in Movement × × ×

opera-
tion

Dwell × × ×
tion

Issuance of M, S and
T codes

× × ×

Tool length compensa-
tion

× Depending on
parameter
LVK(No.5003#6)

� : MDI mode
Other modes depend
on parameter
LVK(No.5003#6).

Cutter compensation × × � : MDI mode
× : Other modes

Storing called subpro-
gram number

× × (Note 2) � : MDI mode
× : Other modes 
(Note 2)

Output 
signals

CNC alarm signal 
AL

Extinguish if there is no cause for 
the alarm

Extinguish if there is
no cause for the
alarm

Extinguish if there is
no cause for the alarm

Reference position 
return completion LED

× �  
(× : Emergency
stop)

� 
(× : Emergency stop)

S, T and B codes × � �

M code × × ×

M, S and T strobe sig-
nals

× × ×

Spindle revolution sig-
nal (S analog signal)

× � �

CNC ready signal 
MA

ON � �

Servo ready signal
SA

ON (When other than servo
alarm)

ON (When other
than servo alarm)

ON (When other than 
servo alarm)

Cycle start LED (STL) × × ×

Feed hold LED (SPL) × × ×

NOTE
1 When heading is performed, the main program number is displayed.
2 When a reset is performed during execution of a subprogram, control returns the head of main

program.
Execution cannot be started from the middle of the subprogram.



APPENDIXB–64124EN/01
F. CHARACTER–TO–CODES
 CORRESPONDENCE TABLE

847

F CHARACTER–TO–CODES CORRESPONDENCE TABLE
Char-
acter

Code Comment Char-
acter

Code Comment

A 065 6 054

B 066 7 055

C 067 8 056

D 068 9 057

E 069 032 Space

F 070 ! 033 Exclamation mark

G 071 ” 034 Quotation mark

H 072 # 035 Hash sign

I 073 $ 036 Dollar sign

J 074 % 037 Percent

K 075 & 038 Ampersand

L 076 ’ 039 Apostrophe

M 077 ( 040 Left parenthesis

N 078 ) 041 Right parenthesis

O 079 * 042 Asterisk

P 080 + 043 Plus sign

Q 081 , 044 Comma

R 082 – 045 Minus sign

S 083 . 046 Period

T 084 / 047 Slash

U 085 : 058 Colon

V 086 ; 059 Semicolon

W 087 < 060 Left angle bracket

X 088 = 061 Equal sign

Y 089 > 062 Right angle bracket

Z 090 ? 063 Question mark

0 048 @ 064 HAtI mark

1 049 [ 091 Left square bracket

2 050 ^ 092

3 051 ] 094 Right square bracket

4 052 _ 095 Underscore

5 053



APPENDIXG. ALARM LIST B–64124EN/01

848

GALARM LIST
1) Program errors (P/S alarm)

Number Message Contents

000 PLEASE TURN OFF POWER A parameter which requires the power off was input, turn off power.

001 TH PARITY ALARM TH alarm (A character with incorrect parity was input). Correct the tape.

002 TV PARITY ALARM TV alarm (The number of characters in a block is odd). This alarm will
be generated only when the TV check is effective.

003 TOO MANY DIGITS Data exceeding the maximum allowable number of digits was input.
(Refer to the item of max. programmable dimensions.)

004 ADDRESS NOT FOUND A numeral or the sign “ – ” was input without an address at the beginning
of a block. Modify the program .

005 NO DATA AFTER ADDRESS The address was not followed by the appropriate data but was followed
by another address or EOB code. Modify the program.

006 ILLEGAL USE OF NEGATIVE SIGN Sign “ .” input error (Sign “ – ” was input after an address with which it
cannot be used. Or two or more “ – ” signs were input.) 
Modify the program.

007 ILLEGAL USE OF DECIMAL POINT Decimal point “ – ” input error (A decimal point was input after an address
with which it can not be used.  Or two decimal points were input.)
Modify the program.

009 ILLEGAL ADDRESS INPUT Unusable character was input in significant area.
Modify the program.

010 IMPROPER G–CODE An unusable G code or G code corresponding to the function not pro-
vided is specified. Modify the program.

011 NO FEEDRATE COMMANDED Feedrate was not commanded to a cutting feed or the feedrate was in-
adequate. Modify the program.

014 CAN NOT COMMAND G95 A synchronous feed is specified without the option for threading / syn-
chronous feed.

015 TOO MANY AXES COMMANDED The number of the commanded axes exceeded that of simultaneously
controlled axes.

020 OVER TOLERANCE OF RADIUS In circular interpolation (G02 or G03), difference of the distance between
the start point and the center of an arc and that between the end point
and the center of the arc exceeded the value specified in parameter No.
3410.

021 ILLEGAL PLANE AXIS 
COMMANDED

An axis not included in the selected plane (by using G17, G18, G19) was
commanded in circular interpolation. Modify the program.

022 NO CIRCULAR RADIUS When circular interpolation is specified, neither R (specifying an arc ra-
dius), nor I, J, and K (specifying the distance from a start point to the cen-
ter) is specified.

025 CANNOT COMMAND F0 IN
G02/G03

F0 (fast feed) was instructed by F1 –digit column feed in circular inter-
polation. Modify the program.

027 NO AXES COMMANDED IN
G43/G44

No axis is specified in G43 and G44 blocks for the tool length offset type
C.
Offset is not canceled but another axis is offset for the tool length offset
type C. Modify the program.

028 ILLEGAL PLANE SELECT In the plane selection command, two or more axes in the same direction
are commanded.
Modify the program.



APPENDIXB–64124EN/01 G. ALARM LIST

849

Number ContentsMessage

029 ILLEGAL OFFSET VALUE The offset values specified by H code is too large.
Modify the program.

030 ILLEGAL OFFSET NUMBER The offset number specified by D/H code for tool length offset or cutter
compensation is too large. Modify the program.

031 ILLEGAL P COMMAND IN G10 In setting an offset amount by G10, the offset number following address
P was excessive or it was not specified.  Alternatively, the additional
work coordinate number to be specified in a P code was too large.
Modify the program.

032 ILLEGAL OFFSET VALUE IN G10 In setting an offset amount by G10 or in writing an offset amount by sys-
tem variables, the offset amount was excessive.

033 NO SOLUTION AT CRC A point of intersection cannot be determined for cutter compensation C.
Modify the program.

034 NO CIRC ALLOWED IN ST–UP /EXT
BLK

The start up or cancel was going to be performed in the G02 or G03
mode in cutter compensation C. Modify the program.

036 CAN NOT COMMANDED G31 Skip cutting (G31) was specified in cutter compensation mode.
Modify the program.

037 CAN NOT CHANGE PLANE IN CRC G40 is commanded on the plane other than offset plane in cutter com-
pensation B. The plane selected by using G17, G18 or G19 is changed
in cutter compensation C mode. Modify the program.

038 INTERFERENCE IN CIRCULAR
BLOCK

Overcutting will occur in cutter compensation C because the arc start
point or end point coincides with the arc center. 
Modify the program.

041 INTERFERENCE IN CRC Overcutting will occur in cutter compensation C.   Two or more blocks
are consecutively specified in which functions such as the auxiliary
function and dwell functions are performed without movement in the cut-
ter compensation mode. Modify the program.

042 G45/G48 NOT ALLOWED IN CRC Tool offset (G45 to G48) is commanded in cutter compensation. Modify
the program.

044 G27–G30 NOT ALLOWED IN FIXED
CYC

One of G27 to G30 is commanded in canned cycle mode. 
Modify the program.

045 NO G COMMAND (G73/G83) A depth for each cutting (Q) is not commanded in canned cycle G73 or
G83.  Alternatively, Q was specified.  Correct the program.

046 ILLEGAL REFERENCE RETURN
COMMAND

Other than P2, P3 and P4 are commanded for 2nd, 3rd and 4th refer-
ence position return command.

050 CHF/CNR NOT ALLOWED IN THRD
BLK

Chamfering or corner R is commanded in the thread cutting block.
Modify the program.

051 MISSING MOVE AFTER CHF/CNR Improper movement or the move distance was specified in the block
next to the chamfering or corner R block.
Modify the program.

052 CODE IS NOT G01 AFTER CHF/
CNR

The block next to the chamfering or corner R block is not G01,G02,or
G03.  Modify the program.

053 TOO MANY ADDRESS COM-
MANDS

For systems without the arbitary angle chamfering or corner R cutting,
a comma was specified. For systems with this feature, a comma was fol-
lowed by something other than R or C  Correct the program.

055 MISSING MOVE VALUE IN CHF/
CNR

In the arbitrary angle chamfering or corner R block, the move distance
is less than chamfer or corner R amount.

058 END POINT NOT FOUND In a arbitrary angle chamfering or corner R cutting block, a specified axis
is not in the selected plane. Correct the program.

059 PROGRAM NUMBER NOT FOUND In an external program number search or external workpiece number
search, a specified program number was not found.  Otherwise, a pro-
gram specified for searching is being edited in background processing.
Otherwise, a program specified by an one–touch macro call is not regis-
tered in memory. Check the program number and external signal. Or dis-
continue the background editing.



APPENDIXG. ALARM LIST B–64124EN/01

850

Number ContentsMessage

060 SEQUENCE NUMBER NOT FOUND Commanded sequence number was not found in the sequence number
search. Check the sequence number.

070 NO PROGRAM SPACE IN
MEMORY

The memory area is insufficient.
Delete any unnecessary programs, then retry.

071 DATA NOT FOUND The address to be searched was not found.  Or the program with speci-
fied program number was not found in program number search.
Check the data.

072 TOO MANY PROGRAMS The number of programs to be stored exceeded 63 (basic), 125 (option),
200 (option), or 400 (option). Delete unnecessary programs and
execute program registeration again.

073 PROGRAM NUMBER ALREADY IN
USE

The commanded program number has already been used.
Change the program number or delete unnecessary programs and
execute program registeration again.

074 ILLEGAL PROGRAM NUMBER The program number is other than 1 to 9999.
Modify the program number.

075 PROTECT An attempt was made to register a program whose number was pro-
tected.

076 ADDRESS P NOT DEFINED Address P (program number) was not commanded in the block which
includes an M98, G65, or G66 command. Modify the program.

077 SUB PROGRAM NESTING ERROR The subprogram was called in five folds. Modify the program.

078 NUMBER NOT FOUND A program number or a sequence number which was specified by ad-
dress P in the block which includes an M98, M99, M65 or G66 was not
found.  The sequence number specified by a GOTO statement was not
found. Otherwise, a called program is being edited in background pro-
cessing. Correct the program, or discontinue the background editing.

079 PROGRAM VERIFY ERROR In memory or program collation,a program in memory does not agree
with that read from an external I/O device. Check both the programs in
memory and those from the external device.

080 G37 ARRIVAL SIGNAL NOT AS-
SERTED

In the automatic tool length measurement function (G37), the measure-
ment position reach signal (XAE, YAE, or ZAE) is not turned on within
an area specified in parameter 6254 (value ε). 
This is due to a setting or operator error.

081 OFFSET NUMBER NOT FOUND IN
G37

Tool length automatic measurement (G37) was specified without a H
code. (Automatic tool length measurement function) Modify the pro-
gram.

082 H–CODE NOT ALLOWED IN G37 H code and automatic tool compensation (G37) were specified in the
same block. (Automatic tool length measurement function) Modify the
program.

083 ILLEGAL AXIS COMMAND IN G37 In automatic tool length measurement, an invalid axis was specified or
the command is incremental.   Modify the program.

085 COMMUNICATION ERROR When entering data in the memory by using Reader / Puncher interface,
an overrun, parity or framing error was generated. The number of bits
of input data or setting of baud rate or specification No. of I/O unit is in-
correct.

086 DR SIGNAL OFF When entering data in the memory by using Reader / Puncher interface,
the ready signal (DR) of reader / puncher was off.
Power supply of I/O unit is off or cable is not connected or a P.C.B. is de-
fective.

087 BUFFER OVERFLOW When entering data in the memory by using Reader / Puncher interface,
though the read terminate command is specified, input is not interrupted
after 10 characters read. I/O unit or P.C.B. is defective.



APPENDIXB–64124EN/01 G. ALARM LIST

851

Number ContentsMessage

090 REFERENCE RETURN INCOM-
PLETE

The reference position return cannot be performed normally because
the reference position return start point is too close to the reference posi-
tion or the speed is too slow. Separate the start point far enough from
the reference position, or specify a sufficiently fast speed for reference
position return.

091 REFERENCE RETURN 
INCOMPLETE

In the automatic operation halt state, manual reference position return
cannot be performed.

092 AXES NOT ON THE REFERENCE
POINT

The commanded axis by G27 (Reference position return check) did not
return to the reference position.

094 P TYPE NOT ALLOWED 
(COORD CHG)

P type cannot be specified when the program is restarted. (After the au-
tomatic operation was interrupted, the coordinate system setting opera-
tion was performed.) Perform the correct operation according to th oper-
ator’s manual.

095 P TYPE NOT ALLOWED 
(EXT OFS CHG)

P type cannot be specified when the program is restarted.   (After the
automatic operation was interrupted, the external workpiece offset
amount changed.)

096 P TYPE NOT ALLOWED 
(WRK OFS CHG)

P type cannot be specified when the program is restarted.  (After the au-
tomatic operation was interrupted, the workpiece offset amount
changed.)

097 P TYPE NOT ALLOWED 
(AUTO EXEC)

P type cannot be directed when the program is restarted. (After power
ON, after emergency stop or P/S alarm 94 to 97 were reset, no 
automatic operation is performed.)  Perform automatic operation.

098 G28 FOUND IN SEQUENCE 
RETURN

A command of the program restart was specified without the reference
position return operation after power ON or emergency stop, and G28
was found during search.  Perform the reference position return.

099 MDI EXEC NOT ALLOWED AFT.
SEARCH

After completion of search in program restart, a move command is given
with MDI.

100 PARAMETER WRITE ENABLE On the PARAMETER(SETTING) screen, PWE(parameter writing en-
abled) is set to 1. Set it to 0, then reset the system.

101 PLEASE CLEAR MEMORY The power turned off while rewriting the memory by program edit opera-
tion.  If this alarm has occurred, press <RESET> while pressing
<PROG>, and only the program being edited will be deleted.
Register the deleted program.

109 FORMAT ERROR IN G08 A value other than 0 or 1 was specified after P in the G08 code, or no
value was specified.

110 DATA OVERFLOW The absolute value of fixed decimal point display data exceeds the al-
lowable range. Modify the program.

111 CALCULATED DATA OVERFLOW The result of calculation is out of the allowable range (–1047 to –10–29,
0, and 10–29 to 1047).

112 DIVIDED BY ZERO Division by zero was specified. (including tan 90°)

113 IMPROPER COMMAND A function which cannot be used in custom macro is commanded.
Modify the program.

114 FORMAT ERROR IN MACRO There is an error in other formats than <Formula>.
Modify the program.

115 ILLEGAL VARIABLE NUMBER A value not defined as a variable number is designated in the custom
macro.  Modify the program.

116 WRITE PROTECTED VARIABLE The left side of substitution statement is a variable whose substitution
is inhibited. Modify the program.

118 PARENTHESIS NESTING ERROR The nesting of bracket exceeds the upper limit (quintuple).
Modify the program.

119 ILLEGAL ARGUMENT The SQRT argument is negative, BCD argument is negative, or other
values than 0 to 9 are present on each line of BIN argument.
Modify the program.



APPENDIXG. ALARM LIST B–64124EN/01

852

Number ContentsMessage

122 QUADRUPLICATE MACRO 
MODAL–CALL

A total of four macro calls and macro modal calls are nested.  Correct
the program.

123 CAN NOT USE MACRO COMMAND
IN DNC

Macro control command is used during DNC operation.
Modify the program.

124 MISSING END STATEMENT DO – END does not correspond to 1 : 1. Modify the program.

125 FORMAT ERROR IN MACRO <Formula> format is erroneous. Modify the program.

126 ILLEGAL LOOP NUMBER In DOn, 1� n �3 is not established. Modify the program.

127 NC, MACRO STATEMENT IN SAME
BLOCK

NC and custom macro commands coexist.
Modify the program.

128 ILLEGAL MACRO SEQUENCE NUM-
BER

The sequence number specified in the branch command was not 0 to
9999. Or, it cannot be searched. Modify the program.

129 ILLEGAL ARGUMENT ADDRESS An address which is not allowed in <Argument Designation > is used.
Modify the program.

130 ILLEGAL AXIS OPERATION An axis control command was given by PMC to an axis controlled by
CNC.  Or an axis control command was given by CNC to an axis con-
trolled by PMC. Modify the program.

131 TOO MANY EXTERNAL ALARM
MESSAGES

Five or more alarms have generated in external alarm message. 
Consult the PMC ladder diagram to find the cause.

132 ALARM NUMBER NOT FOUND No alarm No. concerned exists in external alarm message clear.
Check the PMC ladder diagram.

133 ILLEGAL DATA IN EXT. ALARM
MSG

Small section data is erroneous in external alarm message or exter-
nal operator message. Check the PMC ladder diagram.

135 ILLEGAL ANGLE COMMAND The index table indexing positioning angle was instructed in other
than an integral multiple of the value of the minimum angle.
Modify the program.

136 ILLEGAL AXIS COMMAND In index table indexing, another control axis was instructed together
with the B axis.
Modify the program.

139 CAN NOT CHANGE PMC 
CONTROL AXIS

An axis is selected in commanding by PMC axis control.
Modify the program.

141 CAN NOT COMMAND G51 IN CRC G51 (Scaling ON) is commanded in the tool offset mode.
Modify the program.

142 ILLEGAL SCALE RATE Scaling magnification is commanded in other than 1 – 999999.
Correct the scaling magnification setting (G51 Pp or parameter. . 
5411 or 5421).

143 SCALED MOTION DATA OVER-
FLOW

The scaling results, move distance, coordinate value and circular
radius exceed the maximum command value. Correct the program or
scaling mangification.

144 ILLEGAL PLANE SELECTED The coordinate rotation plane and arc or cutter compensation C
plane must be the same. Modify the program.

148 ILLEGAL SETTING DATA Automatic corner override deceleration rate is out of the settable
range of judgement angle. Modify the parameters (No.1710 to
No.1714)

149 FORMAT ERROR IN G10L3 A code other than Q1,Q2,P1 or P2 was specified as the life count
type in the extended tool life management.

150 ILLEGAL TOOL GROUP NUMBER Tool Group No. exceeds the maximum allowable value.
Modify the program.

151 TOOL GROUP NUMBER NOT
FOUND

The tool group commanded in the machining program is not set.
Modify the value of program or parameter.

152 NO SPACE FOR TOOL ENTRY The number of tools within one group exceeds the maximum value
registerable. Modify the number of tools.



APPENDIXB–64124EN/01 G. ALARM LIST

853

Number ContentsMessage

153 T–CODE NOT FOUND In the registration of tool life data, a T code was not specified in a
block where it is required.  Alternatively, only M06 was specified in a
block for tool change type D.  Correct the program.

154 NOT USING TOOL IN LIFE GROUP When the group is not commanded, H99 or D99 was commanded.
Correct the program.

155 ILLEGAL T–CODE IN M06 In the machining program, M06 and T code in the same block do not
correspond to the group in use. Correct the program.

156 P/L COMMAND NOT FOUND P and L commands are missing at the head of program in which the
tool group is set. Correct the program.

157 TOO MANY TOOL GROUPS The number of tool groups to be set exceeds the maximum allowable
value. See parameter GS1, GS2 (No. 6800 bit 0 and 1).  Modify the
program.

158 ILLEGAL TOOL LIFE DATA The tool life to be set is too excessive. Modify the setting value.

159 TOOL DATA SETTING INCOM-
PLETE

During executing a life data setting program, power was turned off. 
Set again.

175 ILLEGAL G107 COMMAND Conditions when performing cylindrical interpolation start or cancel
not correct.  To change the mode to the cylindrical interpolation
mode, specify the command in a format of “G07.1 rotation–axis name
radius of cylinder.”

176 IMPROPER G–CODE IN G107 Any of the following G codes which cannot be specified in the cylin-
drical interpolation mode was specified.

1) G codes for positioning, such as G28,, G73, G74, G76, G81 – G89,
including the codes specifying the rapid traverse cycle

2) G codes for setting a coordinate system: G52,G92,

3) G code for selecting coordinate system: G53 G54–G59

Modify the program.

177 CHECK SUM ERROR
(G05 MODE)

Check sum error
Modify the program.

178 G05 COMMANDED IN G41/G42
MODE

G05 was commanded in the G41/G42 mode.
Correct the program.

179 PARAM. (PRM NO. 7510) SETTING
ERROR

The number of controlled axes set by the parameter 7510 exceeds
the maximum number. Modify the parameter setting value.

180 COMMUNICATION ERROR 
(REMOTE BUF)

Remote buffer connection alarm has generated. Confirm the number of
cables, parameters and I/O device.

190 ILLEGAL AXIS SELECT In the constant surface speed control, the axis specification is wrong.
(See parameter No. 3770.) The specified axis command (P) contains
an illegal value.
Correct the program.

194 SPINDLE COMMAND IN 
SYNCHRO–MODE

A contour control mode, spindle positioning (Cs–axis control) mode,
or rigid tapping mode was specified during the serial spindle 
synchronous control mode. Correct the program so that the serial
spindle synchronous control mode is released in advance.

197 C–AXIS COMMANDED IN SPINDLE
MODE

The program specified a movement along the Cs–axis when the sig-
nal CON(DGN=G027#7) was off. Correct the program, or consult the
PMC ladder diagram to find the reason the signal is not turned on.

199 MACRO WORD UNDEFINED Undefined macro word was used. Modify the custom macro.

200 ILLEGAL S CODE COMMAND In the rigid tap, an S value is out of the range or is not specified.
The maximum value for S which can be specified in rigid tapping is
set in parameter (No.5241 to 5243). Change the setting in the
parameter or modify the program.

201 FEEDRATE NOT FOUND IN RIGID
TAP

In the rigid tapping, no F value is specified.
Correct the program.

202 POSITION LSI OVERFLOW In the rigid tapping, spindle distribution value is too large.



APPENDIXG. ALARM LIST B–64124EN/01

854

Number ContentsMessage

203 PROGRAM MISS AT RIGID 
TAPPING

In the rigid tapping, position for a rigid M code (M29) or an S 
command is incorrect. Modify the program.

204 ILLEGAL AXIS OPERATION In the rigid tapping, an axis movement is specified between the rigid
M code (M29) block and G84 (G74) block. Modify the program.

205 RIGID MODE DI SIGNAL OFF Rigid tapping signal (DGNG061 #1) is not 1 when G84 (G88) is
executed though the rigid M code (M29) is specified.

Consult the PMC ladder diagram to find the reason the signal is not
turned on.

206 CAN NOT CHANGE PLANE 
(RIGID TAP)

Plane changeover was instructed in the rigid mode.
Correct the program.

207 RIGID DATA MISMATCH The specified distance was too short or too long in rigid tapping.

210 CAN NOT COMAND M198/M99 1) M198 and M99 are executed in the schedule operation.  Or M198
is executed in the DNC operation.

2) In a multiple repetitive pocketing canned cycle, an interrupt macro
was specified, and M99 was executed.

212 ILLEGAL PLANE SELECT The arbitrary angle chamfering or a corner R is commanded or the
plane including an additional axis.  Correct the program.

213 ILLEGAL COMMAND IN 
SYNCHRO–MODE

Any of the following alarms occurred in the operation with the simple
synchronization control.

1) The program issued the move command to the slave axis.

2) The program issued the manual continuous feed/manual handle
feed/incremental feed command to the slave axis.

3) The program issued the automatic reference position return com-
mand without executing the manual reference position return after
the power was turned on.

4) The difference between the position error amount of the master and
slave axes exceeded the value specified in parameter No. 8313.

214 ILLEGAL COMMAND IN 
SYNCHRO–MODE

Coordinate system is set or tool compensation of the shift type is
executed in the synchronous control. Correct the program.

224 RETURN TO REFERENCE POINT Reference position return has not been performed before the auto-
matic operation starts. Perform reference position return only when
parameter ZRNX (No.1005#0) is 0.

231 ILLEGAL FORMAT IN G10 OR L50 Any of the following errors occurred in the specified format at the 
programmable–parameter  input.
1) Address N or R was not entered.
2) A number not specified for a parameter was entered.
3) The axis number was too large.
4) An axis number was not specified in the axis–type parameter.
5) An axis number was specified in the parameter which is not an axis

type.
6) An attempt was made to reset bit 4 of parameter 3202 (NE9) or

change parameter 3210 (PSSWD) when they are protected by a
password. Correct the program.

232 TOO MANY HELICAL AXIS 
COMMANDS

Three or more axes (in the normal direction control mode two or more
axes) were specified as helical axes in the helical interpolation mode.

233 DEVICE BUSY When an attempt was made to use a unit such as that connected via
the RS–232–C interface, other users were using it.

239 BP/S ALARM While punching was being performed with the function for controlling
external I/O units ,background editing was performed.

240 BP/S ALARM Background editing was performed during MDI operation.

253 G05 IS NOT AVAIRABLE Binary–input operation with a high–speed remote buffer (G05) or
high–speed cycle machining (G05) has been specified in look–ahead
control mode (G08P1).  Before attempting to specify these 
commands, first specify G08P0; to cancel look–ahead control mode.



APPENDIXB–64124EN/01 G. ALARM LIST

855

Number ContentsMessage

5010 END OF RECORD The end of record (%) was specified.

5020 PARAMETER OF RESTART
ERROR

The parameter for specifying program restart is not set correctly.

5046 ILLEGAL PARAMETER (ST.COMP) An illegal parameter has been specified for straightness compensa-
tion.
Possible reasons are as follows:

1 There is no axis corresponding to the axis number specified in the
move axis or compensation axis parameter.

2 More than 128 pitch error compensation points are not sequentially
numbered.

3 The straightness compensation points are not sequentially num-
bered.

4 A specified straightness compensation point is outside the range
between the pitch error compensation points having the maximum
positive and negative coordinates.

5 The compensation value specified for each compensation point is
too large or too small.

5073 NO DECIMAL POINT A decimal point is not specified for a command for which a decimal
point must be specified.

5074 ADDRESS DUPLICATION ERROR The same address appears more than once in a block.  Alternatively,
a block contains two or more G codes belonging to the same group.

5110 IMPROPER G–CODE
(G05.1 Q1 MODE)

An illegal G code was specified in AI look–ahead control mode.

5111 IMPROPER MODAL G–CODE
(G05.1 Q1)

An illegal G code is left modal when AI look–ahead control mode was
specified.

5112 G08 CAN NOT BE COMMANDED
(G05.1 Q1)

Look–ahead control (G08) was specified in AI look–ahead control
mode.

5114 NOT STOP POSITION
(G05.1 Q1)

At the time of restart after manual intervention, the coordinates at which
the manual intervention occurred have not been restored.

5134 FSSB : OPEN READY TIME OUT The FSSB did not become ready to open during initialization.

5135 FSSB : ERROR MODE The FSSB entered an error mode.

5136 FSSB : NUMBER OF AMPS IS 
SMALL

The number of amplifiers recognized by the FSSB is insufficient,
compared with the number of controlled axes.

5137 FSSB : CONFIGURATION ERROR The FSSB detected a configuration error.

5138 FSSB : AXIS SETTING NOT 
COMPLETE

Axis setting has not been performed in automatic setting mode.  Per-
form axis setting using the FSSB setting screen.

5139 FSSB : ERROR Servo initialization did not terminate normally.
The optical cable may be defective, or there may be an error in connec-
tion to the amplifier or another module.
Check the optical cable and the connection status.

5156 ILLEGAL AXIS OPERATION (AICC) In AI look–ahead control mode, the controlled axis selection signal
(PMC axis control) changes.
In AI look–ahead control mode, the simple synchronous axis selection
signal changes.

5157 PARAMETER ZERO (AICC) Zero is set in the parameter for the maximum cutting feedrate (parame-
ter No. 1422 or 1432).
Zero is set in the parameter for the acceleration/deceleration before in-
terpolation (parameter No. 1770 or 1771).

5197 FSSB : OPEN TIME OUT The FSSB did not open when the CNC had allowed the FSSB to
open.

5198 FSSB : ID DATA NOT READ The initial ID information for the amplifier cannot be read because of
a failure in the temporary assignment.



APPENDIXG. ALARM LIST B–64124EN/01

856

Number ContentsMessage

5212 SCREEN COPY : PARAMETER 
ERROR

There is a parameter setting error.  Check that 4 is set as the I/O channel.

5213 SCREEN COPY : COMMUNICA-
TION ERROR

The memory card cannot be used.  Check the memory card.  (Check
whether the memory card is write–protected or defective.)

5214 SCREEN COPY : DATA TRANSFER
ERROR

Data transfer to the memory card failed.
Check whether the memory card space is insufficient and whether the
memory card was removed during data transfer.

5220 REFERENCE POINT
ADJUSTMENT MODE

A parameter for automatically set a reference position is set.  (Bit 2 of
parameter No. 1819 = 1)
Perform automatic setting.
(Position the machine at the reference position manually, then perform
manual reference position return.)
Supplementary:  Automatic setting sets bit 2 of parameter No. 1819 to 0.

5222 SRAM CORRECTABLE ERROR The SRAM correctable error cannot be corrected.
Cause:
A memory problem occurred during memory initialization.
Action:
Replace the master printed circuit board (SRAM module).

5227 FILE NOT FOUND A specified file is not found during communication with the built–in
Handy File.

5228 SAME NAME USED There are duplicate file names in the built–in Handy File.

5229 WRITE PROTECTED A floppy disk in the built–in Handy File is write protected.

5231 TOO MANY FILES The number of files exceeds the limit during communication with the
built–in Handy File.

5232 DATA OVER–FLOW There is not enough floppy disk space in the built–in Handy File.

5235 COMMUNICATION ERROR A communication error occurred during communication with the built–in
Handy File.

5237 READ ERROR A floppy disk in the built–in Handy File cannot be read from.  The floppy
disk may be defective, or the head may be dirty.  Alternatively, the Handy
File is defective.

5238 WRITE ERROR A floppy disk in the built–in Handy File cannot be written to.  The floppy
disk may be defective, or the head may be dirty.  Alternatively, the Handy
File is defective.

5257 G41/G42 NOT ALLOWED IN MDI
MODE

G41/G42 (cutter compensation C:  M series, tool–nose radius com-
pensation:  T series) was specified in MDI mode.  (Depending on the set-
ting of bit 4 of parameter No. 5008)

5303 TOUCH PANEL ERROR A touch panel error occurred.
Cause:

1. The touch panel is kept pressed.

2. The touch panel was pressed when power was turned on.

Remove the above causes, and turn on the power again.

5306 MODE CHANGE ERROR In an one–touch macro call, the mode is not normally switched at the
beginning.

5311 FSSB : ILLEGAL CONNECTION 1. This alarm is issued if, in a pair of axes in which one axis has an
odd servo axis number (parameter No. 1023) and the other has an
even servo axis number that is adjacent to the odd servo axis
number, one of the axes is assigned to an amplifier connected to
an FSSB in a system different from that for the other axis.

2. This alarm is issued if the system does not satisfy a constraint for
performing high–speed HRV control, current control periods for
two FSSBs are different, and it is specified that pulse modules
connected to an FSSB in different paths are to be used.



APPENDIXB–64124EN/01 G. ALARM LIST

857

2) Background edit alarm

Number Message Contents

??? BP/S alarm BP/S alarm occurs in the same number as the P/S alarm that occurs in
ordinary program edit.
(P/S alarm No. 070, 071, 072, 073, 074, 085 to 087)
Modify the program.

140 BP/S alarm It was attempted to select or delete in the background a program being
selected in the foreground.  (Note) 
Use background editing correctly.

NOTE
Alarm in background edit is displayed in the key input line of the background edit screen instead
of the ordinary alarm screen and is resettable by any of the MDI key operation.

3) Absolute pulse coder (APC) alarm

Number Message Contents

300 nth–axis origin return Manual reference position return is required for the nth–axis (n=1 – 4).

301 APC alarm: nth–axis communication nth–axis (n=1 – 4) APC communication error.  Failure in data transmission
Possible causes include a faulty APC, cable, or servo interface module.

302 APC alarm: nth–axis over time nth–axis (n=1 – 4) APC overtime error.
Failure in data transmission.
Possible causes include a faulty APC, cable, or servo interface module.

303 APC alarm: nth–axis framing nth–axis (n=1 – 4) APC framing error. Failure in data transmission.
Possible causes include a faulty APC, cable, or servo interface module.

304 APC alarm: nth–axis parity nth–axis (n=1 – 4) APC parity error.
Failure in data transmission.
Possible causes include a faulty APC, cable, or servo interface module.

305 APC alarm: nth–axis pulse error nth–axis (n=1 – 4) APC pulse error alarm.   
APC alarm.APC or cable may be faulty.

306 APC alarm: nth–axis battery voltage 0 nth–axis (n=1 – 4) APC battery voltage has decreased to a low level so
that the data cannot be held.  
APC alarm. Battery or cable may be faulty.

307 APC alarm: nth–axis battery low 1 nth–axis (n=1 – 4) axis APC battery voltage reaches a level where the
battery must be renewed.
APC alarm. Replace the battery.

308 APC alarm: nth–axis battery low 2 nth–axis (n=1 – 4) APC battery voltage has reached a level where the
battery must be renewed (including when power is OFF).
APC alarm .Replace battery.

309 APC ALARM : n AXIS ZRN 
IMPOSSIBL

An attempt was made to perform reference position return without rotat-
ing the motor through one or more turns.  Rotate the motor through one
or more turns, turn off the power then on again, then perform reference
position return.



APPENDIXG. ALARM LIST B–64124EN/01

858

4) Serial pulse coder (SPC) alarms

No. Message Description

360 n AXIS : ABNORMAL CHECKSUM
(INT)

A checksum error occurred in the built–in pulse coder.

361 n AXIS : ABNORMAL PHASE DATA
(INT)

A phase data error occurred in the built–in pulse coder.

362 n AXIS : ABNORMAL REV.DATA
(INT)

A rotation speed count error occurred in the built–in pulse coder.

363 n AXIS : ABNORMAL CLOCK (INT) A clock error occurred in the built–in pulse coder.

364 n AXIS : SOFT PHASE ALARM (INT) The digital servo software detected invalid data in the built–in pulse
coder.

365 n AXIS : BROKEN LED (INT) An LED error occurred in the built–in pulse coder.

366 n AXIS : PULSE MISS (INT) A pulse error occurred in the built–in pulse coder.

367 n AXIS : COUNT MISS (INT) A count error occurred in the built–in pulse coder.

368 n AXIS : SERIAL DATA ERROR
(INT)

Communication data from the built–in pulse coder cannot be re-
ceived.

369 n AXIS : DATA TRANS. ERROR
(INT)

A CRC or stop bit error occurred in the communication data being
received from the built–in pulse coder.

380 n AXIS : BROKEN LED (EXT) The separate detector is erroneous.

381 n AXIS : ABNORMAL PHASE 
(EXT LIN)

A phase data error occurred in the separate linear scale.

382 n AXIS : COUNT MISS (EXT) A pulse error occurred in the separate detector.

383 n AXIS : PULSE MISS (EXT) A count error occurred in the separate detector.

384 n AXIS : SOFT PHASE ALARM
(EXT)

The digital servo software detected invalid data in the separate de-
tector.

385 n AXIS : SERIAL DATA ERROR
(EXT)

Communication data from the separate detector cannot be received.

386 n AXIS : DATA TRANS. ERROR
(EXT)

A CRC or stop bit error occurred in the communication data being
received from the separate detector.

387 n AXIS : ABNORMAL ENCODER
(EXT)

An error occurs in the separate detector.  For details, contact the
manufacturer of the scale.



APPENDIXB–64124EN/01 G. ALARM LIST

859

#7
202

#6
CSA

#5
BLA

#4
PHA

#3
PCA

#2
BZA

#1
CKA

#0
SPH

#6 (CSA) : Check sum alarm has occurred.
#5 (BLA) : Battery low alarm has occurred.
#4 (PHA) : Phase data trouble alarm has occurred.
#3 (PCA) : Speed count trouble alarm has occurred.
#2 (BZA) : Battery zero alarm has occurred.
#1 (CKA) : Clock alarm has occurred.
#0 (SPH) : Soft phase data trouble alarm has occurred.

#7
DTE203

#6
CRC

#5
STB

#4
PRM

#3 #2 #1 #0

#7 (DTE) : Data error has occurred.
#6 (CRC) : CRC error has occurred.
#5 (STB) : Stop bit error has occurred.

#4 (PRM) : Parameter error alarm has occurred.  In this case, a servo parameter error
alarm (No. 417) is also output.

5) Servo alarms (1/2)

Number Message Contents

401 SERVO ALARM: n–TH AXIS VRDY
OFF

The n–th axis (axis 1–8) servo amplifier READY signal (DRDY) went off.

402 SERVO ALARM: SV CARD NOT
EXIST

The axis control card is not provided.

403 SERVO ALARM: CARD/SOFT
MISMATCH

The combination of the axis control card and servo software is illegal.
The possible causes are as follows:
· A correct axis control card is not provided.
· Correct servo software is not installed on flash memory.

404 SERVO ALARM: n–TH AXIS VRDY
ON

Even though the n–th axis (axis 1–8) READY signal (MCON) went off,
the servo amplifier READY signal (DRDY) is still on.  Or, when the power
was turned on, DRDY went on even though MCON was off.
Check that the servo interface module and servo amp are connected.

405 SERVO ALARM: (ZERO POINT
RETURN FAULT)

Position control system fault.  Due to an NC or servo system fault in the
reference position return, there is the possibility that reference position
return could not be executed correctly.  Try again from the manual refer-
ence position return.

407 SERVO ALARM: EXCESS ERROR The following error occurred during simple synchronous control:
The difference in machine coordinates between the synchronized axes
exceeds the value set in parameter No. 8314.

409 SERVO ALARM: n AXIS TORQUE
ALM

Abnormal servo motor load has been detected.  Alternatively, abnormal
spindle motor load has been detected in Cs mode.

410 SERVO ALARM: n–TH AXIS –
EXCESS ERROR

The position deviation value when the n–th axis (axis 1–8) stops is larg-
er than the set value.
Refer to procedure of trouble shooting.

411 SERVO ALARM: n–TH AXIS –
EXCESS ERROR

The position deviation value when the n–th axis (axis 1–8) moves is
larger than the set value.
Refer to procedure of trouble shooting.

413 SERVO ALARM: n–th AXIS – LSI
OVERFLOW

The contents of the error register for the n–th axis (axis 1–8) exceeded

231 power.  This error usually occurs as the result of an improperly set
parameters.

� The details of serial
pulse coder alarm



APPENDIXG. ALARM LIST B–64124EN/01

860

Number ContentsMessage

415 SERVO ALARM: n–TH AXIS –
EXCESS SHIFT

A speed higher than 524288000 units/s was attempted to be set in the n–th
axis (axis 1–8).  This error occurs as the result of improperly set CMR.

417 SERVO ALARM: n–TH AXIS –
PARAMETER INCORRECT

This alarm occurs when the n–th axis (axis 1–8) is in one of the condi-
tions listed below.  (Digital servo system alarm)
1) The value set in Parameter No. 2020 (motor form) is out of the speci-

fied limit.
2) A proper value (111 or –111) is not set in parameter No.2022 (motor

revolution direction).
3) Illegal data (a value below 0, etc.) was set in parameter No. 2023

(number of speed feedback pulses per motor revolution).
4) Illegal data (a value below 0, etc.) was set in parameter No. 2024

(number of position feedback pulses per motor revolution).
5) Parameters No. 2084 and No. 2085 (flexible field gear rate) have not

been set.
6) A value outside the limit of {1 to the number of control axes} or a non–

continuous value (Parameter 1023 (servo axis number) contains a
value out of the range from 1 to the number of axes, or an isolated
value (for example, 4 not prceded by 3).was set in parameter No.
1023 (servo axisnumber).

420 SERVO ALARM: n AXIS SYNC
TORQUE

During simple synchronous control, the difference between the torque
commands for the master and slave axes exceeded the value set in pa-
rameter No. 2031.

421 SERVO ALARM: n AXIS EXCESS
ER (D)

The difference between the errors in the semi–closed loop and closed
loop has become excessive during dual position feedback.  Check the
values of the dual position conversion coefficients in parameters No.
2078 and 2079.

422 SERVO ALARM: n AXIS In torque control of PMC axis control, a specified allowable speed
has been exceeded.

423 SERVO ALARM: n AXIS In torque control of PMC axis control, the parameter–set allowable
cumulative travel distance has been exceeded.

430 n AXIS : SV. MOTOR OVERHEAT A servo motor overheat occurred.

431 n AXIS : CNV. OVERLOAD 1) PSM:  Overheat occurred.
2) β series SVU:  Overheat occurred.

432 n AXIS : CNV. LOW VOLT
CONTROL

1) PSMR:  The control power supply voltage has dropped.
2) α series SVU:  The control power supply voltage has dropped.

433 n AXIS : CNV. LOW VOLT DC LINK 1) PSM:  The DC link voltage has dropped.
2) PSMR:  The DC link voltage has dropped.
3) α series SVU:  The DC link voltage has dropped.
4) β series SVU:  The DC link voltage has dropped.

434 n AXIS : INV. LOW VOLT CONTROL SVM:  The control power supply voltage has dropped.

435 n AXIS : INV. LOW VOLT DC LINK SVM:  The DC link voltage has dropped.

436 n AXIS : SOFTTHERMAL (OVC) The digital servo software detected the soft thermal state (OVC).

437 n AXIS : CNV. OVERCURRENT
POWER

PSM:  Overcurrent flowed into the input circuit.

438 n AXIS : INV. ABNORMAL
CURRENT

1) SVM:  The motor current is too high.
2) α series SVU:  The motor current is too high.
3) β series SVU:  The motor current is too high.

439 n AXIS : CNV. OVER VOLT DC LINK 1) PSM:  The DC link voltage is too high.
2) PSMR:  The DC link voltage is too high.
3) α series SVU:  The C link voltage is too high.
4) β series SVU:  The link voltage is too high.



APPENDIXB–64124EN/01 G. ALARM LIST

861

Number ContentsMessage

440 n AXIS : CNV. EX DECELERATION
POW.

1) PSMR:  The regenerative discharge amount is too large.
2) α series SVU:  The regenerative discharge amount is too large.  Al-

ternatively, the regenerative discharge circuit is abnormal.

441 n AXIS : ABNORMAL CURRENT
OFFSET

The digital servo software detected an abnormality in the motor cur-
rent detection circuit.

442 n AXIS : CNV. CHARGE FAILURE 1) PSM:  The spare discharge circuit of the DC link is abnormal.
2) PSMR:  The spare discharge circuit of the DC link is abnormal.

443 n AXIS : CNV. COOLING FAN
FAILURE

1) PSM:  The internal stirring fan failed.
2) PSMR:  The internal stirring fan failed.
3) β series SVU:  The internal stirring fan failed.

444 n AXIS : INV. COOLING FAN
FAILURE

SVM:  The internal stirring fan failed.

445 n AXIS : SOFT DISCONNECT
ALARM

The digital servo software detected a broken wire in the pulse coder.

446 n AXIS : HARD DISCONNECT
ALARM

A broken wire in the built–in pulse coder was detected by hardware.

447 n AXIS : HARD DISCONNECT (EXT) A broken wire in the separate detector was detected by hardware.

448 n AXIS : UNMATCHED FEEDBACK
ALARM

The sign of feedback data from the built–in pulse coder differs from
that of feedback data from the separate detector.

449 n AXIS : INV. IPM ALARM 1) SVM:  IPM (intelligent power module) detected an alarm.
2) α series SVU:  IPM (intelligent power module) detected an alarm.

453 n AXIS : SPC SOFT DISCONNECT
ALARM

Software disconnection alarm of the α pulse coder.
Turn off the power to the CNC, then remove and insert the pulse cod-
er cable.  If this alarm is issued again, replace the pulse coder.

456 n AXIS : ILLEGAL CURRENT LOOP An illegal current control period was specified.
The amplifier pulse module in use does not match high–speed HRV.
Alternatively, the system does not satisfy a constraint for performing
high–speed HRV control.

457 n AXIS : ILLEGAL HI HRV (250US) It is specified that, when the current control period is 250 ms, high–
speed HRV control is to be used.

458 n AXIS : CURRENT LOOP ERROR The specified current control period dose not match the actual cur-
rent control period.

459 n AXIS : HI HRV SETTING ERROR In a pair of axes in which one axis has an odd servo axis number (pa-
rameter No. 1023) and the other has an even servo axis number that is
adjacent to the odd servo axis number, high–speed HRV control is sup-
ported for one of the axes and not supported for the other axis.

460 n AXIS : FSSB DISCONNECT FSSB communication was disconnected suddenly.  The possible
causes are as follows:
1) The FSSB communication cable was disconnected or broken.
2) The power to the amplifier was turned off suddenly.
3) A low–voltage alarm was issued by the amplifier.

461 n AXIS : ILLEGAL AMP INTERFACE The axes of the 2–axis amplifier were assigned to the fast type interface.

462 n AXIS : SEND CNC DATA FAILED Because of an FSSB communication error, a slave could not receive
correct data.

463 n AXIS : SEND SLAVE DATA
FAILED

Because of an FSSB communication error, the servo system could
not receive correct data.

464 n AXIS : WRITE ID DATA FAILED An attempt was made to write maintenance information on the ampli-
fier maintenance screen, but it failed.

465 n AXIS : READ ID DATA FAILED At power–up, amplifier initial ID information could not be read.

466 n AXIS : MOTOR/AMP
COMBINATION

The maximum current rating for the amplifier does not match that for
the motor.



APPENDIXG. ALARM LIST B–64124EN/01

862

Number ContentsMessage

467 n AXIS : ILLEGAL SETTING OF
AXIS

The servo function for the following has not been enabled when an
axis occupying a single DSP (corresponding to two ordinary axes) is
specified on the axis setting screen.
1.  Learning control (bit 5 of parameter No. 2008 = 1)
2.  High–speed current loop (bit 0 of parameter No. 2004 = 1)
3.  High–speed interface axis (bit 4 of parameter No. 2005 = 1)

468 n AXIS : HI HRV SETTING ERROR
(AMP)

This alarm is issued if it is specified that high–speed HRV control is to
be used for a controlled axis connected to an amplifier for which
high–speed HRV control cannot be used.

The details of servo alarm are displayed in the diagnosis display (No. 200
and No.204) as shown below.

#7
OVL200

#6
LV

#5
OVC

#4
HCA

#3
HVA

#2
DCA

#1
FBA

#0
OFA

#7 (OVL) : An overload alarm is being generated.

#6 (LV) : A low voltage alarm is being generated in servo amp.

#5 (OVC) : A overcurrent alarm is being generated inside of digital servo.
#4 (HCA) : An abnormal current alarm is being generated in servo amp.

#3 (HVA) : An overvoltage alarm is being generated in servo amp.

#2 (DCA) : A regenerative discharge circuit alarm is being generated in servo amp.

#1 (FBA) : A disconnection alarm is being generated.
#0 (OFA) : An overflow alarm is being generated inside of digital servo.

#7
ALD201

#6 #5 #4
EXP

#3 #2 #1 #0

When OVL equal 1 in diagnostic data No.200 (servo alarm No. 400 is
being generated):

#7 (ALD) 0 : Motor overheating
1 : Amplifier overheating

When FBAL equal 1 in diagnostic data No.200 (servo alarm No. 416 is
being generated):

ALD EXP Alarm details

1 0 Built–in pulse coder disconnection (hardware)

1 1 Separately installed pulse coder disconnection
(hardware)

0 0 Pulse coder is not connected due to software.

#7
204

#6
OFS

#5
MCC

#4
LDA

#3
PMS

#2 #1 #0

#6 (OFS) : A current conversion error has occured in the digital servo.

#5 (MCC) : A magnetic contactor contact in the servo amplifier has welded.
#4 (LDA) : The LED indicates that serial pulse coder C is defective.

#3 (PMS) : A feedback pulse error has occured because the feedback cable is
defective.

� Details of servo alarm



APPENDIXB–64124EN/01 G. ALARM LIST

863

6) Over travel alarms

Number Message Contents

500 OVER TRAVEL : +n Exceeded the n–th axis + side stored stroke limit I.
(Parameter No.1320 or 1326 Notes)

501 OVER TRAVEL : –n Exceeded the n–th axis – side stored stroke limit I.
(Parameter No.1321 or 1327 Notes)

502 OVER TRAVEL : +n Exceeded the n–th axis + side stored stroke limit II.
(Parameter No.1322 )

503 OVER TRAVEL : –n Exceeded the n–th axis – side stored stroke limit II.
(Parameter No.1323)

506 OVER TRAVEL : +n Exceeded the n–th axis + side hardware OT.

507 OVER TRAVEL : –n Exceeded the n–th axis – side hardware OT.

510 OVER TRAVEL : +n A stroke limit check, made before starting movement, found that the end
point of a block falls within the plus (+) side inhibited area along the n–
axis defined by a stroke limit.  Correct the program.

511 OVER TRAVEL : –n A stroke limit check, made before starting movement, found that the end
point of a block falls within the minus (–) side inhibited area along the
N–axis defined by a stroke limit.  Correct the program.

NOTE
Parameters 1326 and 1327 are effective when EXLM (stroke limit switch signal) is on.

7) Servo alarms

Number Message Contents

600 n AXIS : INV. DC LINK OVER 
CURRENT

SVM: The DC link current is too high.
� SVU: The DC link current is too high.

601 n AXIS : INV. RADIATOR FAN 
FAILURE

SVM: The heat sink cooling fan is defective.
� SVU: The heat sink cooling fan is defective.

602 n AXIS : INV. OVERHEAT SVM: The servo amplifier is overheated.

603 n AXIS : INV. IPM ALARM (OH) SVM: The IPM (intelligent power module) has detected an overheat
alarm condition.

� SVU: The IPM (intelligent power module) has detected an overheat
alarm condition.

604 n AXIS : AMP. COMMUNICATION
ERROR

Communication between the SVM and PSM is abnormal.

605 n AXIS : CNV. EX. DISCHARGE
POW.

PSMR: The motor regenerative power is too high.

606 n AXIS : CNV. RADIATOR FAN 
FAILURE

PSM: The fan for cooling the external heat sink is defective.
PSMR: The fan for cooling the external heat sink is defective.

607 n AXIS : CNV. SINGLE PHASE 
FAILURE

PSM: One of the input power phases is abnormal.
PSMR: One of the input power phases is abnormal.

8) Overheat alarms

Number Message Contents

700 OVERHEAT: CONTROL UNIT Control unit overheat
Check that the fan motor operates normally, and clean the air filter.

701 OVERHEAT: FAN MOTOR The fan motor on the top of the cabinet for the contorl unit is overheated.
Check the operation of the fan motor and replace the motor if necessary.



APPENDIXG. ALARM LIST B–64124EN/01

864

9) Rigid tapping alarm

Number Message Contents

740 RIGID TAP ALARM : EXCESS
ERROR

During rigid tapping, the position deviation of the spindle in the stop
state exceeded the setting.

741 RIGID TAP ALARM : EXCESS
ERROR

During rigid tapping, the position deviation of the spindle in the stop
state exceeded the setting.

742 RIGID TAP ALARM : LSI OVER
FLOW

During rigid tapping, an LSI overflow occurred on the spindle side.

10) Spindle alarms

Number Message Contents

749 S–SPINDLE LSI ERROR It is serial communication error while system is executing after power
supply on. Following reasons can be considered.

1) Optical cable connection is fault or cable is not connected or cable
is cut.

2) MAIN CPU board or option 2 board is fault.

3) Spindle amp. printed board is fault.
If this alarm occurs when CNC power supply is turned on or when
this alarm can not be cleared even if CNC is reset, turn off the power
supply also turn off the power supply in spindle side.

750 SPINDLE SERIAL LINK START
FAULT

This alarm is generated when the spindle control unit is not ready for
starting correctly when the power is turned on in the system with the
serial spindle.
The four reasons can be considered as follows:
1) An improperly connected optic cable, or the spindle control unit’s

power is OFF.
2) When the NC power was turned on under alarm conditions other

than SU–01 or AL–24 which are shown on the LED display of the
spindle control unit.
In this case, turn the spindle amplifier power off once and perform
startup again.

3) Other reasons (improper combination of hardware)
This alarm does not occur after the system including the spindle con-
trol unit is activated.

4) The second spindle (when SP2, bit 4 of parameter No. 3701, is 1)
is in one of the above conditions 1) to 3).

See diagnostic display No. 409 for details.

752 FIRST SPINDLE MODE CHANGE
FAULT

This alarm is generated if the system does not properly terminate a
mode change.  The modes include the Cs contouring, spindle position-
ing, rigid tapping, and spindle control modes.  The alarm is activated if
the spindle control unit does not respond correctly to the mode change
command issued by the NC.

754 SPINDLE–1 ABNORMAL TORQUE
ALM

Abnormal first spindle motor load has been detected.

762 SECOND SPINDLE MODE
CHANGE FAULT

Refer to alarm No. 752. (For 2nd axis)

764 SPINDLE–2 ABNORMAL TORQUE
ALM

Same as alarm No. 754 (for the second spindle)



APPENDIXB–64124EN/01 G. ALARM LIST

865

The details of spindle alarm No. 750 are displayed in the diagnosis display
(No. 409) as shown below.

#7
409

#6 #5 #4 #3
SPE

#2
S2E

#1
S1E

#0
SHE

#3 (SPE) 0 : In the spindle serial control, the serial spindle parameters fulfill the
spindle unit startup conditions.

1 : In the spindle serial control, the serial spindle parameters do not fulfill
the spindle unit startup conditions.

#2 (S2E) 0 : The second spindle is normal during the spindle serial control startup.
1 : The second spindle was detected to have a fault during the spindle

serial control startup.

#1 (S1E) 0 : The first spindle is normal during the spindle serial control startup.
1 : The first spindle was detected to have a fault during the spindle axis

serial control startup.

#0 (SHE) 0 : The serial communications module in the CNC is normal.
1 : The serial communications module in the CNC was detected to have a

fault.

Alarm List (Serial Spindle)

When a serial spindle alarm occurs, the following number is displayed on
the CNC.  n is a number corresponding to the spindle on which an alarm
occurs.  (n = 1:  First spindle; n = 2:  Second spindle; etc.)

NOTE*1
Note that the meanings of the SPM indications differ
depending on which LED, the red or yellow LED, is on.
When the red LED is on, the SPM indicates a 2–digit alarm
number.  When the yellow LED is on, the SPM indicates an
error number that designates a sequence problem (for
example, when a rotation command is entered with the
emergency stop state not released).
� See “Error Codes (Serial Spindle).”

Alarm Numbers and Alarms Displayed on the αi Series Spindle Amplifier

No. Message
SPM

indica-
tion(*1)

Faulty location and remedy Description

(750) SPINDLE SERIAL LINK
ERROR

A0
A

1 Replace the ROM on the SPM
control printed circuit board.

2 Replace the SPM control printed
circuit board.

The program does not start normally.
ROM series error or hardware ab-
normality on the SPM control printed
circuit board

(749) S–SPINDLE LSI ERROR A1 Replace the SPM control printed cir-
cuit board.

An abnormality was detected in the
CPU peripheral circuit of the SPM
control circuit.

7n01 SPN_n_ : MOTOR
OVERHEAT

01 1 Check and correct the peripheral
temperature and load status.

2 If the cooling fan stops, replace it.

The internal temperature of the motor
exceeds the specified level.
The motor is used in excess of the
continuous rating, or the cooling
component is abnormal.

� The details of spindle 
alarm No.750



APPENDIXG. ALARM LIST B–64124EN/01

866

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

7n02 SPN_n_ : EX SPEED ER-
ROR

02 1 Check and correct the cutting
conditions to decrease the load.

2 Correct parameter No. 4082.

The motor speed cannot follow a spe-
cified speed.
An excessive motor load torque is de-
tected.
The acceleration/deceleration time in
parameter No. 4082 is insufficient.

7n03 SPN_n_ : FUSE ON DC 
LINK BLOWN

03 1 Replace the SPM unit.
2 Check the motor insulation status.

The PSM becomes ready (0 is indi-
cated), but the DC link voltage is too
low in the SPM.
The fuse in the DC link section in the
SPM is blown.  (The power device is
damaged or the motor is ground–
fault.)

7n04 SPN_n_ : INPUT FUSE/
POWER
FAULT

04 Check the state of the input power
supply to the PSM.

The PSM found a missing power sup-
ply phase.  (PSM alarm E)

7n06 SPN_n_ : THERMAL
SENSOR DIS-
CONNECT

06 1 Check and correct the parameter.
2 Replace the feedback cable.

The temperature sensor of the motor
is disconnected.

7n07 SPN_n_ : OVERSPEED 07 Check for a sequence error.  (For ex-
ample, check whether spindle syn-
chronization was specified when the
spindle could not be turned.)

The motor speed has exceeded
115% of its rated speed.
When the spindle axis was in position
control mode, positional deviations
were accumulated excessively (SFR
and SRV were turned off during
spindle synchronization control.)

7n09 SPN_n_ : OVERHEAT
MAIN CIRCUIT

09 1 Improve the heat sink cooling sta-
tus.

2 If the heat sink cooling fan stops,
replace the SPM unit.

Abnormal temperature rise of the
power transistor radiator

7n11 SPN_n_ : OVERVOLT
POW CIRCUIT

11 1 Check the selected PSM.
2 Check the input power voltage

and change in power during motor
deceleration.  If the voltage ex-
ceeds 264 VAC (for the 200–V
system) or 530 VAC (for the 400–V
system), improve the power sup-
ply impedance.

Overvoltage of the DC link section of
the PSM was detected.  (PSM alarm
indication:  7)
PSM selection error.  (The maximum
output specification of the PSM is ex-
ceeded.)

7n12 SPN_n_ : OVERCUR-
RENT POW 
CIRCUIT

12 1 Check the motor insulation status.
2 Check the spindle parameters.
3 Replace the SPM unit.

The amplifier output current is abnor-
mally high.
A motor–specific parameter does not
match the motor model.
Poor motor insulation

7n13 13 Replace the SPM control printed cir-
cuit board.

An abnormality was detected in the
SPM control circuit.
(SPM internal RAM request)

7n15 SPN_n_ : SP SWITCH 
CONTROL
ALARM

15 1 Check and correct the ladder se-
quence.

2 Replace the switching MC.

The switch sequence in spindle
switch/output switch operation is ab-
normal.
The switching MC contact status
check signal and command do not
match.



APPENDIXB–64124EN/01 G. ALARM LIST

867

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

7n18 SPN_n_ : SUMCHECK
ERROR PGM 
DATA

18 Replace the SPM control printed cir-
cuit board.

Abnormality in an SPM control circuit
component is detected.  (Program
ROM data is abnormal.)

7n19 SPN_n_ : EX OFFSET 
CURRENT U

19 Replace the SPM unit. Abnormality in an SPM component is
detected.  (The initial value for the U
phase current detection circuit is ab-
normal.)

7n20 SPN_n_ : EX OFFSET 
CURRENT V

20 Replace the SPM unit. Abnormality in an SPM component is
detected.  (The initial value of the V
phase current detection circuit is ab-
normal.)

7n21 SPN_n_ : POS SENSOR
POLARITY ER-
ROR

21 Check and correct the parameters.
(No. 4000#0, 4001#4)

The polarity parameter setting of the
position sensor is wrong.

7n24 SPN_n_ : SERIAL
TRANSFER
ERROR

24 1 Place the CNC–to–spindle cable
away from the power cable.

2 Replace the cable.

The CNC power is turned off (normal
power–off or broken cable).
An error is detected in communica-
tion data transferred to the CNC.

7n27 SPN_n_ : DISCONNECT
POS–CODER

27 Replace the cable. The spindle position coder (connec-
tor JYA3) signal is abnormal.

7n29 SPN_n_ : SHORTTIME
OVERLOAD

29 Check and correct the load status. Excessive load has been applied
continuously for a certain period of
time.  (This alarm is issued also when
the motor shaft has been locked in
the excitation state.)

7n30 SPN_n_ : OVERCUR-
RENT POW 
CIRCUIT

30 Check and correct the power supply
voltage.

Overcurrent is detected in PSM main
circuit input.  (PSM alarm indication:
1)
Unbalanced power supply.
PSM selection error (The maximum
PSM output specification is exceed-
ed.)

7n31 SPN_n_ : MOTOR LOCK 31 Check and correct the load status. The motor cannot rotate at a speci-
fied speed.  (A level not exceeding
the SST level for the rotation com-
mand has existed continuously.)

7n32 SPN_n_ : RAM FAULT 
SERIAL LSI

32 Replace the SPM control printed cir-
cuit board.

Abnormality in an SPM control circuit
component is detected.  (The LSI de-
vice for serial transfer is abnormal.)

7n33 SPN_n_ : SHORTAGE
POWER
CHARGE

33 1 Check the number of connected
SVM and SPM units.

2 Replace the PSM unit.

Charging the main circuit was not
completed within a prescribed time
period.

7n34 SPN_n_ : PARAMETER
SETTING ER-
ROR

34 Correct a parameter value according
to the manual.
If the parameter number is unknown,
connect the spindle check board, and
check the indicated parameter.

Parameter data exceeding the allow-
able limit is set.



APPENDIXG. ALARM LIST B–64124EN/01

868

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

7n36 SPN_n_ : OVERFLOW
ERROR
COUNTER

36 Check whether the position gain val-
ue is too large, and correct the value.

An error counter overflow occurred.

7n37 SPN_n_ : SPEED DE-
TECT PAR.
ERROR

37 Correct the value according to the pa-
rameter manual.

The setting of the parameter for the
number of pulses in the speed detec-
tor is incorrect.

7n41 SPN_n_ : 1–ROT POS–
CODER ER-
ROR

41 1 Check and correct the parameter.
2 Replace the cable.

1 The 1–rotation signal of the
spindle position coder (connector
JYA3) is abnormal.

2 Parameter setting error

7n42 SPN_n_ : NO 1–ROT.
POS–CODER
DETECT

42 Replace the cable. The 1–rotation signal of the spindle
position coder (connector JYA3) is
disconnected.

7n43 SPN_n_ : DISCON. PC
FOR DIF. SP.
MODE

43  Replace the cable. The differential speed position coder
signal is abnormal.

7n46 SPN_n_ : SCREW
1–ROT POS–
COD. ALARM

46 1 Check and correct the parameter.
2 Replace the cable.
3 Re–adjust the BZi sensor signal.

An abnormality equivalent to alarm
41 was detected during thread cut-
ting operation.

7n47 SPN_n_ : POS–CODER
SIGNAL AB-
NORMAL

47 1 Replace the cable.
2 Correct the cable layout (vicinity of

the power line).

1 The A/B phase signal of the
spindle position coder (connector
JYA3) is abnormal.

2 The relationship between the A/B
phase and 1–rotation signal is in-
correct (Pulse interval mismatch).

7n49 SPN_n_ : HIGH CONV.
DIF. SPEED

49 Check whether the calculated differ-
ential speed value exceeds the maxi-
mum motor speed.

In differential speed mode, the speed
of the other spindle converted to the
speed of the local spindle has ex-
ceeded the allowable limit (the differ-
ential speed is calculated by multiply-
ing the speed of the other spindle by
the gear ratio).

7n50 SPN_n_ : SPNDL CON-
TROL OVER-
SPEED

50 Check whether the calculated value
exceeds the maximum motor speed.

In spindle synchronization, the speed
command calculation value exceed-
ed the allowable limit (the motor
speed is calculated by multiplying the
specified spindle speed by the gear
ratio).

7n51 SPN_n_ : LOW VOLT DC
LINK

51 1 Check and correct the power sup-
ply voltage.

2 Replace the MC.

Input voltage drop was detected.
(PSM alarm indication:  4)  (Momen-
tary power failure or poor MC contact)

7n52 SPN_n_ : ITP SIGNAL
ABNORMAL I

52 1 Replace the SPM control printed
circuit board.

2 Replace the spindle interface
printed circuit board in the CNC.

NC interface abnormality was de-
tected (the ITP signal stopped).

7n53 SPN_n_ : ITP SIGNAL
ABNORMAL II

53 1 Replace the SPM control printed
circuit board.

2 Replace the spindle interface
printed circuit board in the CNC.

NC interface abnormality was de-
tected (the ITP signal stopped).



APPENDIXB–64124EN/01 G. ALARM LIST

869

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

7n54 SPN_n_ : OVERLOAD
CURRENT

54 Review the load state. An overload current was detected.

7n55 SPN_n_ : POWER LINE
SWITCH ER-
ROR

55 1 Replace the magnetic contactor.
2 Check and correct the sequence.

The power line state signal of the
magnetic contactor for selecting a
spindle or output is abnormal.

7n56 SPN_n_ : INNER COOL-
ING FAN STOP

56 Replace the SPM unit. The cooling fan in the SPM control
circuit stopped.

7n57 SPN_n_ : EX DECEL-
ERATION
POWER

57 1 Decrease the acceleration/decel-
eration duty.

2 Check the cooling condition (pe-
ripheral temperature).

3 If the cooling fan stops, replace the
resistor.

4 If the resistance is abnormal, re-
place the resistor.

An overload was detected in the re-
generative resistance.  (PSMR alarm
indication:  H)
Thermostat operation or short–time
overload was detected.
The regenerative resistor was dis-
connected, or an abnormal resis-
tance was detected.

7n58 SPN_n_ : OVERLOAD IN
PSM

58 1 Check the PSM cooling status.
2 Replace the PSM unit.

The temperature of the radiator of the
PSM has increased abnormally.
(PSM alarm indication:  3)

7n59 SPN_n_ : COOLING FAN
STOP IN PSM

59 Replace the SPM unit. The cooling fan in the PSM stopped.
(PSM alarm indication:  2)

7n61 61 Check the parameter settings. An error between the semi–closed
loop and full–closed loop is exces-
sive during use of the dual position
feedback function.

7n65 65 1 Check the parameter settings.
2 Check the sensor connection and

signal.
3 Check the power line connection.

A travel distance is excessive during
pole determination.

7n73 SPN_n_ : MOTOR SEN-
SOR DISCON-
NECTED

73 1 Replace the feedback cable.
2 Check the shield processing.
3 Check and correct the connection.
4 Adjust the sensor.

The motor sensor feedback signal is
not present.

7n74 SPN_n_ : CPU TEST ER-
ROR

74 Replace the SPM control printed–cir-
cuit board.

An error was detected in a CPU test.

7n75 SPN_n_ : CRC ERROR 75 Replace the SPM control printed–cir-
cuit board.

An error was detected in a CRC test.

7n79 SPN_n_ : INITIAL TEST
ERROR

79 Replace the SPM control printed–cir-
cuit board.

An error was detected in an initial test
operation.

7n81 SPN_n_ : 1–ROT MO-
TOR SENSOR
ERROR

81 1 Check and correct the parameter.
2 Replace the feedback cable.
3 Adjust the sensor.

The one–rotation signal of the motor
sensor cannot be correctly detected.

7n82 SPN_n_ : NO 1–ROT
MOTOR SEN-
SOR

82 1 Replace the feedback cable.
2 Adjust the sensor.

The one–rotation signal of the motor
sensor is not generated.

7n83 SPN_n_ : MOTOR SEN-
SOR SIGNAL
ERROR

83 1 Replace the feedback cable.
2 Adjust the sensor.

An irregularity was detected in a mo-
tor sensor feedback signal.



APPENDIXG. ALARM LIST B–64124EN/01

870

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

7n84 SPN_n_ : SPNDL SEN-
SOR DISCON-
NECTED

84 1 Replace the feedback cable.
2 Check the shield processing.
3 Check and correct the connection.
4 Check and correct the parameter.
5 Adjust the sensor.

The spindle sensor feedback signal
is not present.

7n85 SPN_n_ : 1–ROT SPNDL
SENSOR ER-
ROR

85 1 Check and correct the parameter.
2 Replace the feedback cable.
3 Adjust the sensor.

The one–rotation signal of the
spindle sensor cannot be correctly
detected.

7n86 SPN_n_ : NO 1–ROT
SPNDL SEN-
SOR ERROR

86 1 Replace the feedback cable.
2 Adjust the sensor.

The one–rotation signal of the
spindle sensor is not generated.

7n87 SPN_n_ : SPNDL SEN-
SOR SIGNAL
ERROR

87 The one–rotation signal of the
spindle sensor is not generated.

An irregularity was detected in a
spindle sensor feedback signal.

7n88 SPN_n_ : COOLING RA-
DIFAN FAIL-
URE

88 Replace the SPM external cooling
fan.

The external cooling fan stopped.

7n89 89 1 Check the connection in the SPM
and sub–module SM.

2 Replace the sub–module SM.
3 Replace the SPM control printed

circuit board.

The sub–module SM is abnormal.

7n97 SPN_n_ : OTHER
SPINDLE
ALARM

97 Replace the SPM. Another irregularity was detected.

7n98 SPN_n_ : OTHER CON-
VERTER
ALARM

98 Check the PSM alarm display. A PSM alarm was detected.

No. Message
SPM

indica-
tion(*1)

Faulty location and remedy Description

9001 SPN_n_ : MOTOR
OVERHEAT

01 1 Check and correct the peripheral
temperature and load status.

2 If the cooling fan stops, replace it.

The internal temperature of the motor
exceeds the specified level.
The motor is used in excess of the
continuous rating, or the cooling
component is abnormal.

9002 SPN_n_ : EX SPEED ER-
ROR

02 1 Check and correct the cutting
conditions to decrease the load.

2 Correct parameter No. 4082.

The motor speed cannot follow a spe-
cified speed.
An excessive motor load torque is de-
tected.
The acceleration/deceleration time in
parameter No. 4082 is insufficient.



APPENDIXB–64124EN/01 G. ALARM LIST

871

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

9003 SPN_n_ : FUSE ON DC 
LINK BLOWN

03 1 Replace the SPM unit.
2 Check the motor insulation status.

The PSM becomes ready (0 is indi-
cated), but the DC link voltage is too
low in the SPM.
The fuse in the DC link section in the
SPM is blown.  (The power device is
damaged or the motor is ground–
fault.)

9004 SPN_n_ : INPUT FUSE/
POWER
FAULT

04 Check the state of the input power
supply to the PSM.

The PSM found a missing power sup-
ply phase.  (PSM alarm E)

9006 SPN_n_ : THERMAL
SENSOR DIS-
CONNECT

06 1 Check and correct the parameter.
2 Replace the feedback cable.

The temperature sensor of the motor
is disconnected.

9007 SPN_n_ : OVERSPEED 07 Check for a sequence error.  (For ex-
ample, check whether spindle syn-
chronization was specified when the
spindle could not be turned.)

The motor speed has exceeded
115% of its rated speed.
When the spindle axis was in position
control mode, positional deviations
were accumulated excessively (SFR
and SRV were turned off during
spindle synchronization control.)

9009 SPN_n_ : OVERHEAT
MAIN CIRCUIT

09 1 Improve the heat sink cooling sta-
tus.

2 If the heat sink cooling fan stops,
replace the SPM unit.

Abnormal temperature rise of the
power transistor radiator

9011 SPN_n_ : OVERVOLT
POW CIRCUIT

11 1 Check the selected PSM.
2 Check the input power voltage

and change in power during motor
deceleration.  If the voltage ex-
ceeds 264 VAC (for the 200–V
system) or 530 VAC (for the 400–V
system), improve the power sup-
ply impedance.

Overvoltage of the DC link section of
the PSM was detected.  (PSM alarm
indication:  7)
PSM selection error.  (The maximum
output specification of the PSM is ex-
ceeded.)

9012 SPN_n_ : OVERCUR-
RENT POW 
CIRCUIT

12 1 Check the motor insulation status.
2 Check the spindle parameters.
3 Replace the SPM unit.

The amplifier output current is abnor-
mally high.
A motor–specific parameter does not
match the motor model.
Poor motor insulation

9013 13 Replace the SPM control printed cir-
cuit board.

An abnormality was detected in the
SPM control circuit.
(SPM internal RAM request)

9015 SPN_n_ : SP SWITCH 
CONTROL
ALARM

15 1 Check and correct the ladder se-
quence.

2 Replace the switching MC.

The switch sequence in spindle
switch/output switch operation is ab-
normal.
The switching MC contact status
check signal and command do not
match.

9018 SPN_n_ : SUMCHECK
ERROR PGM 
DATA

18 Replace the SPM control printed cir-
cuit board.

Abnormality in an SPM control circuit
component is detected.  (Program
ROM data is abnormal.)



APPENDIXG. ALARM LIST B–64124EN/01

872

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

9019 SPN_n_ : EX OFFSET 
CURRENT U

19 Replace the SPM unit. Abnormality in an SPM component is
detected.  (The initial value for the U
phase current detection circuit is ab-
normal.)

9020 SPN_n_ : EX OFFSET 
CURRENT V

20 Replace the SPM unit. Abnormality in an SPM component is
detected.  (The initial value of the V
phase current detection circuit is ab-
normal.)

9021 SPN_n_ : POS SENSOR
POLARITY ER-
ROR

21 Check and correct the parameters.
(No. 4000#0, 4001#4)

The polarity parameter setting of the
position sensor is wrong.

9024 SPN_n_ : SERIAL
TRANSFER
ERROR

24 1 Place the CNC–to–spindle cable
away from the power cable.

2 Replace the cable.

The CNC power is turned off (normal
power–off or broken cable).
An error is detected in communica-
tion data transferred to the CNC.

9027 SPN_n_ : DISCONNECT
POS–CODER

27 Replace the cable. The spindle position coder (connec-
tor JYA3) signal is abnormal.

9029 SPN_n_ : SHORTTIME
OVERLOAD

29 Check and correct the load status. Excessive load has been applied
continuously for a certain period of
time.  (This alarm is issued also when
the motor shaft has been locked in
the excitation state.)

9030 SPN_n_ : OVERCUR-
RENT POW 
CIRCUIT

30 Check and correct the power supply
voltage.

Overcurrent is detected in PSM main
circuit input.  (PSM alarm indication:
1)
Unbalanced power supply.
PSM selection error (The maximum
PSM output specification is exceed-
ed.)

9031 SPN_n_ : MOTOR LOCK 31 Check and correct the load status. The motor cannot rotate at a speci-
fied speed.  (A level not exceeding
the SST level for the rotation com-
mand has existed continuously.)

9032 SPN_n_ : RAM FAULT 
SERIAL LSI

32 Replace the SPM control printed cir-
cuit board.

Abnormality in an SPM control circuit
component is detected.  (The LSI de-
vice for serial transfer is abnormal.)

9033 SPN_n_ : SHORTAGE
POWER
CHARGE

33 1 Check the number of connected
SVM and SPM units.

2 Replace the PSM unit.

Charging the main circuit was not
completed within a prescribed time
period.

9034 SPN_n_ : PARAMETER
SETTING ER-
ROR

34 Correct a parameter value according
to the manual.
If the parameter number is unknown,
connect the spindle check board, and
check the indicated parameter.

Parameter data exceeding the allow-
able limit is set.

9036 SPN_n_ : OVERFLOW
ERROR
COUNTER

36 Check whether the position gain val-
ue is too large, and correct the value.

An error counter overflow occurred.



APPENDIXB–64124EN/01 G. ALARM LIST

873

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

9037 SPN_n_ : SPEED DE-
TECT PAR.
ERROR

37 Correct the value according to the pa-
rameter manual.

The setting of the parameter for the
number of pulses in the speed detec-
tor is incorrect.

9041 SPN_n_ : 1–ROT POS–
CODER ER-
ROR

41 1 Check and correct the parameter.
2 Replace the cable.

1 The 1–rotation signal of the
spindle position coder (connector
JYA3) is abnormal.

2 Parameter setting error

9042 SPN_n_ : NO 1–ROT.
POS–CODER
DETECT

42 Replace the cable. The 1–rotation signal of the spindle
position coder (connector JYA3) is
disconnected.

9043 SPN_n_ : DISCON. PC
FOR DIF. SP.
MODE

43  Replace the cable. The differential speed position coder
signal is abnormal.

9046 SPN_n_ : SCREW
1–ROT POS–
COD. ALARM

46 1 Check and correct the parameter.
2 Replace the cable.
3 Re–adjust the BZi sensor signal.

An abnormality equivalent to alarm
41 was detected during thread cut-
ting operation.

9047 SPN_n_ : POS–CODER
SIGNAL AB-
NORMAL

47 1 Replace the cable.
2 Correct the cable layout (vicinity of

the power line).

1 The A/B phase signal of the
spindle position coder (connector
JYA3) is abnormal.

2 The relationship between the A/B
phase and 1–rotation signal is in-
correct (Pulse interval mismatch).

9049 SPN_n_ : HIGH CONV.
DIF. SPEED

49 Check whether the calculated differ-
ential speed value exceeds the maxi-
mum motor speed.

In differential speed mode, the speed
of the other spindle converted to the
speed of the local spindle has ex-
ceeded the allowable limit (the differ-
ential speed is calculated by multiply-
ing the speed of the other spindle by
the gear ratio).

9050 SPN_n_ : SPNDL CON-
TROL OVER-
SPEED

50 Check whether the calculated value
exceeds the maximum motor speed.

In spindle synchronization, the speed
command calculation value exceed-
ed the allowable limit (the motor
speed is calculated by multiplying the
specified spindle speed by the gear
ratio).

9051 SPN_n_ : LOW VOLT DC
LINK

51 1 Check and correct the power sup-
ply voltage.

2 Replace the MC.

Input voltage drop was detected.
(PSM alarm indication:  4)  (Momen-
tary power failure or poor MC contact)

9052 SPN_n_ : ITP SIGNAL
ABNORMAL I

52 1 Replace the SPM control printed
circuit board.

2 Replace the spindle interface
printed circuit board in the CNC.

NC interface abnormality was de-
tected (the ITP signal stopped).

9053 SPN_n_ : ITP SIGNAL
ABNORMAL II

53 1 Replace the SPM control printed
circuit board.

2 Replace the spindle interface
printed circuit board in the CNC.

NC interface abnormality was de-
tected (the ITP signal stopped).

9054 SPN_n_ : OVERLOAD
CURRENT

54 Review the load state. An overload current was detected.



APPENDIXG. ALARM LIST B–64124EN/01

874

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

9055 SPN_n_ : POWER LINE
SWITCH ER-
ROR

55 1 Replace the magnetic contactor.
2 Check and correct the sequence.

The power line state signal of the
magnetic contactor for selecting a
spindle or output is abnormal.

9056 SPN_n_ : INNER COOL-
ING FAN STOP

56 Replace the SPM unit. The cooling fan in the SPM control
circuit stopped.

9057 SPN_n_ : EX DECEL-
ERATION
POWER

57 1 Decrease the acceleration/decel-
eration duty.

2 Check the cooling condition (pe-
ripheral temperature).

3 If the cooling fan stops, replace the
resistor.

4 If the resistance is abnormal, re-
place the resistor.

An overload was detected in the re-
generative resistance.  (PSMR alarm
indication:  H)
Thermostat operation or short–time
overload was detected.
The regenerative resistor was dis-
connected, or an abnormal resis-
tance was detected.

9058 SPN_n_ : OVERLOAD IN
PSM

58 1 Check the PSM cooling status.
2 Replace the PSM unit.

The temperature of the radiator of the
PSM has increased abnormally.
(PSM alarm indication:  3)

9059 SPN_n_ : COOLING FAN
STOP IN PSM

59 Replace the SPM unit. The cooling fan in the PSM stopped.
(PSM alarm indication:  2)

9061 61 Check the parameter settings. An error between the semi–closed
loop and full–closed loop is exces-
sive during use of the dual position
feedback function.

9065 65 1 Check the parameter settings.
2 Check the sensor connection and

signal.
3 Check the power line connection.

A travel distance is excessive during
pole determination.

9073 SPN_n_ : MOTOR SEN-
SOR DISCON-
NECTED

73 1 Replace the feedback cable.
2 Check the shield processing.
3 Check and correct the connection.
4 Adjust the sensor.

The motor sensor feedback signal is
not present.

9074 SPN_n_ : CPU TEST ER-
ROR

74 Replace the SPM control printed–cir-
cuit board.

An error was detected in a CPU test.

9075 SPN_n_ : CRC ERROR 75 Replace the SPM control printed–cir-
cuit board.

An error was detected in a CRC test.

9079 SPN_n_ : INITIAL TEST
ERROR

79 Replace the SPM control printed–cir-
cuit board.

An error was detected in an initial test
operation.

9081 SPN_n_ : 1–ROT MO-
TOR SENSOR
ERROR

81 1 Check and correct the parameter.
2 Replace the feedback cable.
3 Adjust the sensor.

The one–rotation signal of the motor
sensor cannot be correctly detected.

9082 SPN_n_ : NO 1–ROT
MOTOR SEN-
SOR

82 1 Replace the feedback cable.
2 Adjust the sensor.

The one–rotation signal of the motor
sensor is not generated.

9083 SPN_n_ : MOTOR SEN-
SOR SIGNAL
ERROR

83 1 Replace the feedback cable.
2 Adjust the sensor.

An irregularity was detected in a mo-
tor sensor feedback signal.



APPENDIXB–64124EN/01 G. ALARM LIST

875

No. DescriptionFaulty location and remedy
SPM

indica-
tion(*1)

Message

9084 SPN_n_ : SPNDL SEN-
SOR DISCON-
NECTED

84 1 Replace the feedback cable.
2 Check the shield processing.
3 Check and correct the connection.
4 Check and correct the parameter.
5 Adjust the sensor.

The spindle sensor feedback signal
is not present.

9085 SPN_n_ : 1–ROT SPNDL
SENSOR ER-
ROR

85 1 Check and correct the parameter.
2 Replace the feedback cable.
3 Adjust the sensor.

The one–rotation signal of the
spindle sensor cannot be correctly
detected.

9086 SPN_n_ : NO 1–ROT
SPNDL SEN-
SOR ERROR

86 1 Replace the feedback cable.
2 Adjust the sensor.

The one–rotation signal of the
spindle sensor cannot be correctly
detected.

9087 SPN_n_ : SPNDL SEN-
SOR SIGNAL
ERROR

87 The one–rotation signal of the
spindle sensor is not generated.

An irregularity was detected in a
spindle sensor feedback signal.

9088 SPN_n_ : COOLING RA-
DIFAN FAIL-
URE

88 Replace the SPM external cooling
fan.

The external cooling fan stopped.

9111 b1 Replace the SVPM control printed
circuit board.

The voltage of the converter control
power supply is low.

9120 C0 1 Replace the communication
cables between the CNC and
SPM.

2 Replace the SPM control printed
circuit board.

3 Replace the spindle interface
printed circuit board in the CNC.

Communication data alarm

9121 C1 1 Replace the communication
cables between the CNC and
SPM.

2 Replace the SPM control printed
circuit board.

3 Replace the spindle interface
printed circuit board in the CNC.

Communication data alarm

9122 C2 1 Replace the communication
cables between the CNC and
SPM.

2 Replace the SPM control printed
circuit board.

3 Replace the spindle interface
printed circuit board in the CNC.

Communication data alarm



APPENDIXG. ALARM LIST B–64124EN/01

876

ERROR CODES (SERIAL SPINDLE)

NOTE*1
The SVPM indicates an error code as a 2–digit number in
STATUS1 when the yellow LED is on.  Error codes appear
in CNC diagnostic data No. 712.
When the red LED is on, the SVPM indicates the number of
an alarm generated by the serial spindle, providing a
different meaning from when the yellow LED is on.
� See “Alarms (Serial Spindle).”

SVPM 
STATUS1

indica-
tion(*1)

Description Faulty location and remedy

01 When neither *ESP (emergency stop signal; there
are two types of signals:  input signal and SVPM
contact signal(*2)) nor MRDY (machine ready sig-
nal) is input, SFR (forward rotation command),
SRV (reverse rotation command), or ORCM
(orientation command) is input.

Check the *ESP and MRDY sequences.  For MRDY, pay
attention to the parameter setting (bit 0 of parameter No.
4001) regarding the use of the MRDY signal.

03 When the parameter settings are made not to use
the position sensor, meaning that position control
is not performed (bits 3, 2, 1, 0 of parameter No.
4002 = 0, 0, 0, 0), a Cs contour control command
is input.  In this case, the motor is not excited.

Check the parameter settings.

04 When the parameter settings are made not to use
the position sensor, meaning that position control
is not performed (bits 3, 2, 1, 0 of parameter No.
4002 = 0, 0, 0, 0), a servo mode (such as rigid tap-
ping or spindle positioning) command or spindle
synchronization control command is input.  In this
case, the motor is not excited.

Check the parameter settings.

05 When an option parameter is not set for the orienta-
tion function, ORCM (orientation command) is in-
put.

Check the parameter settings for the orientation function.

06 When the output switching control function is not
used, the low–speed winding is selected (RCH =
1).

Check the power line status signal (RCH).

07 When a Cs contour control command is input, SFR
(forward rotation command) or SRV (reverse rota-
tion command) is not input.

Check the sequence.

08 When a servo mode (such as rigid tapping or
spindle positioning) control command is input, SFR
(forward rotation command) or SRV (reverse rota-
tion command) is not input.

Check the sequence.

09 When a spindle synchronization control command
is input, SFR (forward rotation command) or SRV
(reverse rotation command) is not input.

Check the sequence.

10 When a Cs contour control command is input,
another mode (servo mode, spindle synchroniza-
tion control, or orientation) is specified.

During execution of a Cs contour control command, do
not specify another mode.  Before entering another
mode, cancel the Cs contour control command.

11 When a servo mode (such as rigid tapping or
spindle positioning) command is input, another
mode (Cs contour control, spindle synchronization
control, or orientation) is specified.

During execution of a servo mode command, do not
specify another mode.  Before entering another mode,
cancel the servo mode command.



APPENDIXB–64124EN/01 G. ALARM LIST

877

SVPM 
STATUS1

indica-
tion(*1)

Faulty location and remedyDescription

12 When a spindle synchronization control command
is input, another mode (Cs contour control, servo
mode, or orientation) is specified.

During execution of a spindle synchronization control
command, do not specify another mode.  Before entering
another mode, cancel the spindle synchronization con-
trol command.

14 SFR (forward rotation command) and SRV (re-
verse rotation command) are input at the same
time.

Input either of the commands.

17 The speed detector parameter settings (bits 2, 1, 0
of parameter No. 4011) are invalid.  No speed de-
tector corresponds to the settings.

Check the parameter settings.

18  When the parameter settings are made not to use
the position, meaning that position control is not
performed (bits 3, 2, 1, 0 of parameter No. 4002 =
0, 0, 0, 0), orientation by a position coder is speci-
fied.

Check the parameter settings and input signal.

24 For continuous indexing in orientation by a position
coder, an incremental operation (INCMD = 1) is first
performed, and an absolute position command
(INCMD = 0) is then input.

Check INCMD (incremental command).  Before absolute
position commands are executed successively, absolute
position command orientation must be performed first.

29 The parameter settings are made to use the short-
est time orientation function (bit 6 of parameter No.
4018 = 0, parameters No. 4320 to 4323 ( 0).

The shortest time orientation function cannot be used.
Use orientation by a normal method.

31 This hardware configuration does not allow the
spindle FAD function to be used.  In this case, the
motor is not excited.

Check the CNC model.

33 This hardware configuration does not allow the
spindle EGB function to be used.  In this case, the
motor is not excited.

Check the CNC model.

34 The spindle FAD function and spindle EGB func-
tion are both enabled.  In this case, the motor is not
excited.

These two functions cannot be used at the same time.
Enable only either of them.

NOTE*2
SVPM contact signal  

Between ESP and +24V on JX4 Contact open:  Emergency stop
Contact closed:  Normal operation

11) ALARM FOR FANUC SERVO MOTOR β series I/O Link Option
Alarm for FANUC SERVO MOTOR β series I/O Link Option can be confirmed by Power Mate CNC Manager
function.

Number Alarm type

000 to 299 Program or setting alarm

300 to 399, 401 Pulse coder alarm

400 to 499 (except 401) Servo alarm

500 to 599 Overtravel alarm

— System alarm or I/O Link alarm



APPENDIXG. ALARM LIST B–64124EN/01

878

ERROR CODES (SERIAL SPINDLE)

No. LED display Description Countermeasure

000
A parameter that requires power–down has
been specified.

Turn the power off, then back on.

011
The specified feedrate is zero. Check the feedrate parameter specified with a

function code.

013
The specified feedrate (maximum feedrate) is
zero.

Check the value of parameter No.043, which
indicates the maximum feedrate that can be
specified.

070
More than 32 blocks have been registered for a
buffering operation.

Reduce the number of registered blocks to 32.

090

Reference position setting cannot be executed
normally.

Move the tool in the direction of reference posi-
tion return in jog mode at a speed that causes
the servo position error to exceed 128. Then,
specify another reference position setting.

093
A first to third reference position return cannot
be executed because the reference position
has not yet been established.

Set the reference position.

224
The reference position has not yet been estab-
lished. This occurs only when the ZRTN bit of
parameter No.001 is set to 0.

Set the reference position.

250
Input data 1 is invalid. Check input data 1, specified with a function

code.

251
Input data 2 is invalid. Check input data 2, specified with a function

code.

254
A function code or mode is invalid. Check the command code, specified with a

function code.  Check the mode.

255
Operation cannot be activated because an in-
valid mode is specified or because block execu-
tion is in progress.

Check the mode. Check whether a block is be-
ing executed.

290
The interface switch signal (DRC) was switched
during block execution.

Switch the signal after block execution stops.

291

The speed of an axial movement specified by an
external pulse has exceeded the upper limit.
This occurs only when the EPEXA bit of param-
eter No.001 is set to 1.

Check the speed specified by the external
pulse. Check the magnification of the external
pulse (parameters No.062 and 063).

292
A checksum error for the non–volatile memory
was detected.

Parameters are cleared. Set the parameters
again. If this alarm subsequently recurs, re-
place the unit.



APPENDIXB–64124EN/01 G. ALARM LIST

879

Pulse coder alarms

No. LED display Description Countermeasure

300

A communication error (DTER) for the serial
pulse coder was detected.

Check the connection of the signal cable. If the
cable is normal, the pulse coder may be defec-
tive. Turn the power off. If the alarm recurs
when the power is reapplied, replace the serial
pulse coder, together with the motor.

301

A communication error (CRCER) for the serial
pulse coder was detected.

Check the connection of the signal cable. If the
cable is normal, the pulse coder or servo ampli-
fier unit may be defective. This error can also be
caused by external noise.

302

A communication error (STBER) for the serial
pulse coder was detected.

Check the connection of the signal cable. If the
cable is normal, the pulse coder or servo ampli-
fier unit may be defective. This error can also be
caused by external noise.

303
An LED disconnection (LDAL) was detected in
the serial pulse coder.

Turn the power off. If this alarm recurs when the
power is reapplied, replace the motor.

304
A mispulse alarm (PMAL) for the serial pulse
coder was detected.

Turn the power off. If this alarm recurs when the
power is reapplied, replace the motor.

305

A miscount alarm (CMAL) for the serial pulse
coder was detected.

Turn the power off. If the alarm recurs when the
power is reapplied, replace the motor.
If the alarm does not recur, restart the operation
from reference position return.

306

The motor has overheated (OHAL). This alarm is issued when the motor has over-
heated, causing the thermostat to trip.
Possible causes include an excessively high
ambient temperature and excessively strict op-
erating conditions. Check the actual cause.
If it occurs again when the motor is cooled, the
motor or servo amplifier may have failed.  Re-
place the faulty motor or servo amplifier.

308
A soft phase alarm (SPHAL) was detected. Turn the power off. This alarm may be caused

by noise.

319
When the absolute pulse coder is used, the mo-
tor has not yet rotated through more than one
turn after the first power–up.

Rotate the motor through more than one turn in
jog feed mode, then turn the power off then
back on.

350
The battery voltage of the absolute pulse coder
is low.

Replace the battery.
Restart the operation from reference position
return.

351
The battery voltage of the absolute pulse coder
is low. (warning)

Replace the battery.

401

A communication error was detected in the seri-
al pulse coder.

Check the connection of the pulse coder signal
cable.  If the cable is normal, the pulse coder or
servo amplifier unit may be defective.  This er-
ror can also be caused by external noise.



APPENDIXG. ALARM LIST B–64124EN/01

880

Servo alarms

No. LED display Description Countermeasure

400
The servo motor has overheated (estimated
value).

The motor operation condition may be too se-
vere.  Check the operation condition.

403

SVU–12
SVU–20

The cooling fins have over-
heated. (hardware detection)

The load on the motor may be too high. Re–ex-
amine the load conditions.

403
SVU–40
SVU–80

This alarm will not be issued.

404

The regenerative discharge unit has over-
heated.

This alarm is issued when the average regenera-
tive discharge energy is too high (when the ac-
celeration/deceleration frequency is too high, for
example).

404

(1) When the separate regenerative discharge resistor is not used:  For the SVU–12 and the
SVU–20, check whether the CX11–6 connector is short–circuited with a dummy connector;
for the SVU–40 and the SVU–80, check whether the CX20 and CX23 connectors are short–
circuited with a dummy connector.

(2) The average regenerative discharge energy may be too high. Decrease the acceleration/de-
celeration frequency.

(3) The separate regenerative discharge unit may not be connected properly. Check the connec-
tion.

(4) The thermostat of the separate regenerative discharge unit may be defective. Disconnect the
separate regenerative discharge unit, then check the thermostat. If the thermostat is open
even through the separate regenerative discharge unit is cool, replace the separate regenera-
tive discharge unit.

(5) The resistor of the separate regenerative discharge unit may be defective.  Disconnect the
separate regenerative discharge unit, then check the resistance.  If it does not fall in the range
of the predetermined resistance (20%, replace the separate regenerative discharge unit.

(6) If (1) to (5) are not the cause of the alarm, replace the servo amplifier unit.

405

Reference position return could not be
executed correctly.

Re–execute reference position return.

405
If a value in the range of 4 to 96 is set for parameter No. 032 (CMR), an alarm may be issued.  In
this case, prevent an alarm from being issued by setting N405 (bit 4 of parameter No. 001) to ”1”.

410
The servo position error in the stop state is
larger than the value specified in parameter
No.110.

Determine the mechanical cause of the large
position error. If no mechanical cause is found,
specify a larger value for the parameter.

411

The servo position error during movement is
larger than the value specified in parameter
No.182.

Determine the mechanical cause of the large
position error. If no mechanical cause is found,
apply any of the following countermeasures:

 Specify a larger value for the parameter.

 Specify a lower feedrate.

 Increase the time constants.



APPENDIXB–64124EN/01 G. ALARM LIST

881

No. CountermeasureDescriptionLED display

412

[SVU–12, SVU–20]
An overcurrent alarm is issued.

This alarm is issued when an excessively large
current flows in the main circuit.

412

(1) Check whether a valid motor number is specified in parameter No.30.

(2) Check whether the standard values are specified in the current control parameters for servo
control.
Correct current control is possible only when the standard values are specified for the follow-
ing parameters:
No.70, 71, 72, 78, 79, 84, 85, 86, 87, 88, 89, 90

(3) Disconnect the power line from the servo amplifier unit connector. Then, release the emergen-
cy stop state.

– If the overcurrent alarm continues to be issued, replace the servo amplifier unit.

– If no overcurrent alarm is issued, go to (4).

(4) Check the insulation between the ground and each of U, V, and W. If the insulation is satisfac-
tory, go to (5).

– If a short–circuit is detected, disconnect the power line from the motor connector. Then,
check the insulation between the ground and each of U, V, and W of the motor.

– If a short–circuit is found between the ground and U, V, or W of the motor, replace the motor.

– If the insulation is satisfactory, replace the power line.

(5) Connect the power line. Observe the waveform of the motor current (IR, IS) while the motor
is accelerating or decelerating.

– If the motor current (IR, IS) does not show a normal sine wave, replace the servo amplifier
unit.

(6) Check if the motor current (IR, IS) waveforms include noise.

– When noise is included, take an action such as making a connection to shield ground.

– When noise is not included, replace the servo amplifier unit.

(7) If (1) to (4) above are not the cause of the alarm, the pulse coder, command cable, or internal
hardware of the CNC may be defective.



APPENDIXG. ALARM LIST B–64124EN/01

882

No. CountermeasureDescriptionLED display

412

[SVU–40, SVU–80]
An overcurrent alarm or IPM alarm is issued.

This alarm is issued in the following cases:

 This alarm is issued when an excessively
large current flows in the main circuit.

 This alarm is issued when an error (overcur-
rent, overheat, low IPM control power supply
voltage) is detected in the IPM (semiconduc-
tor driving the motor).

412

(1) Check whether a valid motor number is specified in parameter No.30.

(2) Check whether the standard values are specified in the current control parameters for servo
control.
Correct current control is possible only when the standard values are specified for the follow-
ing parameters:
No.70, 71, 72, 78, 79, 84, 85, 86, 87, 88, 89, 90

(3) Turn off the servo amplifier unit for about ten minutes, then release the emergency stop state.
If no overcurrent alarm is issued, The IPM protection function (against overheat) may be oper-
ating.  Possible causes of overheat include a high ambient temperature and a too severe mo-
tor operating condition.  Check the cause.

– If an overcurrent alarm is issued, go to (4).

(4) Disconnect the power line from the servo amplifier unit connector. Then, release the emergen-
cy stop state.

– If an overcurrent alarm is issued, the IPM protection function (against overcurrent, low con-
trol power supply voltage, overheat) may be operating or defective.  Replace the IPM or
servo amplifier unit.

– If no overcurrent alarm is issued, go to (5).

(5) Disconnect the power line from the amplifier connector. Check the insulation between the
ground and each of U, V, and W.

– If a short–circuit is found between the ground and U, V, or W of the motor, replace the motor.

– If the insulation is satisfactory, replace the power line.

(6) Connect the power line. Observe the waveform of the motor current (IR, IS) while the motor
is accelerating or decelerating.

– If the motor current (IR, IS) does not show a normal sine wave, replace the servo amplifier
unit.

(7) Check whether the waveform of the motor current (IR, IS) contains noise.

– If it contains noise, take appropriate measures against noise, such as grounding the shield.

– If it does not contain noise, replace the servo amplifier unit.

(8) If (1) to (7) above are not the cause of the alarm, the pulse coder, command cable, or internal
hardware of the CNC may be defective.



APPENDIXB–64124EN/01 G. ALARM LIST

883

No. CountermeasureDescriptionLED display

413

A DC link overvoltage alarm is issued. This alarm is issued when the DC voltage of the
main circuit power is too high.

413

(1) When SVU–12 or SVU–20 is used, and a separate regenerative discharge unit is not used,
check the specification to see if regenerative energy per one time does not exceed the allow-
able regenerative energy of the servo amplifier unit.

(2) For the SVU–40 and the SVU–80, when the separate regenerative discharge resistor is not
used, check whether the CX23 connector is short–circuited with a dummy connector.

(3) The supply voltage for dynamic power may exceed the rated value. Check the voltage. If the
voltage is too high, reduce the voltage to an appropriate level.

(4) The regenerative discharge unit may not be properly connected. Check the connection.

(5) The resistance of the separate regenerative discharge unit may be abnormal. Disconnect the
separate regenerative discharge unit, then check the resistance. If the resistance is not within
(20% of the predetermined resistance, replace the separate regenerative discharge unit.

(6) If (1) to (5) are not the cause of the alarm, replace the servo amplifier unit.

414

A DC link low voltage alarm is issued. This alarm is issued when the DC voltage of the
main circuit power is too low.

414

(1) 190 ms or longer may pass from the time when both the *ESP of the built–in DI and the *ESP
of the I/O link interface signal are canceled until the external magnetic contactor inserted into
the input for motive power turns on(including the operating time of the magnetic contactor).
The magnetic contactor must turn on within 100 ms.

(2) The external circuit breaker may be turned off. Check the circuit breaker.

(3) The supply voltage for dynamic power is lower than the rated value. Check the voltage. If the
voltage is too low, increase it to an appropriate level.

(4) The external magnetic contactor may not be connected properly. Check the connection.

If (1) to (4) are not the cause of the alarm, replace the servo amplifier unit.

417

A parameter has been specified incorrectly. Check the following parameters:
No.30: Is the specified motor type correct?
No.31: Is the specified direction of rotation of the
motor correct?
No.106: Is the denominator of the number of
pulses per single revolution of the motor 0?
No.180: Is the specified reference counter ca-
pacity 0 or a negative value?

418
A DO alarm is issued. Replace the servo amplifier unit.

423
The specified speed exceeds 32767000
detection units per second.

Re–examine the CMR and speed settings.

425

The cooling fan has stopped. This alarm is issued when the fan motor built into
the servo amplifier unit has failed.
The fan motor is consumable.

425
(1) Check that the fan is not clogged with something.

(2) Check that the power connector of the fan is connected properly.

(3) Replace the fan or servo amplifier unit.

446
The external pulse input line is disconnected. Connect the external pulse input signal correctly.

447
The velocity deviation is too high (velocity con-
trol)

Check the actual velocity.
See the settings of parameter No. 136.



APPENDIXG. ALARM LIST B–64124EN/01

884

Overtravel alarms

No. LED display Description Countermeasure

500
The positive stroke limit has been exceeded. Check whether *+OT and *–OT are connected

correctly. Check whether a correct move com-
mand is specified. Move the tool in the opposite

501
The negative stroke limit has been exceeded.

mand is specified. Move the tool in the opposite
direction in jog mode, then perform a reset.

510
The positive soft stroke limit has been exceed-
ed.

Check whether appropriate values have been
specified for parameters No.142 and 143.
Check whether a valid move command is spe-

511
The negative soft stroke limit has been exceed-
ed.

Check whether a valid move command is spe-
cified. Move the tool in the opposite direction in
jog mode, then perform a reset.

System alarms

No. LED display Description Countermeasure

–
An error was detected in the RAM write/read test
at power–up.

Replace the servo amplifier unit.

–
An error was detected in the data collation
check for the non–volatile memory.

Turn the power off then back on. Then, re–enter
the parameters. If this alarm recurs, replace the
servo amplifier unit.

–
A data transfer alarm for the non–volatile
memory has been issued.

Replace the servo amplifier unit.

–
A watchdog alarm was issued. Turn the power off then back on. If this alarm re-

curs, replace the servo amplifier unit.

–
A checksum alarm for the control software ROM
is issued.

Replace the servo amplifier unit.

–
A checksum alarm for the ROM that is built into
the CPU is issued.

Replace the servo amplifier unit.

–
An error was detected in the control circuit. Replace the servo amplifier unit.

I/O link alarm

No. LED display Description Countermeasure

–
A FANUC I/O Link error occurred. Any unit con-
nected to the line was turned off.

Turn off the power to all units connected to the
line. Then, turn on the slave devices, followed
by the master device.

No LED display

No. LED display Description Countermeasure

–
No indicators

lit

The control circuit is not operating normally. (1) Check the 24–VDC control supply voltage.
If the voltage is low, increase the voltage to
an appropriate level.

(2) Check whether a fuse in the servo amplifier
unit has blown. If a blown fuse is found, re-
place it.

If (1) and (2) are not the cause, replace the ser-
vo amplifier.



APPENDIXB–64124EN/01 G. ALARM LIST

885

12) System alarms
 (These alarms cannot be reset with reset key.)

Number Message Contents

900 ROM PARITY ROM parity error (CNC/OMM/Servo)
Replace the number of ROM.

910 SRAM PARITY : (BYTE 0) RAM parity error in the tape memory RAM module.  Clear the memory
or replace the module.

911 SRAM PARITY: (BYTE 1)
or replace the module.
After this operation, reset all data including the parameters.

912 DRAM PARITY : (BYTE 0) RAM parity error in the DRAM module.  Replace the DRAM module.

913 DRAM PARITY : (BYTE 1)

914 DRAM PARITY : (BYTE 2)

915 DRAM PARITY : (BYTE 3)

916 DRAM PARITY : (BYTE 4)

917 DRAM PARITY : (BYTE 5)

918 DRAM PARITY : (BYTE 6)

919 DRAM PARITY : (BYTE 7)

920 SERVO ALARM (1 to 4 AXIS) Servo alarm (1st to 4th axis).  A watchdog alarm or a RAM parity error
in the servo module occurred.
Replace the servo control module on the main CPU board.

926 FSSB ALARM FSSB alarm.  Replace the servo control module on the main CPU board.

930 CPU INTERRUPUT CPU error (abnormal interrupt) 
The main CPU board is faulty.

935 SRAM ECC ERROR An error occurred in RAM for part program storage.
Action:
Replace the master printed circuit board (SRAM module), perform all–
clear operation, and set all parameter and other data again.

950 PMC SYSTEM ALARM Fault occurred in the PMC. The PMC control module on the main CPU
board or option board may be faulty.

951 PMC–RC WATCH DOG ALARM Fault occurred in the PMC–RC (watchdog alarm).Option board may be
faulty.

970 NMI OCCURRED IN PMCLSI With the PMC–SA1, an error occurred in the PMC control LSI device
on the motherboard.  (I/O RAM parity)
Replace the motherboard.

971 NMI OCCURRED IN SLC With the PMC–SA1, an I/O Link disconnection was detected.
Check the I/O Link.

972 NMI OCCURRED IN OTHER MOD-
ULE

NMI occurred in a board other than the main CPU board.

973 NON MASK INTERRUPT NMI occurred for an unknown reason.

974 F–BUS ERROR BUS error of FANUC BUS.
The main CPU board or option boards may be faulty.

975 BUS ERROR (MAIN) Main CPU board bus error. 
The main CPU board may be faulty.

976 L–BUS ERROR Bus error of Local Bus.  
The main CPU board may be faulty.



IndexB–64124EN/01

i–1

[Numbers]
7.2″ Monochrome/8.4″ Color LCD/MDI Unit (Hori-

zontal Type), 431

7.2″ Monochrome/8.4″ Color LCD/MDI Unit (Vertical
Type), 432

[A]
Absolute and Incremental Programming (G90, G91),

99

Actual Feedrate Display, 648

Adding Workpiece Coordinate Systems (G54.1 or
G54), 93

Advanced Preview Control (G08), 378

AI Advanced Preview Control Function/ AI Contour
Control Function, 380

Alarm and Self–Diagnosis Functions, 531

Alarm Display, 426, 532

Alarm History Display, 534

Alarm List, 848

Alarms, 811

Altering a Word, 601

Angular Axis Control/Angular Axis Control B, 408

Arc, 785, 790, 806

Arc that Contacts to both Crossing Lines and Arcs,
795

Arc that Contacts to Uncrossing 2 Arcs, 797

Arc that Contacts to Uncrossing Line and Arc, 796

Arithmetic and Logic Operation, 317

Automatic Corner Deceleration, 73

Automatic Corner Override, 70

Automatic Erase Screen Display, 704

Automatic Insertion of Sequence Numbers, 625

Automatic Operation, 417, 477

Automatic Override for Inner Corners (G62), 70

Automatic Tool Length Measurement (G37), 214

Auxiliary Function, 121

Auxiliary Function (M Function), 122

Axis Control Functions, 403

Axis Name, 29

[B]
Back Boring Cycle (G87), 167

Background Editing, 620

Battery for Absolute Pulse Coder Built into the Motor
(6VDC), 821

Battery for Memory Backup (3VDC), 816

Battery for Separate Absolute Pulse Coders (6VDC),
820

Boring Cycle (G85), 163

Boring Cycle (G86), 165

Boring Cycle (G88), 169

Boring Cycle (G89), 171

Branch and Repetition, 323

[C]
Calculation of Inputting Data, 808

Calling Contour Programming Screen, 776

Canned Cycle, 141

Canned Cycle Cancel (G80), 173, 185

Canned Cycle Machining, 757

Canned Grinding Cycle (For Grinding Machine), 186

Caution for using system variables, 343

Cautions on Reading this Manual, 8

Cautions on Various Kinds of Data, 8

Chamfering, 786

Changing Workpiece Coordinate System, 88

Character–to–Codes Correspondence Table, 847

Characters  and Codes to be Used for the Pattern Data
Input Function, 371

Check by Running the Machine, 419

Checking by Self–Diagnostic Screen, 535

Checking Contour Figures, 782

Checking the Minimum Grinding Wheel Diameter
(For Grinding Machine), 196

Circular Interpolation (G02, G03), 43

Clearing the Screen, 703

Command for Machine Operations–Miscellaneous
Function, 22

Compensation Function, 205

Conditional Branch (IF Statement), 324

Constant Surface Speed Control (G96, G97), 107

Continuous–Feed Surface Grinding Cycle (G78), 191

Contour Programming, 775

Controlled Axes, 28, 29

Conversational Programming with Graphic Function,
630

Convert to NC Program, 783

Coordinate System, 84



Index B–64124EN/01

i–2

Coordinate System on Part Drawing and Coordinate
System Specified by CNC – Coordinate System, 16

Coordinate System Rotation (G68, G69), 291

Coordinate Value and Dimension, 98

Copying an Entire Program, 611

Copying Part of a Program, 612

Corner Circular Interpolation (G39), 282

Corner Deceleration According to the Corner Angle,
73

Corner Deceleration According to the Feedrate Differ-
ence between Blocks Along Each Axis, 75

Corner R, 785

Creating a New Part Program, 748

Creating Programs, 623

Creating Programs in Teach in Mode (Playback), 627

Creating Programs Using the MDI Panel, 624

Current Block Display Screen, 655

Current Position Display, 426

Custom Macro, 304

Cutting Feed, 63

Cutting Feedrate Control, 68

Cutting Speed–Spindle Speed Function, 20

Cylindrical Interpolation (G07.1), 48

[D]
Data for Each Canned Cycle, 760

Data Input/Output, 428, 538

Data Input/Output On the All IO Screen, 566

Data Input/Output Using a Memory Card, 583

Decimal Point Programming, 104

Deleting a Block, 603

Deleting a Word, 602

Deleting All Programs, 608

Deleting Blocks, 603

Deleting Files, 563

Deleting More Than One Program by Specifying a
Range, 609

Deleting Multiple Blocks, 604

Deleting One Program, 608

Deleting Programs, 608

Detail of Contour Calculation, 787

Detail of Contour Figure Data, 785

Details of Auxiliary Calculation, 798

Details of Cutter Compensation C, 229

Details of Functions, 354

Details of NC statements and macro statements execu-
tion, 341

Direct Constant–Dimension Plunge Grinding Cycle
(G77), 189

Direct Input of Measured Workpiece Origin Offsets,
677

Display, 425

Display of Run Time and Parts Count, 650

Displaying a Program List for a Specified Group, 662

Displaying and Entering Setting Data, 670

Displaying and Setting Custom Macro Common Vari-
ables, 679

Displaying and Setting Data, 422

Displaying and Setting Extended Tool Life Manage-
ment, 687

Displaying and Setting Parameters, 693

Displaying and Setting Pitch Error Compensation
Data, 695

Displaying and Setting Run Time, Parts Count, and
Time, 674

Displaying and Setting the Software Operator’s Panel,
682

Displaying and Setting the Workpiece Origin Offset
Value, 676

Displaying and Setting Tool Life Management Data,
684

Displaying Directory of Floppy Cassette, 557

Displaying Memory Used and a List of Programs, 659

Displaying Pattern Data and Pattern Menu, 680

Displaying the Directory, 558

Displaying the Pattern Menu, 363

Displaying the Program Number and Sequence Num-
ber, 698

Displaying the Program Number, Sequence Number,
and Status, and Warning Messages for Data Setting
or Input/Output Operation, 698

Displaying the Status and Warning for Data Setting or
Input/Output Operation, 699

DNC Operation, 485, 509

DNC Operation with Memory Card, 508

Drilling Cycle Counter Boring Cycle (G82), 153

Drilling Cycle, Spot Drilling (G81), 151

Dry Run, 518

Dwell (G04), 77

Dynamic Graphic Display, 712

[E]
Editing a Part Program, 421



B–64124EN/01 Index

i–3

Editing of Custom Macros, 619

Editing Programs, 595

Emergency Stop, 522

Entering of Contour Program, 778

Erase Screen Display, 703

Exact Stop (G09, G61) Cutting Mode (G64) Tapping
Mode (G63), 69

Explanation of the Keyboard, 435

Extended Part Program Editing Function, 610

External I/O Devices, 457

External Motion Function (G81), 201

External Operator Message History Display, 701

External Output Commands, 348

[F]
FANUC Handy File, 459

Feed Functions, 59

Feed–Feed Function, 14

Feedrate Clamping by Arc Radius, 377

Feedrate Override, 516

Figure block of Face machining, 768

Figure block of Groove machining, 774

Figure block of Hole machining, 762

Figure block of Pocket machining, 771

File Deletion, 543

File Search, 541

Files, 539

Fine Boring Cycle (G76), 149

Function Keys, 438

Function Keys and Soft Keys, 437

Functions to Simplify Programming, 140

[G]
G–code Assistance, 752

G53, G28, and G30 Commands in Tool Length Offset
Mode, 211

G53,G28,G30,G30.1 and G29 Commands in Cutter
Compensation C Mode, 263

General, 798

General Flow of Operation of CNC Machine Tool, 6

General Screen Operations, 437

Graphic Display, 427

Graphics Display, 706

Graphics Function, 705

Grinding–Wheel Wear Compensation by Continuous
Dressing (For Grinding Machine), 195

[H]
Heading a Program, 599

Helical Interpolation (G02, G03), 47

Help Function, 733

High Speed Cutting Functions, 376

High Speed Skip Signal (G31), 55

High–speed Peck Drilling Cycle (G73) , 145

How to Indicate Command Dimensions for Moving
the Tool – Absolute, Incremental Commands, 19

How to use nomograph, 838

How to View the Position Display Change without
Running the Machine, 420

[I]
In–Feed Grinding Along the Y and Z Axes at the End

of Table Swing (For Grinding Machine), 197

Inch/Metric Conversion (G20,G21), 103

Incorrect Threaded Length, 837

Increment System, 30

Incremental Feed, 468

Index Table Indexing Function, 202

Input Command from MDI, 262

Inputting a Program, 544

Inputting and Outputting Floppy Files, 578

Inputting and Outputting Offset Data, 575

Inputting and Outputting Parameters, 573

Inputting and Outputting Parameters and Pitch Error
Compensation Data, 551

Inputting and Outputting Programs, 568

Inputting Custom Macro Common Variables, 555

Inputting Offset Data, 549

Inputting Parameters, 551

Inputting Pitch Error Compensation Data, 553

Inputting/Outputting Custom Macro Common Vari-
ables, 555

Inserting a Word, 600

Inserting, Altering and Deleting a Word, 596

Interference Check, 254

Intermittent–Feed Surface Grinding Cycle (G79), 193

Internal Circular Cutting Feedrate Change, 72



Index B–64124EN/01

i–4

Interpolation Functions, 36

Interruption Type Custom Macro, 352

[J]
Jog Feed, 466

[K]
Key Input and Input Buffer, 455

Key Location of MDI (Horizontal Type LCD/MDI
Unit), 433

Key Location of MDI (Vertical Type LCD/MDI Unit),
434

[L]
Left–handed Rigid Tapping Cycle (G74), 180

Left–handed Tapping Cycle (G74), 147

Limitation and Notes, 511

Limitations, 347

Line, 787, 804

Line tangential to two arcs, 794

Linear Interpolation (G01), 41

List of Function and Tape Format, 828

Local Coordinate System, 95

[M]
M–code Assistance, 755

Machine Coordinate System, 85

Machine Lock and Auxiliary Function Lock, 514

Machining type block of Face machining, 767

Machining type block of Groove machining, 772

Machining type block of Hole machining, 760

Machining type block of Pocket machining, 769

Macro Call, 328

Macro Call Using an M Code, 336

Macro Call Using G Code, 335

Macro Statements and NC Statements, 322

Manual Absolute On and Off, 472

Manual Guide 0i, 743

Manual Handle Feed, 469

Manual Handle Interruption, 501

Manual Intervention and Return, 506

Manual Operation, 414, 463

Manual Reference Position Return, 464

Maximum Stroke, 30

MDI Operation, 481

Memory Operation, 478

Memory Operation Using FS10/11 Tape Format, 375

Merging a Program, 614

Method of Replacing Battery, 815

Mirror Image, 504

Modal Call (G66), 333

Moving Part of a Program, 613

Multiple M Commands in a Single Block, 123

Multistage Skip (G31), 56

[N]
Next Block Display Screen, 656

Nomographs, 836

Normal Direction Control (G40.1, G41.1, G42.1 or
G150, G151, G152), 297

Notes should be paid Attention in Contour Program-
ming, 809

Notes should be paid Attention in Macro Executor,
809

[O]
Offset Data Input and Output, 549

Operating Monitor Display, 651

Operation, 758

Operational Devices, 429

Operations, 509

Operations of Contour Programming, 776

Optional Angle Chamfering and Corner Rounding,
198

Others, 808

Outputting a Program, 547

Outputting a Program List for a Specified Group, 565

Outputting Custom Macro Common Variable, 556

Outputting Custom Macro Common Variables, 577

Outputting Offset Data, 550

Outputting Parameters, 552

Outputting Pitch Error Compensation Data, 554

Outputting Programs, 562

Overall Position Display, 646



B–64124EN/01 Index

i–5

Overcutting by Cutter Compensation, 259

Overtravel, 523

Overview of Cutter Compensation C (G40 – G42),
223

[P]
Parameter, 511, 810

Part Drawing and Tool Movement, 15

Parts Count Display, Run Time Display, 427

Password Function, 621

Path Drawing, 712

Pattern Data Display, 367

Pattern Data Input Function, 362

Peck Drilling Cycle (G83), 155

Peck Rigid Tapping Cycle (G84 or G74), 183

Plane Selection, 97

Plunge Grinding Cycle (G75), 187

Polar Coordinate Command (G15, G16), 100

Position Display in the Relative Coordinate System,
644

Position Display in the Work Coordinate System, 643

Positioning (G00), 37

Power Disconnection, 462

Power On/Off, 460

Preparatory Function (G Function), 31

Presetting the Workpiece Coordinate System, 647

Procedure for Fixing the Memory Card, 511

Process Assistance, 750

Processing Macro Statements, 341

Program Check Screen, 657

Program Components other than Program Sections,
127

Program Configuration, 23, 125

Program Contents Display, 654

Program Creating Operations, 746

Program Display, 425

Program Input/Output, 544

Program Number Search, 605

Program Restart, 487

Program Screen for MDI Operation, 658

Program Section Configuration, 130

Programmable Mirror Image (G50.1, G51.1), 302

Programmable Parameter Entry (G10), 373

[R]
Radius Direction Error at Circle Cutting, 844

Range of Command Value, 833

Rapid Traverse, 62

Rapid Traverse Override, 517

Reading Files, 561

Reference Position, 78

Reference Position (Machine–Specific Position), 15

Reference Position Return, 79

Register, Change and Delete of Tool Life Manage-
ment Data, 114

Registering Custom Macro Programs, 346

Repetition (While Statement), 325

Replacement of Words and Addresses, 617

Rigid Tapping, 176

Rigid Tapping (G84), 177

Rotary axis roll–over, 407

[S]
Safety Functions, 521

Sample Program, 339

Scaling (G50, G51), 286

Scheduling Function, 494

Screen Displayed at Power–on, 461

Screen Hardcopy, 738

Screens Displayed by Function Key 
MESSAGE

, 701

Screens Displayed by Function Key 
OFS/SET

, 665

Screens Displayed by Function Key 
POS

, 642

Screens Displayed by Function Key 
PROG

 

(In Memory Mode or MDI Mode), 653

Screens Displayed by Function Key 
PROG

 

(In the Edit Mode), 659

Screens Displayed by Function Key 
SYSTEM

, 692

Select Crossing Point of Figure, 786

Selecting a Workpiece Coordinate System, 87

Selecting of Method to Edit of Contour Program, 776

Selection of Tool Used for Various Machining–Tool
Function, 21

Sequence Number Comparison and Stop, 672

Sequence Number Search, 606



Index B–64124EN/01

i–6

Setting a Workpiece Coordinate System, 86

Setting and Display Units, 430

Setting and Displaying Data, 634

Setting and Displaying the Tool Offset Value, 666

Setting Input/Output–Related Parameters, 567

Setting of the reference position return feedrate, 81

Simple Calculation of Incorrect Thread Length, 839

Simple Call (G65), 329

Simple synchronous control, 404

Single Block, 519

Single Direction Positioning (G60), 39

Skip Function (G31), 53

Small–hole peck drilling cycle (G83), 157

Soft Keys, 439

Solid Graphics, 721

Specification, 508

Specification Method, 353

Specifying the Spindle Speed Value Directly (S5–Dig-
it Command), 106

Specifying the Spindle Speed with a Code, 106

Spindle Speed Function (S Function), 105

Start Point, 799

Start Up, 746, 747

Status when Turning Power On, when Clear and when
Reset, 845

Stored Stroke Check, 524

Stroke Limit Check Prior to Performing Movement,
528

SUBPROGRAM (M98, M99), 136

Subprogram Call (M198), 510

Subprogram Call Function (M198), 499

Subprogram Call Using an M Code, 337

Subprogram Calls Using a T Code, 338

Supplementary Explanation for Copying, Moving and
Merging, 615

System Variables, 308

[T]
Tandem Control, 410

Tape Code List, 825

Tapping Cycle (G84), 161

Test Operation, 513

Testing a Program, 419

The Second Auxiliary Functions (B Codes), 124

Thread Cutting (G33), 51

Tool Compensation Values, Number of Compensation
Values, and Entering Values From the Program
(G10), 284

Tool Figure and Tool Motion by Program, 26

Tool Function (T Function), 110

Tool Length Measurement, 668

Tool Length Offset (G43,G44,G49), 206

Tool Life, 120

Tool Life Management Command in a Machining Pro-
gram, 117

Tool Life Management Data, 113

Tool Life Management Function, 112

Tool Movement Along Workpiece Parts Figure– Inter-
polation, 12

Tool Movement by Programming – Automatic Opera-
tion, 416

Tool Movement in Offset Mode, 234

Tool Movement in Offset Mode Cancel, 248

Tool Movement in Start–up, 230

Tool Movement Range–Stroke, 27

Tool Offset (G45–G48), 218

Tool Path at Corner, 841

Tool Selection Function, 111

Torque Limit Skip (G31 P99), 57

Turning on the Power, 460

[U]
Unconditional Branch (GOTO Statement), 323

[V]
Variables, 305

[W]
Warning Messages, 456

Word Search, 597

Workpiece Coordinate System, 86

Workpiece coordinate system preset (G92.1), 91



R
ev

is
io

n
 R

ec
o

rd

FA
N

U
C
E
-
�
�
��
�

0i
–M

C
 O

P
E

R
A

T
O

R
’S

 M
A

N
U

A
L

 (
B

–6
41

24
E

N
)

01
Ju

n.
, 2

00
4

E
di

tio
n

D
at

e
C

on
te

nt
s

E
di

tio
n

D
at

e
C

on
te

nt
s


	B-64124EN/01
	SAFETY PRECAUTIONS
	1 DEFINITION OF WARNING, CAUTION, AND NOTE
	2 GENERAL WARNINGS AND CAUTIONS
	3 WARNINGS AND CAUTIONS RELATED TO
PROGRAMMING
	4 WARNINGS AND CAUTIONS RELATED TO HANDLING
	5 WARNINGS RELATED TO DAILY MAINTENANCE

	Table of Contents
	I. GENERAL
	1 GENERAL
	1.1 GENERAL FLOW OF OPERATION OF CNC MACHINE TOOL
	1.2 CAUTIONS ON READING THIS MANUAL
	1.3 CAUTIONS ON VARIOUS KINDS OF DATA


	II. PROGRAMMING
	1 GENERAL
	1.1 TOOL MOVEMENT ALONG WORKPIECE PARTS FIGURE–INTERPOLATION
	1.2 FEED–FEED FUNCTION
	1.3 PART DRAWING AND TOOL MOVEMENT
	1.3.1 Reference Position (Machine–Specific Position) 
	1.3.2 Coordinate System on Part Drawing and Coordinate System Specified by CNC – Coordinate System 
	1.3.3 How to IndicateCommand Dimensions for Moving the Tool – Absolute, Incremental Commands 

	1.4 CUTTING SPEED – SPINDLE SPEED FUNCTION
	1.5 SELECTION OF TOOL USED FOR VARIOUS MACHINING – TOOL FUNCTION 
	1.6 COMMAND FOR MACHINE OPERATIONS – MISCELLANEOUS FUNCTION
	1.7 PROGRAM CONFIGURATION
	1.8 TOOL FIGURE AND TOOL MOTION BY PROGRAM
	1.9 TOOL MOVEMENT RANGE – STROKE 

	2 CONTROLLED AXES
	2.1 CONTROLLED AXES
	2.2 AXIS NAME
	2.3 INCREMENT SYSTEM
	2.4 MAXIMUM STROKE

	3 PREPARATORY FUNCTION (G FUNCTION)
	4 INTERPOLATION FUNCTIONS
	4.1 POSITIONING (G00) 
	4.2 SINGLE DIRECTION POSITIONING (G60)
	4.3 LINEAR INTERPOLATION (G01)
	4.4 CIRCULAR INTERPOLATION (G02,G03)
	4.5 HELICAL INTERPOLATION (G02,G03)
	4.6 CYLINDRICAL INTERPOLATION (G07.1)
	4.7 THREAD CUTTING (G33) 
	4.8 SKIP FUNCTION(G31)
	4.9 HIGH SPEED SKIP SIGNAL (G31)
	4.10 MULTISTAGE SKIP (G31) 
	4.11 TORQUE LIMIT SKIP (G31 P99)

	5 FEED FUNCTIONS
	5.1 GENERAL 
	5.2 RAPID TRAVERSE
	5.3 CUTTING FEED 
	5.4 CUTTING FEEDRATE CONTROL
	5.4.1 Exact Stop (G09, G61) Cutting Mode (G64) Tapping Mode (G63)
	5.4.2 Automatic Corner Override 
	5.4.2.1 Automatic Override for Inner Corners (G62)
	5.4.2.2 Internal Circular Cutting Feedrate Change 

	5.4.3 Automatic Corner Deceleration
	5.4.3.1 Corner Deceleration According to the Corner Angle 
	5.4.3.2 Corner Deceleration According to the Feedrate Difference between Blocks Along Each Axis 


	5.5 DWELL (G04)

	6 REFERENCE POSITION
	6.1 REFERENCE POSITION RETURN

	7 COORDINATE SYSTEM
	7.1 MACHINE COORDINATE SYSTEM
	7.2 WORKPIECE COORDINATE SYSTEM
	7.2.1 Setting a Workpiece Coordinate System 
	7.2.2 Selecting a Workpiece Coordinate System
	7.2.3 Changing Workpiece Coordinate System 
	7.2.4 Workpiece coordinate system preset (G92.1)
	7.2.5 Adding Workpiece Coordinate Systems (G54.1 or G54)

	7.3 LOCAL COORDINATE SYSTEM
	7.4 PLANE SELECTION

	8 COORDINATE VALUE AND DIMENSION
	8.1 ABSOLUTE AND INCREMENTAL PROGRAMMING (G90, G91)
	8.2 POLAR COORDINATE COMMAND (G15, G16)
	8.3 INCH/METRIC CONVERSION (G20,G21) 
	8.4 DECIMAL POINT PROGRAMMING

	9 SPINDLE SPEED FUNCTION (S FUNCTION)
	9.1 SPECIFYING THE SPINDLE SPEED WITH A CODE 
	9.2 SPECIFYING THE SPINDLE SPEED VALUE DIRECTLY (S5–DIGIT COMMAND)
	9.3 CONSTANT SURFACE SPEED CONTROL (G96, G97)

	10 TOOL FUNCTION (T FUNCTION)
	10.1 TOOL SELECTION FUNCTION 
	10.2 TOOL LIFE MANAGEMENT FUNCTION
	10.2.1 Tool Life Management Data
	10.2.2 Register, Change and Delete of Tool Life Management Data
	10.2.3 Tool Life Management Command in a Machining Program
	10.2.4 Tool Life 


	11 AUXILIARY FUNCTION
	11.1 AUXILIARY FUNCTION (M FUNCTION) 
	11.2 MULTIPLE M COMMANDS IN A SINGLE BLOCK
	11.3 THE SECOND AUXILIARY FUNCTIONS (B CODES) 

	12 PROGRAM CONFIGURATION
	12.1 PROGRAM COMPONENTS OTHER THAN PROGRAM SECTIONS
	12.2 PROGRAM SECTION CONFIGURATION
	12.3 SUBPROGRAM (M98, M99) 

	13 FUNCTIONS TO SIMPLIFY PROGRAMMING
	13.1 CANNED CYCLE
	13.1.1 High–speed Peck Drilling Cycle (G73)
	13.1.2 Left–handed Tapping Cycle (G74)
	13.1.3 Fine Boring Cycle (G76) 
	13.1.4 Drilling Cycle, Spot Drilling (G81)
	13.1.5 Drilling Cycle Counter Boring Cycle (G82)
	13.1.6 Peck Drilling Cycle (G83)
	13.1.7 Small–hole peck drilling cycle (G83)
	13.1.8 Tapping Cycle (G84)
	13.1.9 Boring Cycle (G85)
	13.1.10 Boring Cycle (G86) 
	13.1.11 Back Boring Cycle (G87)
	13.1.12 Boring Cycle (G88) 
	13.1.13 Boring Cycle (G89)
	13.1.14 Canned Cycle Cancel (G80)

	13.2 RIGID TAPPING
	13.2.1 Rigid Tapping (G84)
	13.2.2 Left–handed Rigid Tapping Cycle (G74) 
	13.2.3 Peck Rigid Tapping Cycle (G84 or G74)
	13.2.4 Canned Cycle Cancel (G80)

	13.3 CANNED GRINDING CYCLE (FOR GRINDING MACHINE)
	13.3.1 Plunge Grinding Cycle (G75)
	13.3.2 Direct Constant–Dimension Plunge Grinding Cycle (G77)
	13.3.3 Continuous–Feed Surface Grinding Cycle (G78)
	13.3.4 Intermittent–Feed Surface Grinding Cycle (G79)

	13.4 GRINDING–WHEEL WEAR COMPENSATION BY CONTINUOUS DRESSING(FOR GRINDING MACHINE)
	13.5 IN–FEED GRINDING ALONG THE Y AND Z AXES AT THE END OF TABLE SWING(FOR GRINDING MACHINE)
	13.6 OPTIONAL ANGLE CHAMFERING AND CORNER ROUNDING
	13.7 EXTERNAL MOTION FUNCTION (G81)
	13.8 INDEX TABLE INDEXING FUNCTION

	14 COMPENSATION FUNCTION
	14.1 TOOL LENGTH OFFSET (G43, G44, G49)
	14.1.1 General 
	14.1.2 G53, G28, and G30 Commands in Tool Length Offset Mode 

	14.2 AUTOMATIC TOOL LENGTH MEASUREMENT (G37)
	14.3 TOOL OFFSET (G45–G48) 
	14.4 OVERVIEW OF CUTTER COMPENSATION C (G40–G42)
	14.5 DETAILS OF CUTTER COMPENSATION C
	14.5.1 General
	14.5.2 Tool Movement in Start–up
	14.5.3 Tool Movement in Offset Mode
	14.5.4 Tool Movement in Offset Mode Cancel
	14.5.5 Interference Check
	14.5.6 Overcutting by Cutter Compensation
	14.5.7 Input Command from MDI
	14.5.8 G53,G28,G30 and G29 Commands in Cutter Compensation C Mode
	14.5.9 Corner Circular Interpolation (G39)

	14.6 TOOL COMPENSATION VALUES, NUMBER OF COMPENSATION VALUES, AND ENTERING VALUES FROM THE PROGRAM (G10) 
	14.7 SCALING (G50, G51)
	14.8 COORDINATE SYSTEM ROTATION (G68, G69)
	14.9 NORMAL DIRECTION CONTROL (G40.1, G41.1, G42.1 OR G150, G151, G152)
	14.10 PROGRAMMABLE MIRROR IMAGE (G50.1, G51.1) 

	15 CUSTOM MACRO
	15.1 VARIABLES 
	15.2 SYSTEM VARIABLES
	15.3 ARITHMETIC AND LOGIC OPERATION 
	15.4 MACRO STATEMENTS AND NC STATEMENTS
	15.5 BRANCH AND REPETITION
	15.5.1 Unconditional Branch (GOTO Statement)
	15.5.2 Conditional Branch (IF Statement)
	15.5.3 Repetition (While Statement) 

	15.6 MACRO CALL 
	15.6.1 Simple Call (G65)
	15.6.2 Modal Call (G66)
	15.6.3 Macro Call Using G Code
	15.6.4 Macro Call Using an M Code
	15.6.5 Subprogram Call Using an M Code
	15.6.6 Subprogram Calls Using a T Code
	15.6.7 Sample Program 

	15.7 PROCESSING MACRO STATEMENTS
	15.7.1 Details of NC statements and macro statements execution
	15.7.2 Caution for using system variables 

	15.8 REGISTERING CUSTOM MACRO PROGRAMS 
	15.9 LIMITATIONS 
	15.10 EXTERNAL OUTPUT COMMANDS
	15.11 INTERRUPTION TYPE CUSTOM MACRO
	15.11.1 Specification Method
	15.11.2 Details of Functions


	16 PATTERN DATA INPUT FUNCTION
	16.1 DISPLAYING THE PATTERN MENU
	16.2 PATTERN DATA DISPLAY
	16.3 CHARACTERS AND CODES TO BE USED FOR THE PATTERN DATA INPUT FUNCTION

	17 PROGRAMMABLE PARAMETER ENTRY (G10)
	18 MEMORY OPERATION USING FS10/11 TAPE FORMAT
	19 HIGH SPEED CUTTING FUNCTIONS
	19.1 FEEDRATE CLAMPING BY ARC RADIUS
	19.2 ADVANCED PREVIEW CONTROL (G08) 
	19.3 AI ADVANCED PREVIEW CONTROL FUNCTION/AI CONTOUR CONTROL FUNCTION 
	19.4 LOOK–AHEAD BELL–SHAPED ACCELERATION/DECELERATION BEFORE INTERPOLATION TIME CONSTANT CHANGE FUNCTION 

	20 AXIS CONTROL FUNCTIONS
	20.1 SIMPLE SYNCHRONOUS CONTROL
	20.2 ROTARY AXIS ROLL–OVER
	20.3 ANGULAR AXIS CONTROL
	20.4 TANDEM CONTROL 


	III. OPERATION
	1 GENERAL
	1.1 MANUAL OPERATION
	1.2 TOOL MOVEMENT BY PROGRAMMING– AUTOMATIC OPERATION 
	1.3 AUTOMATIC OPERATION
	1.4 TESTING A PROGRAM 
	1.4.1 Check by Running the Machine
	1.4.2 How to View the Position Display Change without Running the Machine

	1.5 EDITING A PART PROGRAM
	1.6 DISPLAYING AND SETTING DATA
	1.7 DISPLAY 
	1.7.1 Program Display 
	1.7.2 Current Position Display
	1.7.3 Alarm Display 
	1.7.4 Parts Count Display, Run Time Display 
	1.7.5 Graphic Display 

	1.8 DATA INPUT/OUTPUT

	2 OPERATIONAL DEVICES
	2.1 SETTING AND DISPLAY UNITS
	2.1.1 7.2″ Monochrome/8.4″ Color LCD/MDI Unit (Horizontal Type) 
	2.1.2 7.2″ Monochrome/8.4″ Color LCD/MDI Unit (Vertical Type)
	2.1.3 Key Location of MDI (Horizontal Type LCD/MDI Unit)
	2.1.4 Key Location of MDI (Vertical Type LCD/MDI Unit) 

	2.2 EXPLANATION OF THE KEYBOARD
	2.3 FUNCTION KEYS AND SOFT KEYS 
	2.3.1 General Screen Operations
	2.3.2 Function Keys
	2.3.3 Soft Keys
	2.3.4 Key Input and Input Buffer
	2.3.5 Warning Messages

	2.4 EXTERNAL I/O DEVICES
	2.4.1 FANUC Handy File

	2.5 POWER ON/OFF
	2.5.1 Turning on the Power
	2.5.2 Screen Displayed at Power–on
	2.5.3 Power Disconnection


	3 MANUAL OPERATION
	3.1 MANUAL REFERENCE POSITION RETURN
	3.2 JOG FEED
	3.3 INCREMENTAL FEED
	3.4 MANUAL HANDLE FEED
	3.5 MANUAL ABSOLUTE ON AND OFF

	4 AUTOMATIC OPERATION
	4.1 MEMORY OPERATION 
	4.2 MDI OPERATION 
	4.3 DNC OPERATION
	4.4 PROGRAM RESTART
	4.5 SCHEDULING FUNCTION
	4.6 SUBPROGRAM CALL FUNCTION (M198)
	4.7 MANUAL HANDLE INTERRUPTION
	4.8 MIRROR IMAGE
	4.9 MANUAL INTERVENTION AND RETURN
	4.10 DNC OPERATION WITH MEMORY CARD
	4.10.1 Specification
	4.10.2 Operations 
	4.10.2.1 DNC Operation
	4.10.2.2 Subprogram Call (M198)

	4.10.3 Limitation and Notes
	4.10.4 Parameter 
	4.10.5 Procedure for Fixing the Memory Card 


	5 TEST OPERATION
	5.1 MACHINE LOCK AND AUXILIARY FUNCTION LOCK 
	5.2 FEEDRATE OVERRIDE
	5.3 RAPID TRAVERSE OVERRIDE
	5.4 DRY RUN
	5.5 SINGLE BLOCK 

	6 SAFETY FUNCTIONS
	6.1 EMERGENCY STOP 
	6.2 OVERTRAVEL
	6.3 STORED STROKE CHECK
	6.4 STROKE LIMIT CHECK PRIOR TO PERFORMING MOVEMENT

	7 ALARM AND SELF–DIAGNOSIS FUNCTIONS
	7.1 ALARM DISPLAY
	7.2 ALARM HISTORY DISPLAY 
	7.3 CHECKING BY SELF–DIAGNOSTIC SCREEN 

	8 DATA INPUT/OUTPUT
	8.1 FILES
	8.2 FILE SEARCH
	8.3 FILE DELETION
	8.4 PROGRAM INPUT/OUTPUT
	8.4.1 Inputting a Program 
	8.4.2 Outputting a Program

	8.5 OFFSET DATA INPUT AND OUTPUT
	8.5.1 Inputting Offset Data
	8.5.2 Outputting Offset Data 

	8.6 INPUTTING AND OUTPUTTING PARAMETERS AND PITCH ERROR COMPENSATION DATA
	8.6.1 Inputting Parameters
	8.6.2 Outputting Parameters
	8.6.3 Inputting Pitch Error Compensation Data
	8.6.4 Outputting Pitch Error Compensation Data 

	8.7 INPUTTING/OUTPUTTING CUSTOM MACRO COMMON VARIABLES
	8.7.1 Inputting Custom Macro Common Variables 
	8.7.2 Outputting Custom Macro Common Variable

	8.8 DISPLAYING DIRECTORY OF FLOPPY CASSETTE
	8.8.1 Displaying the Directory
	8.8.2 Reading Files
	8.8.3 Outputting Programs
	8.8.4 Deleting Files

	8.9 OUTPUTTING A PROGRAM LIST FOR A SPECIFIED GROUP
	8.10 DATA INPUT/OUTPUT ON THE ALL IO SCREEN 
	8.10.1 Setting Input/Output–Related Parameters
	8.10.2 Inputting and Outputting Programs
	8.10.3 Inputting and Outputting Parameters 
	8.10.4 Inputting and Outputting Offset Data 
	8.10.5 Outputting Custom Macro Common Variables 
	8.10.6 Inputting and Outputting Floppy Files

	8.11 DATA INPUT/OUTPUT USING A MEMORY CARD 

	9 EDITING PROGRAMS
	9.1 INSERTING, ALTERING AND DELETING A WORD
	9.1.1 Word Search
	9.1.2 Heading a Program
	9.1.3 Inserting a Word
	9.1.4 Altering a Word 
	9.1.5 Deleting a Word

	9.2 DELETING BLOCKS
	9.2.1 Deleting a Block 
	9.2.2 Deleting Multiple Blocks

	9.3 PROGRAM NUMBER SEARCH
	9.4 SEQUENCE NUMBER SEARCH
	9.5 DELETING PROGRAMS
	9.5.1 Deleting One Program
	9.5.2 Deleting All Programs 
	9.5.3 Deleting More Than One Program by Specifying a Range

	9.6 EXTENDED PART PROGRAM EDITING FUNCTION 
	9.6.1 Copying an Entire Program
	9.6.2 Copying Part of a Program
	9.6.3 Moving Part of a Program
	9.6.4 Merging a Program
	9.6.5 Supplementary Explanation for Copying, Moving and Merging
	9.6.6 Replacement of Words and Addresses

	9.7 EDITING OF CUSTOM MACROS
	9.8 BACKGROUND EDITING
	9.9 PASSWORD FUNCTION 

	10 CREATING PROGRAMS
	10.1 CREATING PROGRAMS USING THE MDI PANEL
	10.2 AUTOMATIC INSERTION OF SEQUENCE NUMBERS 
	10.3 CREATING PROGRAMS IN TEACH IN MODE (PLAYBACK) 
	10.4 CONVERSATIONAL PROGRAMMING WITH GRAPHIC FUNCTION 

	11 SETTING AND DISPLAYING DATA
	11.1 SCREENS DISPLAYED BY FUNCTION KEY POS
	11.1.1 Position Display in the Work Coordinate System
	11.1.2 Position Display in the Relative Coordinate System
	11.1.3 Overall Position Display
	11.1.4 Presetting the Workpiece Coordinate System 
	11.1.5 Actual Feedrate Display 
	11.1.6 Display of Run Time and Parts Count
	11.1.7 Operating Monitor Display

	11.2 SCREENS DISPLAYED BY FUNCTION KEY PROG(IN MEMORY MODE OR MDI MODE) 
	11.2.1 Program Contents Display
	11.2.2 Current Block Display Screen
	11.2.3 Next Block Display Screen
	11.2.4 Program Check Screen 
	11.2.5 Program Screen for MDI Operation

	11.3 SCREENS DISPLAYED BY FUNCTION KEY PROG(IN THE EDIT MODE)
	11.3.1 Displaying Memory Used and a List of Programs
	11.3.2 Displaying a Program List for a Specified Group

	11.4 SCREENS DISPLAYED BY FUNCTION KEY OFS/SET
	11.4.1 Setting and Displaying the Tool Offset Value 
	11.4.2 Tool Length Measurement
	11.4.3 Displaying and Entering Setting Data
	11.4.4 Sequence Number Comparison and Stop 
	11.4.5 Displaying and Setting Run Time, Parts Count, and Time
	11.4.6 Displaying and Setting the Workpiece Origin Offset Value
	11.4.7 Direct Input of Measured Workpiece Origin Offsets
	11.4.8 Displaying and Setting Custom Macro Common Variables
	11.4.9 Displaying Pattern Data and Pattern Menu 
	11.4.10 Displaying and Setting the Software Operator’s Panel 
	11.4.11 Displaying and Setting Tool Life Management Data
	11.4.12 Displaying and Setting Extended Tool Life Management 

	11.5 SCREENS DISPLAYED BY FUNCTION KEY SYSTEM
	11.5.1 Displaying and Setting Parameters 
	11.5.2 Displaying and Setting Pitch Error Compensation Data

	11.6 DISPLAYING THE PROGRAM NUMBER, SEQUENCE NUMBER, AND STATUS, AND WARNING MESSAGES FOR DATA SETTING OR INPUT/OUTPUT OPERATION
	11.6.1 Displaying the Program Number and Sequence Number
	11.6.2 Displaying the Status and Warning for Data Setting or Input/Output Operation 

	11.7 SCREENS DISPLAYED BY FUNCTION KEY MESSAGE
	11.7.1 External Operator Message History Display

	11.8 CLEARING THE SCREEN
	11.8.1 Erase Screen Display
	11.8.2 Automatic Erase Screen Display


	12 GRAPHICS FUNCTION
	12.1 GRAPHICS DISPLAY
	12.2 DYNAMIC GRAPHIC DISPLAY
	12.2.1 Path Drawing 
	12.2.2 Solid Graphics


	13 HELP FUNCTION
	14 SCREEN HARDCOPY

	IV. MANUAL GUIDE 0i
	1 MANUAL GUIDE 0i
	1.1 OVERVIEW
	1.2 INTRODUCTION
	1.3 PROGRAM CREATING OPERATIONS
	1.3.1 Start Up 
	1.3.2 Start Up 
	1.3.3 Creating a New Part Program 
	1.3.4 Process Assistance 
	1.3.5 G–code Assistance
	1.3.6 M–code Assistance

	1.4 CANNED CYCLE MACHINING 
	1.4.1 Operation 
	1.4.2 Data for Each Canned Cycle 

	1.5 CONTOUR PROGRAMMING 
	1.5.1 Operations of Contour Programming
	1.5.2 Detail of Contour Figure Data
	1.5.3 Detail of Contour Calculation
	1.5.4 Details of Auxiliary Calculation
	1.5.5 Others 

	1.6 PARAMETER
	1.7 ALARMS


	V. MAINTENANCE
	1 METHOD OF REPLACING BATTERY 
	1.1 BATTERY FOR MEMORY BACKUP (3VDC)
	1.2 BATTERY FOR SEPARATE ABSOLUTE PULSE CODERS (6VDC) 
	1.3 BATTERY FOR ABSOLUTE PULSE CODER BUILT INTO THE MOTOR (6VDC)


	APPENDIX
	A. TAPE CODE LIST 
	B. LIST OF FUNCTIONS AND TAPE FORMAT 
	C. RANGE OF COMMAND VALUE
	D. NOMOGRAPHS
	D.1 INCORRECT THREADED LENGTH]
	D.2 SIMPLE CALCULATION OF INCORRECT THREAD LENGTH
	D.3 TOOL PATH AT CORNER 
	D.4 RADIUS DIRECTION ERROR AT CIRCLE CUTTING

	E. STATUS WHEN TURNING POWER ON, WHEN CLEAR AND WHEN RESET
	F. CHARACTER–TO–CODES CORRESPONDENCE TABLE
	G. ALARM LIST





