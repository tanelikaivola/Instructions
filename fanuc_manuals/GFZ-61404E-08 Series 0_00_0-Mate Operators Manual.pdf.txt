
GFZ-61404E B-61404E

GE Fanuc CNC

Series 0/00/0-Mate Operator
Manual (for Machining Center)

Presented By: CNC Center

For Product Needs Please Visit:

http://www.cnccenter.com/

OR Email:

sales@cnccenter.com

OR Call:

1-800-963-3513
GE Fanuc CNC Manuals www.cnccenter.com

http://www.cnccenter.com/
mailto:sales@cnccenter.com


GE Fanuc Automation

Computer Numerical Control Products

Series 0 / 00 / 0-Mate
for Machining Center

Operator's Manual

GFZ-61404E/08 June 1998



GFL-001

Warnings, Cautions, and Notes
as Used in this Publication

Warning

Warning notices are used in this publication to emphasize that hazardous voltages, currents,
temperatures, or other conditions that could cause personal injury exist in this equipment or
may be associated with its use.

In situations where inattention could cause either personal injury or damage to equipment, a
Warning notice is used.

Caution

Caution notices are used where equipment might be damaged if care is not taken.

Note
Notes merely call attention to information that is especially significant to understanding and
operating the equipment.

This document is based on information available at the time of its publication.  While efforts
have been made to be accurate, the information contained herein does not purport to cover all
details or variations in hardware or software, nor to provide for every possible contingency in
connection with installation, operation, or maintenance.  Features may be described herein
which are not present in all hardware and software systems.  GE Fanuc Automation assumes
no obligation of notice to holders of this document with respect to changes subsequently made.

GE Fanuc Automation makes no representation or warranty, expressed, implied, or statutory
with respect to, and assumes no responsibility for the accuracy, completeness, sufficiency, or
usefulness of the information contained herein.  No warranties of merchantability or fitness for
purpose shall apply.

©Copyright 1998 GE Fanuc Automation North America, Inc.

All Rights Reserved.



s–1

SAFETY PRECAUTIONS

This section describes the safety precautions related to the use of CNC units.  It is essential that these precautions
be observed by users to ensure the safe operation of machines equipped with a CNC unit (all descriptions in this
section assume this configuration).  Note that some precautions are related only to specific functions, and thus
may not be applicable to certain CNC units.
Users must also observe the safety precautions related to the machine, as described in the relevant manual supplied
by the machine tool builder.  Before attempting to operate the machine or create a program to control the operation
of the machine, the operator must become fully familiar with the contents of this manual and relevant manual
supplied by the machine tool builder.

Contents

1. DEFINITION OF WARNING, CAUTION, AND NOTE s–2. . . . . . . . . . . . . . . . . . . . . . . . 

2. GENERAL WARNINGS AND CAUTIONS s–3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3. WARNINGS AND CAUTIONS RELATED TO PROGRAMMING s–5. . . . . . . . . . . . . . 

4. WARNINGS AND CAUTIONS RELATED TO HANDLING s–7. . . . . . . . . . . . . . . . . . . . 

5. WARNINGS RELATED TO DAILY MAINTENANCE s–9. . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



SAFETY PRECAUTIONS B–61404E/08

s–2

1 DEFINITION OF WARNING, CAUTION, AND NOTE
This manual includes safety precautions for protecting the user and preventing damage to the
machine.  Precautions are classified into Warning and Caution according to their bearing on safety.
Also, supplementary information is described as a Note.  Read the Warning, Caution, and Note
thoroughly before attempting to use the machine.

WARNING

Applied when there is a danger of the user being injured or when there is a damage of both the user
being injured and the equipment being damaged if the approved procedure is not observed.

CAUTION

Applied when there is a danger of the equipment being damaged, if the approved procedure is not
observed.

NOTE

The Note is used to indicate supplementary information other than Warning and Caution.

� Read this manual carefully, and store it in a safe place.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 SAFETY PRECAUTIONS

s–3

2 GENERAL WARNINGS AND CAUTIONS
WARNING

1. Never attempt to machine a workpiece without first checking the operation of the machine.
Before starting a production run, ensure that the machine is operating correctly by performing
a trial run using, for example, the single block, feedrate override, or machine lock function or
by operating the machine with neither a tool nor workpiece mounted.  Failure to confirm the
correct operation of the machine may result in the machine behaving unexpectedly, possibly
causing damage to the workpiece and/or machine itself, or injury to the user.

2. Before operating the machine, thoroughly check the entered data.
Operating the machine with incorrectly specified data may result in the machine behaving
unexpectedly, possibly causing damage to the workpiece and/or machine itself, or injury to the
user.

3. Ensure that the specified feedrate is appropriate for the intended operation.  Generally, for each
machine, there is a maximum allowable feedrate.  The appropriate feedrate varies with the
intended operation.  Refer to the manual provided with the machine to determine the maximum
allowable feedrate.  If a machine is run at other than the correct speed, it may behave
unexpectedly, possibly causing damage to the workpiece and/or machine itself, or injury to the
user.

4. When using a tool compensation function, thoroughly check the direction and amount of
compensation.  
Operating the machine with incorrectly specified data may result in the machine behaving
unexpectedly, possibly causing damage to the workpiece and/or machine itself, or injury to the
user.

5. The parameters for the CNC and PMC are factory–set.  Usually, there is not need to change them.
When, however, there is not alternative other than to change a parameter, ensure that you fully
understand the function of the parameter before making any change.
Failure to set a parameter correctly may result in the machine behaving unexpectedly, possibly
causing damage to the workpiece and/or machine itself, or injury to the user.

6. Immediately after switching on the power, do not touch any of the keys on the MDI panel until
the position display or alarm screen appears on the CNC unit.
Some of the keys on the MDI panel are dedicated to maintenance or other special operations.
Pressing any of these keys may place the CNC unit in other than its normal state.  Starting the
machine in this state may cause it to behave unexpectedly.

7. This manual supplied with a CNC unit provide an overall description of the machine’s functions,
including any optional functions.  Note that the optional functions will vary from one machine
model to another.  Therefore, some functions described in the manuals may not actually be
available for a particular model.  Check the specification of the machine if in doubt.

ww
w.

cn
cc

en
ter

.co
m



SAFETY PRECAUTIONS B–61404E/08

s–4

WARNING

8. Some functions may have been implemented at the request of the machine–tool builder.  When
using such functions, refer to the manual supplied by the machine–tool builder for details of their
use and any related cautions.

NOTE

Programs, parameters, and macro variables are stored in nonvolatile memory in the CNC unit.
Usually, they are retained even if the power is turned off.  Such data may be deleted inadvertently,
however, or it may prove necessary to delete all data from nonvolatile memory as part of error
recovery.
To guard against the occurrence of the above, and assure quick restoration of deleted data, backup
all vital data, and keep the backup copy in a safe place.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 SAFETY PRECAUTIONS

s–5

3 WARNINGS AND CAUTIONS RELATED TOPROGRAMMING
This section covers the major safety precautions related to programming.  Before attempting to
perform programming, read the supplied this manual carefully such that you are fully familiar with
their contents.

WARNING

1. Coordinate system setting

If a coordinate system is established incorrectly, the machine may behave unexpectedly as a
result of the program issuing an otherwise valid move command.
Such an unexpected operation may damage the tool, the machine itself, the workpiece, or cause
injury to the user.

2. Positioning by nonlinear interpolation

When performing positioning by nonlinear interpolation (positioning by nonlinear movement
between the start and end points), the tool path must be carefully confirmed before performing
programming.
Positioning involves rapid traverse.  If the tool collides with the workpiece, it may damage the
tool, the machine itself, the workpiece, or cause injury to the user.

3. Function involving a rotation axis

When programming polar coordinate interpolation or normal–direction (perpendicular) control,
pay careful attention to the speed of the rotation axis.  Incorrect programming may result in the
rotation axis speed becoming excessively high, such that centrifugal force causes the chuck to
lose its grip on the workpiece if the latter is not mounted securely.
Such mishap is likely to damage the tool, the machine itself, the workpiece, or cause injury to
the user.

4. Inch/metric conversion

Switching between inch and metric inputs does not convert the measurement units of data such
as the workpiece origin offset, parameter, and current position.  Before starting the machine,
therefore, determine which measurement units are being used.  Attempting to perform an
operation with invalid data specified may damage the tool, the machine itself, the workpiece, or
cause injury to the user.

5. Constant surface speed control

When an axis subject to constant surface speed control approaches the origin of the workpiece
coordinate system, the spindle speed may become excessively high.  Therefore, it is necessary
to specify a maximum allowable speed.  Specifying the maximum allowable speed incorrectly
may damage the tool, the machine itself, the workpiece, or cause injury to the user.

ww
w.

cn
cc

en
ter

.co
m



SAFETY PRECAUTIONS B–61404E/08

s–6

WARNING

6. Stroke check

After switching on the power, perform a manual reference position return as required.  Stroke
check is not possible before manual reference position return is performed.  Note that when stroke
check is disabled, an alarm is not issued even if a stroke limit is exceeded, possibly damaging
the tool, the machine itself, the workpiece, or causing injury to the user.

7. Tool post interference check

A tool post interference check is performed based on the tool data specified during automatic
operation.  If the tool specification does not match the tool actually being used, the interference
check cannot be made correctly, possibly damaging the tool or the machine itself, or causing
injury to the user.
After switching on the power, or after selecting a tool post manually, always start automatic
operation and specify the tool number of the tool to be used.

8. Absolute/incremental mode

If a program created with absolute values is run in incremental mode, or vice versa, the machine
may behave unexpectedly.

9. Plane selection

If an incorrect plane is specified for circular interpolation, helical interpolation, or a canned cycle,
the machine may behave unexpectedly.  Refer to the descriptions of the respective functions for
details.

10. Torque limit skip

Before attempting a torque limit skip, apply the torque limit.  If a torque limit skip is specified
without the torque limit actually being applied, a move command will be executed without
performing a skip.

11. Programmable mirror image

Note that programmed operations vary considerably when a programmable mirror image is
enabled.

12. Compensation function

If a command based on the machine coordinate system or a reference position return command
is issued in compensation function mode, compensation is temporarily canceled, resulting in the
unexpected behavior of the machine.
Before issuing any of the above commands, therefore, always cancel compensation function
mode.ww

w.
cn

cc
en

ter
.co

m



B–61404E/08 SAFETY PRECAUTIONS

s–7

4 WARNINGS AND CAUTIONS RELATED TO HANDLING
This section presents safety precautions related to the handling of machine tools.  Before attempting
to operate your machine, read the supplied this manual carefully, such that you are fully familiar with
their contents.

WARNING

1. Manual operation

When operating the machine manually, determine the current position of the tool and workpiece,
and ensure that the movement axis, direction, and feedrate have been specified correctly.
Incorrect operation of the machine may damage the tool, the machine itself, the workpiece, or
cause injury to the operator.

2. Manual reference position return

After switching on the power, perform manual reference position return as required.  If the
machine is operated without first performing manual reference position return, it may behave
unexpectedly.  Stroke check is not possible before manual reference position return is performed.
An unexpected operation of the machine may damage the tool, the machine itself, the workpiece,
or cause injury to the user.

3. Manual numeric command

When issuing a manual numeric command, determine the current position of the tool and
workpiece, and ensure that the movement axis, direction, and command have been specified
correctly, and that the entered values are valid.
Attempting to operate the machine with an invalid command specified may damage the tool, the
machine itself, the workpiece, or cause injury to the operator.

4. Manual handle feed

In manual handle feed, rotating the handle with a large scale factor, such as 100, applied causes
the tool and table to move rapidly.  Careless handling may damage the tool and/or machine, or
cause injury to the user.

5. Disabled override

If override is disabled (according to the specification in a macro variable) during threading, rigid
tapping, or other tapping, the speed cannot be predicted, possibly damaging the tool, the machine
itself, the workpiece, or causing injury to the operator.

6. Origin/preset operation

Basically, never attempt an origin/preset operation when the machine is operating under the
control of a program.  Otherwise, the machine may behave unexpectedly, possibly damaging the
tool, the machine itself, the tool, or causing injury to the user.

ww
w.

cn
cc

en
ter

.co
m



SAFETY PRECAUTIONS B–61404E/08

s–8

WARNING

7. Workpiece coordinate system shift

Manual intervention, machine lock, or mirror imaging may shift the workpiece coordinate
system.  Before attempting to operate the machine under the control of a program, confirm the
coordinate system carefully.
If the machine is operated under the control of a program without making allowances for any shift
in the workpiece coordinate system, the machine may behave unexpectedly, possibly damaging
the tool, the machine itself, the workpiece, or causing injury to the operator.

8. Software operator’s panel and menu switches

Using the software operator’s panel and menu switches, in combination with the MDI panel, it
is possible to specify operations not supported by the machine operator’s panel, such as mode
change, override value change, and jog feed commands.
Note, however, that if the MDI panel keys are operated inadvertently, the machine may behave
unexpectedly, possibly damaging the tool, the machine itself, the workpiece, or causing injury
to the user.

9. Manual intervention

If manual intervention is performed during programmed operation of the machine, the tool path
may vary when the machine is restarted.  Before restarting the machine after manual intervention,
therefore, confirm the settings of the manual absolute switches, parameters, and
absolute/incremental command mode.

10. Feed hold, override, and single block

The feed hold, feedrate override, and single block functions can be disabled using custom macro
system variable #3004.  Be careful when operating the machine in this case.

11. Dry run

Usually, a dry run is used to confirm the operation of the machine.  During a dry run, the machine
operates at dry run speed, which differs from the corresponding programmed feedrate.  Note that
the dry run speed may sometimes be higher than the programmed feed rate.

12. Cutter and tool nose radius compensation in MDI mode

Pay careful attention to a tool path specified by a command in MDI mode, because cutter or tool
nose radius compensation is not applied.  When a command is entered from the MDI to interrupt
in automatic operation in cutter or tool nose radius compensation mode, pay particular attention
to the tool path when automatic operation is subsequently resumed.  Refer to the descriptions of
the corresponding functions for details.

13. Program editing

If the machine is stopped, after which the machining program is edited (modification, insertion,
or deletion), the machine may behave unexpectedly if machining is resumed under the control
of that program.  Basically, do not modify, insert, or delete commands from a machining program
while it is in use.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 SAFETY PRECAUTIONS

s–9

5 WARNINGS RELATED TO DAILY MAINTENANCE
WARNING

1. Memory backup battery replacement

When replacing the memory backup batteries, keep the power to the machine (CNC) turned on,
and apply an emergency stop to the machine.  Because this work is performed with the power
on and the cabinet open, only those personnel who have received approved safety and
maintenance training may perform this work.
When replacing the batteries, be careful not to touch the high–voltage circuits (marked  and
fitted with an insulating cover).
Touching the uncovered high–voltage circuits presents an extremely dangerous electric shock
hazard.

NOTE

The CNC uses batteries to preserve the contents of its memory, because it must retain data such as
programs, offsets, and parameters even while external power is not applied.
If the battery voltage drops, a low battery voltage alarm is displayed on the machine operator’s panel
or CRT screen.
When a low battery voltage alarm is displayed, replace the batteries within a week.  Otherwise, the
contents of the CNC’s memory will be lost.
Refer to the maintenance section of this manual for details of the battery replacement procedure.

ww
w.

cn
cc

en
ter

.co
m



SAFETY PRECAUTIONS B–61404E/08

s–10

WARNING

2. Absolute pulse coder battery replacement

When replacing the memory backup batteries, keep the power to the machine (CNC) turned on,
and apply an emergency stop to the machine.  Because this work is performed with the power
on and the cabinet open, only those personnel who have received approved safety and
maintenance training may perform this work.
When replacing the batteries, be careful not to touch the high–voltage circuits (marked  and
fitted with an insulating cover).
Touching the uncovered high–voltage circuits presents an extremely dangerous electric shock
hazard.

NOTE

The absolute pulse coder uses batteries to preserve its absolute position.
If the battery voltage drops, a low battery voltage alarm is displayed on the machine operator’s panel
or CRT screen.
When a low battery voltage alarm is displayed, replace the batteries within a week.  Otherwise, the
absolute position data held by the pulse coder will be lost.
Refer to the maintenance section of this manual for details of the battery replacement procedure.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 SAFETY PRECAUTIONS

s–11

WARNING

3. Fuse replacement

Before replacing a blown fuse, however, it is necessary to locate and remove the cause of the
blown fuse.
For this reason, only those personnel who have received approved safety and maintenance
training may perform this work.
When replacing a fuse with the cabinet open, be careful not to touch the high–voltage circuits
(marked  and fitted with an insulating cover).
Touching an uncovered high–voltage circuit presents an extremely dangerous electric shock
hazard.

ww
w.

cn
cc

en
ter

.co
m



Table of ContentsB–61404E/08

c–1

SAFETY PRECAUTIONS s–1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

I.  GENERAL

1. GENERAL 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.1 GENERAL FLOW OF OPERATION OF CNC MACHINE TOOL 6. . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.2 NOTES ON READING THIS MANUAL 8. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

II.  PROGRAMMING

1. GENERAL 11. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.1 TOOL MOVEMENT ALONG WORKPIECE PARTS FIGURE–INTERPOLATION 12. . . . . . . . . . . . 

1.2 FEED–FEED FUNCTION 13. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3 PART DRAWING AND TOOL MOVEMENT 14. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3.1 Reference Position (Machine–Specific Position) 14. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3.2 Coordinate System on Part Drawing and Coordinate System 
Specified by CNC – Coordinate System 15. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.3.3 How to Indicate Command Dimensions for Moving the Tool – Absolute, 
Incremental Commands 18. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4 CUTTING SPEED – SPINDLE SPEED FUNCTION 19. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.5 SELECTION OF TOOL USED FOR VARIOUS MACHINING – TOOL FUNCTION 20. . . . . . . . . . . 

1.6 COMMAND FOR MACHINE OPERATIONS – MISCELLANEOUS FUNCTION 20. . . . . . . . . . . . . 

1.7 PROGRAM CONFIGURATION 21. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.8 TOOL FIGURE AND TOOL MOTION BY PROGRAM 24. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.9 TOOL MOVEMENT RANGE – STROKE 25. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2. CONTROLLED AXES 26. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.1 CONTROLLED AXES 27. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2 NAME OF AXES 27. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3 INCREMENT SYSTEM 27. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4 MAXIMUM STROKE 27. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3. PREPARATORY FUNCTION (G FUNCTION) 28. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4. INTERPOLATION FUNCTIONS 32. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.1 POSITIONING (G00) 33. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.2 SINGLE DIRECTION POSITIONING (G60) 34. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.3 LINEAR INTERPOLATION (G01) 35. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.4 CIRCULAR INTERPOLATION (G02, G03) 37. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.5 HELICAL CUTTING (G02, G03) 41. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.6 CYLINDRICAL INTERPOLATION (G107) 42. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.7 CONSTANT LEAD THREADING (G33) 45. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.8 SKIP FUNCTION (G31) 47. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTS B–61404E/08

c–2

5. FEED FUNCTIONS 49. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.1 GENERAL 50. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.2 RAPID TRAVERSE 53. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.3 CUTTING FEED 54. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4 CUTTING FEEDRATE CONTROL 58. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.1 Exact Stop (G09, G61) Cutting Mode (G64) Tapping Mode (G63) 59. . . . . . . . . . . . . . . . . . . . . . . 

5.4.2 Automatic Override for Inner Corners (G62) 60. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4.3 Internal Circular Cutting Feedrate Change 62. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.5 DWELL (G04) 63. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.6 CUTTING FEED LINEAR ACCELERATION/DECELERATION 
BEFORE INTERPOLATION 64. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.7 CUTTING FEED BLOCK OVERLAP 67. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.8 AUTOMATIC CORNER DECELERATION 68. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.9 FEEDRATE CLAMP BASED ON ARC RADIUS 74. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.10 RAPID TRAVERSE BELL–SHAPED ACCELERATION/DECELERATION 76. . . . . . . . . . . . . . . . . . 

6. REFERENCE POSITION 77. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7. COORDINATE SYSTEM 81. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.1 MACHINE COORDINATE SYSTEM 82. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2 WORKPIECE COORDINATE SYSTEM 83. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2.1 Setting a Workpiece Coordinate System 83. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2.2 Selecting a Workpiece Coordinate System 84. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2.3 Changing Workpiece Coordinate System 85. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2.4 Adding Workpiece Coordinate Systems 88. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.3 LOCAL COORDINATE SYSTEM 90. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.4 PLANE SELECTION 92. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8. COORDINATE VALUE AND DIMENSION 93. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.1 ABSOLUTE AND INCREMENTAL PROGRAMMING (G90, G91) 94. . . . . . . . . . . . . . . . . . . . . . . . . 

8.2 POLAR COORDINATE COMMAND (G15, G16) 95. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.3 INCH/METRIC CONVERSION (G20, G21) 98. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.4 DECIMAL POINT PROGRAMMING 99. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9. SPINDLE SPEED FUNCTION (S FUNCTION) 100. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.1 SPECIFYING THE SPINDLE SPEED WITH A BINARY CODE 101. . . . . . . . . . . . . . . . . . . . . . . . . . 

9.2 SPECIFYING THE SPINDLE SPEED VALUE DIRECTLY (S5–DIGIT COMMAND) 101. . . . . . . . . 

9.3 CONSTANT SURFACE SPEED CONTROL (G96, G97) 102. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10. TOOL FUNCTION (T FUNCTION) 106. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.1 TOOL SELECTION FUNCTION 107. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2 TOOL LIFE MANAGEMENT FUNCTION 108. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2.1 Tool Life Management Data 109. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2.2 Register, Change and Delete of Tool Life Management Data 110. . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2.3 Tool Life Management Command in a Machining Program 111. . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.2.4 Tool Life 114. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTSB–61404E/08

c–3

11. AUXILIARY FUNCTION 115. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1 AUXILIARY FUNCTION (M FUNCTION) 116. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.2 MULTIPLE M COMMANDS IN A SINGLE BLOCK 117. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.3 THE SECOND AUXILIARY FUNCTIONS (B CODES) 117. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12. PROGRAM CONFIGURATION 118. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.1 PROGRAM COMPONENTS OTHER THAN PROGRAM SECTIONS 120. . . . . . . . . . . . . . . . . . . . . 

12.2 PROGRAM SECTION CONFIGURATION 123. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.3 SUBPROGRAM 129. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13. FUNCTIONS TO SIMPLIFY PROGRAMMING 132. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1 CANNED CYCLE 133. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.1 High–speed Peck Drilling Cycle (G73) 137. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.2 Left–handed Tapping Cycle (G74) 139. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.3 Fine Boring Cycle (G76) 141. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.4 Drilling Cycle, Spot Drilling (G81) 143. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.5 Drilling Cycle Counter Boring Cycle (G82) 145. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.6 Peck Drilling Cycle (G83) 147. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.7 Tapping Cycle (G84) 149. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.8 Boring Cycle (G85) 151. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.9 Boring Cycle (G86) 153. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.10 Boring Cycle Back Boring Cycle (G87) 155. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.11 Boring Cycle (G88) 157. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.12 Boring Cycle (G89) 159. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1.13 Canned Cycle Cancel (G80) 161. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.2 RIGID TAPPING 164. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.2.1 Rigid Tapping (G84) 165. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.2.2 Left–handed Rigid Tapping Cycle (G74) 167. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.2.3 Peck Rigid Tapping Cycle (G84 or G74) 169. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.2.4 Canned Cycle Cancel (G80) 171. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.3 CANNED GRINDING CYCLE (0–GSC, 0–GSD/II) 172. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.3.1 Plunge Grinding Cycle (G75) 173. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.3.2 Direct Constant–dimension Plunge Grinding Cycle (G77) 175. . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.3.3 Continuous–feed Surface Grinding Cycle (G78) 177. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.3.4 Intermittent–feed Surface Grinding Cycle (G79) 179. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.4 GRINDING–WHEEL WEAR COMPENSATION BY CONTINUOUS DRESSING 
(0–GSC, 0–GSD/II) 181. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.5 AUTOMATIC GRINDING WHEEL DIAMETER COMPENSATION AFTER DRESSING 182. . . . . 

13.5.1 Checking the Minimum Grinding Wheel Diameter (0–GSC, 0–GSD/II) 182. . . . . . . . . . . . . . . . . 

13.6 IN–FEED GRINDING ALONG THE Y AND Z AXES AT THE END OF TABLE SWING 
(0–GSC, 0–GSD/II) 183. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.7 OPTIONAL ANGLE CHAMFERING AND CORNER ROUNDING 184. . . . . . . . . . . . . . . . . . . . . . . 

13.8 EXTERNAL MOTION FUNCTION (G81) 186. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.9 SMALL–DIAMETER PECK DRILLING CYCLE 187. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTS B–61404E/08

c–4

14. COMPENSATION FUNCTION 191. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.1 TOOL LENGTH OFFSET (G43, G44, G49) 192. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.2 AUTOMATIC TOOL LENGTH MEASUREMENT (G37) 196. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.3 TOOL OFFSET (G45 TO G48) 200. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4 CUTTER COMPENSATION B (G39 TO G42) 205. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4.1 Cutter Compensation Left (G41) 208. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4.2 Cutter Compensation Right (G42) 210. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4.3 Corner Offset Circular Interpolation (G39) 212. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4.4 Cutter Compensation Cancel (G40) 213. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4.5 Switch between Cutter Compensation Left and Cutter Compensation Right 214. . . . . . . . . . . . . . . 

14.4.6 Change of the Cutter Compensation Value 215. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.4.7 Positive/Negative Cutter Compensation Value and Tool Center Path 216. . . . . . . . . . . . . . . . . . . . 

14.5 OVERVIEW OF CUTTER COMPENSATION C (G40 TO G42) 218. . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6 DETAILS OF CUTTER COMPENSATION C 224. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.1 General 224. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.2 Tool Movement in Start–up 225. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.3 Tool Movement in Offset Mode 229. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.4 Tool Movement in Offset Mode Cancel 243. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.5 Interference Check 249. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.6 Overcutting by Cutter Compensation 254. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.6.7 Input Command from MDI 257. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.7 TOOL COMPENSATION VALUES, NUMBER OF COMPENSATION VALUES, 
AND ENTERING VALUES FROM THE PROGRAM (G10) 258. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.8 SCALING (G50, G51) 260. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.9 COORDINATE SYSTEM ROTATION (G68, G69) 266. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.10 INDEX TABLE INDEXING FUNCTION 272. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

14.11 NORMAL DIRECTION CONTROL (G150, G151, G152) 275. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15. CUSTOM MACRO A 279. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.1 CUSTOM MACRO COMMAND 280. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.1.1 M98 (Single Call) 280. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.1.2 Subprogram Call Using M Code 280. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.1.3 Subprogram Call Using T Code 281. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.1.4 G66 (Modal Call) 282. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.1.5 Argument Specification 283. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.2 CUSTOM MACRO BODY 285. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.2.1 Variables 285. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.2.2 Kind of Variables 286. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.2.3 Operation Instruction and Branch Instruction (G65) 291. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

15.2.4 Notes on Custom Macro 296. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16. CUSTOM MACRO B 297. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.1 VARIABLES 298. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.2 SYSTEM VARIABLES 301. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.3 ARITHMETIC AND LOGIC OPERATION 308. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.4 MACRO STATEMENTS AND NC STATEMENTS 312. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTSB–61404E/08

c–5

16.5 BRANCH AND REPETITION 313. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.5.1 Unconditional Branch (GOTO Statement) 313. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.5.2 Conditional Branch (IF Statement) 313. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.5.3 Repetition (WHILE Statement) 314. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6 MACRO CALL 317. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.1 Simple Call (G65) 317. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.2 Modal Call (G66) 322. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.3 Macro Call Using G Code 324. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.4 Macro Call Using an M Code 325. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.5 Subprogram Call Using an M Code 326. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.6 Subprogram Calls Using a T Code 327. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.6.7 Sample Program 328. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.7 PROCESSING MACRO STATEMENTS 330. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.8 REGISTERING CUSTOM MACRO PROGRAMS 331. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.9 LIMITATIONS 332. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.10 EXTERNAL OUTPUT COMMANDS 333. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.11 INTERRUPTION TYPE CUSTOM MACRO 337. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.11.1 Specification Method 338. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

16.11.2 Details of Functions 339. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

17. PATTERN DATA INPUT FUNCTION 346. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

17.1 DISPLAYING THE PATTERN MENU 347. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

17.2 PATTERN DATA DISPLAY 351. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

17.3 CHARACTERS AND CODES TO BE USED FOR THE PATTERN DATA 
INPUT FUNCTION 355. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

18. PROGRAMMABLE PARAMETER ENTRY (G10) 357. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

19. MEMORY OPERATION USING Series 10/11 TAPE FORMAT 359. . . . . . . . . . . . . . . . . . 

20. HIGH SPEED CYCLE CUTTING 360. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.1 NUMBER OF CONTROL AXES 361. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.2 PULSE DISTRIBUTION 361. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.3 CONFIGURATION OF HIGH SPEED CYCLE CUTTING DATA 362. . . . . . . . . . . . . . . . . . . . . . . . . . 

20.3.1 Number of Registered Cycles 362. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

20.3.2 Header 362. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

21. SIMPLE SYNCHRONOUS CONTROL 365. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

22. ROTARY AXIS ROLL–OVER 368. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

23. ANGULAR AXIS CONTROL (0–GSC, 0–GSD/II) 369. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

24. ADVANCED PREVIEW CONTROL 371. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTS B–61404E/08

c–6

III.  OPERATION

1. GENERAL 375. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.1 MANUAL OPERATION 376. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.2 TOOL MOVEMENT BY PROGRAMMING–AUTOMATIC OPERATION 378. . . . . . . . . . . . . . . . . . 

1.3 AUTOMATIC OPERATION 380. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4 TESTING A PROGRAM 382. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4.1 Check by Running the Machine 382. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.4.2 How to View the Position Display Change without Running the Machine 383. . . . . . . . . . . . . . . . 

1.5 EDITING A PART PROGRAM 384. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.6 DISPLAYING AND SETTING DATA 385. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7 DISPLAY 388. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7.1 Program Display (See Subsections III–11.2.1 and III–11.3.1) 388. . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7.2 Current Position Display (See Section III–11.1.1 to 11.1.3) 389. . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7.3 Alarm Display (See Section III–7.1) 389. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.7.4 Parts Count Display, Run Time Display (See Section III–11.1.5) 390. . . . . . . . . . . . . . . . . . . . . . . 

1.7.5 Graphic Display (See Section III–12) 390. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.8 DATA OUTPUT (SEE CHAPTER III–8) 391. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2. OPERATIONAL DEVICES 392. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.1 CRT/MDI PANELS AND LCD/MDI PANELS 393. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2 FUNCTION KEYS AND SOFT KEYS 398. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2.1 General Screen Operations 398. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2.2 Function Keys 399. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2.3 Key Input and Input Buffer 400. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.2.4 14″ CRT Soft Key Configuration 402. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
2.3 EXTERNAL I/O DEVICES 403. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3.1 FANUC Handy File 405. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3.2 FANUC Floppy Cassette 405. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3.3 FANUC FA Card 406. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3.4 FANUC PPR 406. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.3.5 Portable Tape Reader 407. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4 POWER ON/OFF 408. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4.1 Turning on the Power 408. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4.2 Display of Software Configuration 409. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

2.4.3 Power Disconnection 409. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3. MANUAL OPERATION 410. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.1 MANUAL REFERENCE POSITION RETURN 411. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.2 JOG FEED 413. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.3 INCREMENTAL FEED 415. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.4 MANUAL HANDLE FEED 416. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

3.5 MANUAL ABSOLUTE ON AND OFF 418. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTSB–61404E/08

c–7

4. AUTOMATIC OPERATION 423. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.1 MEMORY OPERATION 424. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.2 MDI OPERATION 426. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.3 DNC OPERATION 431. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.4 PROGRAM RESTART 432. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.5 SCHEDULING FUNCTION 436. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.6 SUBPROGRAM CALL FUNCTION 441. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.7 MANUAL HANDLE INTERRUPTION 443. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.8 MIRROR IMAGE 446. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

4.9 SEQUENCE NUMBER SEARCH 448. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5. TEST OPERATION 450. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.1 MACHINE LOCK AND AUXILIARY FUNCTION LOCK 451. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.2 FEEDRATE OVERRIDE 452. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.3 RAPID TRAVERSE OVERRIDE 453. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.4 DRY RUN 454. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

5.5 SINGLE BLOCK 455. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6. SAFETY FUNCTIONS 457. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6.1 EMERGENCY STOP 458. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6.2 OVERTRAVEL 459. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

6.3 STROKE CHECK 460. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7. ALARM AND SELF–DIAGNOSIS FUNCTIONS 464. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.1 ALARM DISPLAY 465. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

7.2 CHECKING BY SELF–DIAGNOSTIC SCREEN 467. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8. DATA INPUT/OUTPUT 469. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.1 FILES 470. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.2 FILE SEARCH 472. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.3 FILE DELETION 473. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.4 PROGRAM INPUT/OUTPUT 474. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.4.1 Inputting a Program 474. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.4.2 Outputting a Program 476. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.5 OFFSET DATA INPUT AND OUTPUT 479. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.5.1 Inputting Offset Data 479. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.5.2 Outputting Offset Data 480. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.6 INPUTTING AND OUTPUTTING PARAMETERS AND 
PITCH ERROR COMPENSATION DATA 481. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.6.1 Inputting Parameters 481. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.6.2 Outputting Parameters 482. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.7 INPUTTING/OUTPUTTING CUSTOM MACRO B COMMON VARIABLES 483. . . . . . . . . . . . . . . . 

8.7.1 Inputting Custom Macro B Common Variables 483. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.7.2 Outputting Custom Macro B Common Variable 484. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTS B–61404E/08

c–8

8.8 DISPLAYING DIRECTORY OF FLOPPY DISK 485. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.1 Displaying the Directory 486. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

8.8.2 Reading Files 488. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.3 Outputting Programs 489. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.4 Deleting Files 490. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
8.8.5 Changing the File Name 492. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9. EDITING PROGRAMS 493. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.1 INSERTING, ALTERING AND DELETING A WORD 494. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.1 Word Search 496. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.1.2 Heading a Program 498. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.3 Inserting a Word 499. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.1.4 Altering a Word 500. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.1.5 Deleting a Word 501. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.2 DELETING BLOCKS 502. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.2.1 Deleting a Block 502. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.2.2 Deleting Multiple Blocks 503. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.3 PROGRAM NUMBER SEARCH 504. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.4 DELETING PROGRAMS 505. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.4.1 Deleting One Program 505. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.4.2 Deleting All Programs 505. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.4.3 Deleting More Than One Program by Specifying a Range 506. . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.5 EXTENDED PART PROGRAM EDITING FUNCTION 507. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.1 Copying an Entire Program 508. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.5.2 Copying Part of a Program 509. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.3 Moving Part of a Program 510. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.4 Merging a Program 511. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.5.5 Supplementary Explanation for Copying, Moving and Merging 512. . . . . . . . . . . . . . . . . . . . . . . . 
9.5.6 Replacement of Words and Addresses 513. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

9.6 EDITING OF CUSTOM MACRO B 515. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.7 BACKGROUND EDITING 516. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
9.8 REORGANIZING MEMORY 518. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10. CREATING PROGRAMS 519. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.1 CREATING PROGRAMS USING THE MDI PANEL 520. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.2 AUTOMATIC INSERTION OF SEQUENCE NUMBERS 521. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.3 CREATING PROGRAMS IN TEACH IN MODE 523. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

10.4 MENU PROGRAMMING 526. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
10.5 CONVERSATIONAL PROGRAMMING WITH GRAPHIC FUNCTION 528. . . . . . . . . . . . . . . . . . . . 

11. SETTING AND DISPLAYING DATA 532. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1 SCREENS DISPLAYED BY FUNCTION KEY POS 540. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1.1 Position Display in the Work Coordinate System 541. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.2 Position Display in the Relative Coordinate System 542. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.3 Overall Position Display 544. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1.4 Actual Feedrate Display 545. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.1.5 Display of Run Time and Parts Count 546. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.1.6 Operating Monitor Display 547. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTSB–61404E/08

c–9

11.2 SCREENS DISPLAYED BY FUNCTION KEY PRGRM  (IN AUTO MODE OR MDI MODE) 548. . . . 

11.2.1 Program Contents Display 549. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.2 Current Block Display Screen 550. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.3 Next Block Display Screen 551. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.4 Program Check Screen 552. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.2.5 Program Screen for MDI Operation 554. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.3 SCREENS DISPLAYED BY FUNCTION KEY PRGRM  (IN THE EDIT MODE) 556. . . . . . . . . . . . . . . 

11.3.1 Displaying Memory Used and a List of Programs 557. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.4 SCREENS DISPLAYED BY FUNCTION KEY MENUOFSET 559. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.4.1 Setting and Displaying the Tool Offset Value 560. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.2 Tool Length Measurement 562. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.3 Displaying and Setting the Workpiece Origin Offset Value 564. . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.4.4 Displaying and Setting Custom Macro Common Variables 566. . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.5 Displaying Pattern Data and Pattern Menu 567. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.4.6 Displaying and Setting Tool Life Management Data 569. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.5 SCREENS DISPLAYED BY FUNCTION KEY DGNOSPARAM 571. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.5.1 Displaying and Setting Parameters 572. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.5.2 Displaying and Setting Pitch Error Compensation Data 574. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.5.3 Displaying and Entering Setting Data 579. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.5.4 Sequence Number Comparison and Stop 581. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.5.5 Displaying and Setting Run Time, Parts Count, and Time 583. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.6 SCREENS DISPLAYED BY FUNCTION KEY OPR
ALARM

586. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.6.1 Displaying Operator Message 586. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.6.2 Displaying and Setting the Software Operator’s Panel 587. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.7 DISPLAYING THE PROGRAM NUMBER, SEQUENCE NUMBER, AND STATUS, 
AND WARNING MESSAGES FOR DATA SETTING 589. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

11.7.1 Displaying the Program Number and Sequence Number 589. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
11.7.2 Displaying the Status and Warning for Data Setting 590. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12. GRAPHICS FUNCTION 591. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.1 GRAPHICS DISPLAY 592. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
12.2 DYNAMIC GRAPHIC DISPLAY 598. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

12.2.1 Path Drawing 598. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
12.2.2 Solid Graphics 607. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13. DISPLAY AND OPERATION OF 00–MC 620. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

13.1 DISPLAY 621. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
13.2 OPERATION 622. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

IV.  MAINTENANCE

1. METHOD OF REPLACING BATTERY 625. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

1.1 REPLACING CNC BATTERY FOR MEMORY BACK–UP 626. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
1.2 REPLACING BATTERIES FOR ABSOLUTE PULSE CODER 627. . . . . . . . . . . . . . . . . . . . . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



TABLE OF CONTENTS B–61404E/08

c–10

APPENDIX

A. TAPE CODE LIST 631. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

B. LIST OF FUNCTIONS AND TAPE FORMAT 634. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

C. RANGE OF COMMAND VALUE 639. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D. NOMOGRAPHS 642. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D.1 INCORRECT THREADED LENGTH 643. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D.2 SIMPLE CALCULATION OF INCORRECT THREAD LENGTH 645. . . . . . . . . . . . . . . . . . . . . . . . . 

D.3 TOOL PATH AT CORNER 647. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

D.4 RADIUS DIRECTION ERROR AT CIRCLE CUTTING 650. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

E. STATUS WHEN TURNING POWER ON, WHEN CLEAR AND WHEN RESET 651. . . . 

F. CHARACTER–TO CODES CORRESPONDENCE TABLE 653. . . . . . . . . . . . . . . . . . . . . . 

G. ALARM LIST 654. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

H. OPERATION OF PORTABLE TAPE READER 673. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

I. Series 0–D SPECIFICATIONS 677. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

J. CORRESPONDENCE BETWEEN ENGLISH KEY AND SYMBOLIC KEY 685. . . . . . . . . 

ww
w.

cn
cc

en
ter

.co
m



I.  GENERAL

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALGENERAL

3

1 �������
This manual consists of the following parts:

I. GENERAL
Describes chapter organization, applicable models, related manuals,
and notes for reading this manual.

II. PROGRAMMING
Describes each function:  Format used to program functions in the NC
language, characteristics, and restrictions.  When a program is created
through conversational automatic programming function, refer to the
manual for the conversational automatic programming function
(Table 1).

III. OPERATION
Describes the manual operation and automatic operation of a machine,
procedures for inputting and outputting
 data, and procedures for editing a program.

IV.MAINTENANCE
Describes procedure for replacing batteries.

APPENDIX
Lists tape codes, valid data ranges, and error codes.

This manual does not describe parameters in detail.  For details on
parameters mentioned in this manual, refer to the manual for parameters
(B–61410E).

This manual describes all optional functions.  Look up the options
incorporated into your system in the manual written by the machine tool
builder.

The models covered by this manual, and their abbreviations are:

Product name Abbreviations

FANUC Series 0–MC 0–MC

FANUC Series 0–MF 0–MF Series 0

FANUC Series 0–GSC 0–GSC

FANUC Series 00–MC 00–MC Series 00

FANUC Series 0–Mate MC 0–Mate MC
Series 0–Mate

FANUC Series 0–Mate MF 0–Mate MF
Series 0–Mate

FANUC Series 0–MD 0–MD
Series 0–D

FANUC Series 0–GSD 0–GSD
Series 0–D

Series 0–D
FANUC Series 0–MD II 0–MD II

Series 0–D II

Series 0–D

FANUC Series 0–GSD II 0–GSD II
Series 0–D II

About this manual

Applicable models

ww
w.

cn
cc

en
ter

.co
m



GENERAL B–61404E/081. GENERAL

4

This manual uses the following symbols:
��_: Indicates a combination of axes such as X__ Y__

Z (used in PROGRAMMING.).

; : Indicates the end of a block.  It actually corre-
sponds to the ISO code LF or EIA code CR.

The table below lists manuals related to the FANUC Series 0/00/0–Mate.
In the table, this manual is marked with an asterisk (*).

List of related manuals

Manual name Specificationnumber

FANUC Series 0/00  DESCRIPTIONS B–61392E

FANUC Series 0/00/0–Mate  DESCRIPTIONS (Suppelement for Remote buffer) B–61392EN–1

FANUC Series 0/00/0–Mate  CONNECTION MANUAL (HARDWARE) B–61393E

FANUC Series 0/00/0–Mate  CONNECTION MANUAL (FUNCTION) B–61393E–2

FANUC Series 0/00/0–Mate FOR LATHE  OPERATOR’S MANUAL B–61394E

FANUC Series 0/00/0–Mate FOR MACHINING CENTER  OPERATOR’S MANUAL B–61404E *

FANUC Series 0/00/0–Mate  MAINTENANCE MANUAL B–61395E

FANUC Series 0/00/0–Mate  OPERATION AND MAINTENANCE HANDBOOK B–6139��

FANUC Series 0/00/0–Mate FOR LATHE  PARAMETER MANUAL B–61400E

FANUC Series 0/00/0–Mate FOR MACHINING CENTER PARAMETER MANUAL B–61410E

GRAPHIC CONVERSATION FOR MACHINING CENTER 
(Series 0–MC, Series 0–MF, Series 0–Mate MF)  OPERATOR’S MANUAL

B–61434E

FANUC PMC–MODEL K/L/M  PROGRAMMING MANUAL (LADDER LANGUAGE) B–55193E

FANUC Series 0/0–Mate  
PROGRAMMING MANUAL (Macro Compiler / Macro Executer)

B–61393E–1

List of related manuals

Manual name Specificationnumber

FANUC Series 0–TD/MD  DESCRIPTIONS B–62542EN

FANUC Series 0/00/0–Mate  CONNECTION MANUAL (HARDWARE) B–61393E

FANUC Series 0/00/0–Mate  CONNECTION MANUAL (FUNCTION) B–61393E–2

FANUC Series 0–PD CONNECTION MANUAL (FUNCTION) B–62973EN

FANUC Series 0/00/0–Mate FOR LATHE  OPERATOR’S MANUAL B–61394E

FANUC Series 0/00/0–Mate FOR MACHINING CENTER  OPERATOR’S MANUAL B–61404E *

FANUC Series 0–PD  OPERATOR’S MANUAL B–62974EN

FANUC Series 0/00/0–Mate  MAINTENANCE MANUAL B–61395E

FANUC Series 0–PD  MAINTENANCE MANUAL B–62975EN

FANUC Series 0/00/0–Mate FOR LATHE  PARAMETER MANUAL B–61400E

FANUC Series 0/00/0–Mate FOR MACHINING CENTER PARAMETER MANUAL B–61410E

Special symbols

Related manuals

� Series 0/00/0–Mate C

� Series 0–D

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALGENERAL

5

List of related manuals

Manual name Specificationnumber

FANUC Series 0/00/0–Mate  CONNECTION MANUAL (HARDWARE) B–61393E

FANUC Series 0/00/0–Mate  CONNECTION MANUAL (FUNCTION) B–61393E–2

FANUC Series 0/00/0–Mate FOR LATHE  OPERATOR’S MANUAL B–61394E

FANUC Series 0/00/0–Mate FOR MACHINING CENTER  OPERATOR’S MANUAL B–61404E *

FANUC Series 0/00/0–Mate  MAINTENANCE MANUAL B–61395E

FANUC Series 0/00/0–Mate FOR LATHE  PARAMETER MANUAL B–61400E

FANUC Series 0/00/0–Mate FOR MACHINING CENTER PARAMETER MANUAL B–61410E

� Series 0–D II

ww
w.

cn
cc

en
ter

.co
m



GENERAL B–61404E/081. GENERAL

6

When machining the part using the CNC machine tool, first prepare the
program, then operate the CNC machine by using the program.

1) First, prepare the program from a part drawing to operate the CNC
machine tool.  Store the program to a media appropriate for the CNC.
How to prepare the program is described in the Chapter II.
PROGRAMMING.

2) The program is to be read into the CNC system.  Then, mount the
workpieces and tools on the machine, and operate the tools according
to the programming.  Finally, execute the machining actually.
How to operate the CNC system is described in the Chapter III.
OPERATION.

Part 
drawing

Part 
program-
ming

CHAPTER II  PROGRAMMING CHAPTER III  OPERATION

CNC MACHINE TOOL

Before the actual programming, make the machining plan for how to
machine the part.
Machining plan

1. Determination of workpieces machining range
2. Method of mounting workpieces on the machine tool
3. Machining sequence in every cutting process
4. Cutting tools and cutting conditions

Decide the cutting method in every cutting process.

Cutting process 1 2 3

Cutting procedure Feed cutting Side cutting
Hole 

machining

1. Cutting method:
Rough
Semi
Finish

2. Cutting tools

3. Cutting conditions: 
Feedrate
Cutting depth

4. Tool path

1.1
GENERAL FLOW OF
OPERATION OF CNC
MACHINE TOOL

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALGENERAL

7

Tool

Side cutting

Face cutting

Hole machining

Prepare the program of the tool path and machining condition according
to the workpiece figure, for each machining.

ww
w.

cn
cc

en
ter

.co
m



GENERAL B–61404E/081. GENERAL

8

1.2
NOTES ON READING
THIS MANUAL

NOTE
1 The function of an CNC machine tool system depends not

only on the CNC, but on the combination of the machine tool,
its magnetic cabinet, the servo system, the CNC, the
operator’s panels, etc.  It is too difficult to describe the function,
programming, and operation relating to all combinations.  This
manual generally describes these from the stand–point of the
CNC.  So, for details on a particular CNC machine tool, refer
to the manual issued by the machine tool builder, which
should take precedence over this manual.

2 Headings are placed in the left margin so that the reader can
easily access necessary information.  When locating the
necessary information, the reader can save time by
searching though these headings.

3 Machining programs, parameters, variables, etc. are stored
in the CNC unit internal non–volatile memory.  In general,
these contents are not lost by the switching ON/OFF of the
power.  However, it is possible that a state can occur where
precious data stored in the non–volatile memory has to be
deleted, because of deletions from a maloperation, or by a
failure restoration.  In order to restore rapidly when this kind
of mishap occurs, it is recommended that you create a copy
of the various kinds of data beforehand.

4 This manual describes as many reasonable variations in
equipment usage as possible.  It cannot address every
combination of features, options and commands that
should not be attempted.
If a particular combination of operations is not described, it
should not be attempted.

5 This manual describes the functions supported by the
software of the following series and editions of FANUC
Series 0/00/0–Mate.  These functions may not be supported
by other series or editions of the software.

For the functions supported by the Series 0–D, see
“Specifications” in Appendix I.

Product name Series Editions

FANUC Series 0–MC

FANUC Series 0–MF

FANUC Series 0–GSC

FANUC Series 00–MC

FANUC Series 0–Mate MC

FANUC Series 0–Mate MF

FANUC Series 0–MD

FANUC Series 0–GSD

FANUC Series 0–MD II

FANUC Series 0–GSD II

0469

0467

0866

0468

0455

0454

0472

0891

0473

0892

01 or more

14 or more

09 or more

05 or more

06 or more

03 or more

01 or more

01 or more

02 or more

02 or more

ww
w.

cn
cc

en
ter

.co
m



II.  PROGRAMMING

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

11

1 GENERAL

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

12

The tool moves along straight lines and arcs constituting the workpiece
parts figure (See II–4).

Program
G01 X_ _ Y_ _ ;
X_ _ ;

Tool

Workpiece

Fig.1.1 (a)  Tool movement along a straight line

Program
G03X_ _Y_ _R_ _;

Workpiece
Tool

Fig.1.1 (b)  Tool movement along an arc

Symbols of the programmed commands G01, G02, ... are called the
preparatory function and specify the type of interpolation conducted in
the control unit.

1.1
TOOL MOVEMENT
ALONG WORKPIECE
PARTS FIGURE–
INTERPOLATION

Explanations

� Tool movement along a
straight line

� Tool movement along an
arc

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

13

(a) Movement along straight line

G01 Y__;
X––Y––––;

(b) Movement along arc

G03X––Y––R––;

Control unit

X axis

Y axis

Tool 
move-
ment

Interpolation

a) Movement 
along straight
line

b) Movement 
along arc

Fig.1.1 (c)   Interpolation function

NOTE
Some machines move tables instead of tools but this
manual assumes that tools are moved against workpieces.

Movement of the tool at a specified speed for cutting a workpiece is called
the feed.

Tool

Workpiece

Table

F

mm/min

Fig.1.2   Feed function

Feedrates can be specified by using actual numerics.  For example, to feed
the tool at a rate of 150 mm/min, specify the following in the program:
F150.0
The function of deciding the feed rate is called the feed function (See
II–5).

1.2
FEED–
FEED FUNCTION

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

14

A CNC machine tool is provided with a fixed position. Normally, tool
change and programming of absolute zero point as described later are
performed at this position. This position is called the reference position.

Reference position

Tool

Workpiece

Table

Fig.1.3.1   Reference position

The tool can be moved to the reference position in two ways:

(1)Manual reference position return (See III–3.1)
Reference position return is performed by manual button operation.

(2)Automatic reference position return (See II–6)
In general, manual reference position return is performed first after the
power is turned on. In order to move the tool to the reference position
for tool change thereafter, the function of automatic reference position
return is used.

1.3
PART DRAWING AND
TOOL MOVEMENT

1.3.1
Reference Position
(Machine–Specific
Position)

�
�����	����

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

15

Z

Y

X

Part drawing

Coordinate system

Tool

Workpiece

Machine tool

Program

Command

CNC

Z

Y

X

Z

Y

X

Fig.1.3.2 (a)   Coordinate system

The following two coordinate systems are specified at different locations:
(See II–7)

(1)Coordinate system on part drawing
The coordinate system is written on the part drawing.  As the program
data, the coordinate values on this coordinate system are used.

(2)Coordinate system specified by the CNC
The coordinate system is prepared on the actual machine tool table.
This can be achieved by programming the distance from the current
position of the tool to the zero point of the coordinate system to be set.

230

300

Program
zero point

Distance to the zero point of a coordinate
system to be set

Present tool position

Y

X

Fig.1.3.2 (b)   Coordinate system specified by the CNC

The positional relation between these two coordinate systems is
determined when a workpiece is set on the table.

1.3.2
Coordinate System on
Part Drawing and
Coordinate System
Specified by CNC –
Coordinate System

Explanations

� Coordinate system

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

16

Table

Workpiece

Coordinate system specified
by the CNC established on
the table

Coordinate system on
part drawing established
on the workpiece

Y

X

Y

X

Fig.1.3.2 (c)  Coordinate system specified by CNC and coordinate
systemon part drawing

The tool moves on the coordinate system specified by the CNC in
accordance with the command program generated with respect to the
coordinate system on the part drawing, and cuts a workpiece into a shape
on the drawing.
Therefore, in order to correctly cut the workpiece as specified on the
drawing, the two coordinate systems must be set at the same position.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

17

To set the two coordinate systems at the same position, simple methods
shall be used according to workpiece shape, the number of machinings.

(1)Using a standard plane and point of the workpiece.

Program 
zero point

Workpiece’s 
standard pointFixed distance

Bring the tool center to the workpiece standard point.  
And set the coordinate system specified by CNC at this position.

Fixed distance

Y

X

(2)Mounting a workpiece directly against the jig

Jig

Program zero point

Meet the tool center to the reference position.  And set the coordinate
system specified by CNC at this position.  (Jig shall be mounted on the
predetermined point from the reference position.)

(3)Mounting a workpiece on a pallet, then mounting the workpiece and
pallet on the jig

ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅ
ÅÅÅÅÅÅ

Pallet

(Jig and coordinate system shall be specified by the same as (2)).

Jig

Workpiece

� Methods of setting the
two coordinate systems
in the same position

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

18

Coordinate values of command for moving the tool can be indicated by
absolute or incremental designation (See II–8.1).

The tool moves to a point at “the distance from zero point of the
coordinate system” that is to the position of the coordinate values.

B(10,30,20)

Tool

Command specifying movement
from point A to point B

G90 X10.0 Y30.0 Z20.0 ;

Coordinates  of point B

Y

X

Z

A

Specify the distance from the previous tool position to the next tool
position.

X=40

Z=–10

G91 X40.0 Y–30.0 Z–10.0 ;

Distance and direction for 
movement along each axis

Tool

Command specifying movement
from point A to point B

Y= –30

Y

X

Z

A

B

1.3.3
How to Indicate
Command Dimensions
for Moving the Tool –
Absolute, Incremental
Commands

Explanations

� Absolute coordinates

� Incremental coordinates

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

19

The speed of the tool with respect to the workpiece when the workpiece
is cut  is called the cutting speed.
As for the CNC, the cutting speed can be specified by the spindle speed
in rpm unit.

rpm ø D

mm/min

Tool

V: Cutting speed

Workpiece

Spindle speed
N mm

<When a workpiece should be machined with a tool 100 mm in
diameter at a cutting speed of 80 mm/min. >
The spindle speed is approximately 250 rpm, which is obtained from 
N=1000v/πD. Hence the following command is required:

S250 ;
Commands related to the spindle speed are called the spindle speed
function (See II–9).

1.4
CUTTING SPEED –
SPINDLE SPEED
FUNCTION

Examples

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

20

When drilling, tapping, boring, milling or the like, is performed, it is
necessary to select a suitable tool. When a number is assigned to each tool
and the number is specified in the program, the corresponding tool is
selected.

01

02

Tool number

ATC magazine

<When No.01 is assigned to drilling tool>
When the tool is stored at location 01 in the ATC magazine, the tool can
be selected by specifying T01. This is called the tool function (See II–10).

When machining is actually started, it is necessary to rotate the spindle,
and feed coolant. For this purpose, on–off operations of spindle motor and
coolant valve should be controlled (See II–11).

Workpiece

Tool

Coolant

The function of specifying the on–off operations of the components of the
machine is called the miscellaneous function.  In general, the function is
specified by an M code.
For example, when M03 is specified, the spindle is rotated clockwise at
the specified spindle speed.

1.5
SELECTION OF TOOL
USED FOR VARIOUS
MACHINING – TOOL
FUNCTION

Examples

1.6
COMMAND FOR
MACHINE
OPERATIONS –
MISCELLANEOUS
FUNCTION

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

21

A group of commands given to the CNC for operating the machine is
called the program.  By specifying the commands, the tool is moved along
a straight line or an arc, or the spindle motor is turned on and off.
In the program, specify the commands in the sequence of actual tool
movements.

Block

⋅

⋅

⋅

⋅

Program

Tool movement sequence

Block

Block

Block

Block

Fig.1.7 (a)  Program configuration

A group of commands at each step of the sequence is called the block.
The program consists of a group of blocks for a series of machining.  The
number for discriminating each block is called the sequence number, and
the number  for discriminating each program is called the program
number (See II–12).

1.7
PROGRAM
CONFIGURATION

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

22

 The block and the program have the following configurations.

N ���� G �� X ��.� Y ���.� M �� S �� T �� ;

1 block

Sequence 
number

Preparatory 
function

Dimension word Miscel-
laneous 
function

Spindle 
function

Tool 
func-
tion

End of 
block

Fig.1.7 (b)   Block configuration

A block has a sequence number at its head, which identifies the block, and
an end–of–block code at the end, indicating the end of the block.  This
manual indicates the end–of–block code by ; (LF in the ISO code and CR
in the EIA code).

;
O ���� ;

·

·

·

M30 ;

Program number

Block

Block

Block

End of program

·

·

·

Fig.1.7 (c)  Program configuration

Normally, a program number is specified after the end–of–block (;) code
at the beginning of the program, and a program end code (M02 or M30)
is specified at the end of the program.

Explanations

� Block

� Program

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

23

When machining of the same pattern appears at many portions of a
program, a program for the pattern is created.  This is called the
subprogram. On the other hand, the original program is called the main
program. When a subprogram execution command appears during
execution of the main program, commands of the subprogram are
executed. When execution of the subprogram is finished, the sequence
returns to the main program.

Main program

M98P1001

·
·

M98P1002

M98P1001

·

·

·

·

·

·

·

·

·

Subprogram #1

Subprogram #2

O1001

M99

Program for 
hole #1

Program for
hole #2

O1002

M99

Hole #1

Hole #2

Hole #1

Hole #2

� Main program and
subprogram

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/081. GENERAL

24

Usually, several tools are used for machining one workpiece.  The tools
have different tool length. It is very troublesome to change the program
in accordance with the tools.
Therefore, the length of each tool used should be measured in advance.
By setting the difference between the length of the standard tool and the
length of each tool in the CNC (data display and setting : see III–11),
machining can be performed without altering the program even when the
tool is changed. This function is called tool length compensation.

H1 H2 H3 H4

ÇÇ
ÇÇ
ÇÇ
ÇÇ
ÇÇ
ÇÇ

ÅÅ
ÅÅ
ÅÅ
ÅÅ
ÅÅ

Standard
tool

Workpiece

Because a cutter has a radius, the center of the cutter path goes around the
workpiece with the cutter radius deviated.

Workpiece

Cutter path using cutter 
compensation

Machined part
figure

Cutter

If radius of cutters are stored in the CNC (Data Display and Setting : see
III–11), the tool can be moved by cutter radius apart from the machining
part figure.  This function is called cutter  compensation.

1.8
TOOL FIGURE AND
TOOL MOTION BY
PROGRAM
Explanations

� Machining using the end
of cutter – Tool length
compensation function
(See II–14.1)

� Machining using the side
of cutter – Cutter
compensation function
(See II–14.4 to 14.6)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALPROGRAMMING

25

Limit switches are installed at the ends of each axis on the machine to
prevent tools from moving beyond the ends. The range in which tools can
move is called the stroke.

ÇÇÇÇÇÇ
ÇÇÇÇÇÇ
ÇÇÇÇÇÇ

Motor

Limit switch

Table

Machine zero point

Specify these distances.

Tools cannot enter this area. The area is specified by data in memory or
a program.

Besides strokes defined with limit switches, the operator can define an
area which the tool cannot enter using a program or data in memory  (see
Section III–11). This function is called stroke check.

1.9
TOOL MOVEMENT
RANGE – STROKE

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/082. CONTROLLED AXES

26

2 CONTROLLED AXES

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. CONTROLLED AXESPROGRAMMING

27

Series
0/00–C

Series
0–Mate C

Series 0–D

No. of basic controlled axes 3 axes 3 axes 3 axes

Controlled axes expansion
(PMC axis is not included.)

Up to 4 axes Up to 4 axes Up to 4 axes

Basic simultaneously con-
trolled axes

2 axes 2 axes 2 axes

Simultaneously controlled
axes expansion

Up to 4 axes Up to 3 axes Up to 4 axes

Axes controlled by PMC Up to 2 axes
(Note)

— —

NOTE
The number of PMC–controlled axes.  The PMC can control
up to four axes, including PMC–controlled axes and those
axes that are usually controlled by the CNC.

Names of the three basic axes are fixed as X, Y, and Z.  Names of
additional axes can be optionally selected from A, B, C, U, V, and W.
They can be set by parameter No. 008 #2, #3, #4.

Name of
increment

system

Least input
increment

Least command
increment

Maximum
stroke

IS–B 0.001mm
0.0001inch
0.001deg

0.001mm
0.0001inch
0.001deg

99999.999mm
9999.9999inch
99999.999deg

Name of
increment

system

Least input
increment

Least command
increment

Maximum
stroke

IS–C 0.0001mm
0.00001inch
0.00001deg

0.0001mm
0.00001inch
0.00001deg

9999.9999mm
999.99999inch
9999.9999deg

Combined use of the inch system and the metric system is not allowed.
There are functions that cannot be used between axes with different unit
systems (circular interpolation, cutter compensation, etc.).  For the
increment system, see the machine tool builder’s manual.

Maximum stroke = Least command increment�99999999
See 2.3 Incremen System.

2.1
CONTROLLED AXES

2.2
NAME OF AXES

2.3
INCREMENT SYSTEM

2.4
MAXIMUM STROKE

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
3. PREPARATORY FUNCTION

(G FUNCTION)

28

3 PREPARATORY FUNCTION (G FUNCTION)
A number following address G determines the meaning of the command
for the concerned block.
G codes are divided into the following two types.

Type Meaning

One–shot G code The G code is effective only in the block in which it is speci-
fied.

Modal G code The G code is effective until another G code of the same
group is specified.

G01 and G00 are modal G codes in group 01.

G01X  ;
Z  ;
X  ;

G00Z  ;

G01 is effective in this range.

1. Modal G codes have the following initial conditions when the power
is turned on or the system is reset to the clear state (bit 6 of parameter
No. 045).
1) Those G codes marked   in Table 3 are specified automatically.
2) G20 and G21 retain their original conditions.
3) When the power is turned on, G22 is specified automatically.  

When the system is reset, G22 and G23 retain their original
conditions.

4) G00 or G01 is automatically selected depending on the setting of
bit 6 of parameter No. 011.

5) G90 or G91 is automatically selected depending on the setting of
bit 7 of parameter No. 030.

6) G17, G18, or G19 is automatically selected depending on the
setting of parameter No. 212.

2. The G codes of group 00, except G10 and G11, are one–shot G codes.
3. If a G code that does not appear in the G code list is specified, or a G

code whose options are not supported is specified, alarm No. 010 is
displayed.

4. Multiple G codes of different groups can be specified in a single block.
When multiple G codes of one group are specified in a block, the G
code specified last is effective.

5. If any G code of group 01 is specified in a canned cycle mode, the
canned cycle is automatically cancelled and the G80 condition is
entered.  However, a G code of group 01 is not affected by any of the
canned cycle G codes.

6. A G code is displayed from each group.

Explanations

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
3. PREPARATORY FUNCTION

(G FUNCTION)PROGRAMMING

29

Table 3 G code list (1/3)

G code Group Function

G00 Positioning

G01
01

Linear interpolation

G02
01

Circular interpolation/Helical interpolation CW

G03 Circular interpolation/Helical interpolation CCW

G04 Dwell, Exact stop

G05 High speed cycle machining

G08
00

Advanced preview control

G09
00

Exact stop

G10 Data setting

G11 Data setting mode cancel

G15
17

Polar coordinates command cancel

G16
17

Polar coordinates command

G17 XpYp plane selection Xp: X axis or its parallel axis

G18 02 ZpXp plane selection Yp: Y axis or its parallel axis

G19 YpZp plane selection Zp: Z axis or its parallel axis

G20
06

Input in inch

G21
06

Input in mm

G22
04

Stored stroke check function on

G23
04

Stored stroke check function off

G27 Reference position return check

G28 Return to reference position

G29 00 Return from reference position

G30 2nd, 3rd and 4th reference position return

G31 Skip function

G33 01 Thread cutting

G37
00

Automatic tool length measurement

G39
00

Corner offset circular interpolation

G40 Cutter compensation cancel

G41 07 Cutter compensation left

G42 Cutter compensation right

G43
08

Tool length compensation + direction

G44
08

Tool length compensation – direction

G45 Tool offset increase

G46
00

Tool offset decrease

G47
00

Tool offset double increase

G48 Tool offset double decrease

G49 08 Tool length compensation cancel

G50
11

Scaling cancel

G51
11

Scaling

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
3. PREPARATORY FUNCTION

(G FUNCTION)

30

Table 3 G code list (2/3)

G code Group Function

G52
00

Local coordinate system setting

G53
00

Machine coordinate system selection

G54 Workpiece coordinate system 1 selection

G55 Workpiece coordinate system 2 selection

G56
14

Workpiece coordinate system 3 selection

G57
14

Workpiece coordinate system 4 selection

G58 Workpiece coordinate system 5 selection

G59 Workpiece coordinate system 6 selection

G60 00 Single direction positioning

G61 Exact stop mode

G62
15

Automatic corner override

G63
15

Tapping mode

G64 Cutting mode

G65 00 Macro call

G66
12

Macro modal call

G67
12

Macro modal call cancel

G68
16

Coordinate rotation

G69
16

Coordinate rotation cancel

G73
09

Peck drilling cycle

G74
09

Counter tapping cycle

G75 01 Plunge grinding cycle (0–GSC, 0–GSD/II)

G76 09 Fine boring cycle

G77 Direct constant–dimension plunge grinding cycle (0–GSC, 0–GSD/II)

G78 01 Continuous–feed surface grinding cycle (0–GSC, 0–GSD/II)

G79 Intermittent–feed surface grinding cycle (0–GSC, 0–GSD/II)

G80 Canned cycle cancel/external operation function cancel

G81 Drilling cycle, spot boring cycle or external operation function

G82 Drilling cycle or counter boring cycle

G83 Peck drilling cycle

G84
09

Tapping cycle

G85
09

Boring cycle

G86 Boring cycle

G87 Back boring cycle

G88 Boring cycle

G89 Boring cycleww
w.

cn
cc

en
ter

.co
m



B–61404E/08
3. PREPARATORY FUNCTION

(G FUNCTION)PROGRAMMING

31

Table 3 G code list (3/3)

G code Group Function

G90
03

Absolute command

G91
03

Increment command

G92 00 Setting for work coordinate system or clamp at maximum spindle speed

G94
05

Feed per minute

G95
05

Feed per rotation

G96
13

Constant surface speed control

G97
13

Constant surface speed control cancel

G98
10

Return to initial point in canned cycle

G99
10

Return to R point in canned cycle

G107 00 Cylindrical interpolation

G150 Normal direction control cancel mode

G151 19 Normal direction control left side on

G152 Normal direction control right side on

G160
20

In–feed control function cancel (0–GSC, 0–GSD/II)

G161
20

In–feed control function (0–GSC, 0–GSD/II)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

32

4 INTERPOLATION FUNCTIONS

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

33

The G00 command moves a tool to the position in the workpiece system
specified with an absolute or an incremental command at a rapid traverse
rate.
In the absolute command, coordinate value of the end point is
programmed.
In the incremental command the distance the tool moves is programmed.

_: For an absolute command, the coordinates of an end posi-
tion, and for an incremental command, the distance the
tool moves.

G00

��

_ ;��

Tool path generally does not become a straight line.

End position
Non liner  positioning.

Start position

The rapid traverse rate in the G00 command is set to the parameter No.
518 to 521 for each axis independently by the machine tool builder. In the
positioning mode actuated by G00, the tool is accelerated to a
predetermined speed at the start of a block and is decelerated at the end
of a block.  Execution proceeds to the next block after confirming the
in–position.
“In–position” means that the feed motor is within the specified range.
This range is determined by the machine tool builder by setting to
parameter No. 500 to 503.

The rapid traverse rate cannot be specified in the address F.

4.1
POSITIONING (G00)

Format

Explanations

Restrictions

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

34

For accurate positioning without play of the machine (backlash), final
positioning from one direction is available.

Start position

Temporary stop
End position

Overrun

Start position

_: For an absolute command, the coordinates of an end posi-
tion, and for an incremental command, the distance the
tool moves.

G60

��

_ ;��

An overrun and a positioning direction are set by the parameter (No. 029
#0 to #3, No. 204 to 207).  Even when a commanded positioning direction
coincides with that set by the parameter, the tool stops once before the end
point.

� During drilling canned cycle, no single direction positioning is
effected in Z axis.

� No single direction positioning is effected in an axis for which no
overrun has been set by the parameter.

� When the move distance 0 is commanded, the single direction
positioning is not performed.

� The direction set to the parameter is not effected by mirror image.

� The single direction positioning does not apply to the shift motion in
the canned cycles of G76 and G87.

4.2
SINGLE DIRECTION
POSITIONING (G60)

Format

Explanations

Restrictions

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

35

Tools can move along a line

��_: For an absolute command, the coordinates of an end
point, and for an incremental command, the distance the
tool moves.

F_: Speed of tool feed (Feedrate)

G01 _ F_ ;��

A tools move along a line to the specified position at  the feedrate
specified in F.
The feedrate specified in F is effective until a new value is specified. It
need not be specified for each block.
The feedrate commanded by the F code is measured along the tool path.
If the F code is not commanded, the feedrate is regarded as zero.
The feedrate of each axis direction is as follows.

F� � �
L
� f

F� �
�

L
� f

F� �
�

L
� f

Feed rate of a axis direction :

F� �
�

L
� f

L � �2 � �2 � �2 � �2�

G01 � � � � � � � � Ff ;

Feed rate of g axis direction :

Feed rate of b axis direction :

Feed rate of z axis direction :

The feed rate of the rotary axis is commanded in the unit of deg/min (the
unit is decimal point position).

When the straight line axis� (such as X, Y, or Z) and the rotating axis�
(such as A, B, or C) are linearly interpolated, the feed rate is that in which
the tangential feed rate in the� and� cartesian coordinate system is
commanded by F(mm/min). 
�–axis feedrate is obtained ; at first, the time required for  distribution is
calculated by using the above formula, then the β–axis feedrate unit is
changed to deg 1min.

4.3
LINEAR
INTERPOLATION
(G01)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

36

A calculation example is as follows.
G91 G01 X20.0B40.0 F300.0 ;
This changes the unit of the C axis from 40.0 deg to 40mm with metric
input.  The time required for distribution is calculated as follows:

202 � 402�

300

40
0.14907

The feed rate for the C axis is

0.14907 (min)

268.3 deg�min

In simultaneous 3 or 4 axes control, the feed rate is calculated the same
way as in 2 axes control.

100.0

200.00

(G91) G01X200.0Y100.0F200.0 ;

Y axis

(End position)

X axis
(Start position)

90°
����
� 	�����

(End point)
Feedrate is 300 deg/min

G91G01C–90.0 G300.0 ;Feed rate of 300deg/min

Examples

� Linear interpolation

� ������� �
� ��

�
��
	 ����

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

37

The command below will move a tool along a circular arc.

G17
G03

Arc in the XpYp plane

Arc in the ZpXp plane

G18

Arc in the YpZp plane

Xp_Yp_
G02

G03

G02

G03

G02G19

Xp_Zp_

Yp_Zp_

I_J_
R_ F_ ;

I_K_
R_

F_ ;

J_K_

R_
F_ ;

Table 4.4  Description of the command format

Command Description

G17 Specification of arc on XpYp plane

G18 Specification of arc on ZpXp plane

G19 Specification of arc on YpZp plane

G02 Circular Interpolation   Clockwise direction (CW)

G03 Circular Interpolation   Counterclockwise direction (CCW)

Xp_ Command values of X axis or its parallel axis

Yp_ Command values of Y axis or its parallel axis

Zp_ Command values of Z axis or its parallel axis

I_ Xp axis distance from the start point to the center of an arc with
sign

J_ Yp axis distance from the start point to the center of an arc with
sign

K_ Zp axis distance from the start point to the center of an arc with
sign

R_ Arc radius with sign fixed to radius designation.

F_ Feedrate along the arc

4.4
CIRCULAR
INTERPOLATION
(G02, G03)

Format

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

38

“Clockwise”(G02) and “counterclockwise”(G03) on the XpYp plane
(ZpXp plane or YpZp plane) are defined when the XpYp plane is viewed
in the positive–to–negative direction of the Zp axis (Yp axis or Xp axis,
respectively) in the Cartesian coordinate system. See the figure below.

Yp

G02

G03

G17 G18 G19

G02

G03

G02

G03

Xp Zp

Xp Zp Yp

The end point of an arc is specified by address Xp, Yp or Zp, and is
expressed as an absolute or incremental value according to G90 or G91.
For the incremental value, the distance of the end point which is viewed
from the start point of the arc is specified.  

The arc center is specified by addresses I, J, and K for the Xp, Yp, and Zp
axes, respectively.  The numerical value following I, J, or K, however, is
a vector component in which the arc center is seen from the start point,
and is always specified as an incremental value irrespective of G90 and
G91, as shown below.
I, J, and K must be signed according to the direction.

End point (x,y)

Center

Start
point

End point (z,x) End point (y,z)

Start
point

Start
point

Center Center

i
x

y x
z

k

z
y

j

j i k

I0,J0, and K0 can be omitted. When Xp, Yp , and Zp  are omitted (the end
point is the same as the start point) and the center is specified with I, J,
and K, a 360° arc (circle) is specified.
G02I;  Command for a circle
If the difference between the radius at the start point and that at the
end point exceeds the value in a parameter (No.876), an alarm (No.020)
occurs.  (Valid only when bit 6 of parameter No. 393 is set to 1.)

Explanations

� �	����	� � ��� �	���
��

	�����
��	�

� �	������ ���� � ��

���

� �	������ ��� ��� �����

�	�� � ��� ������ � ���

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

39

The distance between an arc and the center of a circle that contains the arc
can be specified using the radius, R, of the circle instead of I, J, and K.
In this case, one arc is less than 180°, and the other is more than 180° are
considered.  When an arc exceeding 180° is commanded, the radius must
be specified with a negative value.  If  Xp, Yp, and Zp are all omitted, if
the end point is located at the same position as the start point and when
R is used, an arc of 0° is programmed 
G02R ; (The cutter does not move.)

r=50mm

End point

Start point r=50mm

For arc � (less than 180 °)
G91 G02 XP60.0 YP20.0 R50.0 F300.0 ;

For arc �(greater than 180 °)
G91 G02 XP60.0 YP20.0 R–50.0 F300.0 ;

Y

X

�

�

The feedrate in circular interpolation is equal to the feed rate specified by
the F code, and the feedrate along the arc (the tangential feedrate of the
arc) is controlled to be the specified feedrate.
The error between the specified feedrate and the actual tool feedrate is
±2% or less.  However, this feed rate is measured along the arc after the
cutter compensation is applied.

If I, J, K, and R addresses are specified simultaneously, the arc specified
by address R takes precedence and the other are ignored.
If an axis not comprising the specified plane is commanded, an alarm is
displayed.
For example, if axis U is specified as a parallel axis to X axis when plane
XY is specified, an alarm (No.028)is displayed.
When an arc having a center angle close to 180ø is specified using its
radius R, the system may fail to calculate the center of the arc correctly.
Therefore, specify the arc with I, J, and K.

� �	� 	����


� ����	���

Restrictionsww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

40

100

60

40

0 90 120 140 200

60R

50R

Y axis

X axis

The above tool path can be programmed as follows ;

(1) In absolute programming

G92X200.0 Y40.0 Z0 ; 
G90 G03 X140.0 Y100.0R60.0 F300.; 
G02 X120.0 Y60.0R50.0 ; 
or
G92X200.0 Y40.0Z0 ; 
G90 G03 X140.0 Y100.0I–60.0 F300.;
G02 X120.0 Y60.0I–50.0 ;

(2) In incremental programming

G91 G03 X–60.0 Y60.0  R60.0 F300.;
G02 X–20.0 Y–40.0 R50.0 ;
or
G91 G03 X–60.0 Y60.0  I–60.0 F300. ;
G02 X–20.0 Y–40.0 I–50.0 ; 

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

41

Helical interpolation is possible, by which the tool is moved along a helix,
by specifying circular interpolation together with movement along an
axis in a plane other than that specified for circular interpolation.

G03

Synchronously with arc of XpYp plane

Synchronously with arc of ZpXp plane

G18

Synchronously with arc of YpZp plane

Xp_Yp_
G02

G03

G02

G03

G02G19

Xp_Zp_

Yp_Zp_

I_J_

R_
�_ F_ ;

I_K_
R_

J_K_

R_

G17

�_ F_ ;

�_ F_ ;

� : Any one axis where circular interpolation is not applied .

The command method is to simply or secondary add one or two move
command axes which is not circular interpolation axes. An F command
specifies a feed rate along a circular arc.  Therefore, the feed rate of the
linear axis is as follows:

F�
Length of linear axis

Length of circular arc

Determine the feed rate so the linear axis feed rate does not exceed any
of the various limit values.
Setting bit 4 of parameter No. 0393 clamps the linear axis speed for helical
cutting to the setting in parameter No. 527.

Z

X Y

Tool path

The feedrate along the circumference of two circular
interpolated axes is the specified feedrate.

Cutter compensation is applied only for a circular arc.
Tool offset and tool length compensation cannot be used in a block in
which a helical cutting is commanded.

4.5
HELICAL CUTTING
(G02, G03)
Format

Explanations

Restrictions

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

42

The amount of travel of a rotary axis specified by an angle is once
internally converted to a distance of a linear axis along the outer surface
so that linear interpolation or circular interpolation can be performed with
another axis.  After interpolation, such a distance is converted back to the
amount of travel of the rotary axis.
The cylindrical interpolation function allows the side of a cylinder to be
developed for programming.  So programs such as a program for
cylindrical cam grooving can be created very easily.

��

_: An address for the rotation axis

r: The radius of the cylinder

G107

��

r ; Starts the cylindrical interpolation mode 
(enables cylindrical interpolation).:

:
:
��G107 0 ; The cylindrical interpolation mode is cancelled.

��Specify G107 r ; and G107      0; in separate blocks.��

Use parameter No. 279 to specify whether the rotation axis is the X–, Y–,
or Z–axis, or an axis parallel to one of these axes.  Specify the G code to
select a plane for which the rotation axis is the specified linear axis.
For example, when the rotation axis is an axis parallel to the X–axis, G17
must specify an Xp–Yp plane, which is a plane defined by the rotation axis
and the Y–axis or an axis parallel to the Y–axis.

A feedrate specified in the cylindrical interpolation mode is a speed on the
developed cylindrical surface.

In the cylindrical interpolation mode, circular interpolation is possible
with the rotation axis and another linear axis.  Radius R is used in
commands in the same way as described in Section 4.4.  
The unit for a radius is not degrees but millimeters (for metric input) or
inches (for inch input).
 <Example  Circular interpolation between the Z axis and C axis>

For the parameter No. 279, 5 (axis parallel with the X axis) is to be set.
In this case, the command for circular interpolation is

G18 Z__C__;
G02 (G03) Z__C__R__;

For the parameter No. 279, 6 (axis parallel with the Y axis) may be
specified instead.  In this case, however, the command for circular
interpolation is 

G19 C__Z__;
G02 (G03) Z__C__R__;

To perform cutter compensation in the cylindrical interpolation mode,
cancel any ongoing cutter compensation mode before entering the
cylindrical interpolation mode.  Then, start and terminate cutter
compensation within the cylindrical interpolation mode.

4.6
CYLINDRICAL
INTERPOLATION
(G107)

Format

Explanations

� Plane selection
(G17, G18, G19)

� ��������

� Circular interpolation
(G02,G03)

� Cutter compensation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

43

In the cylindrical interpolation mode, the amount of travel of a rotary axis
specified by an angle is once internally converted to a distance of a linear
axis on the outer surface so that linear interpolation or circular
interpolation can be performed with another axis.  After interpolation,
such a distance is converted back to an angle.  For this conversion, the
amount of travel is rounded to a least input increment.
So when the radius of a cylinder is small, the actual amount of travel can
differ from a specified amount of travel.  Note, however, that such an error
is not accumulative.
If manual operation is performed in the cylindrical interpolation mode
with manual absolute on, an error can occur for the reason described
above.

Specified value�The actual amount
of travel 2�2πR

MOTION REV

MOTION REV

MOTION REV : The amount of travel per rotation of the rotation axis 
(Setting value of parameter No. 1260)

� : Workpiece radius

: Rounded to the least input increment

� �
2�2πR

In the cylindrical interpolation mode, an arc radius cannot be commanded
with word address I, J, or K.

If the cylindrical interpolation mode is started when cutter compensation
is already applied, circular interpolation is not correctly performed in the
cylindrical interpolation mode.

In the cylindrical interpolation mode, positioning operations (including
those that produce rapid traverse cycles such as G28, G53, G73, G74,
G76, G80 through G89) cannot be specified.  Before positioning can be
specified, the cylindrical interpolation mode must be cancelled.
Cylindrical interpolation cannot be performed in the positioning mode
(G00).

In the cylindrical interpolation mode, a workpiece coordinate system
(G92, G54 through G59) or local coordinate system (G52) cannot be
specified.

In the cylindrical interpolation mode, the cylindrical interpolation mode
cannot be reset.  The cylindrical interpolation mode must be cancelled
before the cylindrical interpolation mode can be reset.

A tool offset must be specified before the cylindrical interpolation mode
is set.  No offset can be changed in the cylindrical interpolation mode.

Cylindrical interpolation cannot be specified when the index table index
function is being used.

� Cylindrical interpolation
accuracy

Restrictions

� Arc radius command in
the cylindrical
interpolation mode

� Circular interpolation
and cutter compensation

� Positioning

� Coordinate system
setting

� ���
��
��� 
��������
�

���� ����
	

� ���� ������

� Index table indexing
function

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

44

2301901500

mm

deg

110

90

70

120

30 60 70 270

N05

N06

N07

N08 N09 N10

N11

N12 N13

360

60

Z

C

Example of a Cylindrical Interpolation Program

O0001 (CYLINDRICAL INTERPOLATION ); 
N01 G00 G90 Z100.0 C0 ; 
N02 G01 G91 G18 Z0 C0 ; 
N03 G107 C57299 ;
N04 G90 G01 G42 Z120.0 D01 F250 ; 
N05 C30.0 ; 
N06 G02 Z90.0 C60.0 R30.0 ; 
N07 G01 Z70.0 ; 
N08 G03 Z60.0 C70.0 R10.0 ; 
N09 G01 C150.0 ;
N10 G03 Z70.0 C190.0 R75.0 ;
N11 G01 Z110.0 C230.0 ; 
N12 G02 Z120.0 C270.0 R75.0 ; 
N13 G01 C360.0 ;
N14 G40 Z100.0 ;
N15 G107 C0 ;
N16 M30 ;

C

RZ

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

45

Straight threads with a constant lead can be cut.  The position coder
mounted on the spindle reads the spindle speed in real–time.  The read
spindle speed is converted to the feedrate per minute to feed the tool.

F : Long axis direction lead

G33 _ F_ ;��

Workpiece

Z

X

In general, thread cutting is repeated along the same tool path in rough
cutting through finish cutting for a screw.  Since thread cutting starts when
the position coder mounted on the spindle outputs a 1–turn signal,
threading is started at a fixed point and the tool path on the workpiece is
unchanged for repeated thread cutting.  Note that the spindle speed must
remain constant from rough cutting through finish cutting.  If not,
incorrect thread lead will occur.
In general, the lag of the servo system, etc. will produce somewhat
incorrect leads at the starting and ending points of a thread cut.  To
compensate for this, a threading length somewhat longer than required
should be specified.
Table 4.7 lists the ranges for specifying the thread lead.

Table 4.7  Ranges of lead sizes that can be specified

Increment system

IS–B IS–C

mm input 0.01 to 500.00 mm 0.01 to 500.00 mm

Inch input 0.0001 to 9.9999 inch 0.0001 to 9.9999 inch

4.7
CONSTANT LEAD
THREADING (G33)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

46

NOTE
1 The spindle speed is limited as follows :

1 � spindle speed � 

Spindle speed : rpm
Thread lead : mm or inch
Maximum feedrate : mm/min or inch/min ; maximum
command–specified feedrate for feed–per–minute mode or
maximum feedrate that is determined based on mechanical
restrictions including those related to motors, whichever is
smaller

2 Cutting feedrate override is not applied to the converted
feedrate in all machining process from rough cutting to finish
cutting. The feedrate is fixed at 100%

3 The converted feedrate is limited by the upper feedrate
specified.

4 Feed hold is disabled during threading. Pressing the feed
hold key during threading causes the machine to stop at the
end point of the next block after threading (that is, after the
G33 mode is terminated)

Thread lead
Maximum feedrate

Threading at a lead of 1.5mm
G33 Z10. F1.5;

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. INTERPOLATION FUNCTIONSPROGRAMMING

47

Linear interpolation can be commanded by specifying axial move
following the G31 command, like G01.  If an external skip signal is input
during the execution of this command, execution of the command is
interrupted and the next block is executed.
The skip function is used when the end of machining is not programmed
but specified with a signal from the machine, for example, in grinding. It
is used also for measuring the dimensions of a workpiece.

G31_: One–shot G code (If is effective only in the block in
which it is specified)

G31 _ ;��

The coordinate values when the skip signal is turned on can be used in a
custom macro because they are stored in the custom macro system
variable #5061 to #5064, as follows:

#5061X axis coordinate value
#5062Y axis coordinate value
#5063Z axis coordinate value
#50644th axis coordinate value

WARNING
Disable feedrate override, dry run, and automatic
acceleration/deceleration (These operations can be validated by
setting bit 3 of parameter No. 015 to 1.) when the feedrate per
minute is specified, allowing for an error in the position of the tool
when a skip signal is input. These functions are enabled when the
feedrate per rotation is specified.

NOTE
If G31 command is issued while cutter compensation C is applied,

an P/S alarm of No.035 is displayed. Cancel the cutter

compensation with the G40 command before the G31 command

is specified.

4.8
SKIP FUNCTION
(G31)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/084. INTERPOLATION FUNCTIONS

48

G31 G91X100.0 F100;
Y50.0;

Y50.0

50.0

100.0

Skip signal is input here

Actual motion

Motion without skip signal

Fig.4.8 (a)  The next block is an incremental command

G31 G90X200.00 F100;
Y100.0; Y100.0

X200.0

Skip signal is input here

Actual motion

Motion without skip signal

Fig.4.8 (b)  The next block is an absolute command for 1 axis

(300,100)

Y

X
100 200 300

100

G31 G90X200.0 F100;
X300.0 Y100.0;

Actual motion

Motion without skip signal

Skip signal is input here

Fig.4.8 (c)  The next block is an absolute command for 2 axes

Examples

� The next block to G31 is
an incremental
command

� The next block to G31 is
an absolute command
for 1 axis

� The next block to G31 is
an absolute command
for 2 axes

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

49

5 FEED FUNCTIONS

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

50

The feed functions control the feedrate of the tool.  The following two feed
functions are available:

1. Rapid traverse
When the positioning command (G00) is specified, the tool moves at
a rapid traverse feedrate set in the CNC (parameter No. 518 to 521).

2. Cutting feed
The tool moves at a programmed cutting feedrate.

Override can be applied to a rapid traverse rate or cutting feedrate using
the switch on the machine operator’s panel.

5.1
GENERAL

� Feed functions

� Override

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

51

To prevent a mechanical shock, acceleration/deceleration is automatically
applied when the tool starts and ends its movement (Fig. 5.1 (a)).

TC

FL

TJ

TR TR

TC

TJ

FRMAX

FJ

FC

TC

FC

TC

Rapid traverse rate :

Time

FR MAX : Rapid traverse rate

: Acceleration/deceleration
time constant for rapid
traverse rateFeed rate

TR

Time

Time

Time

FJ : Jog feed rate

TJ : Acceleration/deceleration time constant

FL : Deceleration stop feed for jog feed rate

FC : Cuting feedrate, dry run rate
TC : Acceleration/deceleration time constant for feedrate

FC : Cutting feedrate, dry run rate

Linear acceleration/deceleration (constant acceleration)

Jog feed : Exponential acceleration/deceleration (constant time constant)

Cutting feed, dry run : Linear acceleration/deceleration after interpolation (constant time constant)

Cutting feed, dry run : Exponential acceleration/deceleration (constant time constant)

(–––:  Acceleration/deceleration for half the speed)

TC : Acceleration/deceleration time constant for feedrate

Fig. 5.1 (a)  Automatic acceleration/deceleration (example)

� Automatic acceleration/
deceleration

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

52

If the direction of movement changes between specified blocks during
cutting feed, a rounded–corner path may result (Fig. 5.1 (b)).

Programmed path

Actual tool path

Y

0 X

Fig. 5.1 (b)   Example of tool path between two blocks

 In circular interpolation, a radial error occurs (Fig. 5.1(c)).

r

∆ r : Error
Programmed path

Y

X0

Actual tool path

Fig. 5.1 (c)   Example of radial error in circular interpolation

The rounded–corner path shown in Fig. 5.1(b) and the error shown in Fig.
5.1(c) depend on the feedrate.  So, the feedrate needs to be controlled for
the tool to move as programmed.

� Tool path in a cutting
feed

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

53

��

G00 _ ;��

G00 : G code (group 01) for positioning (rapid traverse)
_ ; Dimension word for the end point

The positioning command (G00) positions the tool by rapid traverse.  In
rapid traverse, the next block is executed after the specified feedrate
becomes 0 and the servo motor reaches a certain range set by the machine
tool builder (in–position check).  (In–position check can be disabled for
each block by setting bit 5 of parameter No. 020 to 1.)
A rapid traverse rate is set for each axis by parameter No. 518 to 521, so
no rapid traverse feedrate need be programmed.
The following overrides can be applied to a rapid traverse rate with the
switch on the machine operator’s panel:F0, 25, 50, 100%
F0:  Allows a fixed feedrate to be set for each axis by parameter No. 533.
For detailed information, refer to the appropriate manual of the machine
tool builder.

Increment system

IS–B IS–C

Metric output 30 to 100,000 mm/min
30 to 100,000 deg/min

30 to 24,000 mm/min
30 to 24,000 deg/min

Inch output 3.0 to 4,000.0 inch/min
3.0 to 100,000 deg/min

3.0 to 960.0 inch/min
3.0 to 24,000 deg/min

5.2
RAPID TRAVERSE

Format

Explanations

� Command value range of
rapid traverse rate

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

54

Feedrate of linear interpolation (G01), circular interpolation (G02, G03),
etc. are commanded with numbers after the F code.  
In cutting feed, the next block is executed so that the feedrate change from
the previous block is minimized.
Three modes of specification are available:

1. Feed per minute (G94)
After F, specify the amount of feed of the tool per minute.

2. Feed per revolution (G95)
After F, specify the amount of feed of the tool per spindle revolution.

3. F1–digit feed
Specify a desired one–digit number after F.  Then, the feedrate set with
the CNC for that number is set.

Feed per minute
G94 ; G code (group 05) for feed per minute
F_ ; Feedrate command (mm/min or inch/min)

Feed per revolution
G95 ; G code (group 05) for feed per revolution
F_ ; Feedrate command (mm/rev or inch/rev)

F1–digit feed
Fn ;
  n : Number from 1 to 9

Cutting feed is controlled so that the tangential feedrate is always set at
a specified feedrate.

X

End point
Starting 
point

X

FF

Center End point
Start
point

Linear interpolation Circular interpolation

Y Y

Fig. 5.3 (a)  Tangential feedrate (F)

5.3
CUTTING FEED

Format

Explanations

� Tangential speed
constant control

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

55

After specifying G94 (in the feed per minute mode), the amount of feed
of the tool per minute is to be directly specified by setting a number after
F.  G94 is a modal code.  Once a G94 is specified, it is valid until G95 (feed
per revolution) is specified.  At power–on, the feed per minute mode is
set.
An override from 0% to 150% (in 10% steps) can be applied to feed per
minute with the switch on the machine operator’s panel.  For detailed
information, see the appropriate manual of the machine tool builder.

Workpiece

Table

Tool

Feed amount per minute
(mm/min or inch/min)

Fig. 5.3 (b)   Feed per minute

NOTE
No override can be used for some commands such as for
threading.

<Command value range of feed per minute>

Increment system

IS–B IS–C

Metric input 1 to 100,000 mm/min
1 to 100,000 deg/min

1 to 12,000 mm/min
1 to 12,000 deg/min

Inch input 0.01 to 4,000.0 inch/min
0.01 to 6,000.0 deg/min

0.01 to 480.0 inch/min
0.01 to 600.0 deg/min

<Feedrate command value with a decimal fraction for feed per minute>
When a value with a decimal fraction is specified in a feedrate command
for feed per minute, the value is valid within the following range.  To
specify a value that falls outside this range, specify an integer.

Increment system

IS–B IS–C

Metric input 0.001 to 99,999.999 mm/min
0.001 to 99,999.999 deg/min

0.001 to 12,000.000 mm/min
0.001 to 12,000.000 deg/min

Inch input 0.00001 to 999.99999 
inch/min

0.00001 to 999.99999 
deg/min

0.00001 to 480.00000 
inch/min

0.00001 to 600.00000 
deg/min

� Feed per minute (G94)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

56

After specifying G95 (in the feed per revolution mode), the amount of
feed of the tool per spindle revolution is to be directly specified by setting
a number after F.  G95 is a modal code.  Once a G95 is specified, it is valid
until G94 (feed per minute) is specified. 
An override from 0% to 150% (in 10% steps) can be applied to feed per
revolution with the switch on the machine operator’s panel.  For detailed
information, see the appropriate manual of the machine tool builder.

Feed amount per spindle revolution
(mm/rev or inch/rev)

F

Fig. 5.3 (c)   Feed per revolution

<Command value range of feed per revolution>

Increment system

IS–B IS–C

Metric input 0.01 to 500.00 mm/rev 0.01 to 500.00 mm/rev

Inch input 0.0001 to 9.9999 inch/rev 0.0001 to 9.9999 inch/rev

Although a value in the above range can be specified in a feedrate
command for feed per rotation, the feedrate is actually clamped at the
maximum cutting feedrate.

NOTE
When the speed of the spindle is low, feedrate fluctuation
may occur. The slower the spindle rotates, the more
frequently feedrate fluctuation occurs.

� Feed per revolution
(G95)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

57

When a one–digit number from 1 to 9 is specified after F, the feedrate set
for that number in a parameter (Nos. 788 to 796) is used.  When F0 is
specified, the rapid traverse rate is applied.
The feedrate corresponding to the number currently selected can be
increased or decreased by turning on the switch for changing F1–digit
feedrate on the machine operator’s panel, then by rotating the manual
pulse generator.
The increment/decrement, ∆F, in feedrate per scale of the manual pulse
generator is as follows:

F � Fmax
100X

∆

Fmax : feedrate upper limit for F1–F4 set by parameter 583, or
feedrate upper limit for F5–F9 set by parameter 584

X : any value of 1–127 set by parameter 216
The feedrate set or altered is kept even while the power is off.  The current
feed rate is displayed on the CRT screen.

A common upper limit can be set on the cutting feedrate along each axis
with parameter No. 527.  If an actual cutting feedrate (with an override
applied) exceeds a specified upper limit, it is clamped to the upper limit.

NOTE
An upper limit is set in mm/min or inch/min. CNC calculation
may involve a feedrate error of �2% with respect to a
specified value. However, this is not true for
acceleration/deceleration. To be more specific, this error is
calculated with respect to a measurement on the time the
tool takes to move 500 mm or more during the steady state:

� One–digit F code feed

� Cutting feedrate clamp

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

58

Cutting feedrate can be controlled, as indicated in Table 5.4.

Table 5.4  Cutting feedrate control

Function name G code Validity of G code Description

Exact stop G09
This function is valid for specified
blocks only.

The tool is decelerated at the end point of
a block, then an in–position check is made.
Then the next block is executed.

Exact stop G61
Once specified, this function is valid
until G62, G63, or G64 is specified.

The tool is decelerated at the end point of
a block, then an in–position check is made.
Then the next block is executed.

Cutting mode G64
Once specified, this function is valid
until G61, G62, or G63 is specified.

The tool is not decelerated at the end point
of a block, but the next block is executed.

Tapping mode G63

Once specified, this function is valid
until G61, G62, or G64 is specified.

The tool is not decelerated at the end point
of a block, but the next block is executed.
When G63 is specified, feedrate override
and feed hold are invalid.

Automatic
corner 
override

Automatic override
for inner corners

G62

Once specified, this function is valid
until G61, G63, or G64 is specified.

When the tool moves along an inner 
corner during cutter compensation, over-
ride is applied to the cutting feedrate to
suppress the amount of cutting per unit of
time so that a good surface finish can be
produced.

Internal circular
cutting feedrate
change

–
This function is valid in the cutter
compensation mode, regardless of
the G code.

The internal circular cutting feedrate is
changed.

NOTE
1 The purpose of in–position check is to check that the servo

motor has reached within a specified range (specified with
a parameter by the machine tool builder).  In–position check
can be disabled by setting bit 5 of parameter No. 020 to 1.

2 Inner corner angle �: 2°< � � � � 178°
(� is a set value)

�

Workpiece

Tool

5.4
CUTTING FEEDRATE
CONTROL

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

59

Exact stop
G61 ;

Cutting mode G64 ;

Tapping mode G63 ;

Automatic corner override G62 ;

G09 _ ;��

The inter–block paths followed by the tool in the exact stop mode, cutting
mode, and tapping mode are different (Fig. 5.4.1).

0

Y

�

� Position check

Tool path in the exact stop mode

Tool path in the cutting mode or
tapping mode

X

Fig. 5.4.1  Example of tool paths from block � to block �

CAUTION
The cutting mode (G64 mode) is set at power–on or system
clear.

Format

5.4.1
Exact Stop (G09, G61) 
Cutting Mode (G64) 
Tapping Mode (G63)

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

60

When G62 is specified, and the tool path with cutter compensation
applied forms an inner corner, the feedrate is automatically overridden at
both ends of the corner. 
There are four types of inner corners (Fig. 5.4.2 (a)).
2° � � � �p � 178° in Fig. 5.4.2 (a)
θp is a value set with parameter No. 215. When θ is approximately equal
to θp, the inner corner is determined with an error of 0.001° or less.

: Cutter center path

: Tool

: Programmed path

�

1. Straight line–straight line 2. Straight line–arc

3. Arc–straight line 4. Arc–arc

�

��

Fig. 5.4.2 (a)   Inner corner

WARNING
When the block before a corner is a start–up block, or the
block after a corner includes G41 or G42, the inner corner
is not overridden. The inner corner override function is
disabled when the offset value is 0.

5.4.2
Automatic Override for
Inner Corners (G62)

Explanations

� Override condition

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

61

When a corner is determined to be an inner corner, the feedrate is
overridden before and after the inner corner. The distances Ls and Le,
where the inner corner is overridden, are distances from points on the
cutter center path to the corner (Fig. 5.4.2 (b), Fig. 5.4.2 (c), Fig. 5.4.2
(d)). Ls and Le are set with parameter Nos. 580 and 581.

Programmed path

Le
a b

Ls

Cutter center path

The feedrate is overridden from point a to point b.

Fig. 5.4.2 (b)   Override range (Straight line to straight line)

When a programmed path consists of two arcs, the feedrate is overridden
if the start and end points are in the same quadrant or in adjacent quadrants
(Fig. 5.4.2 (c)).

a

Le

Ls

b

Programmed path

The feedrate is overridden from point a to b.

Cutter center path

Fig. 5.4.2 (c)   Override range (Arc to arc)

Regarding program � of an arc, the feedrate is overridden from point a
to point b and from point c to point d (Fig. 5.4.2 (d)).

c

d �

LsLe

b

Ls Le

�

Programmed path

Cutter center path
Tool

Fig. 5.4.2 (d)   Override range (Straight line to arc, arc to straight line)

Override range

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

62

An override value is set with parameter No. 214.  An override value is
valid even for dry run and F1–digit specification.
In the feed per minute mode, the actual feedrate is as follows:

F × (automatic override for inner corners) × (feedrate override)

For internally offset circular cutting, the feedrate on a programmed path
is set to a specified feedrate (F) by specifying the circular cutting feedrate
with respect to F, as indicated below (Fig. 5.4.3).  This  function is valid
in the cutter compensation mode, regardless of the G62 code.

F � Rc
Rp

Rc : Cutter center path radius
Rp : Programmed radius

It is also valid for the dry run and the one–digit F command.

Rc

Rp

Programmed path

Cutter center
path

Fig. 5.4.3   Internal circular cutting feedrate change

If Rc is much smaller than Rp, Rc/Rp  0; the  tool stops. A minimum
deceleration ratio (MDR) is to be specified with parameter No. 213. When
Rc/Rp�MDR, the  feedrate of the tool is (F�MDR).

NOTE
When internal circular cutting must be performed together
with automatic override for inner corners, the feedrate of the
tool is as follows:

   (automatic override for the inner corners)
� (feedrate override)

F � Rc
Rp

�

Override value

5.4.3
Internal Circular
Cutting Feedrate
Change

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

63

Dwell G04 X_ ;  or G04 P_ ;
 X_ : Specify a time (decimal point permitted)
 P_ : Specify a time (decimal point not permitted)

By specifying a dwell, the execution of the next block is delayed by the
specified time. In addition, a dwell can be specified to make an exact
check in the cutting mode (G62 mode).
When neither P nor X is specified, exact stop is performed.

Table 5.5 (a)  Command value range of the dwell time
(Command by X)

Increment system Command value range Dwell time unit

IS–B 0.001 to 99999.999
s

IS–C 0.0001 to 9999.9999
s

Table 5.5 (b)  Command value range of the dwell time
(Command by P)

Increment system Command value range Dwell time unit

IS–B 1 to 99999999 0.001 s

IS–C 1 to 99999999 0.0001 s

5.5
DWELL (G04)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

64

By using linear acceleration/deceleration before interpolation, linear
acceleration/deceleration can be applied to a specified cutting feedrate
before interpolation.  With this function, the machining figure error
resulting from delay in the acceleration/deceleration can be reduced.

This function is optional.  It should be used in combination with two other
functions: the block overlap function that suppresses feedrate variations
between adjacent blocks, and the corner deceleration function that
suppresses abrupt feedrate variations at a corner.

NC 
command

Movement data

Linear interpolation 
Circular interpolation

Servo control

Servo control

Servo motor

Servo motor
Feedrate

Linear acceleration/
deceleration before

interpolation

F

Feedrate
command

Feedrate

F

Time

F : Specified feedrate

Fig. 5.6 (a)

5.6
CUTTING FEED
LINEAR
ACCELERATION/
DECELERATION
BEFORE
INTERPOLATION

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

65

With linear acceleration/deceleration before interpolation, a specified
feedrate that takes a feed–per–minute command (G94) override for linear
or circular interpolation (G01, G02, G03) into consideration can be
controlled such that the feedrate changes linearly.  This means that
acceleration/deceleration control may not be applied normally if the
feedrate is changed during machining by other than programmed
commands.

To control variations in the programmed feedrate, the user can select
either of two control methods by setting parameters.

� Type A

This type of control starts acceleration/deceleration at that block
where the specified feedrate is changed.

� Type B

For deceleration: Deceleration starts at the previous block, such that
the deceleration ends at the start point of the block
where a feedrate command change is made.

For acceleration: Acceleration starts at the start point of the block
where a feedrate command change is made.

Feedrate

F1

F2
Type B

N1 N2 Time

Type A

(For deceleration)

Specified feedrate

Feedrate after linear accel-
eration/deceleration before
interpolation

Feedrate

F2

F1

N1 N2 Time

(For acceleration) Specified feedrate

Feedrate after linear accel-
eration/deceleration before
interpolation

Fig. 5.6 (b)

WARNING
1 If an overtravel alarm is issued during linear acceleration/deceleration before interpolation, the

tool decelerates and stops after the issue of the alarm, thus resulting in an overrun by an
amount equal to the deceleration distance.

2 In inch input mode, simultaneous movement on two or more axes, including a rotation axis,
cannot be specified during linear acceleration/deceleration before interpolation.

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

66

NOTE
1 The following cannot be specified during linear acceleration/deceleration before interpolation:

�  Control along the C–axis normal
�  Cylindrical interpolation 
�  Polar coordinate specification
�  F 1–digit feed/threading/synchronous feed 
�  Index table indexing
�  Rigid tapping
�  High–speed cycle machining/high–speed remote buffer
�  Handle interrupt
�  Program restart 
�  Simple synchronous control
�  Interrupt–type custom macro
�  Automatic tool length measurement
�  Small–diameter peck drilling cycle

2 If any of the operations listed below is performed during operation, acceleration/deceleration
will not be performed correctly.  This means that the operation of a block may end before the
completion of deceleration, or that the movement of a block may not have been completed
when deceleration is completed.
� Override change
� Turning the dry run function on or off
� Enabling external deceleration
� Operation in a feed mode in which no feedrate is specified by the CNC program

3 Linear acceleration/deceleration before interpolation is valid for the X–axis, Y–axis, Z–axis, and
4th axis.  If there is a block containing no move command along the X–axis, Y–axis, Z–axis,
and 4th axis during linear acceleration/deceleration before interpolation, the tool decelerates
and temporarily stops in the previous block.

4 If a one–shot G code is specified during linear acceleration/deceleration before interpolation,
the tool decelerates and temporarily stops in the previous block.

5 If a block containing a move command also specifies an M/S/T code during linear
acceleration/deceleration before interpolation, the tool decelerates and temporarily stops in the
block.

6 Even during linear acceleration/deceleration before interpolation, acceleration/deceleration is
not applied to a G31 (skip function) block.

7 Even if the Z–axis command cancel signal (ZNG) is turned on or off during linear
acceleration/deceleration before interpolation, Z–axis acceleration/deceleration control is not
applied.

8 During linear acceleration/deceleration before interpolation, the automatic corner override
function can be used only to make an inner circular cutting feedrate change.

9 Even during linear acceleration/deceleration before interpolation, acceleration/deceleration
after interpolation is enabled.  So, to use acceleration/deceleration before interpolation only,
set the time constant for acceleration/deceleration after interpolation to 0.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

67

With this function, the remaining pulses output upon the completion of
interpolation of a block are output together with the interpolation pulses
of the next block to suppress the feedrate variations that can occur
between the two blocks.  This function is optional.

Interpolation
pulses

Block 1 Block 2

Time

When the block overlap function is disabled

Interpolation
pulses

Block 1 Block 2

Time t

When the block overlap function is enabled

Fig. 5.7

This function is enabled when G01, G02, and G03 blocks occur
successively in G64 mode.

NOTE
1 If blocks specifying small amounts of movement occur in

succession, the overlap function may not be enabled.
2 If the radius of the start point of a circular cutting command

does not match the radius of the end point of the command,
the overlap function will not be applied normally.

5.7
CUTTING FEED
BLOCK OVERLAP

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

68

In corner machining, this function controls the feedrate by decelerating
the tool at a corner according to the corner angle between the blocks or
according to the feedrate difference along each axis to improve the
machining precision (acceleration/deceleration after interpolation) or to
reduce the mechanical stress and strain (acceleration/deceleration before
interpolation) at the corner.  This function is optional.

This function is enabled when G64 mode (machining mode) specifying
a cutting feed time constant is set, a cutting–feed block (block A) is
followed by another cutting–feed block (block B), and deceleration is
performed in block A.  Two corner deceleration control methods are
supported.  One method is based on the corner angle between two blocks,
while the other is based on the feedrate difference along each axis.  The
user can select either of the two methods by specifying bit 3 of parameter
No. 395.

(1)Specification

When the angle between block A and block B (XY plane) is smaller
than that specified in parameter No. 865, this function reduces the
feedrate at the corner.  This means that the execution of block B is
suspended until the feedrates after acceleration/deceleration along the
X–axis and Y–axis become smaller than the value specified in
parameter No. 482.

The flowchart for this control mode is shown below.

START

Is the corner angle smaller
than that specified in
parameter No. 865?

Are the feedrates after
acceleration/deceleration
along the X–axis and Y–
axis smaller than the val-
ue specified in parameter

No. 482?

Yes

Block B is executed to-
gether with block A decel-

eration.

Yes

END

No

No

Further reduces the
feedrate in block A.

5.8
AUTOMATIC
CORNER
DECELERATION

Explanations

� Corner deceleration
based on the corner
angle (with bit 3 of
parameter No. 
395 set to 0)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

69

When the corner angle is smaller than that specified in the parameter, the
relationship between the feedrate and time will be as shown below.  The
movement of block A equivalent to the hatched area remains at time t.
The execution of block B is started, however, because the feedrate after
acceleration/deceleration is now smaller than the parameter–set value.

ÅÅÅÅ
ÅÅÅÅ
ÅÅÅÅ

Feedrate after acceleration/deceleration

Block A Block B

Parameter–set 
value

Timet

Fig. 5.8 (a)

(2)When linear acceleration/deceleration before interpolation is enabled

When the angle between block A and block B (XY plane) is smaller
than that specified in parameter No. 865, and the feedrates specified
for block A and block B are larger than the value specified in parameter
No. 482, this function reduces the feedrate at the corner to the
parameter–set feedrate at the end point of block A, then increases the
feedrate to the specified feedrate when block B starts.  In this case,
acceleration/deceleration is performed according to the parameter
setting for linear acceleration/deceleration before interpolation.

Feedrate

Block A Block B

Time

Parameter–set 
feedrate 
(parameter 
No. 482)

Fig. 5.8 (b)ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

70

NOTE
1 Comparison between a machining angle and parameter–set angle (parameter No. 865) is

made only for the XY plane.  Comparison between a machining feedrate and parameter–set
feedrate (parameter No. 482) is made only for the X–axis and Y–axis.  So, when movement
is made along three or more axes at the same time, only the X–axis and Y–axis are considered.

2 Corner roundness is determined by the angle and feedrate set in parameter Nos. 865 and 482.
To ensure that a sharp corner is obtained at all times, set a feedrate of 0 and an angle of 180
degrees in the respective parameters.

3 When G09 (exact stop) is specified, exact stop operation is performed, regardless of the angle
and feedrate set in the parameters.

4 This function cannot be used with the single step and dry run functions.
5 The angle (θ) between block A and block B is defined as shown below.

� Between two straight lines

� Between a straight line and an arc:  Angle subtended by a straight line and the tangent to
an arc

� Between two arcs;  Angle subtended by the tangent to one arc and the tangent to the other
arc

A(G01)

B(G01)
θ

A(G02)

B(G01)
θ

θ

A(G01)
B(G03)

A(G02)

B(G02)

θ

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

71

(1)Specification

When the difference between the specified feedrate at the end point of
block A and the specified feedrate at the start point of block B along
each axis is larger than the value specified in parameter No. 483, this
function reduces the feedrate at the corner.  This means that the
execution of block B is suspended until the feedrates after
acceleration/deceleration along the X–axis, Y–axis, Z–axis, and 4th
axis become smaller than the value specified in parameter No. 482.

The flowchart for this control mode is shown below.

START

Is the feedrate difference be-
tween blocks along each axis
larger than the value specified

in parameter No. 483?

Are the feedrates after accel-
eration/deceleration along the
X–axis, Y–axis, Z–axis, and

4th axis smaller than the value
specified in parameter No.

482?

Yes

Block B is executed together
with block A deceleration.

Yes

END

No

No

Further reduces the
feedrate in block A.

When the feedrate difference between blocks along each axis is larger than
the value specified in parameter No. 483, the relationship between the
feedrate and time will be as shown below.  The movement of block A
indicated by the hatched area remains at time t.  However, the execution
of block B is started because the feedrate after acceleration/deceleration
has become smaller than the value set in parameter No. 482.

Parameter–set 
value

ÅÅÅÅ
ÅÅÅÅ
ÅÅÅÅ

Feedrate after acceleration/deceleration

Block A Block B

Timet

Fig. 5.8 (c)

� Corner deceleration
based on feedrate
difference between
blocks along each axis
(with bit 3 of parameter
No. 395 set to 1)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

72

(2)When linear acceleration/deceleration before interpolation is enabled

When the feedrate difference between block A and block B along each
axis is larger than the value set in parameter No. 483, the feedrate is
reduced in block A to the corner feedrate calculated from the feedrate
difference along each axis.

Let the feedrate be F.  Compare the feedrate change along each axis
(Vc[X], Vc[Y], ...) with the value, Vmax, specified in parameter No.
483.  When the change in the feedrate along at least one axis exceeds
Vmax, calculate R as follows: 

R =
Vc

Vmax

Find the maximum value for R among the calculated values for the
axes.  Let this value be Rmax.  Then, the corner feedrate can be
obtained as described below, and the feedrate reduced to the obtained
corner feedrate. 

Fc = F�
1

Rmax

Example)

N1 G01 G91 X80. Y20. F3000 ;
N2 X20. Y80. ;

N2

N1

When this movement is specified, the feedrate along each axis will be
as shown in the next figure.  From the figure, it can be seen that the
changes in the feedrate along the X–axis and Y–axis (Vc[X] and
Vc[Y]) exceed Vmax.  So, the feedrate change along each axis can be
reduced to Vmax or less by using the following values:

Rmax = Vc [X(Y)]
Vmax

Corner feedrate = F� 1
Rmaxww

w.
cn

cc
en

ter
.co

m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

73

Vmax

Vc [X] Vmax

Vc [Y] Vmax

1
Rmax

F*

F

N1 N2 t

When the feedrate is not
reduced at the corner

When the feedrate is 
reduced at the corner

Feedrate along X–axis

Feedrate along Y–axis

Feedrate along tangent

NOTE
1 A feedrate difference comparison between machining

blocks is made for each of the X–axis, Y–axis, Z–axis, and
4th axis.  Even during dry run operation or external
deceleration, a feedrate difference check is made by coding
an F command in the program.

2 When G09 (exact stop) is specified, exact stop operation is
performed, regardless of the parameter settings.

3 This function cannot be used with a command based on
feed per rotation, the F 1–digit command, rigid tapping
command, or single block operation.

4 If an override change is applied during operation, the
feedrate difference cannot be checked correctly.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

74

Particularly when high–speed circular cutting is performed using circular
interpolation, the actual tool path incurs a radial error with respect to the
specified arc.  When a feedrate specified for an arc with a programmed
radius can cause a radial error that exceeds the allowable error, this
function automatically clamps the circular cutting feedrate.

This function is optional.

An approximate arc radius error can be obtained using the following
expression:

Y

X

r

�r : Error
Specified
path
Actual path

�r : Maximum radius error (mm)

v : Feedrate (mm/sec)

r : Arc radius (mm)

T1 : Time constant for exponential 
acceleration/deceleration in 
cutting feed (sec)

T2 : Time constant for the servo 
motor (sec)

�r =      (T12+T22) (Expression 1). . . . . . . . . . . 
1

2

v2

r

Let V be a maximum allowable feedrate for the arc radius R.  Then, the
arc radius error �R is given by:

�R =       (T12+T22) (Expression 2). . . . . . . . . . . 
1

2

V2

R

On the other hand, from Expressions 1 and 2, the maximum allowable
feedrate v for maintaining the allowable error �R for the arc radius r is
found as follows:

V2          =   (T12+T22)    = (T12+T22)
1

2

v2

r R2

1

Accordingly,

v = V (Expression 3). . . . . . . . . . . r

R

By setting an arc radius (R) and the corresponding maximum allowable
feedrate (V) in the parameters, the maximum allowable feedrate (v) for
a programmed radius (r) can be found from Expression 3.  If the specified
feedrate exceeds the feedrate v, this function automatically clamps the
feedrate to v.  The maximum allowable feedrate (v), found from
Expression 3, decreases as a specified arc radius decreases.  When an
excessively low feedrate is undesirable, parameter No. 496 can be used
to set a lower limit on the circular cutting feedrate clamping.

If a specified feedrate is within the maximum allowable feedrate (v) found
using Expression 3, circular cutting is performed at the specified feedrate.

5.9
FEEDRATE CLAMP
BASED ON ARC
RADIUS

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. FEED FUNCTIONSPROGRAMMING

75

NOTE
1 This function is also usable with linear acceleration/deceleration before interpolation.  In this

case, no arc radius error is caused by acceleration/deceleration before interpolation.  When the
time constant for acceleration/deceleration after interpolation is set to 0, an approximate arc
radius error can be obtained using Expression 4:

2 This function is also usable with linear acceleration/deceleration after interpolation for cutting
feed.  In this case, an approximate circular cutting error can be obtained from Expression 5:

where
∆ r : Maximum radius error (mm)

v : Feedrate (mm/sec)
r : Arc radius (mm)
T1 : Time constant for linear acceleration/deceleration in cutting feed (sec)
T2 : Time constant for the servo motor (sec)

3 Expressions 1, 4, and 5 can be used only to find approximate values based on the NC theory.
They do not determine actual machining errors.  Let ∆rall be the actual machining error.  Then,
the following can be written:

This function controls or suppresses only those errors caused by the first term on the right–hand
side of Expression 6, that is, errors caused by the time constant for acceleration/deceleration
(T1) and that for the servo motor (T2).  This function has no effect on errors caused by the
machine.  Note also that Expressions 1, 4, and 5 can determine only approximate values.  As
the arc radius decreases, the approximation precision degrades; in this case, even if the
feedrate is clamped to the maximum allowable feedrate (v) obtained using Expression 3, the
error may not be suppressed to within the allowable range.

� r =           T22× (Expression 4). . . . . . . . . . . . . . . . . . . . . . . . . . . 
1

2

V2

r

� r = (          T12+ T22)      (Expression 5). . . . . . . . . . . . . . . . . . . . . . . . . . 
1

24

1

2

V2

r

� rall = � r NC + � r machine (Expression 6). . . . . . . . . . . . . . . . . . . . . . . . . . . 

Error caused by the machine
Error caused by the acceleration/deceleration time
constant (T1) and servo motor time constant (T2).

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/085. FEED FUNCTIONS

76

This function can apply smooth acceleration/deceleration to a rapid
traverse rate to reduce the mechanical stress and strain caused by
acceleration/deceleration variations when the feedrate changes.  Thus, a
smaller time constant can be set, compared with linear
acceleration/deceleration, to reduce the time required for
acceleration/deceleration.  Feed–forward control can be enabled for a
rapid traverse command.
This function is optional.

<Rapid traverse linear acceleration/deceleration>

Feedrate

0

Acceleration

0
Time

Time

Feedrate

0

Acceleration

0
Time

Time

<Rapid traverse bell–shaped acceleration/deceleration>

Fig. 5.10 (a)

Rapid traverse bell–shaped acceleration/deceleration is enabled by
setting two time constants (T1, T2) (parameter No. 522 to No. 525, and
parameter No. 952 to No. 955).  In this case, the acceleration/deceleration
time will be as shown below.

Total time = T1+T2 (1). . . . . . . . . . . . . . . . . . . 

Time for straight section = | T1–T2  | (2). . . . . . . . . . . . 

Time for curved section = MIN(T1, T2) (3). . . . . . . . . . 

(3) (2) (3)

(1)

Time

Feedrate

Rapid traverse

 

Fig. 5.10 (b)

NOTE
Rapid traverse bell–shaped acceleration/deceleration
cannot be used with the 5th/6th axis and 7th/8th axis.

5.10
RAPID TRAVERSE
BELL–SHAPED
ACCELERATION/
DECELERATION

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 6. REFERENCE POSITIONPROGRAMMING

77

6 REFERENCE POSITION

The reference position is a fixed position on a machine tool to which the
tool can easily be moved by the reference position return function.
For example, the reference position is used as a position at which tools
are automatically changed.  Up to four reference positions can be
specified by setting coordinates in the machine coordinate system in
parameters.  The first reference position must be the machine zero point.

Machine zero point (1st reference position)

3rd reference position

2nd reference position

4th reference 
position

Y

X

Fig. 6 (a)  Machine zero point and reference positions

General

� Reference position

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/086. REFERENCE POSITION

78

Tools are automatically moved to the reference position via an
intermediate position along a specified axis.  Or, tools are automatically
moved from the reference position to a specified position via an
intermediate position along a specified axis.  When reference position
return is completed, the lamp for indicating the completion of return goes
on.

A (Start position for 
reference position return)

B (Intermediate 
position)

C (Destination of return from the
reference position)

R (Reference position)
Reference position return A→B→R
Return from the reference position R→B→C

Fig. 6 (b)  Reference position return and return form the reference position

The reference position return check (G27) is the function which checks
whether the tool has correctly returned to the reference position as
specified in the program.  If the tool has correctly returned to the reference
position along a specified axis, the lamp for the axis goes on.

��

_: Command specifying the intermediate position 
(Absolute/incremental command)

G28

��

_ ; Reference position return

G30 P2 _ ; 2nd reference position return��

G30 P3 _ ; 3rd reference position return��

G30 P4 _ ; 4th reference position return��

(P2 can 
be omitted.)

_: Command specifying the destination of return from reference
position  (Absolute/incremental command)

G29

��

_ ;��

_: Command specifying the reference position 
(Absolute/incremental command)

G27

��

_ ;��

� Reference position
return and movement
from the reference
position

� Reference position
return check

Format

� Reference position
return

� Return from reference
position

� Reference  position
return check

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 6. REFERENCE POSITIONPROGRAMMING

79

Positioning to the intermediate or reference positions are performed at the
rapid traverse rate of each axis.
Therefore, for safety, the cutter compensation, and tool length
compensation should be cancelled before executing this command.
The coordinates for the intermediate position are stored in the CNC only
for the axes for which a value is specified in a G28 block.  For the other
axes, the previously specified coordinates are used. 
Example N1  G28  X40.0  ; Intermediate position (X40.0) 

N2  G28  Y60.0  ; Intermediate position (X40.0,  Y60.0)

In a system without an absolute–position detector, the first, third, and
fourth reference position return functions can be used only after the
reference position return (G28) or manual reference position return (see
III–3.1) is made.  The G30 command is generally used when the automatic
tool changer (ATC) position differs from the reference position.

In general, it is commanded immediately following the G28 command or
G30.  For incremental programming, the command value specifies the
incremental value from the intermediate point.
Positioning to the intermediate or reference points are performed at the
rapid traverse rate of each axis.
When the workpiece coordinate system is changed after the tool reaches
the  reference position through the intermediate point by the G28
command, the intermediate point also shifts to a new coordinate system.
If G29 is then commanded, the tool moves to to the commanded position
through the intermediate point which has been shifted to the new
coordinate system.
The same operations are performed also for G30 commands.

G27 command positions the tool at rapid traverse rate.  If the tool reaches
the reference position, the reference position return lamp lights up. 
However, if the position reached by the tool is not the reference position,
an alarm (No. 092) is displayed.

The lamp for indicating the completion of return does not go on when the
machine lock is turned on, even when the tool has automatically returned
to the reference position.  In this case, it is not checked whether the tool
has returned to the reference position even when a G27 command is
specified.

When the G28 command is specified when manual return to the reference
position has not been performed after the power has been turned on, the
movement from the intermediate point is the same as in manual return to
the reference position.
In this case, the tool moves in the direction for reference position return
specified in parameter ( No. 003 #0 to #3).  Therefore the specified
intermediate position must be a position to which reference position
return is possible.

�
�����	����

� Reference position
return (G28)

� 2nd, 3rd, and 4th
reference position return
(G30)

� Return from the
reference position (G29)

� Reference position
return check (G27)

Restrictions

� Status the machine lock
being turned on

� First return to the
reference position after
the power has been
turned on (without an
absolute position
detector)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/086. REFERENCE POSITION

80

In an offset mode, the position to be reached by the tool with the G27
command is the position obtained by adding the offset value.  Therefore,
if the position with the offset value added is not the reference position, the
lamp does not light up, but an alarm is displayed instead.  Usually, cancel
offsets before G27 is commanded.

When the machine tool system is an inch system with metric input, the
reference position return lamp may also light up even if the programmed
position is shifted from the reference position by 1µ.  This occurs because
the least input increment of the machine tool system is smaller than its
least command increment.

See III–3.1.

G28G90X1000.0Y500.0 ; (Programs movement  from A to B)
 T1111 ; (Changing the tool at the reference position)
G29X1300.0Y200.0 ; (Programs movement from B to C)

A

B

C

R
Reference 
position

200

300

500

200 1000 1300

Y

X

The tool is changed at the reference position

Fig. 6 (c)  Reference position return and return from the reference position

� Reference position
return check in an offset
mode

� Lighting the lamp when
the programmed position
does not coincide with
the reference position

���������

� Manual reference
position return

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 7. COORDINATE SYSTEMPROGRAMMING

81

7 COORDINATE SYSTEM
By teaching the CNC a desired tool position, the tool can be moved to the
position.  Such a tool position is represented by coordinates in a
coordinate system.  Coordinates are specified using program axes.
When three program axes, the X–axis, Y–axis, and Z–axis, are used,
coordinates are specified as follows:

X_Y_Z_
This command is referred to as a dimension word.

Z

Y

X

40.0

50.0

25.0

Fig. 7  Tool position specified by X40.0Y50.0Z25.0

Coordinates are specified in one of following three coordinate systems:
(1)Machine coordinate system
(2)Workpiece coordinate system
(3)Local coordinate system

The number of the axes of a coordinate system varies from one machine
to another.  So, in this manual, a dimension word is represented as IP_.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/087. COORDINATE SYSTEM

82

The point that is specific to a machine and serves as the reference of the
machine is referred to as the machine zero point.  A machine tool builder
sets a machine zero point for each machine.  The machine zero point
matches the first reference position.
A coordinate system with a machine zero point set as its origin is referred
to as a machine coordinate system.
A machine coordinate system is set by performing manual reference
position return after power–on (see III–3.1).  A machine coordinate
system, once set, remains unchanged until the power is turned off.

G53 _ ;��

�� _ ; Absolute dimension word

When a command is specified based on a machine coordinate system, the
tool moves by rapid traverse.  G53, which is used to select a machine
coordinate system, is a one–shot G code; that is, it is valid only in the
block in which it is specified.  The absolute command G90 is valid, but
the incremental command G91 is ignored.  When the tool is to be moved
to a machine–specific position such as a tool change position, program the
movement in a machine coordinate system based on G53.

When the G53 command is specified, cancel the cutter compensation, tool
length offset, and tool offset.

Since the machine coordinate system must be set before the G53
command is specified, at least one manual reference position return or
automatic reference position return by the G28 command must be
performed after the power is turned on.  This is not necessary when an
absolute–position detector is attached.
The option for the workpiece coordinate system (G54 to G59) is required.

7.1
MACHINE
COORDINATE
SYSTEM

Format

Explanations

� Selecting a machine
coordinate system (G53)

Restrictions

� Cancel of the
compensation function

� G53 specification
immediately after
power–on

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 7. COORDINATE SYSTEMPROGRAMMING

83

A coordinate system used for machining a workpiece is referred to as a
workpiece coordinate system.  A workpiece coordinate system is to be set
with the NC beforehand (setting a workpiece coordinate system).
A machining program sets a workpiece coordinate system (selecting a
workpiece coordinate system).
A set workpiece coordinate system can be changed by shifting its origin
(changing a workpiece coordinate system).

A workpiece coordinate system can be set using one of three methods:

(1)Method using G92
A workpiece coordinate system is set by specifying a value after G92
in the program.

(2)Automatic setting
If bit 0 of parameter No. 010 #7 is set beforehand, a workpiece
coordinate system is automatically set when manual reference
position return is performed (see Part III.).

(3) Input using the CRT/MDI panel
Six workpiece coordinate systems can be set beforehand using the
CRT/MDI panel (see Part III–3.1.).

To use absolute programming, establish a workpiece coordinate system
by applying one of the methods described above.

G92 _ ;��

A workpiece coordinate system is set so that a point on the tool, such as
the tool tip, is at specified coordinates.  If a coordinate system is set using
G92 during tool length offset, a coordinate system in which the position
before offset matches the position specified in G92 is set.
Cutter compensation is cancelled temporarily with G92.

25.2 X

Z

23.0

0 X

Z

600.0

1200.0
If an absolute command is is-
sued, the base point moves to
the commanded position.  In or-
der to move the tool tip to the
commanded position, the  dif-
ference from the tool tip to the
base point is compensated by
tool length offset.

Setting the coordinate system by the
G92X25.2Z23.0; command
(The tool tip is the start point for the program.)

Setting the coordinate system by the G92X600.0Z1200.0; command 
(The base point on the tool holder is the start point for the program.)

Base point

Example 1 Example 2

0

7.2
WORKPIECE
COORDINATE
SYSTEM

7.2.1
Setting a Workpiece
Coordinate System

Format
Setting a workpiece
coordinate system by G92

Explanations

Examples

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/087. COORDINATE SYSTEM

84

The user can choose from set workpiece coordinate systems as described
below.  (For information about the methods of setting, see Section 7.2.1.)

(1)Selecting a workpiece coordinate system set by G92 or automatic
workpiece coordinate system setting
Once a workpiece coordinate system is selected, absolute commands
work with the workpiece coordinate system.

(2)Choosing from six workpiece coordinate systems set using the
CRT/MDI panel
By specifying a G code from G54 to G59, one of the workpiece
coordinate systems 1 to 6 can be selected.

G54 Workpiece coordinate system 1. . . . . 
G55 Workpiece coordinate system 2. . . . . 
G56 Workpiece coordinate system 3. . . . . 
G57 Workpiece coordinate system 4. . . . . 
G58 Workpiece coordinate system 5. . . . . 
G59 Workpiece coordinate system 6. . . . . 

Workpiece coordinate system 1 to 6 are established after reference
position return after the power is turned on. When the power is turned
on, G54 coordinate system is selected.

X

Y

100.0

40.0

In this example, positioning is made to
positions (X=40.0, Y=100.0) in workpiece
coordinate system 2.

G90 G55 G00 X40.0 Y100.0 ;

Workpiece coordinate system 2 (G55)

Fig. 7.2.2

7.2.2
Selecting a Workpiece
Coordinate System

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 7. COORDINATE SYSTEMPROGRAMMING

85

The six workpiece coordinate systems specified with G54 to G59 can be
changed by changing an external workpiece zero point offset value or
workpiece zero point offset value.  
Four  methods are available to change an external workpiece zero point
offset value or workpiece zero point offset value.

(1) Inputting from the CRT/MDI panel (see III–11.4.3)

(2)Programming by G10 or G92

(3)Changing an external workpiece zero point offset value (refer to
machine tool builder’s manual)

(4)System variables by Custom Macro B

ZOFS2 ZOFS3
ZOFS4

ZOFS5

ZOFS1

ZOFS6

EXOFS : External workpiece zero point offset value
ZOFS1 to ZOFS6 : Workpiece zero point offset value

EXOFS

Workpiece 
coordinate 
system 1  (G54)

Workpiece 
coordinate 
system 2  (G55)

Workpiece 
coordinate 
system 3  (G56)

Workpiece 
coordinate 
system 4  (G57)

Workpiece 
coordinate 
system 5  (G58)

Workpiece 
coordinate 
system 6  (G59)

Machine zero

Fig. 7.2.3   Changing an external workpiece zero point offset value or workpiece zero point offset value

p=0 : External workpiece zero point offset value

p=1 to 6 : Workpiece zero point offset value correspond to 
workpiece coordinate system 1 to 6

  : Workpiece zero point offset value of each axis

G10 L2 Pp

��

_ ;��

G92 _ ;��

7.2.3
Changing Workpiece
Coordinate System

Format

� Changing by G10

� Changing by G92

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/087. COORDINATE SYSTEM

86

With the G10 command, each workpiece coordinate system can be
changed separately.
When an absolute workpiece zero point offset value is specified, the
specified value becomes a new offset value.  When an incremental
workpiece zero point offset value is specified, the specified value is added
to the current offset value to produce a new offset value.

By specifying G92IP_;, a workpiece coordinate system (selected with a
code from G54 to G59) is shifted to set a new workpiece coordinate
system so that the current tool position matches the specified coordinates
(IP_).
Then, the amount of coordinate system shift is added to all the workpiece
zero point offset values.  This means that all the workpiece coordinate
systems are shifted by the same amount.

WARNING
When a coordinate system is set with G92 after an external
workpiece zero point offset value is set, the coordinate
system is not affected by the external workpiece zero point
offset value.  When G92X100.0Z80.0; is specified, for
example, the coordinate system having its current tool
reference position at X = 100.0 and Z = 80.0 is set.

Explanations

� Changing by G10

� Changing by G92

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 7. COORDINATE SYSTEMPROGRAMMING

87

X

X�

Y�Y

A

160 100

100

100

200

If G92X100Y100; is commanded when the tool
is positioned at (200, 160) in G54 mode, work-
piece coordinate system 1 (X’ – Y’) shifted by
vector A is created.

60

G54 workpiece coordinate system

Tool position

New workpiece coordinate system

Original workpiece coordinate system

1200.0

Z

Z

X�

X
600.0

600.0

1200.0

Z’

Z�

X

X

X’ – Z’ New workpiece coordinate system
X  – Z Original workpiece coordinate system
A : Offset value created by G92
B : G54 workpiece zero point offset value
C : G55 workpiece zero point offset value

A

B

C

A

G54 Workpiece 
coordinate system

G55 Workpiece 
coordinate system

Suppose that a G54 workpiece coordi-
nate system is specified.  Then, a G55
workpiece coordinate system where
the black circle on the tool (figure at
the left) is at (600.0,12000.0) can be
set with the following command if the
relative relationship between the G54
workpiece coordinate system and
G55 workpiece coordinate system is
set correctly:G92X600.0Z1200.0;Also,
suppose that pallets are loaded at two
different positions.  If the relative rela-
tionship of the coordinate systems of
the pallets at the two positions is cor-
rectly set by handling the coordinate
systems as the G54 workpiece coordi-
nate system and G55 workpiece coor-
dinate system, a coordinate system
shift with G92 in one pallet causes the
same coordinate system shift in the
other pallet.  This means that work-
pieces on two pallets can be ma-
chined with the same program just by
specifying G54 or G55.

��������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/087. COORDINATE SYSTEM

88

Besides the six workpiece coordinate systems (standard workpiece
coordinate systems) selectable with G54 to G59, 48 additional workpiece
coordinate systems (additional workpiece coordinate systems) can be
used.

G54Pn ;
Pn : Codes specifying the additional workpiece coordinate

systems

n : 1 to 48

Pn : Codes specifying the workpiece coordinate system for set-
ting the workpiece zero point offset value

n : 1 to 48

_: Axis addresses and a value set as the workpiece zero
point offset

G10L20 Pn

��

_ ;��

When a P code is specified together with G54, the corresponding
coordinate system is selected from the additional workpiece coordinate
systems (1 to 48).
A workpiece coordinate system, once selected, is valid until another
workpiece coordinate system is selected.  Standard workpiece coordinate
system 1 (selectable with G54) is selected at power–on.

G54 P1 Additional workpiece coordinate system 1� � � � � �
G54 P2 Additional workpiece coordinate system 2� � � � � �

G54 P48 Additional workpiece coordinate system 48� � � � �

As with the standard workpiece coordinate systems, the following
operations can be performed for a workpiece zero point offset in an
additional workpiece coordinate system:

(1)The   MENUOFFSET  function key can be used to display and set a workpiece zero

point offset value.

(2)The G10 function enables a workpiece zero point offset value to be set
by programming.

(3)A custom macro allows a workpiece zero point offset value to be
handled as a system variable.

(4)Workpiece zero point offset data can be entered or output as external
data.

7.2.4
Adding Workpiece
Coordinate Systems

Format

� Selecting the additional
workpiece coordinate
systems

� Setting the workpiece
zero point offset value in
the additional workpiece
coordinate systems

Explanations

� Selecting the additional
workpiece coordinate
systems

� Setting the workpiece
zero point offset value in
the additional workpiece
coordinate systemsww

w.
cn

cc
en

ter
.co

m



B–61404E/08 7. COORDINATE SYSTEMPROGRAMMING

89

A P code must be specified after G54.
If a value not within the specifiable range is specified in a P code, an alarm
(No. 030) is issued.

Restrictions

� ����	��	
� � ����

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/087. COORDINATE SYSTEM

90

When a program is created in a workpiece coordinate system, a child
workpiece coordinate system may be set for easier programming.  Such
a child coordinate system is referred to as a local coordinate system.

_: Origin of the local coordinate system

G52

��

_ ; Setting the local coordinate system��

��G52  0 ; Canceling of the local coordinate system

......

By specifying G52IP_;, a local coordinate system can be set in all the
workpiece coordinate systems (G54 to G59).  The origin of each local
coordinate system is set at the position specified by IP_  in the workpiece
coordinate system.
When a local coordinate system is set, the move commands in absolute
mode (G90), which is subsequently commanded, are the coordinate
values in the local coordinate system.  The local coordinate system can
be changed by specifying the G52 command with the zero point of a new
local coordinate system in the workpiece coordinate system. 
To cancel the local coordinate system and specify the coordinate value in
the workpiece coordinate system, match the zero point of the local
coordinate system with that of the workpiece coordinate system.

_

(G59 : Workpiece coordinate system 6)

(G54 : Workpiece coordinate system 1)

G55
G56 G57

G58

Machine coordinate system origin

(Machine coordinate system)

(Local coordinate system)

(Local coordinate system)

��

_��

Fig. 7.3  Setting the local coordinate system

7.3
LOCAL COORDINATE
SYSTEM

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 7. COORDINATE SYSTEMPROGRAMMING

91

WARNING
1 When an axis returns to the reference point by the manual reference point return function, the

zero point of the local coordinate system of the axis matches that of the work coordi–nate
system.  The same is true when the following command is issued: 

G52α0;
G52α:Axis which returns to the reference point

2 The local coordinate system setting does not change the workpiece and machine coordi–nate
systems.

3 The local coordinate system is cancelled when the reset operation is performed.
4 When setting a workpiece coordinate system with the G92 command, the local coordinate

systems are cancelled.
5 G52 cancels the offset temporarily in cutter compensation.
6 Command a move command immediately after the G52 block in the absolute mode.
7 The option for the workpiece coordinate system (G54 to G59) is required.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/087. COORDINATE SYSTEM

92

Select the planes for circular interpolation, cutter compensation, and
drilling by G–code.  
The following table lists G–codes and the planes selected by them.

Table 7.4   Plane selected by G code

G code Selectedplane Xp Yp Zp

G17 Xp Yp plane
X–axis or an Y–axis or an Z–axis or an

G18 Zp Xp plane
X–axis or an
axis parallel 

to it

Y–axis or an 
axis parallel

to it

Z–axis or an 
axis parallel 

to it
G19 Yp Zp plane

to it to it to it

Xp, Yp, Zp are determined by the axis address appeared in the block in
which G17, G18 or G19 is commanded.
When an axis address is omitted in G17, G18 or G19 block, it is assumed
that the addresses of basic three axes are omitted.
Parameter No. 279 is used to specify that an optional axis be parallel to
the each axis of the X, Y–, and Z–axes as the basic three axes.
The plane is unchanged in the block in which G17, G18 or G19 is not
commanded.

Plane selection when the X–axis is parallel with the U–axis. 
G17X_Y_ XY plane, 
G17U_Y_ UY plane
G18X_Z_ ZX plane
       X_Y_ Plane is unchanged (ZX plane)
G17 XY plane
G18 ZX plane
G17 U_ UY plane
G18Y_ ; ZX plane, Y axis moves regardless without any

relation to the plane.

NOTE
When the system is turned on or placed in the clear state by
a reset (bit 6 of parameter No. 045), G17, G18, or G19 is
selected according to the setting of parameter No. 212.

7.4
PLANE SELECTION

Explanations

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
8. COORDINATE VALUE

AND DIMENSIONPROGRAMMING

93

8 COORDINATE VALUE AND DIMENSION
This chapter contains the following topics.

8.1   ABSOLUTE AND INCREMENTAL PROGRAMMING (G90, G91)
8.2   POLAR COORDINATE COMMAND (G15, G16)
8.3   INCH/METRIC CONVERSION (G20, G21)
8.4   DECIMAL POINT PROGRAMMING

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
8. COORDINATE VALUE

AND DIMENSION

94

There are two ways to command travels of the tool; the absolute
command, and the incremental command. In the absolute command,
coordinate value of the end position is programmed; in the incremental
command, move distance of the position itself  is programmed.  G90 and
G91 are used to command absolute or incremental command,
respectively.

G90 _ ;��Absolute command

Incremental command G91 _ ;��

Absolute command

Incremental command

G90 X40.0 Y70.0 ;

G91 X–60.0 Y40.0 ;

Y

X

70.0

30.0

40.0 100.0

End position

Start position

8.1
ABSOLUTE AND
INCREMENTAL
PROGRAMMING
(G90, G91)

Format

��������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
8. COORDINATE VALUE

AND DIMENSIONPROGRAMMING

95

The end point coordinate value can be input in polar coordinates (radius
and angle). 
The plus direction of the angle is counterclockwise of the selected plane
first axis + direction, and the minus direction is clockwise.
Both radius and angle can be commanded in either absolute or
incremental command (G90, G91).

Specifying the addresses of axes constituting the plane se-
lected for the polar coordinate system, and their values 
First axis : radius of polar coordinate
Second axis : radius of polar coordinate

G90 specifies the zero point of the lworkpiece coordinate
system as the origin of the polar coordinate  system, from
which a radius is measured.
G91 specifies the current position as the origin of the polar
coordinate system, from which a radius is measured.

G�� G�� G16 ;

G15 ;

G16 : Polar coordinate command

G15 :

G�� :

G�� :

PI

Starting the polar coordinate command 
(polar coordinate mode)

Polar coordinate command

Canceling the polar coordinate command  
(polar coordinate mode)

Polar coordinate command cancel

Plane selection of the polar coordinate command 
(G17, G18 or G19)

G∆∆

G�� : Angle selection of the polar coordinate command

G90 : Angle is specified with absolute command

G91 : Angle is specified with incremental command

_ ;��

_ ;��

Specify the radius (the distance between the zero point and the point) to
be programmed with an absolute command.  The zero point of the
workpiece coordinate system is set as the origin of the polar coordinate
system.

RadiusCommand position

Actual positionAngle

Radius

Angle

Command position

Actual position

When the angle is specified 
with an absolute command

When the angle is specified 
with an incremental command

8.2
POLAR COORDINATE
COMMAND 
(G15, G16)

������

� Setting the zero point of
the workpiece
coordinate system as the
origin of the polar
coordinate system

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
8. COORDINATE VALUE

AND DIMENSION

96

Specify the radius (the distance between the current position and the
point) to be programmed with an incremental command.  The current
position is set as the origin of the polar coordinate system.

Radius

Command position

Actual position

Angle

When the angle is specified 
with an absolute command

When the angle is specified 
with an incremental command

Command position

Actual position

Angle
Radius

Bolt hole circle

Y

150°

30°

100mm

270° X

– The zero point of the workpiece coordinate
system is set as the origin of the polar
coordinate system.

– The XY plane is selected.

N1 G17 G90 G16 ;
Specifying the polar coordinate command and selecting the XY plane
Setting the zero point of the workpiece coordinate system as the origin
of the polar coordinate system

N2 G81 X100.0 Y30.0 Z–20.0 R–5.0 F200.0 ;
Specifying a distance of 100 mm and an angle of 30 degrees

N3 Y150.0 ;
Specifying a distance of 100 mm and an angle of 150 degrees

N4 Y270.0 ;
Specifying a distance of 100 mm and an angle of 270 degrees

N5 G15 G80 ;
Canceling the polar coordinate command

� Setting the current
position as the origin of
the polar coordinate
system

��������

� Specifying angles and a
radius with absolute
commands

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
8. COORDINATE VALUE

AND DIMENSIONPROGRAMMING

97

N1 G17 G90 G16;
Specifying the polar coordinate command and selecting the XY plane
Setting the zero point of the workpiece coordinate system as the origin
of the polar coordinate system

N2 G81 X100.0 Y30.0 Z–20.0 R–5.0 F200.0 ; 
Specifying a distance of 100 mm and an angle of 30 degrees

N3 G91 Y120.0 ;
Specifying a distance of 100 mm and an angle of +120 degrees

N4 Y120.0 ;
Specifying a distance of 100 mm and an angle of +120 degrees

N5 G15 G80 ;
Canceling the polar coordinate command

In the polar coordinate mode, specify a radius for circular interpolation
or helical cutting (G02, G03) with R.

Axes specified for the following commands are not considered part of the
polar coordinate command:

– Dwell (G04)
– Changing an offset value with a program (G10)
– Setting the local coordinate system (G52)
– Converting the workpiece coordinate system (G92) 
– Selecting the machine coordinate system (G53) 
– Stored stroke check (G22)
– Coordinate system rotation (G68)
– Scaling (G51)

� Specifying angles with
incremental commands
and a radius with
absolute commands

Limitations

� Specifying a radius in
the polar coordinate
mode

� Axes that are not
considered part of a
polar coordinate
command in the polar
coordinate mode

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
8. COORDINATE VALUE

AND DIMENSION

98

Either inch or metric input can be selected  by G code.

G20 ;

G21 ;

Inch input

mm input

This G code must be specified in an independent block before setting the
coordinate system at the beginning of the program. After the G code for
inch/metric conversion is specified, the unit of input data is switched to
the least inch or metric input increment of increment system IS–B or IS–C
(Section 2.3).  The unit of data input for degrees remains unchanged.The
unit systems for the following values are changed after inch/metric
conversion:

– Feedrate commanded by F code
– Positional command 
– Work zero point offset value 
– Tool compensation value
– Unit of scale for manual pulse generator
– Movement distance in incremental feed
– Some parameters
When the power is turned on, the G code is the same as that held before
the power was turned off.

WARNING
1 G20 and G21 must not be switched during a program.
2 When switching inch input (G20) to metric input (G21) and

vice versa, the tool compensation value must be re–set
according to the least input increment.

CAUTION
Reference position return is performed at a low speed for
the first G28 command after the inch input is switched to the
metric input or vice versa.

NOTE
1 When the least input increment and the least command

increment systems are different, the maximum error is half
of the least command increment.  This error is not
accumulated.

2 The inch and metric input can also be switched using
settings.

8.3
INCH/METRIC
CONVERSION 
(G20, G21)

������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
8. COORDINATE VALUE

AND DIMENSIONPROGRAMMING

99

Numerical values can be entered with a decimal point.  A decimal point
can be used when entering a distance, time, or speed.  Decimal points can
be specified with the following addresses:
X, Y, Z, U, V, W, A, B, C, I, J, K, Q, R, and F.

There are two types of decimal point notation:  calculator–type notation
and standard notation.
When calculator–type decimal notation is used, a value without decimal
point is considered to be specified in mm, inch, or deg.  When standard
decimal notation is used, such a value is considered to be specified in least
input increments.Select either calculator–type or standard decimal
notation by using the parameter No. 051#7.  Values can be specified both
with and without decimal point in a single program.

Program command
Pocket calculator
type decimal point

programming

Standard type decimal
point programming

X1000
Command value with-
out decimal point

1000mm
Unit : mm

1mm
Unit : Least input increment
(0.001 mm)

X1000.0
Command value with
decimal point

1000mm
Unit : mm

1000mm
Unit : mm

WARNING
In a single block, specify a G code before entering a value.  The position of decimal point may
depend on the command.
Examples:
G20; Input in inches
X1.0 G04; X1.0 is considered to be a distance and processed as X10000.  This command

is equivalent to G04 X10000.  The tool dwells for 10 seconds.
G04 X1.0; Equivalent to G04 X1000.  The tool dwells for one second.

NOTE
1 Fractions less than the least input increment are truncated.

Examples:
X1.2345; Truncated to X1.234 when the least input increment is 0.001 mm.

Processed as X1.2345 when the least input increment is 0.0001 inch.
2 When more than eight digits are specified, an alarm occurs.  If a value is entered with a decimal

point, the number of digits is also checked after the value is converted to an integer according
to the least input increment.
Examples:
X1.23456789; Alarm 003 occurs because more than eight digits are specified.
X123456.7; If the least input increment is 0.001 mm, the value is converted to integer

123456700.  Because the integer has more than eight digits, an alarm occurs.

8.4
DECIMAL POINT
PROGRAMMING

��	��������


����	��


ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
9. SPINDLE SPEED FUNCTION 

(S FUNCTION)

100

9 SPINDLE SPEED FUNCTION (S FUNCTION)
The spindle speed can be controlled by specifying a value following
address S.
This chapter contains the following topics.

9.1 SPECIFYING THE SPINDLE SPEED WITH A BINARY CODE
9.2 SPECIFYING THE SPINDLE SPEED VALUE DIRECTLY 

(S5–DIGIT COMMAND)
9.3 CONSTANT SURFACE SPEED CONTROL (G96, G97)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
9. SPINDLE SPEED FUNCTION

 (S FUNCTION)PROGRAMMING

101

A 2–digit S code can be specified in a block.  For a description of the use
of S codes, such as their execution sequence in a block in which a spindle
speed, move command, and S code are specified, see the manual provided
by the machine tool builder.

The spindle speed can be specified directly by address S followed by a
five–digit value (rpm).  The unit for specifying the spindle speed may vary
depending on the machine tool builder.  Refer to the appropriate manual
provided by the machine tool builder for details.

9.1
SPECIFYING THE
SPINDLE SPEED
WITH A BINARY
CODE

9.2
SPECIFYING THE
SPINDLE SPEED
VALUE DIRECTLY
(S5–DIGIT
COMMAND)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
9. SPINDLE SPEED FUNCTION 

(S FUNCTION)

102

Specify the surface speed (relative speed between the tool and workpiece)
following S.  The spindle is rotated so that the surface speed is constant
regardless of the position of the tool.

G96 Pα S����� ;
↑Surface speed (m/min or feet/min)

Note : This surface speed unit may change according to
machine tool builder’s specification.
If a surface speed is omitted, the S value specified
in the previous G96 is used.

P0 : Axis set in the parameter (No. 041#4, #5)
P1 : X axis, P2 : Y axis, P3 : Z axis, P4 : 4th axis

G97 S����� ;
↑�	����� �	��� (
	�)

Note : This surface speed unit may change according to 
machine tool builder’s specification.
If a spindle speed is omitted, the last speed specified in
G96 remains valid.

G92 S����� ;
↑Maximum spindle speed (rpm) used during constant
 surface speed control

Note : The measurement unit of this maximum spindle speed
may vary from one machine builder to another.

9.3
CONSTANT
SURFACE SPEED
CONTROL (G96, G97)

Format

� Constant surface speed
control command

� Constant surface speed
control cancel command

� Clamp of maximum
spindle speed

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
9. SPINDLE SPEED FUNCTION

 (S FUNCTION)PROGRAMMING

103

G96 (constant surface speed control command) is a modal G code.  After
a G96 command is specified, the program enters the constant surface
speed control mode (G96 mode) and specified S values are assumed as a
surface speed.  A G96 command must specify the axis along which
constant surface speed control is applied.  If address P is omitted, P0 is
assumed.  A G97 command cancels the G96 mode.  If an S value is
omitted in a G97 block, the last speed specified in the G96 mode remains
valid.  When constant surface speed control is applied, a spindle speed
higher than the value specified in G92S_; (maximum spindle speed) is
clamped at the maximum spindle speed.  When the power is turned on,
the maximum spindle speed is not yet set and the speed is not clamped.S
(surface speed) commands in the G96 mode are assumed as S = 0 (the
surface speed is 0) until M03 (rotating the spindle in the positive
direction) or M04 (rotating the spindle in the negative direction) appears
in the program.

The spindle speed (rpm) almost coin-
cides with the surface speed (m/min)
at approx. 160 mm (radius).

Radius of work

0   20   40   60  80  100  120 140 160 180 200 220 240 260  280  300

(n)

3000

2800

2600

2400

2200

2000

1800

1600

1400

1200

1000

800

600

400

200

0 

Spindle speed (rpm)

��

���
���

���

���

	 ������
�

Fig. 9.3 (a)  Relation between workpiece radius, spindle speed 
and surface speed

�
�����	����

� Constant surface speed
control command (G96)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
9. SPINDLE SPEED FUNCTION 

(S FUNCTION)

104

To execute the constant surface speed control, it is necessary to set the
work coordinate system , and so the coordinate value at the center of the
rotary axis, for example, Z axis, (axis to which the constant surface speed
control applies) becomes zero.

X

Z

0

Fig. 9.3 (b)  Example of the workpiece coordinate system for
constant surface speed control

G96 mode G97 mode

Specify the surface speed in m/min 
(or feet/min)

G97 command

Store the surface speed in m/min 
(or feet/min)

Command for
the spindle
speed

Specified

The specified
spindle speed
(rpm) is used

Not specified

The surface speed (m/min or
feet/min) is converted to the
spindle speed (rpm)

G96 command

The specified
surface
speed is used

Command
for the surface

speed

The stored surface speed (m/min or
feet/min) is used.  If no surface speed is
stored, 0 is assumed.

Specified

Not specified

� ����
�� �	� �����
���

�����
���� ����� ���

�������� ������� �����

�������

� Surface speed specified
in the G96 mode

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
9. SPINDLE SPEED FUNCTION

 (S FUNCTION)PROGRAMMING

105

The constant surface speed control is also effective during threading.
Accordingly, it is recommended that the constant surface speed control
be invalidated with G97 command before starting the scroll threading and
taper threading, because the response problem in the servo system may
not be considered when the spindle speed changes.

In a rapid traverse block specified by G00, the constant surface speed
control is not made by calculating the surface speed to a transient change
of the tool position, but is made by calculating the surface speed based on
the position at the end point of the rapid traverse block, on the condition
that cutting is not executed at rapid traverse.

���	���	����

� Constant surface speed
control for threading

� Constant surface speed
control for rapid traverse
(G00)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0810. TOOL FUNCTION (T FUNCTION)

106

10 TOOL FUNCTION (T FUNCTION)
Two tool functions are available. One is the tool selection function, and
the other is the tool life management function.

General

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. TOOL FUNCTION (T FUNCTION)PROGRAMMING

107

By specifying two or four–digit numerical value following address T,
tools can be selected on the machine.
One T code can be commanded in a block.  Refer to the machine tool
builder’s manual for the number of digits commandable with address T
and the correspondence between the T codes and machine operations.
When a move command and a T code are specified in the same block, the
commands  are executed in one of the following two ways:  

(i) Simultaneous execution of the move command and T function
commands.

(ii)Executing T function commands upon completion of move command
execution.
The selection of either (i) or (ii) depends on the machine tool builder’s
specifications.  Refer to the manual issued by the machine tool builder
for details.

10.1
TOOL SELECTION
FUNCTION

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0810. TOOL FUNCTION (T FUNCTION)

108

Tools are classified into various groups, with the tool life (time or
frequency of use) for each group being specified.  The function of
accumulating the tool  life of each group in use and selecting and using
the next tool previously  sequenced in the same group, is called the tool
life management function.

Tool group number m

Tool life
value

Tool 
number

Code specifying
tool compensa-
tion value

1

n

The first tool life 
management data

The nth tool life 
management data

Fig. 10.2(a)  Tool life management data (number of n tools)

By choosing a tool from a tool group specified by a machining program,
the tool life can be managed.

Tool life management data

Tool group number 1

Command for selecting
tool group m

Tool change command
(M06)

Machining program

Machine CNC

Tool 
selection

Machine and CNC operations

Tool group number m

Tool group number p

Places a se-
lected tool in
the wait state

Attaches the
tool in the wait
state to 
the spindle
(tool change).

Automatically selects, from
tool group m, a tool whose
life has not expired.

Starts counting the life of
the tool attached to the
spindle.l

Fig. 10.2(b)  Tool Selection by machining program

10.2
TOOL LIFE
MANAGEMENT
FUNCTION

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. TOOL FUNCTION (T FUNCTION)PROGRAMMING

109

Tool life management data consists of tool group numbers, tool numbers,
codes specifying tool compensation values, and tool life value.

The Max. number of groups and the number of tools per group that can
be registered are set by parameter (No. 039#0, #1) (Table 10.2.1).

Table 10.2.1  The max. number of groups and tools
that can be registered

The Max. number of groups and 
tools without optional function

 of 512 tool pairs

The Max. number of groups 
and tools with optional function 

of 512 tool pairs

Number of
group

Number of tool Number of
group

Number of tool

16 16 64 32

32 8 128 16

64 4 256 8

128 2 512 4

NOTE
When bits 0 or 1 of parameter 039 is changed, re–register
tool life management data with the G10L3 command (for
registering and deleting data for all groups). Otherwise, new
data pairs cannot be set.

Specify a two or four–digit number after T.

Codes specifying tool offset values are classified into H codes (for tool
length offset) and D codes (cutter compensation).  The maximum code
numbers that can be registered to specify a tool offset value are 200.  Code
number 99, however, cannot be used.

NOTE
When codes specifying tool offset values are not used,
registration can be omitted.

Refer to subsections 10.2.2 and 10.2.4.

10.2.1
Tool Life Management
Data

�
�����	����

� Tool group number

� Tool number

� Code specifying tool
compensation value

� Tool life value
ww

w.
cn

cc
en

ter
.co

m



PROGRAMMING B–61404E/0810. TOOL FUNCTION (T FUNCTION)

110

In a program, tool life management data can be registered in the CNC unit,
and registered tool life management data can be changed or deleted.

After all registered tool life management data is deleted, programmed tool
life management data is registered.

Programmed tool life management data for a group can be deleted.
(MDI operation)

Tool life counters can be preset for each group.  (MDI operation)

Whether tool life is to be indicated by time (minutes) or by frequency, it
is set by a parameter (No. 039 #2) .
Maximum value of tool life is as follows.

In case of minute :4300(minutes)
In case of frequency :9999(times)

G10L3 ;
P_L_ ;
T_H_D_ ;
T_H_D_ ;

P_L_ ;
T_H_D_ ;
T_H_D_ ;

G11 ;
M02  (M30) ;

G10L3 : Register with deleting all groups
P_ : Group number
L_ : Life value
T_ : Tool number
H_ : Code specifying tool offset value 

 (H code)
D_ : Code specifying tool offset value 

 (D code)
G11 : End of registration

Meaning of commandFormat
� Register with deleting all

groups

10.2.2
Register, Change and
Delete of Tool Life
Management Data

�
�����	����

� Register with deleting 
all groups

� Deletion of tool life
management data

� Register of tool life count
type

� Life value

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. TOOL FUNCTION (T FUNCTION)PROGRAMMING

111

The following command is used for tool life management:

T∇∇∇∇  ; Specifies a tool group number.
The tool life management function selects, from a
specified group, a tool whose life has not expired, and
outputs its T code.  In∇∇∇∇ , specify a number
calculated by adding the tool life management cancel
number specified in parameter 599 to a group number.
For example, to set tool group 1 when the tool life
management cancel number is 100, specify T101;.

NOTE
When ∇∇∇∇  is less than a tool life management cancel
number, the T code is treated as an ordinary T code.

M06; Terminates life management for the previously
usedtools, and begins counting the life of the new
tools selected with the T code.

WARNING
When an option for speciofying multiple M codes is
selected, specify this code by itself or as the first M code.

H99; Selects the H code of tool life management data for
the tool currently being used.

H00; Cancels tool length offset

D99; Selects the D code of tool life management data for
the tool currently being used.

D00; Cancels cutter compensation

WARNING
H99 or D99 must be specified after the M06 command.
When a code other than H99 or D99 is specified after the
M06 command, the H code and D code of tool life
management data are not selected.

10.2.3
Tool Life Management
Command in a
Machining Program

�
�����	����

� Command

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0810. TOOL FUNCTION (T FUNCTION)

112

For tool life management, the four tool change types indicated below are
available. The type used varies from one machine to another.  For details,
refer to the appropriate manual of each machinde tool builder.

Table 10.2.3 Tool change type

Tool change
type A B C D

Tool group
number spe-
cified in the
same block
as the tool
change com-
mand (M06)

Previously
used tools

Tools to be used next

Tool life count
timing

Life counting is performed for a tool in the speci-
fied tool group when M06 is specified next.

Life counting
is performed
when a tool in
the tool group
specified in
the same
block as M06
is specified.

Remarks

Normally, when a tool group
number is specified by itself,
type B is used. However, no
alarm is raised even if the tool
group number is specified by
itself as type C.

Parameter
039#7=0
041#7=0

039#7=1
041#7=0

041#7=1

NOTE
When a tool group number is specified and a new tool is
selected, the new tool selection signal is output.

Suppose that the tool life management cancel number is 100.

T101; A tool whose life has not expired is selected from group 1.
(Suppose that tool number 010 is selected.)

M06; Tool life counting is performed for the tool in group 1.
(The life of tool number 010 is counted.)

T102; A tool whose life has not expired is selected from group 2.
(Suppose that tool number 100 is selected.)

M06T101;Tool life counting is performed for the tool in group 2.
(The life of tool number 100 is counted.)
The number of the tool currently used (in group 1) is

 output with a T code signal. (Tool number 010 is output.)

� Types

Examples

� Tool change type A

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. TOOL FUNCTION (T FUNCTION)PROGRAMMING

113

Suppose that the tool life management ignore number is 100.

T101; A tool whose life has not expired is selected from group 1.
(Suppose that tool number 010 is selected.)  Note)

M06T102;Tool life counting is performed for the tool in group 1.
(The life of tool number 010 is counted.)
A tool whose life has not expired is selected from group 2.
(Suppose that toolnumber 100 is selected.

M06T103;Tool life counting is lperformed for the tool in group 2.
(The life of tool number 100 is counted.)
A tool whose life has not expired is selected from group 3.
(Suppose that tool number 200 is selected.)

NOTE
Specify M06T101; for tool change method C.

Suppose that the tool life management ignore number is 100.
T101M06;A tool whose life has not expired is selected from group 1. 

(Suppose that tool number 010 is selected.)
Tool life counting is performed for the tool in group 1.

T102M06;A tool whose life has not expired is selected from group 2.
(Suppose that tool number 100 is selected.)
Tool life counting is performed for the tool in group 2.
(The life of tool number 100 is counted.) 

� Tool change type B 
and C

� Tool change type D

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0810. TOOL FUNCTION (T FUNCTION)

114

The life of a tool is specified by a usage frequency (count) or usage time
(in minutes).

The usage count is incremented by 1 for each tool used in a program. In
other words, the usage count is incremented by 1 only when the first tool
group number and tool change command are specified after the CNC unit
enters the automatic operation state from the reset state.

CAUTION
Even if the same tool group number is specified more than
once in a program, the usage count is only incremented by
1 and no new tools are selected.

When a tool change is specified (M06), tool life management is started
for the tools specified by the tool group number. In tool life management,
the time during which a tool is used in the cutting mode is counted in four
second increments., If the tool group is changed before the incremental
time of four seconds elapses, the time is not counted. The time a tool is
used for single block stop, feed hold, rapid traverse, dwell, machine lock,
and interlock is not counted.

NOTE
1 When a tool is selected from available tools, tools are

searched starting from the current tool towards the lasttool
to find a tool whose life has not expired.

2 When tool life counting indicates that the life of the last tool
in a group has expired, the tool change signal is output.
When tool life is managed by time, the signal is output when
the life of the last tool in the group has expired. When tool
life is managed by usage frequency (count), the signal is
output when the CNC unit is reset or the tool life count
restart M code is specified.

10.2.4
Tool Life

Explanations

� Usage count

� Usage time

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. AUXILIARY FUNCTIONPROGRAMMING

115

11 �������	 ����
���
There are two types of auxiliary functions ; miscellaneous function (M
code) for specifying spindle start, spindle stop program end, and so on,
and secondary auxiliary function (B code) for specifying index table
positioning.
When a move command and miscellaneous  function are specified in the
same block, the commands are executed in one of the following two ways:

i) Simultaneous execution of the move command and miscellaneous
function commands.

ii) Executing miscellaneous function commands upon completion of
move command execution.

The selection of either sequence depends on the machine tool builder’s
specification.  Refer to the manual issued by the machine tool builder for
details.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0811. AUXILIARY FUNCTION

116

When a three–digid numeral is specified following address M, code
signal and a strobe signal are sent to the machine. The machine uses these
signals to turn on or off its functions.
Usually, only one M code can be specified in one block. In some cases,
however, up to three M codes can be specified for some types of machine
tools.
Which M code corresponds to which machine function is determined by
the machine tool builder.
The machine processes all operations specified by M codes except those
specified by M98 or M99. Refer to the machine tool builder’s instruction
manual for details.

The following M codes have special meanings.

This indicates the end of the main program
Automatic operation is stopped and the CNC unit is reset. 
This differs with the machine tool builder.
After a block specifying the end of the program  is executed,
control returns to the start of the program.
Bit 5 of parameter 019 (M02) can be used to disable M02 from returning
control to the start of the program.

Automatic  operation is stopped after a block containing M00 is executed.
When the program is stopped, all existing modal information remains
unchanged.  The automatic operation can be restarted by actuating the
cycle operation.  This differs with the machine tool builder.

Similarly to M00, automatic operation is stopped after a block containing
M01 is executed.  This code is only effective when the Optional Stop
switch on the machine operator’s panel has been pressed.

This code is used to call a subprogram. The code and strobe signals are
 not sent.  See the subprogram section 13.3 for details . 

This code indicates the end of a subprogram.  
M99 execution returns control to the main program.  See the subprogram
section 12.3 for details. 

This code is used to call a file on the floppy cassette as a subprogram.

NOTE
The block following M00, M01, M02 and M30, is not read
into the input buffer register, if present.  Similarly, two M
codes which do not buffer can be set by parameters (Nos.
111 to 112).  Refer to the machine tool builder’s instruction
manual for these M codes.

11.1
AUXILIARY
FUNCTION 
(M FUNCTION)

Explanations

� ������	

��� �� ��������

� ���

�������� �����

� ���

��������� �����

� ��


�������� ��

�����������)

� ���

��� �� �����������

� M198 
(subprogram calling)ww

w.
cn

cc
en

ter
.co

m



B–61404E/08 11. AUXILIARY FUNCTIONPROGRAMMING

117

So far, one block has been able to contain only one M code.  However, this
function allows up to three M codes to be contained in one block.
Up to three M codes specified in a block are simultaneously output to the
machine.  This means that compared with the conventional method of a
single M command in a single block, a shorter cycle time can be realized
in machining.  To use this function, set bit 7 of parameter No. 065 to 1.

CNC allows up to three M codes to be specified in one block.  However,
some M codes cannot be specified at the same time due to mechanical
operation restrictions.  
M00, M01, M02, M30, M98, M99, or M198 must not be specified
together with another M code.
Some M codes other than M00, M01, M02, M30, M98, M99, and M198
cannot be specified together with other M codes; each of those M codes
must be specified in a single block.  
Such M codes include these which direct the CNC to perform internal
operations in addition to sending the M codes themselves to the machine.
To be specified, such M codes are M codes for calling program numbers
9001 to 9009 and M codes for disabling advance reading (buffering) of
subsequent blocks. Meanwhile, multiple of M codes that direct the CNC
only to send the M codes themselves (without performing internal
operations ) can be specified in a single block.

One M command
in a single  block

Multiple M commands
in a single block

M40 ;
M50 ;
M60 ;

G28G91X0Y0Z0 ;
:
:
:

M40M50M60 ;
G28G91X0Y0Z0 ;

:
:
:
:
:

Indexing of the table is performed by address B and a following 3 or
6–digit number.  The relationship between B codes and the corresponding
indexing differs between machine tool builders.
Refer to the manual issued by the machine tool builder for details.

When this functions is used, the B address specifying an axis movement
disabled.

11.2
MULTIPLE 
M COMMANDS IN A
SINGLE BLOCK

Explanations

Examples

11.3
THE SECOND
AUXILIARY
FUNCTIONS 
(B CODES)

Restrictionsww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

118

12 
�	���� �	��������	�

There are two program types, main program and subprogram.  Normally,
the CNC operates according to the main program.  However, when a
command calling a subprogram is encountered in the main program,
control is passed to the subprogram.  When a command specifying a
return to the main program is encountered in a subprogram, control is
returned to the main program.

Follow the direction of the
subprogram

Main program Subprogram

Instruction 1

Instruction 2

Instruction n

Instruction 1′

Instruction 2′

Instruction n+1

Return to the main program

Fig. 12 (a)  Main program and subprogram

The CNC memory can hold up to 200 main programs and subprograms
(63 as standard).  A main program can be selected from the stored main
programs to operate the machine. See Chapter 10 in OPERATION for the
methods of registering and selecting programs.

General

� Main program and
subprogram

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

119

A program consists of the following components:

Table 12  Program components

Components Descriptions

Tape start Symbol indicating the start of a program file

Leader section Used for the title of a program file, etc.

Program start Symbol indicating the start of a program

Program section Commands for machining

Comment section Comments or directions for the operator

Tape end Symbol indicating the end of a program file

Tape start % TITLE ;

O0001 ;

M30 ;

%

(COMMENT)Program section

Leader section

Program start

Comment section

Tape end

Fig. 12 (b)  Program configuration

A program section consists of several blocks.  A program section starts
with a program number and ends with a program end code.

Program section Program section 
configuration
Program number O0001 ;
Block 1 N1 G91 G00 X120.0 Y80.0 ;
Block 2 N2 G43 Z–32.0 H01 ;

: :
Block n Nn M20 ;
Program end M30 ;

A block contains information necessary for machining, such as a move
command or coolant on/off command.Specifying a value following a
slash (/) at the start of a block disables the execution of some blocks (see
“optional block skip” in Section 12.2).

� Program components

� Program section
configuration

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

120

This section describes program components other than program sections.
See Section 12.2 for a program section.

% TITLE ;

O0001 ;

M30 ;

%

(COMMENT)

Tape start

Program section

Leader section

Program start

Comment section

Tape end

Fig. 12.1   Program configuration

The tape start indicates the start of a file that contains NC programs.
The mark is not required when programs are entered using SYSTEM P
or ordinary personal computers. The mark is not displayed on the CRT
display screen.  However, if the file is output,the mark is automatically
output at the start of the file.

Table 12.1(a)  Code of a tape start

Name ISOcode
EIA

code Notation in this manual

Tape start % ER %

Data entered before the programs in a file constitutes a leader section. 
When machining is started, the label skip state is usually set by turning
on the power or resetting the system.  In the label skip state, all
information is ignored until the first end–of–block code is read.  When a
file is read into the CNC unit from an I/O device, leader sections are
skipped by the label skip function.
A leader section generally contains information such as a file header.
When a leader section is skipped, even a TV check is not made. So a leader
section can contain any codes except the EOB code.

The program start code is to be entered immediately after a leader section,
that is, immediately before a program section. This code indicates the start
of a program, and is always required to disable the label skip function.

Table 12.1(b) Code of a program start

Name ISOcode
EIA

code Notation in this manual

Program start LF CR ;

12.1
PROGRAM
COMPONENTS
OTHER THAN
PROGRAM
SECTIONS

Explanations

� Tape start

� Leader section

� Program startww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

121

NOTE
If one file contains multiple programs, the EOB code for
label skip operation must not appear before a second or
subsequent program number.  However, an program start
is required at the start of a program if the preceding program
ends with %.

Any information enclosed by the control–out and control–in codes is
regarded as a comment.The user can enter a header, comments, directions
to the operator, etc.  There is no limit on the length of a comment section.

Table 12.1 (c)  Codes of a control–in and a control–out

Name ISOcode
EIA

code
Notation in this

manual Meaning

Control–out ( 2–4–5 ( Start of comment section

Control–in ) 2–4–7 ) End of comment section

When a command tape is read into memory for memory operation,
comment sections, if any, are not ignored but are also read into memory.
Note, however, that codes other than those listed in the code table in
Appendix 9 are ignored, and thus are not read into memory.  When data
in memory is punched out on paper tape with the punch function, the
comment sections are also punched out.
When a program is displayed on the screen, its comment sections are also
displayed.  However, those codes that were ignored when read into
memory are not punched out or displayed.
During memory operation, all comment sections are ignored.
The TV check function can be used for a comment section by setting
parameter (No. 018 #6).

CAUTION
If a long comment section appears in the middle of a
program section, a move along an axis may be suspended
for a long time because of such a comment section. So a
comment section should be placed where movement
suspension may occur or no movement is involved.

NOTE
If only a control–in code is read with no matching
control–out code, the read control–in code is ignored.

� Comment section

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

122

A tape end is to be placed at the end of a file containing NC programs.
If programs are entered using the automatic programming system, the
mark need not be entered.  When a file is output, the mark is automatically
output at the end of the file.
If an attempt is made to execute % when M02 or M03 is not placed at the
end of the program, the alarm (No. 008) is occurred.

Table 12.1 (d)  Code of a tape end

Name ISOcode
EIA

code Notation in this manual

Tape end % ER %

� Tape end

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

123

This section describes elements of a program section.  See Section 12.1
for program components other than program sections.

%

(COMMENT)

% TITLE ;

O0001 ;
N1 … ;

M30 ;

Program section Comment section

Program number

Sequence number

Program end

Fig. 12.2 (a)  Program configuration

A program number consisting of address O followed by a four–digit
number is assigned to each program at the beginning registered in
memory to identify the program.
In ISO code, the colon ( : ) can be used instead of O.
When no program number is specified at the start of a program, the
sequence number (N....) at the start of the program is regarded as its
program number.  Note, however, that N0 cannot be used for a program
number. 
If there is no program number or sequence number at the start of a
program, a program number must be specified using the CRT/MDI panel
when the program is stored in memory (See Section 9.3 in Part III.). 

NOTE
Program numbers 8000 to 9999 may be used by machine
tool builders, and the user may not be able to use these
numbers.

12.2
PROGRAM SECTION
CONFIGURATION

� Program number

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

124

A program consists of several commands. One command unit is called a
block. One block is separated from another with an EOB of end of block
code.

Table 12.2 (a)  EOB code

Name ISOcode
EIA

code Notation in this manual

End of block (EOB) LF CR ;

At the head of a block, a sequence number consisting of address N
followed by a number not longer than four digits (1 to 9999) can be placed.
Sequence numbers can be specified in a random order, and any numbers
can be skipped.  Sequence numbers may be specified for all blocks or only
for desired blocks of the program.  In general, however, it is convenient
to assign sequence numbers in ascending order in phase with the
machining steps (for example, when a new tool is used by tool
replacement, and machining proceeds to a new surface with table
indexing.)

N300 X200.0 Z300.0 ; A sequence number is underlined.

Fig. 12.2 (b)  Sequence number and block (example)

NOTE
N0 must not be used for the reason of file compatibility with
other CNC systems.
Program number 0 cannot be used.  So 0 must not be used
for a sequence number regarded as a program number.

A parity check is made for a block on input tape horizontally. If the
number of characters in one block (starting with the code immediately
after an EOB and ending with the next EOB) is odd, an alarm (No.002)
is output.  No TV check is made only for those parts that are skipped by
the label skip function.  A comment section enclosed in parentheses is also
subject to TV check to count the number of characters.  The TV check
function can be enabled or disabled by setting on the MDI unit (See
Subsec. 11.5.3 in Part III.).

� Sequence number and
block

� TV check (Vertical parity
check along tape)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

125

A block consists of one or more words.  A word consists of an address
followed by a number some digits long. (The plus sign (+) or minus sign
(–) may be prefixed to a number.)
Word = Address + number (Example : X–1000)
For an address, one of the letters (A to Z) is used ; an address defines the
meaning of a number that follows the address.  Table 12.2 (b) indicates
the usable addresses and their meanings.
The same address may have different meanings, depending on the
preparatory function specification.

Table 12.2(b)  Major functions and addresses

Function Address Meaning

Program number O (1) Program number

Sequence number N Sequence number

Preparatory function G Specifies a motion mode (linear, arc,
etc.)

Dimension word X, Y, Z, U, V,
W, A, B, C

Coordinate axis move command

I, J, K Coordinate of the arc center

R Arc radius

Feed function F Rate of feed per minute, 
Rate of feed per revolution

Spindle speed function S Spindle speed

Tool function T Tool number

Auxiliary function M On/off control on the machine tool

B Table indexing, etc.

Offset number D, H Offset number

Dwell P, X Dwell time

Program number 
designation

P Subprogram number

Number of 
repetitions

P Number of subprogram repetitions

Parameter P, Q Canned cycle parameter

NOTE
In ISO code, the colon ( : ) can also be used as the address
of a program number.

N_ G_ X_    Y_ F_ S_ T_ M_ ;

Sequence
number

Preparatory
function

Dimension
word

Feed–
function

Spindle
speed
function

Tool
function

Miscellaneous
function

Fig. 12.2 (c)  1 block (example)

� Block configuration
(word and address)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

126

Major addresses and the ranges of values specified for the addresses are
shown below. Note that these figures represent limits on the CNC side,
which are totally different from limits on the machine tool side. For
example, the CNC allows a tool to traverse up to about 100 m (in
millimeter input) along the X axis.
However, an actual stroke along the X axis may be limited to 2 m for a
specific machine tool. 
Similarly, the CNC may be able to control a cutting federate of up to 100
m/min, but the machine tool may not allow more than 3 m/min. When
developing a program, the user should carefully read the manuals of the
machine tool as well as this manual to be familiar with the restrictions on
programming.

Table 12.2(c)  Major addresses and ranges of command values

Function Address Input in mm Input in inch

Program number O (1) 1–9999 1–9999

Sequence number N 1–9999 1–9999

Preparatory function G 0–255 0–255

Dimen-
sion 
word

Increment
system IS–B

X, Y, Z, U,
V, W, A,
B C I J

�99999.999mm �9999.9999inch

word
Increment
system IS–C

B, C, I, J,
K, R, �9999.9999mm �999.99999inch

Feed 
per 
minute

Increment
system IS–B

F 1–100000mm/min 0.01–4000
inch/min

minute
Increment
system IS–C

1–24000mm/min 0.01–480.00
inch/min

Feed per revolution F 0.01–500.00
mm/rev

0.0001–9.9999
inch/rev

Spindle speed function S 0–20000 0–20000

Tool function T 0–9999 0–9999

Auxiliary function M 0–999 0–9999

B 0–999999 0–999999

Offset number H, D 0–200 0–200

Dwell Increment
system IS–B

X, P 0–99999.999s 0–99999.999s

Increment
system IS–C

0–9999.9999s 0–9999.9999s

Designation of a
program number

P 1–9999 1–9999

Number of repetitions P 1–999 1–999

� Major addresses and
ranges of command
values

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

127

When a slash followed by a number (/n (n=1 to 9)) is specified at the head
of a block, and optional block skip switch n on the machine operator panel
is set to on, the information contained in the block for which /n
corresponding to switch number n is specified is ignored in tape operation
or memory operation.
When optional block skip switch n is set to off, the information contained
in the block for which /n is specified is valid. This means that the operator
can determine whether to skip the block containing /n.
Number 1 for /1 can be omitted.  However, when two or more optional
block skip switches are used for one block, number 1 for /1 cannot be
omitted.
Example)

(Incorrect) (Correct)
//3 G00X10.0; /1/3 G00X10.0;

This function is ignored when programs are loaded into memory. Blocks
containing /n are also stored in memory, regardless of how the optional
block skip switch is set.
Programs held in memory can be output, regardless of how the optional
block skip switches are set.
Optional block skip is effective even during sequence number search
operation.
Depending on the machine tool, all optional block skip switches (1 to 9)
may not be usable. Refer to manuals of the machine tool builder to find
which switches are usable.

WARNING
1 Position of a slash

A slash (/) must be specified at the head of a block. If a slash
is placed elsewhere, the information from the slash to
immediately before the EOB code is ignored.

2 Disabling an optional block skip switch
Optional block skip operation is processed when blocks are
read from memory or tape into a buffer. Even if a switch is
set to on after blocks are read into a buffer, the blocks
already read are not ignored.

NOTE
TV and TH check
When an optional block skip switch is on. TH and TV checks
are made for the skipped portions in the same way as when
the optional block skip switch is off.

� Optional block skip

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

128

The end of a program is indicated by commanding one of the following
codes at the end of the program:

Table 12.2 (d)  Code of a program end

Code Meaning usage

M02
For main program

M30
For main rogram

M99 For subprogram

If one of the program end codes is executed in program execution, the
CNC terminates the execution of the program, and the reset state is set.
When the subprogram end code is executed, control returns to the
program that called the subprogram.

NOTE
A block containing an optional block skip code such as /M02
; , /M30 ; , or /M99 ; is not regarded as the end of a program,
if the optional block skip switch on the machine operator’s
panel is set to on.
(See item “� Optional block skip”.)

� Program end

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

129

If a program contains a fixed sequence or frequently repeated pattern, such
a sequence or pattern can be stored as a subprogram in memory to simplify
the program.
A subprogram can be called from the main program. 
A called subprogram can also call another subprogram.

O ���� ;

M99 ;

Subprogram number
(or the colon (:) optionally in the case of ISO)

Program end

One subprogram

M99 need not constitute a separate block as indicated below.

Example) X100.0 Y100.0 M99 ;

M98 P ��� ���� ;
↑

Subprogram number
↑

Number of times the
subprogram is called
repeatedly

When no repetition data is specified, the subprogram is called just once.

When the main program calls a subprogram, it is regarded as a one–level
subprogram call. Thus, subprogram calls can be nested up to two levels
as shown below.

O0001 ;

M98P1000 ;

M30 ;

Main program

O1000 ;

M98P2000 ;

M99 ;

O2000 ;

M99 ;

Subprogram

(One–level nesting) (Two–level nesting)

Subprogram

A single call command can repeatedly call a subprogram up to 999 times.
For compatibility with automatic programming systems, in the first
block, Nxxxx can be used instead of a subprogram number that follows
O (or :).  A sequence number after N is registered as a subprogram number.

12.3
SUBPROGRAM

Format

� Subprogram
configuration

� Subprogram call

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0812. PROGRAM CONFIGURATION

130

See Chapter 10 in Part III for the method of registering a subprogram.

NOTE
1 The M98 and M99 signals are not output to the machine

tool.
2 If the subprogram number specified by address P cannot be

found, an alarm (No. 078) is output.

�M98 P51002 ;

�X1000.0 M98 P1200 ;

�Execution sequence of subprograms called from a main pro-
gram

A subprogram can call another subprogram in the same way
as a main program calls a subprogram.

This command specifies “Call the subprogram (number
1002) five times in succession.” A subprogram call com-
mand (M98P_) can be specified in the same block as a
move command.

This example calls the subprogram (number 1200) after an X
movement.

1 2 3
Main program

N0010 0 ;
N0020 0 ;
N0030 M98 P21010 ;

N0040 0 ;
N0050 M98 P1010 ;

N0060 0 ;

Subprogram

O1010 0 ;
N1020 0 ;
N1030 0 ;
N1040 0 ;
N1050 0 ;
N1060 0 M99 ;

If P is used to specify a sequence number when a subprogram is
terminated, control does not return to the block after the calling block, but
returns to the block with the sequence number specified by P.  Note,
however, that P is ignored if the main program is operating in a mode other
than memory operation mode.
This method consumes a longer time than the normal return method to
return to the main program.

Subprogram

O0010 … ;
N1020 … ;
N1030 … ;
N1040 … ;
N1050 … ;
N1060 M99 P0060 ;

Main program

N0010 … ;
N0020 … ;
N0030 M98 P1010 ;

N0040 … ;
N0050 … ;
N0060 … ;

Reference

Examples

Special Usage

� Specifying the sequence
number for the return
destination in the main
program

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. PROGRAM CONFIGURATIONPROGRAMMING

131

If M99 is executed in a main program, control returns to the start of the
main program. For example, M99 can be executed by placing /M99 ; at
an appropriate location of the main program and setting the optional block
skip function to off when executing the main program.  When M99 is
executed, control returns to the start of the main program, then execution
is repeated starting at the head of the main program.
Execution is repeated while the optional block skip function is set to off.
If the optional block skip function is set to on, the /M99 ; block is skipped
; control is passed to the next block for continued execution.
If/M99Pn ; is specified, control returns not to the start of the main
program, but to sequence number n. In this case, a longer time is required
to return to sequence number n.

N0010 … ;
N0020 … ;
N0030 … ;
N0040 … ;
N0050 … ;
N0060 M99 P0030 ;

N0070 … ;
N0080 M02 ;

/ Optional block skip
ON

Optional block skip
OFF

A subprogram can be executed just like a main program by searching for
the start of the subprogram with the MDI.
(See Section 9.4 in Part III for information about search operation.)
In this case, if a block containing M99 is executed, control returns to the
start of the subprogram for repeated execution. If a block containing
M99Pn is executed, control returns to the block with sequence number n
in the subprogram for repeated execution.  To terminate this program, a
block containing /M02 ; or /M30 ; must be placed at an appropriate
location, and the optional block skip must be set to off ; this switch is to
be set to on first.

N1010 … ;
N1020 … ;
N1030 … ;
N1040 M02 ;

N1050 M99 P1020 ;

/ Optional block skip
ON

� Using M99 in the main
program

� Using a subprogram only

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

132

13 FUNCTIONS TO SIMPLIFY PROGRAMMING
This chapter explains the following items:

13.1 CANNED CYCLE
13.2 RIGID TAPPING
13.3 CANNED GRINDING CYCLE (0–GSC, 0–GSD/II)
13.4 GRINDING–WHEEL WEAR COMPENSATION BY 

CONTINUOUS DRESSING (0–GSC, 0–GSD/II)
13.5 AUTOMATIC GRINDING WHEEL DIAMETER 

COMPENSATION AFTER DRESSING
13.6 IN–FEED GRINDING ALONG THE Y AND Z AXES AT THE 

END OF TABLE SWING (0–GSC, 0–GSD/II)
13.7 OPTIONAL ANGLE CHAMFERING AND CORNER 

ROUNDING
13.8 EXTERNAL MOTION FUNCTION (G81)
13.9 SMALL–DIAMETER PECK DRILLING CYCLE

General

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

133

Canned cycles make it easier for the programmer to create programs.
With a canned cycle, a frequently–used machining operation can be
specified in a single block with a G function; without canned cycles,
normally more than one block is required.  In addition, the use of canned
cycles can shorten the program to save memory.
Table 13.1 (a) lists canned cycles.

Table 13.1 (a)  Canned cycles

G code Drilling(–Z direction) Operation at thebottom of a hole Retraction(+Z direction) Application

G73 Intermittent feed – Rapid traverse High–speed peck drilling
cycle

G74 Feed Dwell→Spindle CW Feed Left–hand tapping cycle

G76 Feed Spindle orientation Rapid traverse Fine boring cycle

G80 – – – Cancel

G81 Feed – Rapid traverse Drilling cycle, spot drilling
cycle

G82 Feed Dwell Rapid traverse Drilling cycle, counter boring
cycle

G83 Intermittent feed – Rapid traverse Peck drilling cycle

G84 Feed Dwell→Spindle
CCW

Feed Tapping cycle

G85 Feed – Feed Boring cycle

G86 Feed Spindle stop Rapid traverse Boring cycle

G87 Feed Spindle CW Rapid traverse Back boring cycle

G88 Feed Dwell→spindle stop Manual Boring cycle

G89 Feed Dwell Feed Boring cycle

A canned cycle consists of a sequence of six operations (Fig. 13.1 (a))

Operation 1 Positioning of axes X and Y
(including also another axis)

Operation 2 Rapid traverse up to point R level
Operation 3 Hole machining
Operation 4 Operation at the bottom of a hole
Operation 5 Retraction to point R level
Operation 6 Rapid traverse up to the initial point

13.1
CANNED CYCLE

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

134

Operation 1

Operation 2

Operation 3

Operation 4

Operation 5

Operation 6

Rapid traverse

Feed

Initial level

Point R level

Fig. 13.1  Canned cycle operation sequence

The positioning plane is determined by plane selection code G17, G18,
or G19.  
The positioning axis is an axis other than the drilling axis.

Although canned cycles include tapping and boring cycles as well as
drilling cycles, in this chapter, only the term drilling will be used to refer
to operations implemented with canned cycles.
The drilling axis is a basic axis (X, Y, or Z) not used to define the
positioning plane, or any axis parallel to that basic axis.

Table 13.1 (b)  Positioning plane and drilling axis

G code Positioning  plane Drilling axis

G17 Xp–Yp plane Z axis

G18 Zp–Xp plane Y axis

G19 Yp–Zp plane X axis

G17 to G19 may be specified in a block in which any of G73 to G89 is
not specified.

CAUTION
Switch the drilling axis after canceling a canned cycle.

NOTE
A parameter (No. 057 #6) can be set to the Z axis always
used as the drilling axis.  When FXY=0, the Z axis is always
the drilling axis.

� Positioning plane

� �������� �
�	

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

135

The travel distance along the drilling axis varies for G90 and G91 as
follows:

R

Z

G90 (Absolute Command)

R

Z

G91 (Incremental Command)

Point R

Point Z

Point R

Point Z

G73, G74, G76, and G81 to G89 are modal G codes and remain in effect
until canceled.  When in effect, the current state is the drilling mode.
Once drilling data is specified in the drilling mode, the data is retained
until modified or canceled.
Specify all necessary drilling data at the beginning of canned cycles; when
canned cycles are being performed, specify data modifications only.

When the tool reaches the bottom of a hole, the tool may be returned to
point R or to the initial level.  These operations are specified with G98 and
G99.  The following illustrates how the tool moves when G98 or G99 is
specified.  Generally, G99 is used for the first drilling operation and G98
is used for the last drilling operation.
The initial level does not change even when drilling is performed in the
G99 mode.

G98(Return  to initial level ) G99(Return to point R level)

Initial level

Point R level

� Travel distance along the
drilling axis G90/G91

� Drilling mode

� Return point level
G98/G99

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

136

To repeat drilling for equally–spaced holes, specify the number of repeats
in K_. 
 K is effective only within the block where it is specified.
Specify the first hole position in incremental mode (G91).  
If it is specified in absolute mode (G90), drilling is repeated at the same
position.

Number of repeats K      The maximum command value = 9999

If K0 is specified, drilling data is stored, but drilling is not performed.

To cancel a canned cycle, use G80 or a group 01 G code.

�
��	 �� G �����

G00 : Positioning (rapid traverse)
G01 : Linear interpolation
G02 : Circular interpolation or helical interpolation (CW)
G03 : Circular interpolation or helical interpolation (CCW)

Subsequent sections explain the individual canned cycles.  Figures in
these explanations use the following symbols:

DwellP

OSS

Positioning (rapid traverse G00)

Cutting feed (linear interpolation G01)

Manual feed

Shift (rapid traverse G00)

Spindle orientation
(The spindle stops at a fixed rotation position)

� Repeat

� Cancel

� Symbols in figures

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

137

This cycle performs high–speed peck drilling.  It performs intermittent
cutting feed to the bottom of a hole while removing chips from the hole.

G73 (G98) G73 (G99)

G73 X_ Y_ Z_ R_ Q_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

Q_ : Depth of cut for each cutting feed

F_ : Cutting feedrate

K_ : Number of repeats

Initial level

q

q

q

d

d

d

d

Point R Point R levelPoint R

Point Z Point Z

q

q

q

13.1.1
High–speed Peck
Drilling Cycle (G73)

Format

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

138

The high–speed peck drilling cycle performs intermittent feeding along
the Z–axis.  When this cycle is used, chips can be removed from the hole
easily, and a smaller value can be set for retraction.  This allows, drilling
to be performed efficiently.  Set the clearance, d, in parameter 531.  
The tool is retracted in rapid traverse.
Before specifying G73, rotate the spindle using a miscellaneous function
(M code).
When the G73 code and an M code are specified in the same block, the
M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify Q and R in blocks that perform drilling.  If they are specified in
a block that does not perform drilling, they cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G73 in the same block.
If they are specified together, G73 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G73 X300. Y–250. Z–150. R–100. Q15. F120. ; 

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the ini–tial level.
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

�
�����	����

Restrictions

� Axis switching

� Drilling

� Q/R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

139

This cycle performs left–handed tapping.  In the left–handed tapping
cycle, when the bottom of the hole has been reached, the spindle rotates
clockwise.

G74 (G98) G74 (G99)

G74 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time

F_ : Cutting feedrate

K_ : Number of repeats

P

P

P

P

Initial level

Point R

Point Z

Spindle
CCW

Spindle
CCW

Point R level

Spindle CW
Spindle CW

Point Z

Point R

Tapping is performed by turning the spindle counterclockwise.  When the
bottom of the hole has been reached, the spindle is rotated clockwise for
retraction.  This creates a reverse thread.
Feedrate overrides are ignored during left–handed tapping.  A feed hold
does not stop the machine until the return operation is completed.
Before specifying G74, use a miscellaneous function (M code) to rotate
the spindle counterclockwise.
When the G74 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.2
Left–handed Tapping
Cycle (G74)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

140

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify  R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G74 in the same block.
If they are specified together, G74 is canceled.

In the canned cycle mode, tool offsets are ignored.

M4 S100 ; Cause the spindle to start rotating.  
G90 G99 G74 X300. Y–250. Z–150. R–120. F120. ;

Position, tapping hole 1, then return to point R.
Y–550. ; Position, tapping hole 2, then return to point R.
Y–750. ; Position, tapping hole 3, then return to point R.
X1000. ; Position, tapping hole 4, then return to point R.
Y–550. ; Position, tapping hole 5, then return to point R.
G98 Y–750. ; Position, tapping hole 6, then return to the

initial level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

141

The fine boring cycle bores a hole precisely.  When the bottom of the hole
has been reached, the spindle stops, and the tool is moved away from the
machined surface of the workpiece and retracted.

G76 (G98) G76 (G99)

G76 X_ Y_ Z_ R_ Q_ P_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

Q_ : Shift amount at the bottom of a hole

P_ : Dwell time at the bottom of a hole

F_ : Cutting feedrate

K_ : Number of repeats

q
q

Shift amount q

Spindle orientation

Tool

OSS OSS

Point R level

Point R

Point Z

Spindle CW

Initial level

Point Z

Point R

Spindle CW

PP

WARNING
Q (shift at the bottom of a hole) is a modal value retained
within canned cycles.  It must be specified carefully because
it is also used as the depth of cut for G73 and G83.

13.1.3
Fine Boring Cycle
(G76)

Format

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

142

When the bottom of the hole has been reached, the spindle is stopped at
the fixed rotation position, and the tool is moved in the direction opposite
to the tool tip and retracted.  This ensures that the machined surface is not
damaged and enables precise and efficient boring to be performed.
Before specifying G76, use a miscellaneous function (M code) to rotate
the spindle.
When the G76 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any additional axes, boring
is not performed.

Be sure to specify a positive value in Q.  If Q is specified with a negative
value, the sign is ignored.  Set the direction of shift in bits 4 and 5 of
parameter 002.  Specify Q and R in a block that performs boring.  If they
are specified in a block that does not perform boring, they are not stored
as modal data.

Do not specify a group 01 G code (G00 to G03) and G76 in the same block.
If they are specified together, G76 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S500 ; Cause the spindle to start rotating.
G90 G99 G76 X300. Y–250. Position, bore hole 1, then return to point R.

Z–150. R–120. Q5. Orient at the bottom of the hole, then shift
by 5 mm. 

P1000 F120. ; Stop at the bottom of the hole for 1 s.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Explanations

Restrictions

� Axis switching

� Boring

� Q/R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

143

This cycle is used for normal drilling.  Cutting feed is performed to the
bottom of the hole.  The tool is then retracted from the bottom of the hole
in rapid traverse.

G81 (G98) G81 (G99)

G81 X_ Y_ Z_ R_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

F_ : Cutting feedrate

K_ : Number of repeats

Point R

Initial level

Point Z

Point R

Point Z

Point R level

After positioning along the X– and Y–axes, rapid traverse is performed
to point R. 
Drilling is performed from point R to point Z.  
The tool is then retracted in rapid traverse.
Before specifying G81, use a miscellaneous function (M code) to rotate
the spindle.
When the G81 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is performed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.4
Drilling Cycle, Spot
Drilling (G81)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

144

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G81 in the same block.
If they are specified together, G81 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G81 X300. Y–250. Z–150. R–100. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ;  Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

145

This cycle is used for normal drilling.  
Cutting feed is performed to the bottom of the hole.  At the bottom, a dwell
is performed, then the tool is retracted in rapid traverse.  
This cycle is used to drill holes more accurately with respect to depth.

G82 (G98) G82 (G99)

G82 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time at the bottom of a hole

F_ : Cutting feed rate

K_ : Number of repeats

P
P

Point R

Initial level

Point Z

Point R

Point Z

Point R level

After positioning along the X– and Y–axes, rapid traverse is performed
to point R. 
Drilling is then performed from point R to point Z.  
When the bottom of the hole has been reached, a dwell is performed.  The
tool is then retracted in rapid traverse. 
Before specifying G82, use a miscellaneous function (M code) to rotate
the spindle.
When the G82 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.5
Drilling Cycle Counter
Boring Cycle (G82)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

146

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G82 in the same block.
If they are specified together, G82 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G82 X300. Y–250. Z–150. R–100. P1000 F120. ;

Position, drill hole 2, and dwell for 1 s at the
bottom of the hole, then return to point R.

Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� ���� ������

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

147

This cycle performs peck drilling. 
It performs intermittent cutting feed to the bottom of a hole while
removing shavings from the hole.

G83 (G98) G83 (G99)

G83 X_ Y_ Z_ R_ Q_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

Q_ : Depth of cut for each cutting feed

F_ : Cutting feedrate

K_ : Number of repeats

dq

dq

q

Initial level

Point R

Point Z

Point R level

Point Z

dq

dq

q

Point R

Q represents the depth of cut for each cutting feed.  It must always be
specified as an incremental value.  
In the second and subsequent cutting feeds, rapid traverse is performed
up to a point just before where the last drilling ended, and cutting feed is
performed again.  Specify the amount of retraction in parameter No. 532.
Be sure to specify a positive value in Q.  Negative values are ignored.
Before specifying G83, use a miscellaneous function (M code) to rotate
the spindle.
When the G83 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.6
Peck Drilling Cycle
(G83)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

148

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify Q and R in blocks that perform drilling.  If they are specified in
a block that does not perform drilling, they cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G83 in the same block.
If they are specified together, G83 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ;  Cause the spindle to start rotating.
G90 G99 G83 X300. Y–250. Z–150. R–100. Q15. F120. ; 

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� Q/R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

149

This cycle performs tapping. 
In this tapping cycle, when the bottom of the hole has been reached, the
spindle is rotated in the reverse direction.

G84 (G98) G84 (G99)

G84 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time

F_ : Cutting feedrate

K_ : Number of repents

P

P

Point R

Initial level

Point R level

Point Z

Spindle CCW

Spindle CW
P

P

Point R

Initial level

Point Z

Spindle CCW

Spindle CW

Tapping is performed by rotating the spindle clockwise.  When the bottom
of the hole has been reached, the spindle is rotated in the reverse direction
for retraction.  This operation creates threads.
Feedrate overrides are ignored during tapping.  A feed hold does not stop
the machine until the return operation is completed.
Before specifying G84, use a miscellaneous function (M code) to rotate
the spindle.
When the G84 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When the K is used to specify number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.7
Tapping Cycle (G84)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

150

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G84 in the same block.
If they are specified together, G84 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G84 X300. Y–250. Z–150. R–120. P300 F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

151

This cycle is used to bore a hole.

G85 (G98) G85 (G99)

G85 X_ Y_ Z_ R_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

F_ : Cutting feed rate

K_ : Number of repeats

Point R

Initial level

Point R level

Point Z Point Z

Point R

After positioning along the X– and Y– axes, rapid traverse is performed
to point R. 
Drilling is performed from point R to point Z.  
When point Z has been reached, cutting feed is performed to return to
point R.
Before specifying G85, use a miscellaneous function (M code) to rotate
the spindle.
When the G85 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.8
Boring Cycle (G85)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

152

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G85 in the same block.
If they are specified together, G85 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G85 X300. Y–250. Z–150. R–120. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

153

This cycle is used to bore a hole.

G86 (G98) G86 (G99)

G86 X_ Y_ Z_ R_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

F_ : Cutting feed rate

K_ : Number of repeats

Point R

Initial level

Point R level

Point Z

Spindle stop

Spindle CW

Spindle CW

Point R

Point Z

Spindle stop

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  
Drilling is performed from point R to point Z.  
When the spindle is stopped at the bottom of the hole, the tool is retracted
in rapid traverse.
Before specifying G86, use a miscellaneous function (M code) to rotate
the spindle.
When the G86 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  
The system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.9
Boring Cycle (G86)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

154

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G86 in the same block.
If they are specified together, G86 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G86 X300. Y–250. Z–150. R–100. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

��������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

155

This cycle performs accurate boring.

G87 (G98) G87 (G99)

G87 X_ Y_ Z_ R_ Q_ P_ F_ K_ ;
X_ Y_ : Hole position data

Z_ : The distance from the bottom of the hole to point Z

R_ : The distance from the initial level to point R 

(the bottom of the hole) level

Q_ : Tool shift amount

P_ : Dwell time

F_ : Cutting feed rate

K_ : Number of repeats

q
OSS

OSS

P

Point R

Not used

Point Z

Spindle CW

Spindle CW

Spindle orientation

Tool

Shift amount q

WARNING
Q (shift at the bottom of a hole) is a modal value retained in
canned cycles.  It must be specified carefully because it is
also used as the depth of cut for G73 and G83.

13.1.10
Boring Cycle Back
Boring Cycle (G87)

Format

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

156

After positioning along the X– and Y–axes, the spindle is stopped at the
fixed rotation position.  The tool is moved in the direction opposite to the
tool tip, positioning (rapid traverse) is performed to the bottom of the hole
(point R). 
The tool is then shifted in the direction of the tool tip and the spindle is
rotated clockwise.  Boring is performed in the positive direction along the
Z–axis until point Z is reached. 
At point Z, the spindle is stopped at the fixed rotation position again, the
tool is shifted in the direction opposite to the tool tip, then the tool is
returned to the initial level.  The tool is then shifted in the direction of the
tool tip and the spindle is rotated clockwise to proceed to the next block
operation.
Before specifying G87, use a miscellaneous function (M code) to rotate
the spindle.
When the G87 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  
The system then proceeds to the next drilling operation.  When K is used
to specify the number of repeats, the M code is executed for the first hole
only; for the second and subsequent holes, the M code is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any additional axes, boring
is not performed.

Be sure to specify a positive value in Q.  If Q is specified with a negative
value, the sign is ignored.  Set the direction of shift in bits 4 and 5 of
parameter 002.  Specify Q and R in a block that performs boring.  If they
are specified in a block that does not perform boring, they are not stored
as modal data.

Do not specify a group 01 G code (G00 to G03) and G76 in the same block.
If they are specified together, G76 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S500 ; Cause the spindle to start rotating.
G90 G87 X300. Y–250. Position, bore hole 1.

Z120. R–150. Q5. Orient at the initial level, then shift by 5 mm.
P1000 F120. ; Stop at point Z for 1 s.
Y–550. ; Position, drill hole 2.
Y–750. ; Position, drill hole 3.
X1000. ; Position, drill hole 4.
Y–550. ; Position, drill hole 5.
Y–750. ; Position, drill hole 6
G80 G28 G91 X0 Y0 Z0 ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Explanations

Restrictions

� Axis switching

� Boring

� Q/R

� Cancel

� Tool offset

Examplesww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

157

This cycle is used to bore a hole.

G88 (G98) G88 (G99)

G88 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time at the bottom of a hole

F_ : Cutting feed rate

K_ : Number of repeats

P P

Point R

Initial level

Point R level

Point Z

Spindle stop
after dwell

Spindle CW

Spindle CW

Point Z

Point R

Spindle stop
after dwell

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  Boring is performed from point R to point Z.  When boring
is completed, a dwell is performed, then the spindle is stopped.    The tool
is manually retracted from the bottom of the hole (point Z) to point R.
At point R, the spindle is rotated clockwise, and rapid traverse is
performed to the initial level.
Before specifying G88, use a miscellaneous function (M code) to rotate
the spindle.
When the G88 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.11
Boring Cycle (G88)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

158

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G88 in the same block.
If they are specified together, G88 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S2000 ; Cause the spindle to start rotating.
G90 G99 G88 X300. Y–250. Z–150. R–100. P1000 F120. ;

Position, drill hole 1, return to point R 
then stop at the bottom of the hole for 1 s.

Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

159

This cycle is used to bore a hole.

G89 (G98) G89 (G99)

G89 X_ Y_ Z_ R_ P_ F_ K_ ;

X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time at the bottom of a hole

F_ : Cutting feed rate

K_ : Number of repeats

P P

Point R

Initial level

Point R level

Point Z

Point R

Point Z

This cycle is almost the same as G85.  The difference is that this cycle
performs a dwell at the bottom of the hole.
Before specifying G89, use a miscellaneous function (M code) to rotate
the spindle.
When the G89 command and an M code are specified in the same block,
the M code is executed at the time of the first positioning operation.  The
system then proceeds to the next drilling operation.
When K is used to specify the number of repeats, the M code is executed
for the first hole only; for the second and subsequent holes, the M code
is not executed.
When a tool length offset (G43, G44, or G49) is specified in the canned
cycle, the offset is applied at the time of positioning to point R.

13.1.12
Boring Cycle (G89)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

160

Before the drilling axis can be changed, the canned cycle must be
canceled.

In a block that does not contain X, Y, Z, R, or any other axes, drilling is
not performed.

Specify R in blocks that perform drilling.  If it is specified in a block that
does not perform drilling, it cannot be stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G73 in the same block.
If they are specified together, G73 is canceled.

In the canned cycle mode, tool offsets are ignored.

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G89 X300. Y–250. Z–150. R–120. P1000 F120. ;

Position, drill hole 1, return to point R
then stop at the bottom of the hole for 1 s.

Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return
M5 ; Cause the spindle to stop rotating.

Restrictions

� Axis switching

� Drilling

� R

� Cancel

� Tool offset

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

161

G80 cancels canned cycles.

G80 ;

All canned cycles are canceled to perform normal operation.  Point R and
point Z are cleared.  This means that R = 0 and Z = 0 in incremental mode.
Other drilling data is also canceled (cleared).

M3 S100 ; Cause the spindle to start rotating.
G90 G99 G88 X300. Y–250. Z–150. R–120. F120. ;

Position, drill hole 1, then return to point R.
Y–550. ; Position, drill hole 2, then return to point R.
Y–750. ; Position, drill hole 3, then return to point R.
X1000. ; Position, drill hole 4, then return to point R.
Y–550. ; Position, drill hole 5, then return to point R.
G98 Y–750. ; Position, drill hole 6, then return to the initial

level.
G80 G28 G91 X0 Y0 Z0  ; Return to the reference position return, 

canned cycle cancel
M5 ; Cause the spindle to stop rotating.

13.1.13
Canned Cycle Cancel
(G80)

Format

Explanations

Examples

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

162

400 150 250 250 150

Y

X

X

Z

T 11 T 15 T 31

#1 #11

#7

#3

#2

#8

#13

#12

#10

#9

#6

#5

#4

# 11 to 16 Drilling of a 10mm diameter hole
# 17 to 10 Drilling of a 20mm diameter hole
# 11 to 13 Boring of a 95mm diameter hole(depth 50 mm)

190200 150

250

100

100

100

100

350

200

Reference position

Retract position

Initial level

50
50
30
20

Program example using tool length offset and canned cycles

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

163

Offset value +200.0 is set in offset No.11, +190.0 is set in offset No.15, and +150.0 is set in offset No.31

Program example
;
N001 G92X0Y0Z500.0; Coordinate setting at reference position
N002 G90  G00  Z250.0  T11  M6; Tool change
N003 G43  Z0  H11; Initial level, tool length offset
N004 S30  M3 Spindle start
N005 G99  G81X400.0  R  Y–350.0

Z–153.0R–97.0  F120; Positioning, then #1 drilling
N006 Y–550.0; Positioning, then #2 drilling and point R level return
N007 G98Y–750.0; Positioning, then #3 drilling and initial level return
N008 G99X1200.0; Positioning, then #4 drilling and point R level return
N009 Y–550.0; Positioning, then #5 drilling and point R level return
N010 G98Y–350.0; Positioning, then #6 drilling and initial level return
N011 G00X0Y0M5; Reference position return, spindle stop
N012 G49Z250.0T15M6; Tool length offset cancel, tool change
N013 G43Z0H15; Initial level, tool length offset
N014 S20M3; Spindle start
N015 G99G82X550.0Y–450.0 Positioning, then #7 drilling, point R level return

Z–130.0R–97.0P300F70;
N016 G98Y–650.0; Positioning, then #8 drilling, initial level return
N017 G99X1050.0; Positioning, then #9 drilling, point R level return
N018 G98Y–450.0; Positioning, then #10 drilling, initial level return
N019 G00X0Y0M5; Reference position return, spindle stop
N020 G49Z250.0T31M6; Tool length offset cancel, tool change
N021 G43Z0H31; Initial level, tool length offset
N022 S10M3; Spindle start
N023 G85G99X800.0Y–350.0 Positioning, then #11 drilling, point R level return

Z–153.0R47.0F50;
N024 G91Y–200.0K2; Positioning, then #12, 13 drilling. point R level return
N025 G28X0Y0M5; Reference position return, spindle stop
N026 G49Z500.0; Tool length offset cancel
N027 M0; Program stop

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

164

The tapping cycle (G84) and left–handed tapping cycle (G74) may be
performed in standard mode or rigid tapping mode.  
In standard mode, the spindle is rotated and stopped along with a
movement along the tapping axis using miscellaneous functions M03
(rotating the spindle clockwise), M04 (rotating the spindle
counterclockwise), and M05 (stopping the spindle) to perform tapping.In
rigid mode, tapping is performed by controlling the spindle motor as if
it were a servo motor and by interpolating between the tapping axis and
spindle.
When tapping is performed in rigid mode, the spindle rotates one turn
every time a certain feed (thread lead) which takes place along the tapping
axis.  This operation does not vary even during acceleration or
deceleration.
Rigid mode eliminates the need to use a floating tap required in the
standard tapping mode, thus allowing faster and more precise tapping.

13.2
RIGID TAPPING

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

165

When the spindle motor is controlled in rigid mode as if it were a servo
motor, a tapping cycle can be sped up.

G84(G98) G84(G99)

G84 X_ Y_ Z_ R_ P_ F_ K_ ;
X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole or the

position of the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time at the bottom of the hole and at point R when a

return is made

F_ : Cutting feedrate

K_ : Number of repeats

P P

Point R level

Point Z

Spindle CW

Point R Point R

Spindle stop

Spindle CCW Spindle CCWSpindle stopSpindle stop

Point Z

Spindle stop

Spindle stop

Initial level

Operation5

Operation4

Operation3

Operation1

Operation2
Operation6

Spindle
stop

Spindle CW
P P

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  
Tapping is performed from point R to point Z.  When tapping is
completed, a dwell is performed and the spindle is stopped.  The spindle
is then rotated in the reverse direction, the tool is retracted to point R, then
the spindle is stopped.  Rapid traverse to initial level is then performed.
While tapping is being performed, the feedrate override and spindle
override are assumed to be 100%.
However, the speed for extraction (operation 5) can be overridden by up
to 200% depending on the setting at bit 4 of parameter and parameter 063
and parameter 258.

Rigid mode can be specified using any of the following methods:

· Specify M29 S ***** before a tapping command.

· Specify M29 S ***** in a block which contains a tapping
command.

· Specify G84 for rigid tapping (parameter No. 076 #3 = 1).

13.2.1
Rigid Tapping (G84)

Format

Explanations

� Rigid mode
ww

w.
cn

cc
en

ter
.co

m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

166

In feed–per–minute mode, the thread lead is obtained from the
expression, feedrate × spindle speed.  In feed–per–revolution mode, the
thread lead equals the feedrate speed.
If a tool length offset (G43, G44, or G49) is specified in the canned cycle,
the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.  If the drilling axis is changed in rigid mode, alarm (No. 206)
is issued.

If a speed higher than the maximum speed for the gear being used is
specified, alarm (No. 200) is issued.

If a value exceeding the upper limit of cutting feedrate is specified,  alarm
(No. 011) is issued.

If an S command and axis movement are specified between M29 and G84,
alarm (No. 203) is issued.  If M29 is specified in a tapping cycle, alarm
(No. 204) is issued.

Specify R in a block that performs drilling.  If R is specified in a
non–drilling block, it is not stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G73 in the same block.
If they are specified together, G73 is canceled.

In the canned cycle mode, tool offsets are ignored.

Metric input Inch input Remarks

G94 1 mm/min 0.01 inch/min Decimal point programming allowed

G95 0.01 mm/rev 0.0001 inch/rev Decimal point programming allowed

Z–axis feedrate  1000 mm/min
Spindle speed  1000 rpm
Thread lead    1.0 mm 
<Programming of feed per minute>
G94 ; Specify a feed–per–minute command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G84 Z–100.0 R–20.0 F1000 ; Rigid tapping
<Programming of feed per revolution>
G95 ; Specify a feed–per–revolution command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G84 Z–100.0 R–20.0 F1.0 ; Rigid tapping

� Thread lead

Restrictions

� Axis switching

� S command

� F command

� M29

� R

� Cancel

� Tool offset

� Unit of F

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

167

When the spindle motor is controlled in rigid mode as if it were a servo
motor, tapping cycles can be sped up.

G74 (G98) G74 (G99)

G74 X_ Y_ Z_ R_ P_ F_ K_ ;
X_ Y_ : Hole position data

Z_ : The distance from point R to the bottom of the hole or 

the position of the bottom of the hole

R_ : The distance from the initial level to point R level

P_ : Dwell time at the bottom of the hole and at point R when

return is made.

F_ : Cutting feedrate

K_ : Number of repeats

P P
Point Z

Point R level

Spindle
CCW

Spindle stop

Spindle stop

Initial level

Operation5

Operation4

Operation3

Operation1
Operation2 Operation6

Spindle
stop

Spindle CW Spindle CW Spindle CW

Point R level

Point Z

Spindle
CCW

Point R Point R

Spindle stop

P P
Spindle
stop

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  
Tapping is performed from point R to point Z.  When tapping is
completed, a dwell is performed and the spindle is stopped.  The spindle
is then rotated in the normal direction, the tool is retracted to point R, then
the spindle is stopped.  Rapid traverse to initial level is then performed.
While tapping is being performed, the feedrate override and spindle
override are assumed to be 100%.
However, the speed for extraction (operation 5) can be overridden by up
to 200% depending on the setting at bit 4 of parameter 063 and parameter
258.

Rigid mode can be specified using any of the following methods:

· Specify M29 S ***** before a tapping command.

· Specify M29 S ***** in a block which contains a tapping
command.

· Specify G84 for rigid tapping. (parameter No. 076#3 = 1) .

13.2.2
Left–handed Rigid
Tapping Cycle (G74)

Format

Explanations

� Rigid mode

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

168

In feed–per–minute mode, the thread lead is obtained from the
expression, feedrate × spindle speed.  In feed–per–revolution mode, the
thread lead equals the feedrate.
If a tool length offset (G43, G44, or G49) is specified in the canned cycle,
the offset is applied at the time of positioning to point R.

Before the drilling axis can be changed, the canned cycle must be
canceled.  If the drilling axis is changed in rigid mode, alarm (No. 206)
is issued.

Specifying a rotation speed exceeding the maximum speed for the gear
used causes alarm (No. 200).

Specifying a value that exceeds the upper limit of cutting feedrate  causes
alarm (No. 011).

Specifying an S command or axis movement between M29 and G84
causes alarm (No. 203).
Then, specifying M29 in the tapping cycle causes alarm (No. 204).

Specify R in a block that performs drilling.  If R is specified in a
non–drilling block, it ss not stored as modal data.

Do not specify a group 01 G code (G00 to G03) and G73 in the same block.
If they are specified together, G73 is canceled.

In the canned cycle mode, tool offsets are ignored.

Metric input Inch input Remarks

G94 1 mm/min 0.01 inch/min Decimal point programming allowed

G95 0.01 mm/rev 0.0001 inch/rev Decimal point programming allowed

Z–axis feedrate  1000 mm/min
Spindle speed  1000 rpm
Thread lead    1.0 mm 
<Programming for feed per minute>
G94 ; Specify a feed–per–minute command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G84 Z–100.0 R–20.0 F1000 ; Rigid tapping
<Programming for feed per revolution>
G95 ; Specify a feed–per–revolution command.
G00 X120.0 Y100.0 ; Positioning
M29 S1000 ; Rigid mode specification
G74 Z–100.0 R–20.0 F1.0 ; Rigid tapping

� Thread lead

Restrictions

� Axis switching

� S command

� F command

� M29

� R

� Cancel

� Tool offset

� Unit of F

��������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

169

Tapping a deep hole in rigid tapping mode may be difficult due to chips
sticking to the tool or increased cutting resistance.  In such cases, the peck
rigid tapping cycle is useful.  
In this cycle, cutting is performed several times until the bottom of the
hole is reached.  Two peck tapping cycles are available:  High–speed peck
tapping cycle and standard peck tapping cycle.  These cycles are selected
using the bit (bit 0) of parameter 388.

G84, G74 (G98) G84, G74 (G99)

G84 (or G74) X_ Y_ Z_ R_ P_ Q_ F_ K_ ;
X_ Y_ : Hole position data
Z_ : The distance from point R to the bottom of the hole or the

position of the bottom of the hole
R_ : The distance from the initial level to point R level
P_ : Dwell time at the bottom of the hole and at point R when a

return is made
Q_ : Depth of cut for each cutting feed 
F_ : The cutting feedrate
K_ : Number of repeats

� High–speed peck tapping cycle
    (Parameter No.388#0=0)

d
q

q

q

d

�
�

� Peck tapping cycle 
(Parameter No.388#0=1)

�

� The tool operates at a normal cutting
feedrate.  The normal time constant
is used.

� Retraction can be overridden. 
The retraction time constant is used.

� The tool operates at a normal cutting
feedrate.  The normal time constant
is used.

� Retraction can be overridden. 
 The retraction time constant is used.

� Retraction can be overridden.
The normal time constant is used.

Point Z

Initial level

Point R

d=retraction distance

Point R level

d=cutting start distance

Initial level

During a rigid tapping cycle, CNC checks
whether the pulse distribution is per-
formed or not and start the next operation
at the end of each operation of � and
� in the peck tapping cycle.

d
q

q

q

d

Point Z

Point R Point R level

�
�

d
q

q

q

d

�
�

Point Z

Point R Point R level
�

d
q

q

q

d

�
�

Point Z

Point R Point R level

13.2.3
Peck Rigid Tapping
Cycle (G84 or G74)

Format

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

170

After positioning along the X– and Y–axes, rapid traverse is performed
to point R.  From point R, cutting is performed with depth Q (depth of cut
for each cutting feed), then the tool is retracted by distance d.  The bit (bit
4) of parameter 063 specifies whether retraction can be overridden or not.
When point Z has been reached, the spindle is stopped, then rotated in the
reverse direction for retraction.
Set the retraction distance, d, in parameter 403.

After positioning along the X– and Y–axes, rapid traverse is performed
to point R level.  From point R, cutting is performed with depth Q (depth
of cut for each cutting feed), then a return is performed to point R.  The
bit (bit 4) of parameter 063 specifies whether the retraction can be
overridden or not. Traverse is performed from point R to a position
distance d from the end point of the last cutting, which is where cutting
is restarted.  For this traverse, the specification of the bit (bit 4) of
parameter 063 is also valid.  When point Z has been reached, the spindle
is stopped, then rotated in the reverse direction for retraction.
Set d (distance to the point at which cutting is started) in parameter 403.

Before the drilling axis can be changed, the canned cycle must be
canceled.  If the drilling axis is changed in rigid mode, alarm (No. 206)
is issued.

Specifying a rotation speed exceeding the maximum speed for the gear
used causes alarm (No. 200).

Specifying a value that exceeds the upper limit of cutting feedrate  causes
alarm (No. 011).

Specifying an S command or axis movement between M29 and G84
causes alarm (No. 203).
Then, specifying M29 in the tapping cycle causes alarm (No. 204).

Specify Q and R in a block that performs drilling.  If they are specified
in a block that does not perform drilling, they are not stored as modal data.
When Q0 is specified, the peck rigid tapping cycle is not performed.

Do not specify a group 01 G code (G00 to G03) and G73 in the same block.
If they are specified together, G73 is canceled.

In the canned cycle mode, tool offsets are ignored.

Metric input Inch input Remarks

G94 1 mm/min 0.01 inch/min Decimal point programming allowed

G95 0.01 mm/rev 0.0001 inch/rev Decimal point programming allowed

Explanations

� High–speed peck
tapping cycle

� Peck tapping cycle

Restrictions

� Axis switching

� S command

� F command

� M29

� Q/R

� Cancel

� Tool offset

� Unit of Fww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

171

The rigid tapping canned cycle is canceled.  For how to cancel this cycle,
see Section 13.1.13.

13.2.4
Canned Cycle Cancel
(G80)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

172

Canned grinding cycles make it easier for the programmer to create
programs that include grinding.  With a canned grinding cycle, repetitive
operation peculiar to grinding can be specified in a single block with a G
function; without canned grinding cycles, normally more than one block
is required.  In addition, the use of canned grinding cycles shortens the
program to save memory.  The following four canned grinding cycles are
available:
⋅Plunge grinding cycle (G75)
⋅Direct constant–dimension plunge grinding cycle (G77)
⋅Continuous–feed surface grinding cycle (G78)
⋅Intermittent–feed surface grinding cycle (G79)

13.3
CANNED GRINDING
CYCLE 
(0–GSC, 0–GSD/II)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

173

A plunge grinding cycle is performed.

G75

G75 I_ J_ K_ X(Z)_ R_ F_ P_ L_ ;

I_ : Depth–of–cut 1 (A sign in the command specifies the direction
 of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut
X(Z)_ : Range of grinding (A sign in the command specifies the 

direction of grinding.)
R_ : Feedrate for I and J
F_ : Feedrate for X (Z)
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous 

dressing)

I

J

X(Z)

�(R)

� P

� (F)

� P

X(Z)

Y

� (F)

� (R)

The plunge grinding cycle consists of six operation sequences.
Operations � to � are repeated until the depth reaches the total depth
of cut specified at address K.  In the single block stop mode, operations
� to � are performed every cycle start.

� Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by I (depth of cut 1).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Cutting feed is performed for the amount specified by X (or Z).  
The feedrate is specified by F.

� Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by J (depth of cut 2).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Feeding is performed in the reverse direction for the amount specified
by X (or Z) at a feedrate specified by F.

13.3.1
Plunge Grinding Cycle
(G75)

Format

Explanations

� Grinding wheel cutting

� Dwell

� Grinding

� Grinding wheel cutting

� �����

� Grinding 
(return direction)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

174

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

When the total depth of cut is reached during cutting using I or J, the
subsequent operation sequences (up to 6) are executed, then the cycle
terminates.  In this case, no further cutting is performed after the total
depth of cut is reached.

� Chart of operation in which the total depth of cut is reached by cutting
specified by I and J:

I

J

�

�

�

�

��

K

I
K

�

� �

�

�

� Chart of operation in which the total depth of cut is reached during 
cutting specified by I and J:

I

J

�

�

�

�

�
�

K

I

K

�� �

�

�

Restrictions

� X(Z), I, J, K

� Clear

� Operation performed
when the total depth of
cut is reached

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

175

A direct constant–dimension plunge grinding cycle is performed.

G77

G77 I_ J_ K_ X(Z)_ R_ F_ P_ L_ ;

I_ : Depth–of–cut 1 (A sign in the command specifies the direction
of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut
X(Z)_ : Range of grinding (A sign in the command specifies the 

direction of grinding.)
R_ : Feedrate for I and J
F_ : Feedrate for X (Z)
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous 

dressing)

I

J

X(Z)

�(R)

� P

� (F)

� P

X(Z)

Y

� (F)

� (R)

The constant–dimension plunge grinding cycle consists of six operation
sequences.  Operations � to � are repeated until the depth reaches the
total depth of cut specified at address K.

� Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by I (depth of cut 1).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Cutting feed is performed for the amount specified by X (or Z).  
The feedrate is specified by F.

� Cutting is performed along the Y–axis in cutting feed mode for the
amount specified by J (depth of cut 2).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Feeding is performed in the reverse direction for the amount specified
by X (or Z) at a feedrate specified by F.

13.3.2
Direct
Constant–dimension
Plunge Grinding Cycle
(G77)

Format

Explanations

� Grinding wheel cutting

� Dwell

� Grinding

� Grinding wheel cutting

� �����

� Grinding 
(return direction)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

176

When the cycle is performed using G77, a skip signal can be input to
terminate the cycle.  When a skip signal is input, the current operation
sequence is interrupted or completed, then the cycle is terminated.
The following shows how the system operates when the skip signal is
input during each operation sequence.

� When the skip signal is input during operation sequence 1 or 4 (cutting
feed specified by I or J), cutting is stopped immediately and the tool
returns to the X (Z) coordinate at which the cycle started.

Skip Signal

Skip Signal(End)

(End)

� When the skip signal is input during operation sequence 2 or 5 (dwell),
dwell is stopped immediately and the tool returns to the X (Z)
coordinate at which the cycle started.

� When the skip signal is input during operation sequence 3 or 6
(movement), the tool returns to the X (Z) coordinate at which the cycle
started after the movement specified by X (Z) is completed.

Skip Signal
(End)

(End)

Skip Signal

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

� ���	 
�����

Restrictions

� X(Z), I, J, K

� Clear

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

177

A continuous–feed surface grinding cycle is performed.

G78

G78 I_ (J_) K_ X_ F_ P_ L_ ;

I

J

X

� P(Dwell)
� (F)

� P(Dwell)� (F)

X

Z

I_ : Depth–of–cut 1 (A sign in the command specifies the direction
of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut
X(Z)_ : Range of grinding (A sign in the command specifies the 

direction of grinding.)
R_ : Feedrate for I and J
F_ : Feed rate
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous 

dressing)

The continuous–feed surface grinding cycle consists of four operation
sequences.  Operations � to � are repeated until the depth reaches the
total depth of cut specified in address K.  In the single block stop mode,
operations � to � are performed every cycle start.

� Dwell
� Grinding
� Dwell
� Grinding (in reverse direction)

13.3.3
Continuous–feed
Surface Grinding Cycle
(G78)

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

178

When J is omitted, it is assumed to be 1.  J is valid only in the block where
it is specified.

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

When the total depth of cut is reached during cutting using I or J, the
subsequent operation sequences (up to 6) are executed, then the cycle
terminates.  In this case, no further cutting is performed after the total
depth of cut is reached.

⋅ Chart of operation in which the total depth of cut is reached by cutting
specified by I and J:

I

J

�
�

�

�

K

I

J

K
�

�

�

�

⋅ Chart of operation in which the total depth of cut is reached during
cutting specified by I and J:

I

J

�
�

�

�

K

I

J

K
�

�

�

�

Restrictions

� �

� I, J, K, X

� �����

� Operation performed
when the total depth of
cut is reached

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

179

An intermittent–feed surface grinding cycle is performed.

G79

G79 I_ J_ K_ X_ R_ F_ P_ L_ ;

I_ : Depth–of–cut 1 (A sign in the command specifies the direction
of cutting.)

J_ : Depth–of–cut 2 (A sign in the command specifies the direction
of cutting.)

K_ : Total depth of cut
X(Z)_ : Range of grinding (A sign in the command specifies the 

direction of grinding.)
R_ : Feedrate for I and J
F_ : Feedrate for X (Z)
P_ : Dwell time
L_ : Grinding–wheel wear compensation (Only for continuous 

dressing)

I

J

X

� (R)

� P

� (F)

� P

X

Z

� (F)

� (R)

The intermittent–feed surface grinding cycle consists of six operation
sequences.  Operations � to � are repeated until the depth reaches the
total depth of cut specified at address K.  In the single block stop mode,
operations � to � are performed every cycle start.

� Cutting is performed along the Z–axis in cutting feed mode for the
amount specified by I (depth of cut 1).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Cutting feed is performed for the amount specified by X (or Z).  The
feedrate is specified by F.

� Cutting is performed along the Z–axis in cutting feed mode for the
amount specified by J (depth of cut 2).  The feedrate is specified by R.

� Dwell is performed for the time specified by P.

� Feeding is performed in the reverse direction for the amount specified
by X at a feedrate specified by F.

13.3.4
Intermittent–feed
Surface Grinding Cycle
(G79)

Format

Explanations

� Grinding wheel cutting

� Dwell
� Grinding

� Grinding wheel cutting

� �����

� Grinding 
(return direction)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

180

X, (Z), I, J, and K must all be specified in incremental mode.

I, J, X, and Z in canned cycles are modal data common to G75, G77, G78,
and G79.  They remain valid until new data is specified.  They are cleared
when a group 00 G code other than G04 or a group 01 G code other than
G75, G77, G78, and G79 is specified.

������
�����

� �� �� �� �

� ��	�

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

181

This function enables continuous dressing.  
When G75, G77, G78, or G79 is specified, grinding wheel cutting and
dresser cutting are compensated continuously according to the amount of
continuous dressing during grinding.

Specify an offset number (grinding–wheel wear compensation number)
at address L in the block containing G75, G77, G78, or G79.  The
compensation amount set in the offset memory area corresponding to the
specified number is used as the amount of dressing.
Up to 200 offset numbers (L1 to L200) can be specified.  Compensation
amounts must be set beforehand in offset memory corresponding to offset
numbers from the CRT/MDI panel.
When L is omitted or L0 is specified in a surface grinding canned cycle
block, compensation is not performed.

Compensation is performed for every grinding operation (every
movement along the X–axis) in the operation sequences of a canned
grinding cycle.  While the tool moves along the X–axis, compensation is
performed along the Y–axis (grinding wheel cutting) and the V–axis
(dresser cutting) for simultaneous three–axis interpolation.
The travel distance (compensation amount) along the Y–axis is the same
as specified dressing amount, and the travel distance along the V–axis is
twice as long (diameter).

X

Workpiece

2a

a
X

YV

Dresser

Grinding
wheel

a : Amount of dressing

13.4
GRINDING–WHEEL
WEAR
COMPENSATION BY
CONTINUOUS
DRESSING 
(0–GSC, 0–GSD/II)

Explanations

� Specification

� Compensation

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

182

Compensation amounts set in offset memory can be modified by using the
external tool compensation function or programming (by changing
offsets using custom macro variables).
With these functions, the compensation amount for the diameter of the
dressed grinding wheel can be changed.
If the compensation amount associated with the offset number specified
in the H code is smaller than the minimum grinding wheel diameter
specified in parameter 838 when programmed compensation (using G43
or G44) is performed, a signal is output to the PMC.

X

Workpiece

2a

a
X

YV

Dresser

Grinding
wheel

a : Amount of dressing

13.5
AUTOMATIC
GRINDING WHEEL
DIAMETER
COMPENSATION
AFTER DRESSING

13.5.1
Checking the Minimum
Grinding Wheel
Diameter 
(0–GSC, 0–GSD/II)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

183

Every time an external signal is input, cutting is performed by a fixed
amount according to the programmed profile in the specified Y–Z plane.

G161 R_ ;

G160 ;

profile  program

Specify the start of an operation mode and profile program.  Also specify
the depth of cut in R.

Program a workpiece figure in the Y–Z plane using linear interpolation
(G01) and/or circular interpolation (G02 or G03).  One or more blocks can
be specified.

Cancel the operation mode (end of the profile program).

Do not specify codes other than G01, G02, and G03 within the profile
program.

70.0 70.080.0

N1

N2

N3

R=67.000

α

Z

Y

O0001 ;
    :
N0 G161 R10.0 ;
N1 G91 G01 Z–70.0 F100 ;
N2 G19 G02 Z–80.0 R67.0 ;
N3 G01 Z–70.0 ;
N4 G160 ;
    :

In the above program, every time the in–feed cutting start signal is input,
the tool is moved by 10.000 along the machining profile shown above.
  α= Travel distance for each in–feed control cutting start signal input
The feedrate is programmed with an F code.

13.6
IN–FEED GRINDING
ALONG THE Y AND Z
AXES AT THE END
OF TABLE SWING
(0–GSC, 0–GSD/II)
Format

Explanations

� G161 R_

� Profile program

� G160

Restrictions

� Profile program

Examples

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

184

Chamfering and corner rounding blocks can be inserted automatically
between linear interpolation and linear interpolation blocks

, C_

, R_

Chamfering

Corner R

When the above specification is added to the end of a block that specifies
linear interpolation (G01), a chamfering or corner rounding block is
inserted.
Blocks specifying chamfering and corner rounding can be specified
consecutively.

After C, specify the distance from the virtual corner point to the start and
end points.  The virtual corner point is the corner point that would exist
if chamfering were not performed.

Hypothetical corner intersection

Inserted chamfering block

� G91 G01 X100.0 ,C10.0 ;
� X100.0 Y100.0 ;

C

C

After R, specify the radius for corner rounding.

� G91 G01 X100.0 ,R10.0 ;
� X100.0 Y100.0 ;

Center of a circle with radius R

R

Hypothetical corner
intersection

13.7
OPTIONAL ANGLE
CHAMFERING AND
CORNER ROUNDING

Format

Explanations

� Chamfering

� Corner R

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

185

Chamfering and corner rounding can be performed only in the plane
specified by plane selection (G17, G18, or G19).  These functions cannot
be performed for parallel axes.

A block specifying chamfering or corner rounding must be followed by
a block that specifies a move command using linear interpolation (G01).
If the next block does not contain these specifications, alarm 052 is issued.

A chamfering or corner rounding block can be inserted only for move
commands which are performed in the same plane.  In a block that comes
immediately after plane switching (G17, G18, or G19 is specified),
neither chamfering nor corner rounding can be specified.

If the inserted chamfering or corner rounding block causes the tool to go
beyond the original interpolation move range, alarm 055 is issued.

In a block that comes immediately after the coordinate system is changed
(G92, or G52 to G59) or a return to the reference position (G28 to G30)
is specified, neither chamfering nor corner rounding can be specified.

The chamfering or corner rounding block is regarded as having a travel
distance of zero if the angle between the two straight lines is within +1°.

The following G codes cannot be used in a block that specifies chamfering
or corner rounding.  They also cannot be used between chamfering and
corner rounding blocks that define a continuous figure.
⋅G codes of group 00 (except G04)
⋅G68 of group 16

Corner rounding cannot be specified in a threading block.

Restrictions

� Plane selection

� Next block

� Plane switching

� Exceeding the move
range

� Coordinate system

� Travel distance 0

� Unavailable G codes

� ��	������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

186

Upon completion of positioning in each block in the program, an external
operation function signal can be output to allow the machine to perform
specific operation.
Concerning this operation, refer to the manual supplied by the machine
tool builder.

G81 _ ; ( ��_ Axis move command )��

Every time positioning for the IP_ move command is completed, the CNC
sends a external operation function signal to the machine.  An external
operation signal is output for each positioning operation until canceled by
G80 or a group 01 G code.

No external operation signals are output during execution of a block that
contains neither X nor Y.

13.8
EXTERNAL MOTION
FUNCTION (G81)

Format

Explanations

Restrictions

� A block without X or Y
axis

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

187

When drilling is performed using a tool with an overload torque detection
function, this function allows the small–diameter peck drilling cycle to
be performed by entering an overload torque detection signal as a skip
signal to change the spindle speed and cutting feedrate.  The machining
sequence for small–diameter peck drilling is shown below.

Tool �

�

Overload torque

Overload torque �Dwell

Point R

Point Z

�

�

Q

∆

∆ : Initial minimal clearance for retraction to point R, and clearance for the start point 
(previous end point) in second and subsequent cuttings

Q : Depth of each cut

: Movement at the rapid traverse rate

: Movement at a parameter–set or programmed feedrate

: Movement at a programmed cutting feedrate

Fig. 13.9

The machining sequence of the small–diameter peck drilling cycle is as
follows:

� Positioning along the X–axis and Y–axis

� Positioning at point R along the Z–axis

� Drilling along the Z–axis (maximum depth of cut Q)

� Repetition of the following operations along the Z–axis until the
bottom is reached

� Retract (→ Minimal clearance ∆)
� Retract (→ Point R)
� Advance (Point R→ Start point + Clearance ∆)
� Cut (Depth of cut Q + ∆)

� Dwell at the hole bottom

� Return to point R along the Z–axis (or to the initial point)

13.9
SMALL–DIAMETER
PECK DRILLING
CYCLE

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

188

M�� ;
G83 X_ Y_ Z_ R_ Q_ F_ I_ K_ P_ ;
X_ Y_ ;
X_ Y_ ;

G80 ;

Specification Code Description

Specification of 
small–diameter
peck drilling cycle

M�� Specify an M code for the small–diameter
peck drilling cycle set in parameter No. 304.
G83, specified below, is regarded as being
the small–diameter peck drilling cycle.

Specification of the
peck drilling cycle

G83 G83 is modal.  Once this code is specified,
the code remains valid until another canned
cycle is specified or a G code for canceling
the canned cycle is specified.

Specification of a
hole position

X_
Y_

Specify a hole position by using either an in-
cremental or absolute value.  The path and
feedrate specification is the same as for
positioning using G00.

Hole machining 
data

Z_ Specify the distance from point R to the hole
bottom by using an incremental value, or
specify the position of the hole bottom by us-
ing an absolute value.

Q_ Depth of each cut

R_ Specify the distance from the initial level to
point R by using an incremental value, or
specify the position of point R by using an
absolute value.

F_ Cutting feedrate

I_ Advance or retract feedrate (The default is
the parameter–set value.)

K_ Number of repeats (The default is 1.)

P_ Dwell time at the hole bottom (The default is
0 seconds.)

Cancellation of 
small–diameter
peck drilling cycle

G80 This code cancels the small–diameter peck
drilling cycle.  This code also cancels the M
code for small–diameter peck drilling cycle
specification.

NOTE
The hole machining data is modal.  When identical hole
machining is repeated, the hole machining data need not be
specified in each of the subsequent blocks.

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. FUNCTIONS TO SIMPLIFY

PROGRAMMINGPROGRAMMING

189

(1)The small–diameter peck drilling cycle is executed by specifying G83
after specifying an M code for the small–diameter peck drilling cycle.
During the execution of this cycle, the small–diameter peck drilling
cycle in–progress signal is output during the period between point R
positioning of the drilling axis and the return to point R/initial level.

(2)As an overload torque detection signal, the skip signal (X008#7) is
used.  The skip signal is enabled only while the drilling axis is placed
between point R and point Z, and an advance or cutting operation is
being performed.  When the skip signal is entered while an advance
or cutting operation is being performed, a retract operation is started
immediately.

(3) In one G83 cycle, the cutting condition is changed for each peck
drilling operation (advance→ cut→ retract).
� Cutting feedrate change

The cutting feedrate programmed using an F code is changed for
each of the second and subsequent cutting operations.  In parameter
Nos. 307 and 308, specify the change ratios applicable when the
skip signal is received and when the skip signal is not received,
respectively, in the previous cutting operation.

Cutting feedrate = F� α

(First operation) α = 1.0
(Second and subsequent operations) α = α�β�100
β represents the change ratio for one operation.  If the skip signal
was entered during the previous cutting:

β  = Parameter No. 307
When the skip signal was not entered during the previous cutting:

β  = Parameter No. 308
If the cutting feedrate change ratio α becomes smaller than the
value set in parameter No. 309, no further cutting feedrate changes
are made.

� Spindle speed change
The spindle speed programmed using an S code is changed for each
of second and subsequent advance operations.  In parameter Nos.
305 and 306, specify the change ratios applicable when the skip
signal is received and when the skip signal is not received,
respectively, in the previous cutting operation.

Spindle speed = �� γ

(First operation) γ = 1.0
(Second and subsequent operations) γ = γ�δ�100
δ represents the change ratio of one operation.  If the skip signal was
entered during the previous cutting:

δ = Parameter No. 305
When the skip signal was not entered during the previous cutting:

δ = Parameter No. 306
If the spindle speed is clamped to the lower limit, no spindle speed
change is made.

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
13. FUNCTIONS TO SIMPLIFY 

PROGRAMMING

190

(4)Advance and retract operations during peck drilling are performed not
as positioning by rapid traverse but as cutting feed.

(5)When an advance/retract feedrate during peck drilling is to be
specified using an I code, the same format as that for an F code is used.
An I code specified in G83 remains valid until the specification of G80
or the input of a reset signal.

NOTE
1 An M code for the small–diameter peck drilling cycle must

be specified before the specification of G83.  Furthermore,
the block containing the M code must not include any other
codes.  The M code is subjected to internal processing, but
is not output.

2 Retract and advance operations are controlled by the
cutting feedrate acceleration/deceleration function.  An
in–position check is made at point R during a retract
operation.

3 When the skip signal is received during advance operation,
a retract operation is started.

4 To change the spindle speed during peck drilling in the
small–diameter peck drilling cycle, a 4– or 5–digit S
command is required.

5 Point R must be positioned away from the workpiece
surface by an amount equal to clearance � or more.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

191

14 COMPENSATION FUNCTION
This chapter describes the following compensation functions:

TOOL LENGTH OFFSET (G43, G44, G49) Sec.14.1. . . . . . . . . . . . . . . . . 
AUTOMATIC TOOL LENGTH MEASUREMENT (G37) Sec.14.2. . . . . 
TOOL OFFSET (G45 TO G48) Sec.14.3. . . . . . . . . . . . . . . . . . . . . . . . . . . . 
CUTTER COMPENSATION B (G39 TO G42) Sec.14.4. . . . . . . . . . . . . . . 
OVERVIEW OF CUTTER COMPENSATION C 
(G40 TO G42) Sec.14.5. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
DETAILS OF CUTTER COMPENSATION C Sec.14.6. . . . . . . . . . . . . . . 
TOOL COMPENSATION VALUES, NUMBER OF COMPENSATION
VALUES, AND ENTERING VALUES FROM THE PROGRAM (G10)

Sec.14.7. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
SCALING (G50, G51) Sec.14.8. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
COORDINATE SYSTEM ROTATION (G68, G69) Sec.14.9. . . . . . . . . . . 
INDEX TABLE INDEXING FUNCTION Sec.14.10. . . . . . . . . . . . . . . . . . 
NORMAL DIRECTION CONTROL (G150, G151, G152) Sec.14.11. . . . 

�������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

192

This function can be used by setting the difference between the tool length
assumed during programming and the actual tool length of the tool used
into the offset memory.  It is possible to compensate the difference without
changing the program.
Specify the direction of offset with G43 or G44.  Select a tool length offset
value from the offset memory by entering the corresponding address and
number (H code).

ÇÇ
ÇÇ
ÇÇ

ÇÇ
ÇÇ
ÇÇ

Tool assumed dur-
ing programming

Actual tool

Specify this distance
as the value of tool
length offset.

Fig14.1   Tool length offset

The following three methods of tool length offset can be used, depending
on the axis along which tool length offset can be made.
⋅Tool length offset A

Compensates for the difference in tool length along the Z–axis.
⋅Tool length offset B

Compensates for the difference in tool length along the X–,Y–,or 
Z–axis.

⋅Tool length offset C
Compensates for the difference in tool length along a specified axis.

G43 Z_ H_ ;

G44 Z_ H_ ;

Tool length offset A

G17 G43 Z_ H_ ;

G17 G44 Z_ H_ ;

G18 G43 Y_ H_ ;

G18 G44 Y_ H_ ;

G19 G43 X_ H_ ;

Tool length offset B

G43 α_ H_ ;
G44 α_ H_ ;

Tool length offset C

G49 ; or  H0 ;Tool length offset
cancel

G43 : Positive offset
G44 : Negative offset
G17 : XY plane selection
G18 : ZX plane selection
G19 : YZ plane selection
α : Address of a specified 

axis
H : Code for specifying the 

tool length offset value

Explanation of each address

G19 G44 X_ H_ ;

14.1
TOOL LENGTH
OFFSET 
(G43, G44, G49)

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

193

Select tool length offset A, B, or C, by setting bit 6 of parameter 003 and
bit 3 of parameter No. 019.

When G43 is specified, the tool length offset value (stored in offset
memory) specified with the H code is added to the coordinates of the end
position specified by a command in the program.  When G44 is specified,
the same value is subtracted from the coordinates of the end position.  The
resulting coordinates indicate the end position after compensation,
regardless of whether the absolute or incremental mode is selected.
If movement along an axis is not specified, the system assumes that a
move command that causes no movement is specified.  When a positive
value is specified for tool length offset with G43, the tool is moved
accordingly in the positive direction.  When a positive value is specified
with G44, the tool is moved accordingly in the negative direction.  When
a negative value is specified, the tool is moved in the opposite direction.
G43 and G44 are modal G codes.  They are valid until another G code
belonging to the same group is used.

The tool length offset value assigned to the number (offset number)
specified in the H code is selected from offset memory and added to or
subtracted from the commands specified by a command in the program.
The tool length offset value may be set in the offset memory through the
CRT/MDI panel.
The range of values that can be set as the tool length offset value is as
follows.

Increment system Metric input Inch input

IS–B 0 to ±999.999mm 0 to ±99.9999inch

IS–C 0 to ±999.9999mm 0 to ±99.99999inch

WARNING
When the tool length offset value is changed due to a
change of the offset number, the offset value changes to
the new tool length offset value, the new tool length offset
value is not added to the old tool length offset value. 

H1 : tool length offset value 20.0
H2 : tool length offset value 30.0 
G90 G43 Z100.0 H1 ; Z will move to 120.0
G90 G43 Z100.0 H2 ; Z will move to 130.0

NOTE
The tool length offset value corresponding to offset No. 0 ,
that is, H0 always means 0.  It is impossible to set any other
tool length offset value to H0.

�
�����	����

� Selection of tool length
offse 	

� Direction of the offset

� Specification of the tool
length offset value

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

194

Tool length offset B can be executed along two or more axes when the axes
are specified in two or more blocks.

Offset in X and Y axes.
G19 G43 H _ ; Offset in X axis 
G18 G43 H _ ; Offset in Y axis

(Offsets in X and Y axes are performed)

If the bit (bit 5 of parameter No. 036) is set to 1, an alarm will not occur
even when tool length offset C is executed along two or more axes at the
same time.

To cancel tool length offset, specify G49 or H0.  After G49 or H0 is
specified, the system immediately cancels the offset mode.

CAUTION
After tool length offset B is executed along two or more
axes, offset along all the axes is canceled by specifying
G49.  If H0 is specified, only offset along an axis
perpendicular to the specified plane is canceled.

NOTE
In the case of the offset in three axes or more, if the offset
is canceled by G49 code, the P/S alarm 015 is generated.
Cancel the offset by using G49 and H00.

� Performing tool length
offset along two or more
axes

� Tool length offset cancel

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

195

12

Actual position

Programmed 
position

offset
value
ε=4mm

#1

20

30

30

120

#3

#2

+Y

+X

30 50 +Z

335

30
18 22

8

�

	

�

�

�

�

� �

�




���� ������ ������ ��� ����� ����� 	���� �� ��� ��

11

13

· 
������
H1=–4.0 ����� ������ ������ ������
N1 G91 G00 X120.0 Y80.0 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . 
N2 G43 Z–32.0 H1 ; 	. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N3 G01 Z–21.0 F1000 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N4 G04 P2000 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N5 G00 Z21.0 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N6 X30.0 Y–50.0 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N7 G01 Z–41.0 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N8 G00 Z41.0 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N9 X50.0 Y30.0 ; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N10 G01 Z–25.0 ; 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N11 G04 P2000 ; 11. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N12 G00 Z57.0 H0 ; 12. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N13 X–200.0 Y–60.0 ; 13. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
N14 M2 ;

��������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

196

By issuing G37 the tool starts moving to the measurement position and
keeps on moving till the approach end signal from the measurement
device is output.  Movement of the tool is stopped when the tool tip
reaches the measurement position.
Difference between coordinate value when tool reaches the measurement
position and coordinate value commanded by G37 is added to the tool
length offset amount currently used.

ÇÇ
ÇÇ

Z

X0

Rapid
traverse

Measurement
feedrate

A (Start position)
Measurement position is commanded
with G37

B (Deceleration position)

C (Measurement position)
The tool stops when the approach end
signal goes on.

Compensation value = [(Coordinates of the point at which the tool is stopped) –
(Coordinates of the programmed measurement position)]

Fig. 14.2 (a)  Automatic tool length measurement

G92 ��_ ; Sets the workpiece coordinate system.  (It can be set with 
G54 to G59.  See Chapter 7, “Coordinate System.”)

H�� Specifies an offset number for tool length offset.

G90 G37 ��_ ; Absolute command
� G37 is valid only in the block in which it is specified.
��_ indicates the X–, Y–, Z–, or fourth axis.

Set the workpiece coordinate system so that a measurement can be made
after moving the tool to the measurement position.  The coordinate system
must be the same as the workpiece coordinate system for programming.

Specify the absolute coordinates of the correct measurement position.
Execution of this command moves the tool at the rapid traverse rate
toward the measurement position, reduces the federate halfway, then
continuous to move it until the approach end signal from the measuring
instrument is issued.  When the tool tip reaches the measurement position,
the measuring instrument sends an approach end signal to the CNC which
stops the tool.

14.2
AUTOMATIC TOOL
LENGTH
MEASUREMENT
(G37)

Format

Explanations

� Setting the workpiece
coordinate system

� Specifying G37

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

197

The difference between the coordinates of the position at which the tool
reaches for measurement and the coordinates specified by G37 is added
to the current tool length offset value.
Offset value = 
[(Coordinates of the position at which the tool reaches for measurement) –
(Coordinates specified by G37)]
These offset values can be manually changed from MDI.

When automatic tool length measurement is executed, the tool moves as
shown in Fig. 15.2 (b).  If the approach end signal goes on while the tool
is traveling from point B to point C, an alarm occurs.  Unless the approach
end signal goes on before the tool reaches point F, the same alarm occurs.
The alarm number is 080.

Start 
position

Rapid
traverse Approach end signal ON

Position commanded
by G37

Permitted range of approach end signal

A B D E F

Deceleration
feedrate
(measurement
feedrate)

C

Fig. 14.2 (b)  Tool movement to the measurement position

� Changing the offset
value

� �����

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

198

WARNING
When a manual movement is inserted into a movement at
a measurement federate, return the tool to the position
before the inserted manual movement for restart.

NOTE
1 When an H code is specified in the same block as G37, an

alarm is generated.  Specify H code before the block of G37.
2 The measurement speed (parameter No. 558),

deceleration position (parameter No. 813), and permitted
range of the approach end signal (parameter No. 814) are
specified by the machine tool builder.

3 When offset memory A is used, the offset value is changed.
When offset memory B is used, the tool wear compensation
value is changed.

4 The approach end signal is monitored usually every 2 ms.
The following measuring error is generated:

ERRmax = Fm�1/60�4/1000  where
ERRmax : maximum measuring error (mm)
Fm : measurement federate (mm/min.)

For example, when Fm = 100 mm/min., ERRmax. = 0.007m
5 The tool stops a maximum of 16 ms after the approach end

signal is detected.  But the value of the position at which the
approach end signal was detected (note the value when the
tool stopped) is used to determine the offset amount.  The
overrun for 16 ms is:

Qmax  = Fm � 1/60�20+Ts/1000
TS : Servo time constant
Qmax : maximum overrun (mm)
Fm : measurement federate (mm/min.)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

199

G92 Z760.0 X1100.0 ; Sets a workpiece coordinate system with 
respect to the programmed absolute zero point.

G00 G90 X850.0 ; Moves the tool to X850.0.
That is the tool is moved to a position that is a
specified distance from the measurement
position along the Z–axis.

G43 H01 ; Specifies offset number 1.  
G37 Z200.0 ; Moves the tool to the measurement position.
G00 Z204.0 ; Retracts the tool a small distance along the

Z–axis.

For example, if the tool reaches the measurement position with Z198.0;,
the compensation value must be corrected.  Because the correct
measurement position is at a distance of 200 mm, the compensation value
is lessened by 2.0 mm (198.0 – 200.0 = –2.0).

ÇÇ
ÇÇ
ÇÇ

200

760

850 1100 X

Z

ÇÇ
ÇÇ

Measurement
position along Z axis

0

��������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

200

The programmed travel distance of the tool can be increased or decreased
by a specified tool offset value or by twice the offset value.
The tool offset function can also be applied to an additional axis.

ÇÇÇ
ÇÇÇ Programmed pathTool center pathTool

Workpiece

: Command for moving the tool

G45 ��_D_ ; Increase the travel distance by the tool offset value

��

Decrease the travel distance by the tool offset value

Increase the travel distance by twice the tool offset value

Decrease the travel distance by twice the tool offset value

D  : Code for specifying the tool offset value

G45 to G48 : One–shot G code for increasing or decreasing the travel
distance

G46 ��_D_ ;

G47 ��_D_ ;

G48 ��_D_ ;

14.3
TOOL OFFSET 
(G45 TO G48)

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

201

As shown in Table 14.3 (a), the travel distance of the tool is increased or
decreased by the specified tool offset value.
In the absolute mode, the travel distance is increased or decreased as the
tool is moved from the end position of the previous block to the position
specified by the block containing G45 to G48.

Table14.3 (a) Increase and decrease of the tool travel distance

G code When a positive tool offsetvalue is specified
When a negative tool offset

value is specified

G45

Start position End position Start position End position

G46

Start position End position Start position End position

G47

Start position End position Start position End position

G48

Start position End position Start position End position

Programmed movement distance
Tool offset value

Actual movement position

If a move command with a travel distance of zero is specified in the
incremental command (G91) mode, the tool is moved by the distance
corresponding to the specified tool offset value.
If a move command with a travel distance of zero is specified in the
absolute command (G90) mode, the tool is not moved.

Once selected by D code, the tool offset value remains unchanged until
another tool offset value is selected.
Tool offset values can be set within the following range:

Table14.3 (b)  Range of tool offset values

Increment system Metric input inch input

IS–B 0 to �999.999mm 0 to �99.9999inch

IS–C 0 to �999.9999mm 0 to �99.99999inch

D0 always indicates a tool offset value of zero.

Explanations

� Increase and decrease

� ���� �����	 ���
�

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

202

WARNING
When G45 to G48 is specified to n axes (n=1–4) simultaneously in a motion block, offset is
applied to all n axes.
When the cutter is offset only for cutter radius or diameter in taper cutting, overcutting or
undercutting occurs.  
Therefore, use cutter compensation (G40 or G42) shown in section 14.4 or 14.5.

ÇÇ
ÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇ
ÇÇ
ÇÇ

ÇÇÇ
ÇÇÇ

Shape actually cut

Desired
shape

Overcutting

Y axis

Undercutting

G01 X_ F_ ;
G47 X_ Y_ D_ ;
        Y_ ;

G01 G45 X_ F_ D_;
                X_ Y_ ;
G45 Y_ ;

X axis

Desired shape

Shape actually cut

Y axis

X axis

CAUTION
G45 to G48 (tool offset) must not be used in the G41 or G42 (cutter compensation) mode.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

203

NOTE
1 When the specified direction is reversed by decrease as shown in the figure below, the tool

moves in the opposite direction.

2 Tool offset can be applied to circular interpolation (G02, G03) with the G45 to G48 commands
only for 1/4 and 3/4 circles using addresses I, J and K, providing that the coordinate rotation
be not specified at the same time.  This function is provided for compatibility with the
conventional CNC tape without any cutter compensation. The function should not be used
when a new CNC program is prepared.

3 D code should be used in tool offset mode (G45 to G48).  However, H code can be used
because of compatibility with conventional CNC tape format.  The H code must be used under
tool length offset cancel (G49).

4 G45 to G48 are ignored in canned cycle mode.  Perform tool offset by specifying G45 to G48
before entering canned cycle mode and cancel the offset after releasing the canned cycle
mode.

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

G46 X2.50 ;
Tool offset value
+3.70

Equivalent command
X–1.20 ;

N1

N2

N3
N4

Program

N1 G46 G00 X_ Y_ D_ ;
N2 G45 G01 Y_ F_ ;
N3 G45 G03 X_ Y_ I_ ;
N4 G01 X_ ;

Movement of the tool Program command
Start
position End  

position

Tool offset value

Example

Tool offset for circular interpolation

Programmed tool path

Actual tool path

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

204

ÇÇÇ
ÇÇÇ
ÇÇÇ

Tool diameter : 20φ
Offset No. : 01
Tool offset value : +10.0

80 50

40

30R

50

40

30R

N1 N2

N3

N4

N5

N6 N7

N8

N9
N10

N11

N12

N13

N14
30 3040

X axis

Y axis

Program using tool offset

Origin

Program

N1 G91 G46 G00 X80.0 Y50.0 D01 ;
N2 G47 G01 X50.0 F120.0 ;
N3 Y40.0 ;
N4 G48 X40.0 ;
N5 Y–40.0 ;
N6 G45 X30.0 ;
N7 G45 G03 X30.0 Y30.0 J30.0 ;
N8 G45 G01 Y20.0 ;
N9 G46 X0 ; Decreases toward the positive direction for. . . . . . . . . 

movement amount “0”.  The tool moves in the
 –X direction by the offset value.
N10 G46 G02 X–30.0 Y30.0 J30.0 ;
N11 G45 G01 Y0 ; Increase toward the positive direction for. . . 

movement amount “0”.  The tool moves in the
+Y direction by the offset value.

N12 G47 X–120.0 ;
N13 G47 Y–80.0 ;
N14 G46 G00 X–80.0 Y–50.0 ;

��������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

205

When the tool is moved, the tool path can be shifted by the radius of the
tool (Fig. 14.4).
To make an offset as large as the radius of the tool, first create an offset
vector with a length equal to the radius of the tool (start–up).  The offset
vector is perpendicular to the tool path.  The tail of the vector is on the
workpiece side and the head points to the center of the tool. 
If a linear interpolation, corner offset, or circular interpolation command
is specified after start–up, the tool path can be shifted by the length of the
offset vector during machining. 
To return the tool to the start point at the end of machining, cancel the
cutter compensation mode.

Corner offset

Circular 
interpolation

ÇÇÇ
ÇÇÇ
ÇÇÇ

Start up

Linear
interpolation

Linear  interpolation

Corner offset
Circular interpolation

Circular
interpolation

R2

R1

Y axis

X axis

Start position

Offset vector

Cutter
compensation
cancel

Tool center path

Programmed path

Linear
interpolation

Circular
interpolation

Fig.14.4  Outline of cutter compensation

To obtain the tool path appropriately offset by cutter compensation B,
create the program as follows:
In an outer corner, corner offset circular interpolation is specified to direct
the offset vector in the direction perpendicular to that of the tool
movement.  In an inner corner, an arc with a radius smaller than the offset
radius is specified to prevent the tool from biting the outline of the
workpiece.

14.4
CUTTER
COMPENSATION B
(G39 TO G42)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

206

��_

G00 (or G01) G41 (or G42)

G39 (or IR_)  ;

� ����� ��

������� ����������� ������
IR_ H_ ;

G41

G42

H_

: Command for axis movement

: Cutter compensation left (Group 07)
: Cutter compensation right (Group 07)

: Incremental value from the end position.  Perpendicular to the 
offset   vector at the end position.

: Code for specifying the cutter compensation value (1 to 3 digits)

� ������ �		��� ��������

�������������

G39 : Corner offset circular interposition (Group 00)

: Incremental value from the end position.  
Perpendicular to   the offset vector at the end position.

� ������ �����������

������
G40 ;

G40 : Cutter compensation cancel (Group 07)
: Command for axis movement

� ��������� �	 �
� �		���

�����
Offset plane

XpYp

ZpXp

YpZp

Command of the plane selection

G17 ;

G18 ;

G19 ;

Xp_Yp_

Xp_Zp_

Yp_Zp_

I_J_

I_K_

J_K_

(or) IR_

��_

��_

IR_

��_

��_

��_

��_ IR_

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

207

Specify the number assigned to a cutter compensation value with a 1– to
3–digit number after address H (H code) in the program.  The H code can
be specified in any position before the offset cancel mode is first switched
to the cutter compensation mode.  The H code need not be specified again
unless the cutter compensation value needs to be changed.
Assign cutter compensation values to the H codes on the CRT/MDI panel.
For the specification of the cutter compensation value, see Subsection
9.1.1 in the section on operation.
The table below shows the range in which the cutter compensation values
can be specified.

Table14.4 Valid range of cutter compensation values

Increment system Metric input inch input

IS–B 0 to �999.999mm 0 to �99.9999inch

IS–C 0 to �999.9999mm 0 to �99.99999inch

NOTE
The cutter compensation value corresponding to offset
No.0, that is, H0 always gets 0. It is impossible to set H00
to any other cutter compensation value.

Cutter compensation is carried out in the plane determined by G17, G18
and G19 (G codes for plane selection.).  This plane is called the offset
plane.  If the offset plane is not specified, G17 is assumed to be
programmed.
Compensation is not executed for the coordinates of a position which is
not in the specified plane.  The programmed values are used as they are.
In the sequel, what vector is created, what offset calculation is made, by
an offset command, will be discussed on assumption that an XY plane is
selected. This discussion applies also when another plane is selected.
The offset vector is cleared by reset.
After the power is turned on, the length of the offset vector is set to zero
and the cutter compensation cancel mode is selected.

NOTE
A move command mode at the time of change from the
offset cancel mode to the cutter compensation mode, is
positioning (G00) or linear interpolation (G01).  The circular
interpolation (G02, G03) cannot be used.

Explanations

� H code

� Offset plane selection
and offset vector

� Transition from the offset
cancel mode to the
cutter compensation
mode (Start up)ww

w.
cn

cc
en

ter
.co

m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

208

G41 offsets the tool towards the left of the workpiece as you see when you
face in the same direction as the movement of the cutting tool.

G41 X_ Y_ I_ J_ H_ ;
Specifies a new vector to be created at right angles with the direction of
(I, J) on the end point, and the tool center moves toward the point of the
new vector from that of the old vector on the start point.(I, J) is expressed
in an incremental value from the end point, and is significant only as a
direction, and its amount is arbitrary.

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

Tool center path

Programmed path

New vectorOld vector

(X, Y) (I, J)Start position

In case the old vector is 0, this command specifies the equipment to enter
from the cancel mode into the cutter compensation mode.  At this time,
the offset number is specified by the H code.

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ(X, Y) (I, J)

Tool center path

Programmed path

New vector

Old vector=0

Start position

Unless otherwise specified, (I, J) are assumed to be equal to (X, Y).  When
the following command is specified, a vector perpendicular to a line
connecting the start position and position (X, Y) is created. 
G41 X_ Y_ ;
If, however, G00 is specified, each axis moves independently at the rapid
traverse rate.

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

(X, Y)

Tool center path

Programmed path

New vectorOld vector

Start position

14.4.1
Cutter Compensation
Left (G41)

Explanations

� G00 (positioning) or
G01 (linear interpolation)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

209

G41… ;
     :
G02 (or G03) X_ Y_ R_ ;
Above command specifies a new vector to be created to the left looking
toward the direction in which an arc advances on a line connecting the arc
center and the arc end point, and the tool center to move along the arc
advancing from the point of the old vector on the arc start point toward
that of the new vector.  This is, however, established on assumption the
old vector is created correctly. 
The offset vector is created toward the arc center or opposite direction
against the arc center.

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

Tool center path

New vector

Old vector

Programmed path
R

Start position

New vector

Old vector

(X, Y)

R

Start
position

(X, Y)

Programmed path

Tool center path

� G02, G03
(Circular interpolation)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

210

G42, contrary to G41, specifies a tool to be offset to the right of work piece
looking toward the direction in which the tool advances.
G42 has the same function as G41, except that the directions of the vectors
created by the commands are the opposite.

G42 X_ Y_ I_ J_ H_ ;

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

Tool center path

Programmed path

New vectorOld vector

(X, Y)

(I, J)

Start position

G42 X_ Y_ ;

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

(X, Y)

Tool center path

Programmed path

New vectorOld vector

Start position

In the case of G00, however, each axis moves independently at the rapid
traverse rate.

14.4.2
Cutter Compensation
Right (G42)

Explanations

� G00 (positioning) or
G01 (linear interpolation)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

211

G42… ;
     :
G02 (or G03) X_ Y_ R_;

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

R

(X, Y)

Tool center path

Programmed path

New vector

Old vector

Start position

Programmed path

New vector

Tool center path

Old vector

Start position

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

R

(X, Y)

� G02 or G03
(Circular interpolation)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

212

When the following command is specified in the G01, G02, or G03 mode,
corner offset circular interpolation can be executed with respect to the
radius of the tool.
G39 X_ Y_ ; or G39 I_ J_ ;
A new vector is created to the left (G41) or to the right (G42) looking
toward (X, Y) from the end point at right angles therewith, and the tool
moves along the arc from the point of the old vector toward that of the new
vector.  (X, Y) is expressed in a value according to the G90/G91
respectively.  (I, J) is expressed in an incremental value from the end point.

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

(X, Y)or(I, J)

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

(X, Y)or(I, J)

Case of G41

Case of G42

Tool center path

New vector
Old vector

Programmed path

Old vector
New vector

Tool center path

Programmed path

This command can be given in offset mode, that is, only when G41 or G42
has already been specified.  Whether the arc is to turn clockwise or
counterclockwise, is defined by G41 or G42, respectively.  This command
is not modal, and executes circular interpolation, whatever the G function
of group 01 may be.  The G function of group 01 remains even though this
command is specified.

14.4.3
Corner Offset Circular
Interpolation (G39)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

213

When the following command is specified in the G00 or G01 mode, the
tool moves from the head of the old vector at the start position to the end
position (X, Y).  In the G01 mode, the tool moves linearly.  In the G00
mode, rapid traverse is carried out along each axis.  
G40 X_ Y_ ;

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

(X, Y)

Tool center path

Start position

Old vector

Programmed path

This command changes the mode of the equipment from the cutter
compensation mode to the cancel mode.
When only G40; is specified, and X _ Y _ is not specified, the tool moves
by the old vector amount in the opposite direction.

NOTE
Cutter compensation cannot be canceled in the circular
interpolation (G02, G03) mode.

14.4.4
Cutter Compensation
Cancel (G40)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

214

The offset direction is switched from left to right, or from right to left
generally through the offset cancel mode, but can be switched not through
it only in positioning (G00) or linear interpolation (G01). In this case, the
tool path is as shown in Fig 14.4.5.

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ ÇÇÇÇ

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

G41……… ;
G00 G42 X_ Y_ ;

G42……… ;
G00 G41 X_ Y_ ( or I_ J_) F_ ;

Tool center path
(normally, it is not straight.)

(X, Y) or (I, J)

(X, Y)
Old
vector

Programmed path

New
vector

Old
vector

Programmed path

New
vector

Tool center path

Fig.14.4.5  Switching the direction of cutter compensation

14.4.5
Switch between Cutter
Compensation Left and
Cutter Compensation
Right

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

215

The offset amount is changed generally when the tool is changed in the
offset cancel mode, but can be changed in the offset mode only in
positioning (G00) or linear interpolation (G01).
Program as described below:
G00 (or G01) X_ Y_ H_ ; (H_ indicates the number of a new cutter
compensation value.)
Fig. 14.4.6 shows how the tool is moved when the change in
compensation is specified.

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ (X, Y)

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

(X, Y)

New vector
Old vector

Programmed path

Tool center path

Start position

Start position Programmed path

Old vector
New vector

Fig.14.4.6 Change of the cutter compensation value in offset mode

14.4.6
������ � ��� ������

��������	� ��
��

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

216

If the tool compensation value is made negative (–), it is equal that G41
and G42 are replaced with each other in the process sheet.  Consequently,
if the tool center is passing around the outside of the workbench it will
pass around the inside thereof, and vice versa. 
Fig. 14.4.7 shows one example. Generally speaking, the cutter
compensation value shall be programmed to be positive (+).  When a tool
path is programmed as shown in �, if the cutter compensation value is
made negative (–), the tool center moves as shown in �.
If the cutter compensation value is changed to a negative value when tool
path � shown in Fig. 14.4.7 is programmed, the tool follows tool path
� shown in the same figure.

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

� �

Programmed path

Tool center path

Fig.14.4.7  Tool center paths when positive and negative
cutter compensation values are specified

For a cornered figure (involved in corner circular interpolation) in
general, the cutter compensation value naturally cannot be made negative
(–) to cut the inside. In order to cut the inside corner of a cornered figure,
an arc with an appropriate radius must be inserted there to provide smooth
cutting.

WARNING
If the tool length offset is commanded during cutter
compensation, the offset amount of cutter compensation is
also regarded to have been changed.

14.4.7
�����
��
����


����
� ����
������

����
 ��	 ���� �
��
�

����

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

217

ÇÇÇ
ÇÇÇ
ÇÇÇ

N1

N2

N3

N4

N5

N6

N7

N8

N9N10

N11

R2=20.0

R1=40.0

Y axis

X axis20.0

20.0

40.0

40.0

20.0

20.0

Unit : mm

N1G91 G17 G00 G41 X20.0 Y20.0 J40.0 H08 ; 
N2G01 Z–25.0 F100 ;
N3Y40.0 F250 ;
N4G39 I40.0 J20.0 ;
N5X40.0 Y20.0 ;
N6G39 I40.0 ;
N7G02 X40.0 Y–40.0 R40.0 ;
N8X–20.0 Y–20.0 R20.0 ;
N9G01 X–60.0 ;
N10 G00 Z25.0 ;
N11 G40 X–20.0 Y–20.0 M02 ;
(H08 is a tool offset number, and the cutter radius value should be stored
in the memory corresponding to this number).

��������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

218

When the tool is moved, the tool path can be shifted by the radius of the
tool (Fig. 14.5 (a)).  
To make an offset as large as the radius of the tool, CNC first creates an
offset vector with a length equal to the radius of the tool (start–up).  The
offset vector is perpendicular to the tool path.  The tail of the vector is on
the workpiece side and the head positions to the center of the tool.  
If a linear interpolation or circular interpolation command is specified
after start–up, the tool path can be shifted by the length of the offset vector
during machining.  
To return the tool to the start position at the end of machining, cancel the
cutter compensation mode.

ÇÇÇ
ÇÇÇ
ÇÇÇ

Start–up

Cutter 
compensation 
cancel

Tool center path

Programmed path

Fig.14.5 (a)  Outline of cutter compensation C

In cutter compensation C, an appropriately offset tool path can be
obtained for both the inner and outer corners simply by specifying the
offset direction.  Unlike cutter compensation B, programs can easily be
created without having to consider the difference between the outer and
inner corners.

14.5
OVERVIEW OF
CUTTER
COMPENSATION C
(G40 TO G42)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

219

G40

� Start up
(Tool compensation start)

G00 (or G01) G41 (or G42) H_ ;

G41

G42

H_

: Cutter compensation left (Group07)

: Cutter compensation right (Group07)

: Command for axis movement
: Code for specifying as the cutter compensation value(1–3digits)

(H code)

� Cutter compensation
cancel
(offset mode cancel)

;

G40 : Cutter compensation cancel(Group 07)
(Offset mode cancel)

: Command for axis movement

� Selection of the offset plane Offset plane

XpYp

ZpXp

YpZp

Command for plane selection

G17 ;

G18 ;

G19 ;

Xp_Yp_

Xp_Zp_

Yp_Zp_

��_

��_

��_

��_

��_

At the beginning when power is applied the control is in the cancel mode.
In the cancel mode, the vector is always 0, and the tool center path
coincides with the programmed path.

When a cutter compensation command (G41 or G42, nonzero dimension
words in the offset plane, and H code other than H0) is specified in the
offset cancel mode, the CNC enters the offset mode.
Moving the tool with this command is called start–up.
Specify positioning (G00) or linear interpolation (G01) for start–up.  If
circular interpolation (G02, G03) is specified, alarm 34 occurs.
When processing the start–up block and subsequent blocks, the CNC
prereads two blocks.  The second preread block is not indicated.

In the offset mode, compensation is accomplished by positioning (G00),
linear interpolation (G01), or circular interpolation (G02, G03).  If two or
more blocks that do not move the tool (miscellaneous function, dwell,
etc.) are processed in the offset mode, the tool will make either an
excessive or insufficient cut.  If the offset plane is switched in the offset
mode, alarm 37 occurs and the tool is stopped.

Format

Explanations

� Offset cancel mode

� Start Up

� Offset mode

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

220

In the offset mode, when a block which satisfies any one of the following
conditions is executed, the equipment enters the offset cancel mode, and
the action of this block is called the offset cancel.

1. G40 has been commanded.
2. 0 has been commanded as the offset number for cutter

compensation.

When performing offset cancel, circular arc commands (G02 and G03) are
not available.  If a circular arc is commanded, an alarm (No. 034) is
generated and the tool stops.
In the offset cancel, the control executes the instructions in that block and
the block in the cutter compensation buffer.  In the meantime, in the case
of a single block mode, after reading one block, the control executes it and
stops.  By pushing the cycle start button once more, one block is executed
without reading the next block.
Then the control is in the cancel mode, and normally, the block to be
executed next will be stored in the buffer register and the next block is not
read into the buffer for cutter compensation.

Offset cancel mode Offset mode

Start up

Offset modecancel

(G41/G42)

(G40/D0)

Fig.14.5 (b)  Changing the offset mode

In general, the cutter compensation value shall be changed in the cancel
mode, when changing tools.  If the cutter compensation value is changed
in offset mode, the vector at the end point of the block is calculated for
the new cutter compensation value.

Calculated from the cutter
compensation value in the block N6

Calculated from the cutter
compensation value in the block N7

N7

N6
N8

Programmed path

Fig.14.5 (c)  Changing the cutter compensation value

� Offset mode cancel

� Change of the 
Cutter compensation
value

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

221

If the offset amount is negative (–), distribution is made for a figure in
which G41’s and G42’s are all replaced with each other on the program.
Consequently, if the tool center is passing around the outside of the
workpiece, it will pass around the inside, and vice versa.
The figure below shows one example.  Generally, the offset amount is
programmed to be positive (+).
When a tool path is programmed as in (�), if the offset amount is made
negative (–), the tool center moves as in (�), and vice versa.
Consequently, the same tape permits cutting both male and female
shapes, and any gap between them can be adjusted by the selection of the
offset amount. Applicable if start–up and cancel is A type.  (See subsec.
14.6.2 and 14.6.4)

ÇÇ
ÇÇ
ÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ

� �

Programmed path

Tool center path

Fig.14.5 (d)  Tool center paths when positive and negative cutter
compensation values are specified

Assign a cutter compensation values to the H codes on the CRT/MDI
panel.  The table below shows the range in which cutter compensation
values can be specified.

Increment system Metric input inch input

IS–B 0 to �999.999mm 0 to �99.9999inch

IS–C 0 to �999.9999mm 0 to �99.99999inch

NOTE
1 The cutter compensation value corresponding to offset No.

0, that is, H0 always means 0.  It is impossible to set H0 to
any other offset amount.

2 Cutter compensation C can be specified by D code with
parameter (No. 036 #6) set to 1.

The offset vector is the two dimensional vector that is equal to the cutter
compensation value assigned by H code.  It is calculated inside the control
unit, and its direction is up–dated in accordance with the progress of the
tool in each block.
The offset vector is deleted by reset.

� Positive/negative cutter
compensation value and
tool center path

� Cutter compensation
value setting

� �����	 
��	��

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

222

Specify a cutter compensation value with a number assigned to it.  The
number consists of 1 to 3 digits after address H (H code).  The H code is
valid until another H code is specified.  The H code is used to specify the
tool offset value as well as the cutter compensation value.  
When an H code for cutter compensation is specified during tool length
compensation, the amount of tool length compensation remains as is.
When an H code for tool length compensation is specified during cutter
compensation, however, the cutter compensation, as well as tool length
compensation, is changed.  Do not modify the tool length compensation
in cutter compensation mode.
The amount of tool length compensation and that of cutter compensation
can be separately specified with the H and D codes by setting bit 6 of
parameter No. 036 appropriately.  Only the tool length compensation can
be changed in cutter compensation.  Even in this case, the tool length
compensation is equal to the cutter compensation.  That is, the setting of
H10 is equal to that of D10.

Offset calculation is carried out in the plane determined by G17, G18 and
G19, (G codes for plane selection).  This plane is called the offset plane.
Compensation is not executed for the coordinate of a position which is not
in the specified plane.  The programmed values are used as they are.
In simultaneous 3 axes control, the tool path projected on the offset plane
is compensated. 
The offset plane is changed during the offset cancel mode.  If it is
performed during the offset mode, an alarm (No. 37) is displayed and the
machine is stopped.

� Specifying a cutter
compensation value

� Plane selection and
vector

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

223

ÇÇÇ
ÇÇÇ
ÇÇÇ

Y axis

X axis Unit : mm

N1

Start position

650R

C2(1550,1550)

650R

C3 (–150,1150)

250R

C1(700,1300)

P4(500,1150) P5(900,1150)

P6(950,900)

P9(700,650)
P8

(1150,550)P1(250,550)

P3(450,900)
P2
(250,900)

N2

N3

N4

N5

N6

N7

N8

N9N10

N11

P7
(1150,900)

G92 X0 Y0 Z0 ; Specifies absolute coordinates.. . . . . . . . . . . . . . . . . . . . . . . . 
The tool is positioned at the start position (X0, Y0, Z0).

N1 G90 G17 G00 G41 H07 X250.0 Y550.0 ;Starts cutter compensation (start–up).  The tool is shifted to the
left of the programmed path by the distance specified in D07.
In other words the tool path is shifted by the radius of the tool
(offset mode) because D07 is set to 15 beforehand (the radius of
the tool is 15 mm). 

N2 G01 Y900.0 F150 ; Specifies machining from P1 to P2.. . . . . . . . . . . . . . . . . . 
N3 X450.0 ; Specifies machining from P2 to P3.. . . . . . . . . . . . . . . . . . . . . . . . . . . 
N4 G03 X500.0 Y1150.0 R650.0 : Specifies machining from P3 to P4.. . . . . . . . . 
N5 G02 X900.0 R–250.0 ; Specifies machining from P4 to P5.. . . . . . . . . . . . . . . 
N6 G03 X950.0 Y900.0 R650.0 ; Specifies machining from P5 to P6.. . . . . . . . . . 
N7 G01 X1150.0 ; Specifies machining from P6 to P7.. . . . . . . . . . . . . . . . . . . . . . 
N8 Y550.0 ; Specifies machining from P7 to P8.. . . . . . . . . . . . . . . . . . . . . . . . . . . 
N9 X700.0 Y650.0 ; Specifies machining from P8 to P9.. . . . . . . . . . . . . . . . . . . . 
N10 X250.0 Y550.0 ; Specifies machining from P9 to P1.. . . . . . . . . . . . . . . . . . . 
N11 G00 G40 X0 Y0 ; Cancels the offset mode.. . . . . . . . . . . . . . . . . . 

The tool is returned to the start position (X0, Y0, Z0).

��������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

224

This section provides a detailed explanation of the movement of the tool
for cutter compensation C outlined in Section 14.5.
This section consists of the following subsections:

14.6.1  General
14.6.2  Tool Movement in Start–up
14.6.3  Tool Movement in Offset Mode
14.6.4  Tool Movement in Offset Mode Cancel
14.6.5  Interference Check
14.6.6  Over cutting by Cutter Compensation
14.6.7  Input command from MDI

When an angle of intersection created by tool paths specified with move
commands for two blocks is over 180°, it is referred to as “inner side.”
When the angle is between 0° and 180°, it is referred to as “outer side.”

αWorkpiece
Programmed path

Inner side

180°�α 0°�α�180°

Outer side

Workpiece

Programmed path

α

The following symbols are used in subsequent figures:

– S indicates a position at which a single block is executed once.

– SS indicates a position at which a single block is executed twice.

– SSS indicates a position at which a single block is executed three
times.

– L indicates that the tool moves along a straight line.

– C indicates that the tool moves along an arc.

– r indicates the cutter compensation value.

– An intersection is a position at which the programmed paths of two
blocks intersect with each other after they are shifted by r.

– indicates  the center of the tool.

14.6
DETAILS OF CUTTER
COMPENSATION C

14.6.1
General
� Inner side and outer side

� ������� �� �
��	

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

225

When the offset cancel mode is changed to offset mode, the tool moves
as illustrated below (start–up):

Linear→Linear

Programmed path

LS

G42
r

L

Linear→Circular

Workpiece

Start position

Tool center path

Work-
piece

α

α

G42

Start position Tool center path Programmed path

L C
S

r

14.6.2
Tool Movement in
Start–up

Explanations

� Tool movement around
an inner side of a corner 
(180°�α�

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

226

Tool path in start–up has two types A and B, and they are selected by
parameter (No. 016#2).

Linear→Linear

Programmed path

Tool center pathLS

G42

r

L

Linear→Circular
Type
    A

Type
   B

Workpiece

Start position

Linear→Linear

Linear→Circular

Work-
piece

Intersection

α

Start position

S

G42

r

L

α

C
Tool center path Programmed path

Start position

G42

L

r r
S L

Workpiece

Programmed path

Tool center path

α

Start position

G42
α

L

r r

S

L
L

C

Work-
piece

Intersection Tool center path Programmed path

� Tool movement around
the outside of a corner at
an obtuse angle
���°�α����°�

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

227

Tool path in start–up has two types A and B, and they are selected by
parameter (No.016#2).

α

LS

G42

r

L

S C

Type
   A

Type
   B

r

G42
L

G42

L

L L

L

S

r

r

G42

L

L

L

S

r

r

C

L

L

Linear→Linear

Linear→Circular

Linear→Linear

Linear→Circular

Workpiece

Work-
piece

Workpiece

Work-
piece

Start position

Start position

Start position

Start position

Programmed path

Programmed path

Programmed path

Programmed path

Tool center path

Tool center path

Tool center path

Tool center path

α

α

α

r

G41

G41

L

L

S

Start position

Tool center path

Programmed path

Less than 1 deg

� Tool movement around
the outside of an acute
angle ( α���°)

� Tool movement around
the outside linear →linear
at an acute angle less
than 1 degree
�α��°�

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

228

If the command is specified at start–up, the offset vector is not created.

S

N9

N6

N7

N8

SS

G91 G40 … ;
        :
N6 X100.0 Y100.0 ;
N7 G41 X0 ;
N8 Y–100.0 ;
N9 Y–100.0 X100.0 ;

Programmed path

Tool center path

r

NOTE
For the definition of blocks that do not move the tool, see
Subsection 14.6.3.

� A block without tool
movement specified at
start–up

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

229

In the offset mode, the tool moves as illustrated below:

L

L

C

S

L

S

C

L

S

SC

Linear→Circular

Linear→Linear

Programmed path

Intersection
Tool center path

Workpiece

Work-
piece

Tool center path

Intersection

Programmed path

Workpiece

Programmed path

Tool center pathIntersection

Circular→Linear

Circular→Circular

Work-
piece

Tool center path
Programmed path

Intersection

α

α

α

α

C

14.6.3
Tool Movement in
Offset Mode

Explanations

� Tool movement around
the inside of a corner
(���°�α)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

230

r

r
S

r

Intersection

Programmed path

Tool center path

Intersection

Also in case of arc to straight line, straight line to arc and arc to arc, the
reader should infer in the same procedure.

� Tool movement around
the inside �α��°� with an
abnormally long vector,
linear → linear

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

231

L

r

C

S

L

S

C

L

S

L

L

r

L

L
L

S

r
r

 

Linear→Linear

Linear→Circular

Programmed path

Tool center pathIntersection

Workpiece

Circular→Linear

Circular→Circular

Intersection

Tool center path Programmed path

Work-
piece

Intersection
Tool center path

Programmed path

Workpiece

Work-
piece

Programmed path

Intersection

Tool center path

α

α

α

α

� Tool movement around
the outside corner at an
obtuse angle 
(90°�α�180°)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

232

L

L L

L

S r

r

L

Linear→Linear

Programmed path

Workpiece

Linear→Circular

Circular→Linear

Circular→Circular

Work-
piece

Tool center path

α

α

α

α

Tool center path

L

L

L

S

L

r

r

Programmed path

Workpiece

Programmed path

Tool center path

L L

L

L

S

C

Work-
piece

Tool center path Programmed path

L

L

L

r

r

r

r

S

C

� Tool movement around
the outside corner at an
acute angle
(α�90°)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

233

If the end of a line leading to an arc is programmed as the end of the arc
by mistake as illustrated below, the system assumes that cutter
compensation has been executed with respect to an imaginary circle that
has the same center as the arc and passes the specified end position.  Based
on this assumption, the system creates a vector and carries out
compensation.  The resulting tool center path is different from that created
by applying cutter compensation to the programmed path in which the
line leading to the arc is considered straight.

rr

Center of the arc

Imaginary circle

Leading of the arc End the arc

L

L
L

r
C

S

Programmed path

Tool center path

Work-
piece

The same description applies to tool movement between two circular
paths.

If the cutter compensation value is sufficiently small, the two circular tool
center paths made after compensation intersect at a position (P).
Intersection P may not occur if an excessively large value is specified for
cutter compensation.  When this is predicted, alarm 33 occurs at the end
of the previous block and the tool is stopped.  In the example shown
below, tool center paths along arcs A and B intersect at P when a
sufficiently small value is specified for cutter compensation.  If an
excessively large value is specified, this intersection does not occur.

When the cutter compensation value
is large

Arc B
P

When the cutter compensa-
tion value is small

Alarm(No.033)occurs and the tod stops

Programmed path

Center of the arc B Center of the arc A

Arc A

r r

� When it is exceptional

End position for the arc is
not on the arc

There is no inner
intersection

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

234

If the center of the arc is identical with the start position or end point,
alarm (No. 038) is displayed, and the tool will stop at the end position of
the preceding block.

N5 N6

N7

r

Alarm(No.038)is displayed and the tool
stops

(G41)
N5 G01 X100.0 ;
N6 G02 X100.0 I0 J0 ;
N7 G03 Y–100.0 J–100.0 ;Tool center path

Programmed path

The offset direction is decided by G codes (G41 and G42) for cutter radius
and the sign of cutter compensation value as follows.

Sign of offset amount

Gcode
+ –

G41 Left side offset Right side offset

G42 Right side offset Left side offset

The offset direction can be changed in the offset mode. If the offset
direction is changed in a block, a vector is generated at the intersection
of the tool center path of that block and the tool center path of a preceding
block.  However, the change is not available in the start–up block and the
block following it.

��� ������ �� ��� ��� 	�

	����	��
 �	�� ��� �����

��	�	�� �� ��� ��� ��	�	��

� Change in the offset
direction in the offset
mode

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

235

L

L

L

S

r r

G42

G41

G41
G42

r

r

S

C

r

r

LC

S

S

G41

G41

G42

G42

C

C

r

r

Linear→Linear

Linear→Circular

Programmed path

Tool center path

Workpiece

Programmed path

Tool center path

Workpiece

Workpiece

Workpiece

Workpiece

Programmed path

Tool center path

Circular→Linear

Circular→Circular

Tool center path

Programmed path

Workpiece

Workpiece

Workpiece

Tool center path with an
intersection

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

236

When changing the offset direction in block A to block B using G41 and
G42, if intersection with the offset path is not required, the vector normal
to block B is created at the start point of block B.

G41G42 (G42)

L

L

L

A B

r

r

S

G42

G41

L S

L

S

G41 G42

A

B

L

S

r

L
L

G41

C

C

r

r r

(G42)

S

S

Center

G42

Linear→Linear

Linear→Circular

Programmed path

Tool center path

Programmed path

Tool center path

Workpiece

Workpiece

Tool center path

Programmed path

Circular→Circular

An arc whose end position
is not on the arc

Programmed path

Tool center path
Center

Tool center path without an
intersection

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

237

Normally there is almost no possibility of generating this situation.
However, when G41 and G42 are changed, or when a G40 was
commanded with address I, J, and K this situation can occur.
In this case of the figure, the cutter compensation is not performed with
more than one circle circumference: an arc is formed from P1 to P2 as
shown.  Depending on the circumstances, an alarm may be displayed due
to the ”Interference Check” described later.   To execute a circle with more
than one circumference, the circle must be specified in segments.

N5

N6

N7

P1 P2

(G42)
N5 G01 G91 X50.0 Y–70.0 ;
N6 G41 G02 J–50.0 ;
N7 G42 G01 X50.0 Y70.0 ;

Programmed pathTool center path

The length of tool center
path larger than the
circumference of a circle

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

238

If the following command is specified in the offset mode, the offset mode
is temporarily canceled then automatically restored.   The offset mode can
be canceled and started as described in Subsections 15.6.2 and 15.6.4.

If G28 is specified in the offset mode, the offset mode is canceled at an
intermediate position.  If the vector still remains after the tool is returned
to the reference position, the components of the vector are reset to zero
with respect to each axis along which reference position return has been
made.

(G42 G00)
S

S

S

S

G28

G00 r
r

Intermediate position

Reference  position

If G29 is commanded in the offset mode, the offset will be cancelled at
the intermediate point, and the offset mode will be restored automatically
from the subsequent block.

G29 specified immediately after G28

(G42 G00)
S

S

S

G28 G00

r
r

(G42 G00)

S

S

G00

r
r

S

S

G29

G29

Tool center path

Programmed path

Reference  position

Intermediate
   position

Intermediate position

Tool center path

Programmed path

G29 specified not immediately after G28

� Temporary cutter
compensation cancel

� Specifying G28
(automatic return to the
reference position) in the
offset mode

� Specifying G29
(automatic return from
the reference position)
in the offset mode

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

239

The offset vector can be set to form a right angle to the moving direction
in the previous block, irrespective of machining inner or outer side, by
commanding the cutter compensation G code (G41, G42) in the offset
mode, independently.  If this code is specified in a circular command,
correct circular motion will not be obtained.
When the direction of offset is expected to be changed by the command
of cutter compensation G code (G41, G42), refer to Subsec.15.6.3.

Linear→Linear

r

A block specified by G42G42 mode

r

C
Intersection

S
L

L

S

L

Circular→Linear

A block specified by G42

Intersection

Programmed path

G42 mode

Tool center path

During offset mode, if G92 (absolute zero point programming) is
commanded,the offset vector is temporarily cancelled and thereafter
offset mode is automatically restored.
In this case, without movement of offset cancel, the tool moves directly
from the intersecting point to the commanded point where offset vector
is canceled.  Also when restored to offset mode, the tool moves directly
to the intersecting point.

S

L
L L

L

S

SN5 N6

N7

N8

G92 block(G41)
N5 G91 G01 X70.0 Y30.0 ;
N6 X60.0 Y–30.0 ;
N7 G92 X20.0 Y10.0 ;
N8 G90 G01 X80.0 Y40.0 ;

Tool center path

Programmed path

� Cutter compensation G
code in the offset mode

� G92 command in the
offset mode

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

240

The following blocks have no tool movement.  In these blocks, the tool
will not move even if cutter compensation is effected.

M05 ; M code output. . . . . . . . . 
S21 ; S code output. . . . . . . . . 
G04 X10.0 ; Dwell. . . 
G10 L11 P01 R10.0 ; Cutter compensation value setting
(G17) Z200.0 ; Move command not included in the . 

offset plane.
G90 ; G code only. . . . . . . . . 
G91 X0 ;Move distance is zero.

These com-
mands are of
no movement.

When a single block without tool movement is commanded in the offset
mode, the vector and tool center path are the same as those when the block
is not commanded.  This block is executed at the single block stop point.

L

N6

N7 N8

L

SS

N6 G91 X100.0 Y100.0 ;
N7 G04 X10.0 ;
N8 X100.0 ;

Tool center path

Programmed path

Block N7 is executed here.

However, when the move distance is zero, even if the block is commanded
singly, tool motion becomes the same as that when more than one block
of without tool movement are commanded, which will be described
subsequently.

L

N6

N7 N8

L
SS

N6 G91 X100.0 Y100.0 ;
N7 X0 ;
N8 X100.0 ;

Programmed path

Tool center path

Two blocks without tool movement should not be commanded
consecutively.  If commanded, a vector whose length is equal to the offset
value is produced in a normal direction to tool motion in earlier block, so
overcutting may result.

L

N6

N7 N8

L
SSS

N6 G91 X100.0 Y100.0 ;
N7 S21 ;
N8 G04 X10.0 ;
N9 X100.0 ;

Blocks N7 and N8 are executed here.

N9
Programmed path

Tool center path

� A block without tool
movement

A block without tool
movement specified in
offset mode

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

241

When two or more vectors are produced at the end of a block, the tool
moves linearly from one vector to another.  This movement is called the
corner movement. 
If these vectors almost coincide with each other, the corner movement
isn’t performed and the latter vector is ignored.

r

∆VX

This vector is ignored, if
∆Vx�∆V Limit, and 
∆VY�∆V Limit

r

Programmed path

Tool center path

∆VY

If  ∆VX�∆Vlimit and ∆VY�∆Vlimit, the latter vector is ignored.  The
∆Vlimit is set in advance by parameter (No. 557).
If these vectors do not coincide, a move is generated to turn around the
corner.  This move belongs to the latter block.

This move belongs to block N7, thus, the feedrate
is equal to that in block N7.
If the block N7 is G00 mode, the tool is moved at
G00 mode, while if it is G01, G02, G03, the tool is
moved at G01 mode.

S

N6 N7

However, if the path of the next block is semicircular or more, the above
function is not performed.
The reason for this is as follows:

� Corner movement

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

242

N4 G41 G91 G01 X15.0 Y20.0 ;
N5 X15.0 Y20.0 ;
N6 G02 J–60.0 ; 
N7 G01 X15.0 Y–20.0 ; 
N8 G40 X15.0 Y–20.0 ;

P2 P3 P4 P5

P6

N5

N6

N4

N7

N8

P1

Programmed pathTool center path

If the vector is not ignored, the tool path is as follows:
P1 → P2 → P3 → (Circle)→ P4 → P5 → P6 
But if the distance between P2 and P3 is negligible, the point P3 is
ignored.  Therefore, the tool path is as follows: 
P2 → P4 
Namely, circle cutting by the block N6 is ignored.

For manual operation during the cutter compensation, refer to Section
III–3.5, “Manual Absolute ON and OFF.”

� Interruption of manual
operation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

243

S

r

L
C

L S

G40
r

L

Workpiece

G40

L

Programmed path

Programmed path Tool center path

Tool center path

Work-
piece

Linear→Linear

Circular→Linear

α

α

14.6.4
Tool Movement in
Offset Mode Cancel

Explanations

� Tool movement around
an inside corner
(180°�α)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

244

Tool path has two types, A and B; and they are selected by parameter  (No.
016#2).

Intersection

L S

G40

r

L

S

r

C

Type
    A

Type
    B

L
S

G40

L

r

S
C

r
r

L
L

G40

L

G40

L

Programmed path

Workpiece

Tool center path

Linear→Linear

Circular→Linear

Linear→Linear

Work-
piece

Programmed path Tool center path

Workpiece

Programmed path

Tool center path

Circular→Linear

Work-
piece

Programmed path Tool center path
Intersection

α

α

α

α

� Tool movement around
an outside corner at an
obtuse angle
���°�α����°�

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

245

Tool path has two types, A and B : and they are selected by parameter  (No.
016#2)

L S

G40

r

L

SC

Type
    A

Type
    B

r

G40

L

LL

Lr

r

L

L

S

r

r

C

L

L

G42

G40
L

G42

L

S

S

Linear→Linear

Circular→Linear

Programmed path

Tool center path

Workpiece

Work-
piece

Tool center pathProgrammed path

Linear→Linear

Circular→Linear

Workpiece

Programmed path

Tool center path

Programmed path
Tool center path

Work-
piece

α

α

α

α

� Tool movement around
an outside corner at an
acute angle
(α�90°)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

246

Start position

r

G40

G42

L

L

S

1°or less

Programmed path

Tool center path

When a block without tool movement is commanded together with an
offset cancel, a vector whose length is equal to the offset value is produced
in a normal direction to tool motion in the earlier block, the vector is
cancelled in the next move command.

L

N6

N7 N8

L
SS

N6 G91 X100.0 Y100.0 ;
N7 G40 ;
N8 X100.0 Z0 ;

Tool center path

Programmed path

� Tool movement around
the outside linear →linear
at an acute angle less
than 1 degree ( α�1°)

� A block without tool
movement specified
together with offset
cancel

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

247

If a G41 or G42 block precedes a block in which G40 and I_, J_, K_ are
specified, the system assumes that the path is programmed as a path from
the end position determined by the former block to a vector determined
by (I,J), (I,K), or (J,K).  The direction of compensation in the former block
is inherited.

E(a, b)

r

N1 (G42 mode) ;
N2 G40 Xa Yb I_ J_ ;

(I, J)

r

N2

N1

G42

Workpiece

Programmed path

Tool center path

In the G42 block, the tool center moves towards X.
In the G40 block, the tool moves towards E.

S

In this case, note that the CNC obtains an intersection of the tool path
irrespective of whether inner or outer side machining is specified

r
S

G42

E

G40

r

(I, J)

Tool center path

Programmed path

When an intersection is not obtainable, the tool comes to the normal
position to the previous block at the end of the previous block.

E

(I, J)

r

S

G40

r

Tool center path

Programmed pathG42

� Block containing G40
and I_J_K_

� The previous block
contains G41 or G42

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

248

In the example shown below, the tool does not trace the circle more than
once.  It moves along the arc from P1 to P2.  The interference check
function described in Subsection 14.6.5 may raise an alarm.

(I, J)

N6

N7

P1

P2

N5

Tool center path

Programmed path

(G41)
N5 G01 G91 X100.0 ;
N6 G02 J–60.0 ;
N7 G40 G01 X50.0 Y50.0 I–10.0 J–10.0 ;

To make the tool trace a circle more than once, program two or more arcs.

� The length of the tool
center path larger than
the circumference of a
circle

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

249

Tool overcutting is called interference. The interference check function
checks for tool overcutting in advance. However, all interference cannot
be checked by this function. The interference check is performed even if
overcutting does not occur.

� The direction of the tool path is different from that of the programmed
path (from 90 degrees to 270 degrees between these paths).

Tool center path Programmed path

Programmed path

Tool center path

The directions of
these two paths are
different (180°).

The directions of
these two paths are
different (180°).

14.6.5
Interference Check

Explanations

� Criteria for detecting
interference

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

250

� In addition to the condition �, the angle between the start point and
end point on the tool center path is quite different from that between
the start point and end point on the programmed path in circular
machining(more than 180 degrees).
 

N5
N6

N7

r1
r2

Center

Tool center path

Programmed path

(G41)
N5 G01 G91 X80.0 Y20.0 H1 ;
N6 G02 X32.0 Y–16.0 I–20.0 J–80.0 H2 ;
N7 G01 X20.0 Y–50.0 ;
(Tool compensation value corresponding to H1 : r1 = 20.0)
(Tool compensation value corresponding to H2 : r2 = 60.0)

In the above example, the arc in block N6 is placed in the one quadrant.
But after cutter compensation, the arc is placed in the four quadrants.

� Removal of the vector causing the interference 
When cutter compensation is performed for blocks A, B and C and
vectors V1, V2, V3 and V4 between blocks A and B, and V5, V6, V7
and V8 between B and C are produced, the nearest vectors are checked
first. If interference occurs, they are ignored. But if the vectors to be
ignored due to interference are the last vectors at the corner, they
cannot be ignored.
Check between vectors V4 and V5
    Interference ––– V4 and V5 are ignored.
Check between V3 and V6 
   Interference ––– V3 and V6 are ignored 
Check between V2 and V7 
   Interference ––– V2 and V7 are Ignored 
Check between V1 and V8 
   Interference ––––– V1 and V8 are cannot be ignored 
If while checking, a vector without interference is detected,
subsequent vectors are not checked.  If block B is a circular movement,
a linear movement is produced if the vectors are interfered.

� Correction of
interference in advance

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

251

(Example 1)  The tool moves linearly from V1 to V8

Tool
center path

C
C

C

r r

V1
V2

V3

V4V5

V6

V7
V8

A

O1 O2

BProgrammed 
path

V4, V5 : Interference
V3, V6 : Interference
V2, V7 : Interference
V1, V8 : No Interference

(Example 2)  The tool moves linearly from V1, V2, V7,  to V8

Tool center
path

V6 V3

V5

C
C

C

r r

V1
V2

V4

V7
V8

A

O1 O2

B

V4, V5 : Interference
V3, V6 : Interference
V2, V7 : No Interference

Programmed
path

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

252

� If the interference occurs after correction �, the tool is stopped with
an alarm.
If the interference occurs after correction � or if there are only one pair
of vectors from the beginning of checking and the vectors interfere, the
alarm (No.41) is displayed and the tool is stopped immediately after
execution of the preceding block.  If the block is executed by the single
block operation, the tool is stopped at the end of the block.

C

V6

A

B

V5 V2

V1

Stopped

Tool center path

Programmed path

After ignoring vectors V2 and V5 because of interference, interference
also occurs between vectors V1 and V6.  The alarm is displayed and the
tool is stopped.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

253

� Depression which is smaller than the cutter compensation value

Tool center path

A
B

C

Stopped

Programmed path

There is no actual interference, but since the direction programmed in
block B is opposite to that of the path after cutter compensation the tool
stops and an alarm is displayed.

� Groove which is smaller than the cutter compensation value

A B C

Programmed path Tool center path

Stopped

In the same way as 1, the programmed path will be opposite to the tool
path after cutter compensation has been applied.  This state is determined
to constitute interference.  An alarm is issued and the machine stops.

� When interference is
assumed although actual
interference does not
occur

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

254

When the radius of a corner is smaller than the cutter radius, because the
inner offsetting of the cutter will result in overcuttings, an alarm is
displayed and the CNC stops at the start of the block.  In single block
operation, the overcutting is generated because the tool is stopped after
the block execution.

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

Programmed path

Tool center path

Workpiece

An alarm is generated
and the operation
stops

An alarm is generated and
the operation stops here in
single block operation

If the CNC does not
stop, overcutting occurs

Since the cutter compensation forces the path of the center of the tool to
move in the reverse of the programmed direction, overcutting will result.
In this case an alarm is displayed and the CNC stops at the start of the
block.

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ
ÇÇÇÇÇ

Tool center path

Programmed path

Workpiece

An alarm is displayed and the operation stops

Overcutting if the operation would not stop

14.6.6
Overcutting by Cutter
Compensation

Explanations

� Machining an inside
corner at a radius
smaller than the cutter
radius

� Machining a groove
smaller than the tool
radius

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

255

When machining of the step is commanded by circular machining in the
case of a program containing a step smaller than the tool radius, the path
of the center of tool with the ordinary offset becomes reverse to the
programmed direction.  In this case, the first vector is ignored, and the tool
moves linearly to the second vector position.  The single block operation
is stopped at this point.  If the machining is not in the single block mode,
the cycle operation is continued.  If the step is of linear, no alarm will be
generated and cut correctly.  However uncut part will remain.

ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ

S
The first vector is ignored

Tool center path

Programmed path

Workpiece

Center of the circular
machining

An overcutting will result if the first vector is not ignored.
However, tool moves linearly.

Linear movement Stop position after execution of a  single
block

It is usually used such a method that the tool is moved along the Z axis
after the cutter compensation is effected at some distance from the
workpiece at the start of the machining.
In the case above, if it is desired to divide the motion along the Z axis into
rapid traverse and cutting feed, follow the procedure below.

ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ
ÊÊÊÊ

Work-
piece

N1

N1 G91 G00 G41 X50.0 Y50.0 H1 ;
N3 G01 Z–300.0 F100 ;
N6 Y100.0 F200 ;

N6

(50, 50)
N3:Move command in Z axis

After compensation

In the program example above, when executing block N1, blocks N3 and
N6 are also entered into the buffer storage, and by the relationship among
them the correct compensation is performed as in the figure above.
Then, if the block N3 (move command in Z axis) is divided as follows:
As there are two move command blocks not included in the selected plane
and the block N6 cannot be entered into the buffer storage, the tool center
path is calculated by the information of N1 in the figure above.  That is,
the offset vector is not calculated in start–up and the overcutting may
result.

� Machining a step smaller
than the tool radius

� Starting compensation
and cutting along the
Z–axis

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

256

The above example should be modified as follows:

ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊN1

N1 G91 G00 G41 X50.0 Y50.0 H1 ;
N3 G01 Z–250.0 ;
N5 G01 Z–50.0 F100 ;
N6 Y100.0 F200 ;

N6

(50, 50)

N3, N5:Move command
for the Z axis

After compensation

Workpiece

The move command in the same direction as that of the move command
after the motion in Z axis should be programmed.

ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ

ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ
ÊÊÊÊÊ

N1

N1 G91 G00 G41 X50.0 Y40.0 H1 ;
N2 Y10.0 ;
N3 Z–250.0 ;
N5 G01 Z–50.0 F100 ;
N6 Y100.0 F200 ;

N6

N2

Workpiece

After compensation

N3, N5 : Move command
for the Z axis (2blocks)

(50, 50)

As the block with sequence No. N2 has the move command in the same
direction as that of the block with sequence No. N6, the correct
compensation is performed.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

257

Cutter compensation C is not performed for commands input from the
MDI.
However, when automatic operation by absolute commands is
temporarily stopped by the single block function, MDI operation is
performed, then automatic operation starts again, the tool path is as
follows :
In this case, the vectors at the start position of the next block are translated
and the other vectors are produced by the next two blocks.  Therefore,
from next block but one, cutter compensation C is accurately performed.

VB2

VB1

VC1’

VC1

VC2

VB1’

VB2’

PB

PA

PB’

PC

PD

Command
for MDI

When position PA, PB, and PC are programmed in an absolute command,
tool is stopped by the single  block function after executing the block from
PA to PB and the tool is moved by MDI operation.  Vectors VB1 and VB2
are translated to VB1’ and VB2’ and offset vectors are recalculated for the
vectors VC1 and VC2 between block PB–PC and PC–PD.
However, since vector VB2 is not calculated again, compensation is
accurately performed from position PC.

14.6.7
Input Command from
MDI

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

258

Tool compensation values include tool geometry compensation values
and tool wear compensation (Fig. 14.7).

OFSG

OFSW
OFSG:Geometric compensation value

OFSW:Wear compensation value

ÇÇ
ÇÇ
ÇÇ

ÇÇ
ÇÇ

Reference position

Fig.14.7  Geometric compensation and wear compensation

Tool compensation values can be entered into CNC memory from the
CRT/MDI panel (see section III–9.1) or from a program.  A tool
compensation value is selected from the CNC memory when the
corresponding code is specified after address H or D in a program. 
The value is used for tool length compensation, cutter compensation, or
the tool offset.

Table 14.7(a) shows the valid input range of tool compensation values.

Table14.7 (a)  The valid input range of  tool compensation value

Increment system Metric input inch input

IS–B 0 to �999.999mm 0 to �99.9999inch

IS–C 0 to �999.9999mm 0 to �99.99999inch

The memory can hold 32,64,99, or 200 tool compensation values
(option).
Address D or H is used in the program.  The address used depends on
which of the following functions is used: tool length compensation (see
section 14.1), tool offset (see section 14.3), cutter compensation B (see
section 14.4), or cutter compensation C (see sections 14.5 and 14.6).
The range of the number that comes after the address (D or H) depens on
the number of tool compensation values : 0 to 32, 0 to 64, 0 to 99, or 0
to 200.

14.7
TOOL
COMPENSATION
VALUES, NUMBER
OF COMPENSATION
VALUES, AND
ENTERING VALUES
FROM THE
PROGRAM (G10)

Explanations

� Valid range of tool
compensation values

� Number of tool
compensation values
and the addresses to be
specified

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

259

Tool compensation memory A or B can be used.
The tool compensation memory determines the tool compensation values
that are entered (set) (Table 14.7 (b)).

Table14.7(b)  Setting contents tool compensation memory and
tool compensation value

Tool compensation memory Tool compensation value

A The tool compensation corresponding to the
tool compensation number is used.

B The tool geometry compensation, plus tool
wear compensation, both corresponding to the
tool compensation number, are used.

The programming format depends on which tool compensation memory
is used.

Table14.7(c)  Setting format of Tool compensation memory
and Tool compensation value

Tool compensation memory Format

A Tool compensation value G10P_R_;

B
Geometry compensation value G10L10P_R_;

B
Wear compensation value G10L11P_R_;

P : Number of tool compensation

R :Tool compensation value in the absolute command (G90) mode
Value to be added to the specified tool compensation value in the
incremental command (G91) mode (the sum is also a tool
compensation value.)

NOTE
To provide compatibility with the format of older CNC
programs, the system allows L1 to be specified instead of
L11.

� Tool compensation
memory and the tool
compensation value to
be entered

Format

� Input of tool
compensation
value by programing

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

260

A programmed figure can be magnified or reduced (scaling).
The dimensions specified with X_, Y_, and Z_ can each be scaled up or
down with the same or different rates of magnification.
The magnification rate can be specified in the program.
Unless specified in the program, the magnification rate specified in the
parameter is applied.

Y

X

P4

P4′

P1

P1′

P3′

P2′

P2

P3

P0

P0:Scaling center
0

Fig.14.8(a)  Scaling(P 1 P2 P3 P4 → P1′P2′P3′P4′)

G51X_Y_Z_P_ ; Scaling start

Scaling is effective.
   (Scaling mode)

Format Meaning of command

X_Y_Z_ : Absolute command for
center coordinate value
of scaling

P_  : Scaling magnification

G50 ; Scaling cancel

SCALING UP OR DOWN ALONG ALL AXES COMPONENTS
AT THE SAME RATE OF MAGNIFICATION

G51_X_Y_Z_I_J_K_; Scaling start X_Y_Z_ Absolute command for 
center coordinate value
of scaling

I_J_K_ Scaling magnification for
X axis Y axis and Z axis 
respectivelyG50 Scaling cancel

Format Meaning of command

Scaling is effective.
   (Scaling mode)

Scaling up or down along each axes at a different
rate of magnification (mirror image)

CAUTION
Specify G51 in a separate block. After the figure is enlarged
or reduced, specify G50 to cancel the scaling mode.

14.8
SCALING (G50, G51)

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

261

Least input increment of scaling magnification is: 0.001 or 0.00001 It is
depended on parameter (No. 036#07) which value is selected.  If scaling
P is not specified on the block of scaling (G51X_Y_Z_P_ ;), the scaling
magnification set to parameter (No. 731) is applicable. If X,Y,Z are
omitted, the tool position where the G51 command was specified serves
as the scaling center.

Each axis can be scaled by different  magnifications. Also when a negative
magnification is specified, a mirror image is applied.  First of all, set a
parameter (No. 063#6) which validates each axis scaling (mirror image).
Then, set parameter (No. 036#0, #1, #2) to enable scaling along each axis.
Least input increment of scaling magnification of each axis (I, J, K) is
0.001 or 0.00001 (set parameter (No. 036#7)).
Magnification is set to parameter 5421 within the range �0.00001 to
�9.99999 or �0.001 to �9.999
If a negative value is set, mirror image is effected.
If magnification I, J or K is not commanded, a magnification value set to
parameter (No. 731, 732, 733) is effective.  However, a value other than
0 must be set to the parameter.

NOTE
Decimal point programming can not be used to specify the
rate of magnification (I, J, K).

c

Y axis

X axis

b
a

d

a/b  : Scaling magnification of X axis
c/d  : Scaling magnification of Y axis
   0  : Scaling center

Programmed figure

Scaled figure

0

Fig.14.8 (b)  Scaling of each axis

Explanations

� Scaling up or down
along all axes at the
same rate of
magnification

� Scaling of each axis,
programmable mirror
image
(negative magnification)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

262

Even if different magnifications are applie to each axis in circular
interpolation, the tool will not trace an ellipse.
When different magnifications are applied to axes and a circular
interpolation is specified with radius R, it becomes as following figure
14.8 (c) (in the example shown below, a magnification of  2 is applied to
the X–component and a magnification of  1 is applied to the Y–
component.).

G90 G00 X0.0 Y100.0 ;
G51 X0.0 Y0.0 Z0.0 I2000 J1000;
G02 X100.0 Y0.0 R100.0 F500 ;

Above commands are equivalent to the following command:

G90 G00 X0.0 Y100.0 Z0.0 ;
G02 X200.0 Y0.0 R200.0 F500 ;

Magnification of radius R depends on I, or J whichever is larger.

(0,0) (100,0) (200,0)

Y

X

Scaled shape

(0,100)

Fig.14.8 (c)  Scaling for circular interpolation 1

When different magnifications are applied to axes and a circular
interpolation is specified with I, J and K, it becomes as following figure
14.8 (d) (In the example shown below, a magnification of 2 is applied to
the X–component and a magnification of 1 is applied to the
Y–component.).

� Scaling of circular
interpolation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

263

G90 G00 X0.0 Y0.0 ;
G51 X0.0 Y0.0 I2000 J1000;
G02 X100.0 Y0.0 I0.0 J–100.0 F500 ;

Above commands are equivalent to the following commands.

G90 G00 X0.0 Y100.0;
G02 X200.0 Y0.0 I0.0 J–100.0 F500 ;

In this case, the end point does not beet the radius, a linear section is
included.

(0,0) (100,0) (200,0)

Y

X

Scaled shape

(0,100)

Fig.14.8(d)  Scaling for circular interpolation 2

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

264

This scaling is not applicable to cutter compensation values, tool length
offset values, and tool offset values (Fig. 14.8 (e) ).

Programmed figure

Figure after scaling

Cutter compensation values are not scaled.

Fig.14.8(e)  Scaling during cutter compensation

Scaling is not applicable to the Z–axis movement in case of the following
canned cycle.
⋅Cut–in value Q and retraction value d of peck drilling cycle (G83, G73).
⋅Fine boring cycle (G76)
⋅Shift value Q of X and Y axes in back boring cycle (G87).
In manual operation, the travel distance cannot be increased or decreased
using the scaling function.

WARNING
1 If a parameter setting value is employed as a scaling magnification without specifying P, the

setting value at G51 command time is employed as the scaling magnification, and a change
of this value, if any, is not effective.

2 Before specifying the G code for reference position return (G27, G28, G29, G30) or coordinate
system setting (G92), cancel the scaling mode.

3 If scaling results are rounded by counting fractions of 5 and over as  a unit and disregarding
the rest, the move amount may become zero.  In this case, the block is regarded as a no
movement block, and therefore, it may affect the tool movement by cutter compensation C. See
the description of blocks that do not move the tool at subsection 14.6.3.

� Invalid scaling

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

265

NOTE
1 The position display represents the coordinate value after scaling.
2 When a mirror image was applied to one axis of the specified plane, the following results:

(1)Circular command Direction of rotation is reversed.. . . . . . . . . . . . . 
(2)Cutter compensation C Offset direction is reversed.. . . . . . . . . 
(3)Coordinate system rotation Rotation angle is reversed.. . . . . . 
(4)Cutter compensation B Offset direction is reversed. (Including G39). . . . . . . . . 

Example of a mirror image program
Subprogram
O9000 ;
G00 G90 X60.0 Y60.0;
G01 X100.0 F100; 
G01 Y100.0;
G01 X60.0 Y60.0;
M99;
Main program
N10 G00 G90;
N20M98P9000;
N30 G51 X50.0 Y50.0 I–1000 J1000;
N40 M98 P9000;
N50 G51 X50.0 Y50.0 I–1000 J–1000;
N60 M98 P9000;
N70 G51 X50.0 Y50.0 I1000 J–1000
N80 M98 P9000;
N90 G50;

Y

10060

50

50 X

60

100

40

40

0

0

Fig. 14.8 (f)  Example of a mirror image program

Examples

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

266

A programmed shape can be rotated.  By using this function it becomes
possible, for example, to modify a program using a rotation command
when a workpiece has  been placed with some angle rotated from the
programmed position on the machine.Further, when there is a pattern
comprising some identical shapes in the positions rotated from a shape,
the time required for programming and the length  of the program can be
reduced by preparing a subprogram of the shape and calling it after
rotation.

Angle of rotation

Center of rotation

Y

X
0

Fig. 14.9 (a)  Coordinate system rotation

G68 �_�_R_ ; Start rotation of a coordinate system.

G17 (G18 or G19) : Select the plane in which contains the figure to be 
rotated.

�_�_ Absolute command for two of the x_,y_,and Z_ axes that
correspond to the current plane selected by a 
command (G17, G18, or G19).  The command specifies
the coordinates of the center of rotation for the values 
specified subsequent to G68.

R_ Angular displacement with a positive value indicates
counter clockwise rotation.  Bit 0 of parameter 041 
selects whether the specified angular displacement is 
alwarys considered an absolute value or is considered an
absolute or incremental value depending on the specified
G code (G90 or G91).

Least input increment : 0.001 deg  
Valid data range : 360,000 to 360,000

Coordinate system rotation mode 
(The coordinate system is rotated.)

G69 ; Coordinate system rotation cancel command

Format

Meaning of command

G17
G18
G19

14.9
COORDINATE
SYSTEM ROTATION
(G68, G69)

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

267

(α,β)

Angle of rotationCenter of
rotation

Rotation plane G17

R

X

Y

0

Fig ����� �
� ������	�� ������ ���	���

NOTE
When a decimal fraction is used to specify angular
displacement (R_), the 1’s digit corresponds to degree
units.

The G code for selecting a plane (G17,G18,or G19) can be specified
before the block containing the G code for coordinate system rotation
(G68).  G17, G18 or G19 must not be designated in the mode of coordinate
system rotation.
As for the incremental position commands designated between the G68
block and a block with an absolute command; it is regarded that the
position where G68 was designated is the center of rotation (Fig. 14.9 (c)).
When α_ and β_ are omitted, the position where G68 is commanded is
set as the center of rotation.  
When angle of rotation is omitted, the value set to parameter (No. 730)
is regarded as the rotation angle.  The coordinate system rotation is
cancelled by G69; 
G69 may be designated in the same block as the other commands.  Tool
offset, such as cutter compensation, tool length offset, or tool offset, is
performed after the coordinate system is rotated for the command
program.

WARNING
Use absolute programming to specify movement in a block
in which G69 is specified.

Explanations

� G code for selecting a
plane: G17,G18 or G19

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

268

N1 G92 X�50.0 Y�50.0 G69 G17 ;
N2 G68 X70.0 Y30.0 R60.0 ;
N3 G90 G01 X0 Y0 F200 ;

  (G91X50.0Y50.0)
N4 G91 X100.0 ;
N5 G02 Y100.0 R100.0 ;
N6 G03 X�100.0 I�50.0 J�50.0 ;
N7 G01 Y�100.0 ;
N8 G69 G90 X�50.0 Y�50.0 M02 ;

Tool path when the incremental 
command is designated in the N3
block (in parenthesis) Originally programmed tool path

Tool path after rotation

60°

(–50.0,–50.0)

(0,0)

Center of rotation
(70.0,30.0)

Fig.14.9(c)  Absolute/incremental command during 
coordinate system rotation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

269

N1 G92 X0 Y0 G69 G01 ;
N2 G42 G90 X100.0 Y100.0 F1000 H01 ;
N3 G68 R�30.0 ;
N4 G91 X200.0 ;
N5 G03 Y100.0 R100.0 J50.0 ;
N6 G01 X�200.0 ;
N7 Y�100.0 ;
N8 G69 G40 G90 X0 Y0 M30 ;

It is possible to specify G68 and G69 in cutter compensation C mode.  
The rotation plane must coincide with the plane of cutter compensation C.

Programmed shape before 
coordinate system  rotation

Programmed shape 
after coordinate 
system  rotation

Tool path

30°

(0, 0)

Fig. 14.9 (d)  Cutter compensation C and coordinate system rotation

If a coordinate system rotation command is executed in the scaling mode
(G51 mode), the coordinate value (α,β,) of the rotation center will also
be scaled,   but not the rotation angle (R).  When a move command is
issued, the scaling  is applied first and then the coordinates are rotated.
A coordinate system rotation command (G68) should not be issued in
cutter compensation C mode (G41, G42) on scaling mode (G51).  The
coordinate system rotation command should always be specified prior to
setting the cutter compensation C mode.

1. When the system is not in cutter compensation mode C, specify the
commands in the following order :

G51 ; scaling mode start
G68 ; coordinate system rotation mode start

G69 ; coordinate system rotation mode cancel
G50 ; scaling mode cancel

Examples

� Cutter compensation C
and coordinate system
rotation

� Scaling and coordinate
system rotation

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

270

2. When the system is in cutter compensation model C, specify the
commands in the following order (Fig.14.9(e)) :
(cutter compensation C cancel)

G51 ; scaling mode start
G68 ; coordinate system rotation start

: 
G41 ; cutter compensation C mode start

:

0

100.0

200.0

200.0 400.0

G90 G92 X0 Y0 ;
G51 X300.0 Y150.0 P500 ;
G68 X200.0 Y100.0 R45.0 ;
G01 X400.0 Y100.0 ;
G91 Y100.0 ; 
X–200.0 ;
Y–100.0 ;
X200.0 ;

When only coordinate 
system rotation is applied

When scaling and coordinate
system rotation are applied

When only scaling
is applied

Cutting program

Y

X

Fig. 14.9 (e) Scaling and coordinate system rotation
in cutter compensation C mode

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

271

It is possible to store one program as a subprogram and recall subprogram
by changing the angle.

(0, 0)

(0, –10.0)

Sample program for when the bit (bit 0 of parameter 041) is set to 1.  
The specified angular displancement is treated as an absolute or 
incremental value depending on the specified G code (G90 or G91).

G92 X0 Y0 G69 G17;
G01 F200 H01;
M98 P2100 ;
M98 P072200 ;
G69 G00 G90 X0 Y0 M30 ;

O 2200 G68 X0 Y0 G91 R45.0 ;
G90 M98 P2100 ;
M99 ;

O 2100 G90 G01 G42 X0 Y–10.0 ;
X4.142 ;
X7.071 Y–7.071 ;
G40 ; 
M99 ;

Programmed path

When offset is
applied

Subprogram

Fig. 14.9 (f) Coordinate system rotation command

� Repetitive commands for
coordinate system
rotation

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

272

By specifying indexing positions (angles) for the indexing axis (the
fourth axis), the index table of the machining center can be indexed.
Before and after indexing, the index table is automatically unclamped or
clamped .

Specify an indexing position with the fourth axis address, generally A, B,
or C.
The indexing position is specified by either of the following (depending
on bit 4 of parameter 079):

1. Absolute value only

2. Absolute or incremental value depending on the specified G
code:G90 or G91

A positive value indicates an indexing position in the counterclockwise
direction.  A negative value indicates an indexing position in the
clockwise direction.
The minimum indexing angle of the index table is the value set to
parameter 839.  Only multiples of the least input increment can be
specified as the indexing angle.  If any value that is not a multiple is
specified, an alarm (No. 135) occurs.  Decimal fractions can also be
entered.  When a decimal fraction is entered, the 1’s digit corresponds to
degree units.

G90 B–45.0 ; or
G91 B–105.0;

Value specified for rotation from A to B
(case 2 described above)

0°
–45°

+60°

A

B

The direction of rotation and angular displacement are determined by
either of the following two methods.  Refer to the manual written by the
machine tool builder to find out which method is applied.

1. Using the miscellaneous function specified in parameter 249
(Address) (Indexing position) (Miscellaneous function); 
Rotation in the negative direction
(Address) (Indexing position); 
Rotation in the positive direction (No miscellaneous functions are
specified.)
An angular displacement greater than 360°is rounded down to the
corresponding angular displacement within 360°when bit 2 of
parameter 079 specifies this option.
For example, when G90 B400.0 (miscellaneous function); is specified
at a position of 0 , the table is rotated by 40°in the negative direction.

14.10
INDEX TABLE
INDEXING FUNCTION

Explanations

� Indexing position

� �������
 �
� ��	�� ��

�����


ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

273

2. Using no miscellaneous functions
By setting to bits 2, 3, and 4 of parameter 079, operation can be
selected from the following two options.
Select the operation by referring to the manual written by the machine
tool builder.

(1)Rotating in the direction in which an angular displacement
becomes shortest
This is valid only in absolute mode.   A specified angular
dis–placement greater than 360° is rounded down to the
correspond–ing angular displacement within 360° when bit 2 of
parameter 079 specifies this option. 
For example, when G90 B400.0; is specified at a position of 0 , the
table is rotated by 40° in the positive direction.

(2)Rotating in the specified direction
In the absolute mode, the value set in bit 2 of parameter 079
determines whether an angular displacement greater than 360°is
rounded down to the corresponding angular displacement within
360°. 
In the incremental mode, the angular displacement is not rounded
down.  
For example, when G90 B720.0; is specified at a position of 0 , the
table is rotated twice in the positive direction, when the angular
displacement is not rounded down.

The table is always rotated around the indexing axis in the rapid traverse
mode. 
Dry runs cannot be executed for the indexing axis.

CAUTION
If a reset is made during indexing of the index table, a
reference position return must be made before each time
the index table is indexed subsequently.

NOTE
1 Specify the indexing command in a single block.  If the

command is specified in a block in which another controlled
axis is specified, an alarm (No.136) occurs.

2 The waiting state which waits for completion of clamping or
unclamping of the index table is indicated on diagnostic
screen No. 701#2.

3 The miscellaneous function specifying a negative direction
is processed in the CNC.  
The relevant M code signal and completion signal are sent
between the CNC and the machine.

4 If a reset is made while waiting for completion of clamping
or unclamping, the clamp or unclamp signal is cleared and
the CNC exits the completion wait state.

� ��������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

274

Table14.10  Index indexing function and other functions

Item Explanation

Relative position display
This value is rounded down when bit 1 of parameter 079 specifies this
option.

Absolute position display
This value is rounded down when bit 2 of parameter 079 specifies this
option.

Automatic return from the reference position (G29)
2nd reference position return (G30)

Impossible to return

Movement in the machine coordinate system Impossible to move

Single direction positioning Impossible to specify

2nd auxiliary function (B code) Possible with any address other than B that of the indexing axis.

Operations while moving the indexing axis
Unless otherwise processed by the machine, feed hold, interlock and
emerrgency stop can be executed. Machine lock can be executed af-
ter indexing is completed.

SERVO OFF signal
Disabled
The indexing axis is usually in the servo–off state.

Incremental commands for indexing the index table
The workpiece coordinate system and machine coordinate system
must always agree with each other on the indexing axis (the work-
piece zero point offset value is zero.).

Operations for indexing the index table

Manual operation is disabled in the JOG, INC, or HANDLE mode.  
A manual reference position return can be made.  If the axis selection
signal is set to zero during manual reference position return, move-
ment is stopped and the clamp command is not executed.

� �����
�� �����
�� ���

��	� �����
���

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

275

When a tool with a rotation axis (fourth–axis) is moved in the XY plane
during cutting, the normal direction control function can control the tool
so that the fourth–axis is always perpendicular to the tool path (Fig. 14.11
(a)). 

Tool

Tool

Programmed tool path

Normal direction (in
which the tool moves)

Fourth–axis

Fourth–axis

Fig. 14.11 (a)   Sample movement of the tool

G code Function Explanation

G151 Normal direction 
control left

If the workpiece is to the right of the tool
path looking toward the direction in which
the tool advances, the normal direction

G152 Normal direction 
control right

control left (G151) function is specified. 
After G151 or G152 is specified, the nor-
mal direction control function is enabled
(normal direction control mode)

G150 Normal direction 
control cancel

(normal direction control mode).  
When G150 is specified, the normal
direction control mode is canceled.

14.11
NORMAL DIRECTION
CONTROL 
(G150, G151, G152)

������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

276

Direction od the fourth–axis

Programmed path

Programmed path
Direction od the fourth–axis

Center of the arc

Fig. 14.11 (c)  Normal direction control right (G152)Fig. 14.11 (b)  Normal direction control left (G151)

When viewed from the center of rotation around the fourth–axis, the
angular displacement about the fourth–axis is determined as shown in
Fig. 14.11 (d).  The positive side of the X–axis is assumed to be 0°, the
positive side of the Y–axis is 90°, the negative side of the X–axis is 180°,
and the negative side of the Y–axis is 270°.

Center of rotation

+Y

180° +X

270�

0�

90�

Fig. 14.11 (d)  Angle of the fourth axis

When the cancel mode is switched to the normal direction control mode,
the fourth–axis becomes perpendicular to the tool path at the beginning
of the block containing G151 or G152.
In the interface between blocks in the normal direction control mode, a
command to move the tool is automatically inserted so that the
fourth–axis becomes perpendicular to the tool path at the beginning of
each block.  The tool is first oriented so that the fourth–axis becomes
perpendicular to the tool path specified by the move command, then it is
moved along the X– and Y axes.
In the cutter compensation mode, the tool is oriented so that the
fourth–axis becomes perpendicular to the tool path created after
compensation.
In single–block operation, the tool is not stopped between a command for
rotation of the tool and a command for movement along the X– and
Y–axes.  A single–block stop always occurs after the tool is moved along
the X– and Y–axes.

Explanations

� �
�	� �� ��� ������ ���

� Normal direction control

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 14. COMPENSATION FUNCTIONPROGRAMMING

277

Programmed path

S : Single block stop point

S

N1

N2

S

N3

S

Direction of the fourth axis

Fig. 14.11 (e)  Point at which a single–block stop occurs 
in the normal direction control mode

Before circular interpolation is started, the fourth–axis is rotated so that
the fourth–axis becomes normal to the arc at the start point.  During
circular interpolation, the tool is controlled so that the fourth–axis is
always perpendicular to the tool path determined by circular
interpolation.

Center of the arc
Programmed path

The tool is controlled so that the fourth–axis
is always normal to the tool path determined
by circular interpolation.

A rotation command is inserted so
that the fourth–axis becomes 
normal to the arc at the start point.

Fig. 14.11 (f)  Normal direction control of the circular interpolation

CAUTION
During normal direction control, the fourth axis always
rotates through an angle less than 180 deg.  I.e., it rotates
in whichever direction provides the shorter route.ww

w.
cn

cc
en

ter
.co

m



PROGRAMMING B–61404E/0814. COMPENSATION FUNCTION

278

Movement of the tool inserted at the beginning of each block is executed
at the feedrate set in parameter 683.  If dry run mode is on at that time, the
dry run feedrate is applied.  If the tool is to be moved along the X–and
Y–axes in rapid traverse (G00) mode, the rapid traverse feedrate is
applied.

The federate of the fourth axis during circular interpolation is defined by
the following formula.

Amount of movement of the revolution (deg)

Length of arc (mm or inch)
(deg/min)F�

F �Federate (mm/min or inch/min) specified by the corresponding
block of the arc

Amount of movement of the revolution : 
The difference in angles at the beginning and the end of the block.

NOTE
1 Do not specify any command to the fourth–axis during

normal direction control.
Any command specified at this time is ignored.

2 Before processing starts, it is necessary to correlate the
workpiece coordinate of the fourth axis with the actual
position of the fourth axis on the machine using the
coordinate system setting (G92) or the like.

3 The helical cutting option is required to use this function.
Helical cutting cannot be specified in the normal direction
control mode.

4 Normal direction control cannot be performed by the G53
move command.

� Fourth axis feedrate

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

279

15 CUSTOM MACRO A
A function covering a group of instructions is stored in memory as same
as a subprogram.  The stored function is presented by one instruction, so
that only the representative instruction need be specified to execute the
function.  This group of registered instructions is called a “custom macro
body” and the representative instruction is called a “custom macro
instruction”.  The custom macro body may simply be called a macro.  And
the custom macro instruction may be called a macro call command.

Regular Program

Custom macro 
instruction

Custom macro body

A group of 
instructions for 
a certain function

Programmers need only remember representative macro instructions
without having to remember all the instructions in a custom macro body.
The three most significant points on custom macros are that variables can
be used in the custom macro body, operations can be performed on
variables and actual values can be assigned to the variables in custom
macro instructions.

NOTE
Machine tool builders are requested to attach your custom
macro program tape or program list to the CNC unit without
fail.  If it is necessary to replace part program storage
memory due to a failure, FANUC serviceman or end users
operators in charge of maintenance should know the
contents of custom macro for the purpose of repairing the
trouble immediately.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

280

The custom macro command is the command to call the custom macro
body.

Command format is as follows :

M98 P__;

Called macro body program No.

With the above command, the macro body specified by P is called.

The subprogram can be called using M code set in parameter.
N_ G_ X_ M98P <p> ;

instead of commanding as above, the same operation can be commanded
using following command :

N_ G_ X_ M <m> ;
The correspondence of M code <m> which calls subprogram and the
program number <p> (O9001 to O9003) of the called subprogram shall
be set by parameters (No. 0240 to No. 0242).
For subprogram call, a maximum of 3 among M03 to M255, except M30
and M code which does not buffer (parameter No. 111, 112) can be used.

NOTE
1 Similarly to M98, signal MF and M code are not output.
2 Delivery of argument is not possible.
3 Subprogram call M code used in the subprogram which is

called by M or T code does not executes subprogram call
but as an ordinal M code.

15.1
CUSTOM MACRO
COMMAND

15.1.1
M98 (Single Call)

Format

15.1.2
Subprogram Call Using
M Code

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

281

When parameter (No. 0040 #5) is set beforehand, subprogram (O9000)
can be called using T code.

N_ G_ X_ T <t> ;
the above command results in the same operation of command of the
following 2 blocks.

#149 = <t> ;
N_ G_ X_ M98 P9000 ;

The T code t__ is stored in a common variable #0149 as an argument.

NOTE
1 It is not possible to command with a same block as that of

subprogram call using M code.
2 Subprogram call T code used in the subprogram which is

called by M or T code does not executes subprogram call
but as an original T code.

15.1.3
Subprogram Call Using
T Code

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

282

G66 P __ ;

Called macro body program No.

The above command selects the macro modal call mode for NC.  In other
words, every  time each block subsequent to the above command is
executed, the macro designated by P is called.  Also, an argument can be
designated by a block subsequent to the above command.  For this
argument, refer to 15.1.3.  The macro modal call mode is cancelled by the
command below.  

G67 ;

CAUTION
In MDI mode, the G66 command specifies macro modal
calling mode.  The G67 command cancels macro modal
calling mode.  Other commands, however, do not call a
macro, even when executed between G66 and G67.
Instead, they are executed as ordinary commands.  If MDI
operation B is specified, macros can be called in MDI mode.

NOTE
1 Blocks containing the G66 and G67 commands do not cqll

a macro.
2 Commands other than O, N, and P are ignored in the G66

and G67 blocks.
3 A repetition count cannot be specified for macro modal

calling.  Only the four low–order digits of the values
specified with P in a G66 block are valid.

4 The maximum nesting level for macro modal calling is 1.
The maximum nesting level for  subprogram calling is 4.
However, the maximum total nesting level for macro modal
calling and subprogram calling is 4.

15.1.4
G66 (Modal Call)

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

283

An argument means an actual value given to a variable employed in a
called macro.  An argument can be specified at all employable addresses
except for O.  The format of argument specification is the same as in
normal CNC command.  The limitation at each address as a normal CNC
command, such as decimal point, sign, maximum number of digits, etc.,
is also applicable to the format.  
The following table indicates the correspondence between argument
specification addresses and variable numbers.

Table 15.1.5 (a)  Correspondence between addresses
and variable numbers

Variable number
(value)

Variable number
(flag) Address Remarks

#8004 #8104 I

#8005 #8105 J

#8006 #8106 K

#8009 #8109 F

#8010 #8110 G

#8011 #8111 H

#8013 #8113 M

#8014 #8114 N

#8016 #8116 P

#8017 #8117 Q

#8018 #8118 R

#8019 #8119 S

#8020 #8120 T

#8024 #8124 X

#8025 #8125 Y

#8026 #8126 Z

#8100’s variables are flags to indicate whether an argument has been
specified or not every call.  These variables are 1 if an argument is
specified, and 0 if no argument is specified.
#8000’s variables show a specified value, if an argument is specified.
However, they become as specified below, if no argument is specified.

(a) Reference in CNC command
The address itself is neglected.

(b)Reference in macro command and branch command.  
This value is undefined.  Use it after confirming #8100’s numbers.

15.1.5
Argument
Specification

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

284

15.1.5 (b)  Correspondence between G codes of the argument
specification and variable numbers

Variable
number
(value)

Variable
number

(flag)

G code
group

number

G codes of the argument
specification

#8030 #8130 00 One shot and others

#8031 #8131 01 G00, G01, G02, G03

#8032 #8132 02 G17, G18, G19

#8033 #8133 03 G90, G91

#8035 #8135 05 G94

#8036 #8136 06 G20, G21

#8037 #8137 07 G40, G41, G42

#8038 #8138 08 G43, G44, G49

#8039 #8139 09 G73, G74, G76, G80 to G89

#8040 #8140 10 G98, G99

#8041 #8141 11 G50, G51

#8042 #8142 12 G66, G67

#8045 #8145 15 G61, G62, G63, G64

#8046 #8146 16 G68, G69

If plural G codes are specified a arguments in the same block, a value is
input to variables in each group as shown in Table 15.1.5 (b).  In this case,
#8010 is the smallest group number out of the numbers specified at a time.
No value can institute into #8100’s and 8000’s variables.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

285

In the custom macro body, the CNC command, which uses ordinary CNC
command variables, calculation, and branch command can be used.  The
custom macro body starts from the program No. which immediately
follows O and ends at M99.

O_____________ ; Program No.
G65 H01 .... ; Calculation command
G90 G00 X#101 ; CNC command using variables

G65 H82 .... ; Branch command
M99; End of custom macro

Fig.15.2  Construction of the custom macro body

A variable can be specified to make the macro flexible and versatile by
applying the calculated variable when calling the macro or when
executing the macro itself.  Multiple variables are identified from each
other by variable numbers.

(1) How to express variables
Variables are expressed by variable numbers following # as shown
below.
#i (i = 1, 2, 3, 4 .....)
(Example) #5, #109, #1005

(2) How to quote variables
A numeral following an address can be replaced by a variable.  Assume
that <Address> #1 or <Address> – #1 is programmed, and it means
that the variable value or its complement serves as the command value
of the address.

(Example)
F#103F15 was commanded when #103=15
Z–#110 Z–250 was commanded when #110=250
G#130 G3 was commanded when #103=3.

When replacing a variable number with a variable, it is not expressed as
“##100”, for example, but express as “#9100”.  That is, “9” next to “#”
indicates the substitute of the variable number, while the lower number
to be replaced.

(Example)
If #100=105 and #105=–500, “X#9100” indicates that X–500 was
commanded, and “X–#9100” indicates that X500 was
commanded.

15.2
CUSTOM MACRO
BODY

15.2.1
Variables

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

286

NOTE
1 No variable can be quoted at address O and N.  Neither

O#100 nor N#120 can be programmed.
2 It is not possible to command a value exceeding the

maximum command value set in each address.  
When #30=120, G#30 has exceeded the maximum
command value.

Variables are sorted into common variables and system variables
according to variable numbers, and their applications and characters differ
from each other.

(1) Common variable #100 to #149 and #500 to #531
Common variables are common to main programs and each macro
called from these main programs.  That is, #i in a macro is equal to #i
in another macro.
Common variables #100 to #149 are cleared when the power is turned
off, and reset to ”0” just after power was turned on.  Common variables
#500 to #531 are not cleared, even if power is turned off, and their
values remain unchanged.

(2) System variable
The system variables are defined as variables whose applications
remain fixed.

(a) Tool offset amount #1 to #99, #2000 to #2200
The offset amount can be known by reading system variable #1 to
#99 values for tool offset amounts, and these values can be changed
by substituting them into system variables #1 to #99. 
Among these offset numbers 1 to 99, those which are not used as
offset amounts can be treated as hold type common variables
(#500 to #531).
The system variables #2001 to #2200 correspond to the tool offset
numbers 1 to 200.  They can be read and substituted as the same as
#1 to #99. #2000 always can read 0.

15.2.2
Kind of Variables

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

287

(b) Interface input signals #1000 to #1015, #1032
Interface signals can be known, by reading system variables #1000
to #1015 for reading interface signals.

#1032 ��
15

i�0

#(1000 � i) � 2i

215 214 213 212 211 210 29 28 27 26 25 24 23 22 21 20

UI15 UI14 UI13 UI12UI11 UI10 UI9 UI8 UI7 UI6 UI5 UI4 UI3 UI2 UI1 UI0

#1015

#1014

#1013

#1012

#1011

#1010

#1009

#1008

#1007

#1006

#1005

#1004

#1003

#1002

#1001

#1000

1

0

Input signal Variable value

Contact  closed

Contact  opened

By reading system variable #1032, all the input signals can be read at once.

NOTE
1 No value can be substituted into system variables #1000 to

#1032.
2 System variables #1000 to #1015 can be displayed by

diagnostic function.
DGNOS No.110 U10 to U17
DGNOS No.111 U18 to U15

3 System variables #1000 to #1032 can be used only when
PMC is combined.

(c) Interface output signals #1100 to #1115, #1132, #1133 A value can
be substituted into system variables #1100 to #1115 for sending the
interface signals.

#1132 ��
15

i�0

#(1100 � i) � 2i

215 214 213 212 211 210 29 28 27 26 25 24 23 22 21 20

UO15UO14 UO13 UO12 UO11UO10 UO9 UO8 UO7 UO6 UO5 UO4 UO3 UO2 UO1 UO0

#1115

#1114

#1113

#1112

#1111

#1110

#1109

#1108

#1107

#1106

#1105

#1104

#1103

#1102

#1101

#1100

1

0

Input signal Variable value

Contact  closed

Contact  opened

By substituting a value into system variable #1132, all output signals (UO0
to UO15) can be sent out at once.

32 interface signals (UO100 to UO131) can be sent out by #1133 at once.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

288

CAUTION
If any other number than ‘0’ or ‘1’ is substituted into system
variables #1100 to #1115, it is treated as ‘1’.

NOTE
1 It is possible to read the values of system variables #1100

to #1133.
2 System variables #1100 to #1115 and #1133 can be

displayed by diagnostic function.
DGNOS No.162 UO0 to UO7

No.163 UO8 to UO15
No.196 UO100 to UO107
No.197 UO108 to UO115
No.198 UO116 to UO123
No.199 UO124 to UO131

3 System variables #1100 to #1133 can be used only when
PMC is combined.

(d)Clock information #3011, 3012
It is possible to know the year, month, day, hour, minute, and
second by reading system variables #3011, #3012.

Kind System variable

Year, Month, Day #3011

Hour, Minute, Second #3102

(Example) When it is May 20, 1987 4:17 5” PM
#3012=19870520,
#3012=161705

(e) Number of necessary parts, number of machined parts

Kind System variable

Number of machined parts #3901

Number of necessary parts #3902

NOTE
Do not substitute a negative value.ww

w.
cn

cc
en

ter
.co

m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

289

(f) Modal information #4001 to #4120
It is possible to know the current values of modal information
(modal command given till immediately preceding block) by
reading values of system variables #4001 to #4120.

#4001 G code (group 01)

#4002 G code (group 02)
#4003 G code (group 03)

���

#4022 G code (group 22)
#4102 B code
#4107 D code
#4109 F code
#4111 H code
#4113 M code
#4114 Sequence No.
#4115 Program No.
#4119 S code
#4120 T code

Variables Modal information

NOTE
The unit will be the one being used when the command is
given.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

290

(g)Position information #5001 to #5083
The position information can be known by reading system
variables #5001 to #5083.  The unit of position information is
0.001 mm in metric input and 0.0001 inch in inch input.

System
variables Position information

Reading
while

moving

Cutter and tool
length 

compensation

#5001

#5002
#5003
#5004

Block end point position of X axis 
(ABSIO)
Block end point position of Y axis
Block end point position of Z axis
Block end point position of 4th axis

Possible Not considered.
Position of tool
nose (program 
command position)

#5021
#5022
#5023
#5024

X axis coordinate position (ABSMT)
Y axis coordinate position
Z axis coordinate position
4th axis coordinate position

Impossible Considered.
Position of tool ref-
erence point (Ma-
chine coordinate)

#5041
#5042
#5043
#5044

Present position of X axis (ABSOT)
Present position of Y axis 
Present position of Z axis
Present position of 4th axis

Impossible Considered.
Position of tool ref-
erence point 
(Absolute coordi-
nate system)

#5061
#5062
#5063
#5064

Skip signal position of X axis (ABSKP)
Skip signal position of Y axis
Skip signal position of Z axis
Skip signal position of 4th axis

Possible Considered.
Position of tool ref-
erence point

#5080
#5081

#5082

#5083

Value of cutter compensation
Value of tool length compensation
(X axis)
Value of tool length compensation
(Y axis)
Value of tool length compensation
(Z axis)

Possible

NOTE
1 It is not possible to substitute any value into system

variables #5001 to #5083.
2 When the skip signal doesn’t turn on at G31, the skip signal

position is the end point of that block.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

291

General Form
G65HmP#i Q#j R#k ;
m : Indicates operation instruction and branch instruction at 01 to 99
#i : Variable name to which arithmetic result is loaded.
#j : Variable name 1 to be operated.  A constant is also acceptable.
#k : Variable name 2 to be operated. A constant is also acceptable.

Meaning   #1 = #j�#k

Operator (Specified by Hm)

Example
P#100 Q#101 R#102#100=#101⊕ #102
P#100 Q#101 R15#100=#101⊕ 15
P#100 Q–100 R#102#100=–100⊕ #102
P#100 Q120 R–50#100=120⊕ –50
P#100 Q–#101 R#102 #100=–#101⊕ #012

CAUTION
1 No decimal point can be put to variable values.  Therefore,

the meaning of each value is the same as that designated
without decimal point when quoted in each address.
(Example) #100 = 10

X#100 0.01 mm (metric input)
2 Those indicating an angle must be expressed by degree,

and the least input increment is 1/1000 degree.
(Example) 100 0.1°. . . 

NOTE
H code specified by G65 does not affect any selection of
offset amount.

15.2.3
Operation Instruction
and Branch Instruction
(G65)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

292

Table 15.2.3

G code H code Function Definition

G65 H01 Definition, substitution #i = #j

G65 H02 Addition #i = #j + #k

G65 H03 Subtraction #i = #j – #k

G65 H04 Product #i = #j� #k

G65 H05 Division #i = #j� #k

G65 H11 Logical sum #i = #j. OR. #k

G65 H12 Logical  product #i = #j. AND. #k

G65 H13 Exclusive OR #i = #j. XOR. #k

G65 H21 Square root #i � #j	

G65 H22 Absolute value #i = | #j |

G65 H23 Remainder #i = #j – trunc (#j / #k)� #k   
(trunc : Discard fractions less than 1)

G65 H24 Conversion from BCD to binary #i = BIN (#j)

G65 H25 Conversion from binary to BCD #i = BCD (#j)

G65 H26 Combined multiplication/division #i = (#i�#j)� #k

G65 H27 Combined square root 1 #i � #J2 � #K2	

G65 H28 Combined square root 2 #i � #J2–#K2	

G65 H31 Sine #i = #j · SIN (#k)

G65 H32 Cosine #i = #j · COS (#k)

G65 H33 Tangent #i = #j · TAN (#k)

G65 H34 Arctangent #i = ATAN (#j / #k)

G65 H80 Unconditional divergence GOTOn

G65 H81 Conditional divergence 1 IF#j = #k, GOTO n

G65 H82 Conditional divergence 2 IF#j � #k, GOTO n

G65 H83 Conditional divergence 3 IF#j� #k, GOTO n

G65 H84 Conditional divergence 4 IF#j� #k, GOTO n

G65 H85 Conditional divergence 5 IF#j� #k, GOTO n

G65 H86 Conditional divergence 6 IF#j� #k, GOTO n

G65 H99 P/S alarm occurrence P/S alarm number 500 +n occurrence

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

293

(a)Definition and substitution of variable #i = #j
G65 H01 P#i Q#j ;
[Example] G65 H01 P#101 Q1055 ; (#101=1005)

G65 H01 P#101 Q#110 ; (#101=#110)
G65 H01 P#101 Q–#112 ; (#101=–#112)

(b)Addition #i = #j + #k
G65 H02 P#i Q#j R#k;
[Example] G65 H02 P#101 Q#102 R15 ; (#101=#102+15)

(c)Subtraction #i = #j – #k
G65 H03 P#i Q#j R#k;
[Example] G65 H03 P#101 Q#102 R#103 ; (#101=#102–#103)

(d)Product #i = #j �#k
G65 H04 P#i Q#j R#k;
[Example] G65 H04 P#101 Q#102 R#103 ; (#101=#102�#103)

(e)Division #i = #j �#k
G65 H05 P#i Q#j R#k;
[Example] G65 H05 P#101 Q102 R#103 ; (#101=#102�#103)

(f) Logical sum #i = #j.OR.#k
G65 H11 P#i Q#j R#k;
[Example] G65 H11 P#101 Q102 R#103 ; (#101=#102.OR.#103)

(g)Logical product #i = #j.AND.#k
G65 H12 P#i Q#j R#k ;
[Example] G65 H12 P#101 Q#102 R#103 ; 

(#101=#102.AND.#103)

(h)Exclusive OR #i = #j.XOR.#k
G65 H13 P#i Q#j R#k ;
[Example] G65 H13 P#101 Q#102 R#103 ; 

(#101=#102.XOR.#103)

(i) Square root #i = 
G65 H21 P#i Q#j ;
[Example] G65 H21 P#101 Q#102 ; (#101= )

#j�

#102�

(j) Absolute value #i = |#j|
G65 H22 P#i Q#j ;
[Example] G65 H22 P#101 Q#102 ; (#101=|#102|)

(k)Remainder #i = #j – trunc (#j/#k)×#k
trunc : Discard fractions less than 1
G65 H23 P#i Q#j R#k ;
[Example] G65 H23 P#101 Q#102 R#103 ; 

(#101=#102–trunc  (#102/#103)�#103)

(l) Conversion from BCD to binary #i = BIN (#j)
G65 H24 P#i Q#j ;
[Example] G65 H24 P#101 Q#102 ; (#101=BIN (#102))

(m) Conversion from binary to BCD #i = BCD (#j)
G65 H25 P#i Q#j ;
[Example] G65 H25 P#101 Q#102 ; (#101=BCD (#102))

(n)Combined multiplication/division #i = (#i�#j) � #k
G65 H26 P#i Q#j R#k ;
[Example] G65 H26 P#101 Q#102 R#103 ; 

(#101=(#101�#102)(�#103)

� Operation instruction

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

294

(o)Combined square root 1 #i = 
G65 H27 P#i Q#j R#k ;
[Example] G65 H27 P#101 Q#102 R#103 ;  

(#101= )

#j2 � #k2�

#1022 � 1032�

(p)Combined square root 2 #i = 
G65 H28 P#i Q#j R#k ;
[Example] G65 H28 P#101 Q#102 R#103 ;  

(#101= )

#j2–#k2�

#1022–1032�

(q) Sine #i = #j·SIN (#k) (degree unit)
G65 H31 P#i Q#j R#k ;
[Example] G65 H31 P#101 Q#102 R#103 ; (#101=#102·SIN(#103)

(r) Cosine #i = #j·COS (#k) (degree unit)
G65 H32 P#i Q#j R#k ;
[Example] G65 H32 P#101 Q#102 R#103 ; 

(#101=#102·COS (#103)

(s) Tangent #i = #j·TAN (#k) (degree unit)
G65 H33 P#i Q#j R#k ;
[Example] G65 H33 P#101 Q#102 R#103 ; 

(#101=#102·TAN (#103)

(t) Arctangent #i = ATAN (#j/#k) (degree unit)
G65 H34 P#i Q#j R#k ; (0°� #i� 360°)
[Example] G65 H34 P#101 Q#102 R#103 ; 

(#101=ATAN (#102 / #103))

CAUTION
If either Q or R necessary for each arithmetic operation was
not indicated, its value is calculated as ‘0’.

NOTE
1 Angle in (q) to (t) must be indicated by degree and the least

input increment is 1/1000 degree.
2 All figures below decimal point are truncated if each

arithmetic result includes decimal point.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 15. CUSTOM MACRO APROGRAMMING

295

(a)Unconditional branch
G65 H80 Pn ; n : Sequence number
[Example] G65 H80 P120 ; (Diverge to N120)

(b)Conditional divergence 1 #j. EQ. #k (�)
G65 H81 Pn Q#j R#k ; n : Sequence number
[Example] G65 H81 P1000 Q#101 R#102 ; 

#101=#102, go to N1000
#101�#102, go to next

(c)Conditional divergence 2 #j. NE. #k (�)
G65 H82 Pn Q#j R#k ; n : Sequence number
[Example] G65 H82 P1000 Q#101 R#102 ; 

#101�#102, go to N1000
#101=#102, go to

(d)Conditional divergence 3 #j. GT. #k (�)
G65 H83 Pn Q#j R#k ; n : Sequence number
[Example] G65 H83 P1000 Q#101 R#102 ; 

#101 � #102, go to N1000
#101 � #102, go to next

(e)Conditional divergence 4 #j. LT. #k (<)
G65 H84 Pn Q#j R#k ; n : Sequence number
[Example] G65 H84 P1000 Q#101 R#102 ; 

#101 � #102, go to N1000
#101 � #102, go to next

(f) Conditional divergence 5 #j. GE. #k (�)
G65 H85 Pn Q#j R#k ; n : Sequence number
[Example] G65 H85 P1000 Q#101 R#102 ; 

#101 � #102, go to N1000
#101 � #102, go to next

(g)Conditional divergence 6 #j. LE. #k (�)
G65 H86 Pn Q#j R#k ; n : Sequence number
[Example] G65 H86 P1000 Q#101 R#102 ; 

#101 � #102, go to N1000
#101 � #102, go to next

(h)P/S alarm occurrence
G65 H99 Pn ; Alarm No. : 500+n
[Example] G65 H99 P15 ;  P/S alarm 515 occurrence

NOTE
1 If positive numbers were designated as sequence numbers

at branch designations, they are searched forward first and
then, backward.  If negative numbers were designated, they
are searched backward first and then, forward.

2 Sequence number can also be designated by variables.
(Example) G65 H81 P#100 Q#101 R#102 ;

When conditions are satisfied, processing
branches to the block having the sequence
number designated with #100.

� Branch instruction

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0815. CUSTOM MACRO A

296

1) How to input “#”
For standard MDI key, when “/# EOB” key is depressed after address
G, X, Y, Z, R, I, J, K, F, H, M, S, T, or P, # code is input

2) It is also possible to give a macro instruction in the MDI mode.
However address data other than G65 are not displayed by keying
operation.

3) Address H, P, Q and R of macro instruction must always be written
after G65.  Address O and N only are writable before G65.
H02 G65 P#100 Q#101 R#102 ;  Error
N100 G65 H01 P#100 Q10 ;  Correct

4) Single block
Generally, the macro instruction block does not stop even if single
block stop is turned on.  However, by setting parameter No. 0011#5,
it is possible to make single block effective.  This is used for macro
testing.

5) Variable values can be taken within a range of –231 to 
231 –1, but they are not displayed correctly, except for –99999999 to
99999999.  If they exceed the above range, they are displayed as
*********.

6) It is possible to nest subprograms up to four times.

7) Since an integer only is employable as the variable value, in case the
operation results with decimal numbers, the figures below decimal
point truncated, if an arithmetic result contains a fraction part.
Particularly be careful with the arithmetic sequence, accordingly.
[Example]

When #100=35, #101=10, #102=5, the following results.
#110=#100�#101 (=3)
#111=#110×#102 (=15)
#120=#100×#102 (=175)
#121=#120�#101 (=17)
#111=15 and #121=17

8) When a custom macro is loaded from a paper tape in the EIA code, ‘&’
code is treated as ‘#’, because there is no ‘#’ code in the EIA code.

15.2.4
Notes on Custom
Macro

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

297

16 CUSTOM MACRO B
Although subprograms are useful for repeating the same operation, the
custom macro function also allows use of variables, arithmetic and logic
operations, and conditional branches for easy development of general
programs such as pocketing and user–defined canned cycles.A machining
program can call a custom macro with a simple command, just like a
subprogram.

O0001 ;

    :

    :

    :

G65 P9010 R50.0 L2 ;

    :

    :

M30 ;

Machining program Custom macro

O9010 ;

#1=#18/2 ;

G01 G42 X#1 Y#1 F300 ;

G02 X#1 Y–#1 R#1 ;

    :

    :

    :

M99 ;

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

298

An ordinary machining program specifies a G code and the travel distance
directly with a numeric value; examples are G100 and X100.0.
With a custom macro, numeric values can be specified directly or using
a variable number.  When a variable number is used, the variable value
can be changed by a program or using operations on the MDI panel.

#1=#2+100 ;

G01 X#1 F300 ;

When specifying a variable, specify a number sign (#) followed by a
variable number.  Personal computers allow a name to be assigned to a
variable, but this capability is not available for custom macros.

Example: #1

An expression can be used to specify a variable number.  In such a case,
the expression must be enclosed in brackets.

Example: #[#1+#2–12]

Local and common variables can have value 0 or a value in the following
ranges :
–1047 to –10–29

0
1029 to 1047

If the result of calculation turns out to be invalid, an alarm No. 111 is
issued.

When a variable value is defined in a program, the decimal point can be
omitted.

Example:
When #1=123; is defined, the actual value of  variable #1 is
123.000.

When the value of a variable is not defined, such a variable is referred to
as a “null” variable.  Variable #0 is always a null variable.  It cannot be
written to, but it can be read.

16.1
VARIABLES

�	���������

� Variable representation

� Range of variable values

� Omission of the decimal
point

� Undefined variable

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

299

Variables are classified into four types by variable number.

Table 16.1  Types of variables

Variable
number

Type of
variable

Function

#0 Always
null

This variable is always null.  No value can be
assigned to this variable.

#1 – #33 Local
variables

Local variables can only be used within a
macro to hold data such as the results of op-
erations.  When the power is turned off, local
variables are initialized to null.  When a mac-
ro is called, arguments are assigned to local
variables.

#100 – #149 (#199)
#500 – #531 (#999)

Common
variables

Common variables can be shared among dif-
ferent macro programs.  When the power is
turned off, variables #100 to #149 are initial-
ized to null.  Variables #500 to #531 hold data
even when the power is turned off.  As an op-
tion, common variables #150 to #199 and
#532 to #999 are also available.  However,
when these values are using, the length of
the tape that can be used for storage de-
creases by 8.5 m.

#1000 – System
variables

System variables are used to read and write
a variety of NC data items such as the current
position and tool compensation values.

NOTE
Common variables #150 to #199 and #532 to #999 are
optional.

To reference the value of a variable in a program, specify a word address
followed by the variable number.  When an expression is used to specify
a variable, enclose the expression in brackets.

Example: G01X[#1+#2]F#3;

A referenced variable value is automatically rounded according to the
least input increment of the address.

Example:
When G00X#1; is executed on a 1/1000–mm CNC with 12.3456
assigned to variable #1, the actual command is interpreted as
G00X12.346;.

To reverse the sign of a referenced variable value, prefix a minus sign (–)
to #.

Example: G00X–#1;
When an undefined variable is referenced, the variable is ignored up to an
address word.

Example:
When the value of variable #1 is 0, and the value of variable #2 is
null, execution of G00X#1Y#2; results in G00X0;.

� Types of variables

� Referencing variables

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

300

Procedure for displaying variable values

1 Press the  MENUOFFSET key to display the tool compensation screen.

2 Press the soft key [MACRO]  to display the macro variable screen.

3 After press the   No. key, enter a variable number, then press INPUT key.

The cursor moves to the position of the entered number.

 VARIABLE                            O1234 N1234
   NO.        DATA         NO.        DATA
   100        123.456      108
   101          0.000      109
   102                     110
   103                     111
   104                     112
   105                     113
   106                     114
   107                     115

 ACTUAL POSITION (RELATIVE)
    X        0.000           Y       0.000
    Z        0.000           B       0.000

[ OFFSET ] [ MACRO ] [ MENU ] [ WORK ] [      ]

� When the value of a variable is blank, the variable is null.

� The mark ******** indicates an overflow (when the absolute
value of a variable is greater than 99999999) or an underflow
(when the absolute value of a variable is less than 0.0000001).

Program numbers, sequence numbers, and optional block skip numbers
cannot be referenced using variables.

Example:
Variables cannot be used in the following ways:
O#1;
/#2G00X100.0;
N#3Y200.0;

� Displaying variable
values

��
������

������
	�

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

301

System variables can be used to read and write internal NC data such as
tool compensation values and current position data.  Note, however, that
some system variables can only be read.  System variables are essential
for automation and general–purpose program development.

Signals can be exchanged between the programmable machine controller
(PMC) and custom macros.

Table 16.2(a)  System variables for interface signals

Variable
number Function

#1000–#1015
#1032

A 16–bit signal can be sent from the PMC to a custom macro.
Variables #1000 to #1015 are used to read a signal bit by bit.
Variable #1032 is used to read all 16 bits of a signal at one
time.

#1100–#1115
#1132

A 16–bit signal can be sent from a custom macro to the PMC.
Variables #1100 to #1115 are used to write a signal bit by bit.
Variable #1132 is used to write all 16 bits of a signal at one
time.

#1133 Variable #1133 is used to write all 32 bits of a signal at one time
from a custom macro to the PMC.
Note, that values from –99999999 to +99999999 can be used
for #1133.

For detailed information, refer to the Connection Manual (Function)
(B–61393E–2).

Tool compensation values can be read and written using system variables.
Usable variable numbers depend on the number of compensation pairs,
whether a distinction is made between geometric compensation and wear
compensation, and whether a distinction is made between tool length
compensation and cutter compensation.  When the number of
compensation pairs is not greater than 200, variables #2001 to #2400 can
also be used.

Table 16.2(b)  System variables for tool compensation memory A

Compensation number System variable

1
:

200
:

400

#10001 (#2001)
:

#10200 (#2200)
:

#10400

Table 16.2(c)  System variables for tool compensation memory B

Compensation
number

Geometry
compensation Wear compensation

1
:

200
:

400

#11001 (#2201)
:

#11200 (#2400)
:

#11400

#10001 (#2001)
:

#10200 (#2200)
:

#10400

16.2
SYSTEM VARIABLES

Explanations

� Interface signals

� Tool compensation
values

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

302

Table 16.2(d)  System variable for macro alarms

Variable
number Function

#3000 When a value from 0 to 99 is assigned to variable #3000, the
NC stops with an alarm.  After an expression, an alarm mes-
sage not longer than 26 characters can be described.  The
CRT screen displays alarm numbers by adding 500 to the val-
ue in variable #3000 along with an alarm message.

Example: #3000=1(TOOL NOT FOUND);
→ The alarm screen displays “001 TOOL NOT FOUND.”

Time information can be read and written.

Table 16.2(e)  System variables for time information

Variable
number Function

#3001 This variable functions as a timer that counts in 16–millisec-
ond increments at all times.  When the power is turned on, the
value of this variable is reset to 0.  When 65535 milliseconds
is reached, the value of this timer returns to 0.

#3002 This variable functions as a timer that counts in 1–hour incre-
ments when the cycle start lamp is on.  This timer preserves
its value even when the power is turned off.  When
1145324.612 hours is reached, the value of this timer returns
to 0.

#3011 This variable can be used to read the current date (year/
month/day).  Year/month/day information is converted to an
apparent decimal number.  For example, March 28, 1993 is
represented as 19930328.

#3012 This variable can be used to read the current time (hours/min-
utes/seconds).  Hours/minutes/seconds information is con-
verted to an apparent decimal number.  For example, 34 min-
utes and 56 seconds after 3 p.m. is represented as 153456.

The control state of automatic operation can be changed.

Table 16.2(f)  System variable (#3003) for 
automatic operation control

#3003 Single block Completion of an auxiliaryfunction

0 Enabled To be awaited

1 Disabled To be awaited

2 Enabled Not to be awaited

3 Disabled Not to be awaited

� When the power is turned on, the value of this variable is 0.

� When single block stop is disabled, single block stop operation is not
performed even if the single block switch is set to ON.

� Macro alarms

� Time information

� Automatic operation
control

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

303

� When a wait for the completion of auxiliary functions (M, S, and T
functions) is not specified, program execution proceeds to the next
block before completion of auxiliary functions.  Also, distribution
completion signal DEN is not output.

Table 16.2(g)  System variable (#3004) for 
automatic operation control

#3004 Feed hold Feedrate override Exact stop

0 Enabled Enabled Enabled

1 Disabled Enabled Enabled

2 Enabled Disabled Enabled

3 Disabled Enabled Enabled

4 Enabled Enabled Disabled

5 Disabled Enabled Disabled

6 Enabled Disabled Disabled

7 Disabled Disabled Disabled

� When the power is turned on, the value of this variable is 0.

� When feed hold is disabled:

1. When the feed hold button is held down, the machine stops in the
single block stop mode.  However, single block stop operation is
not performed when the single block mode is disabled with
variable #3003.

2. When the feed hold button is pressed then released, the feed hold
lamp comes on, but the machine does not stop; program execution
continues and the machine stops at the first block where feed hold
is enabled.

� When feedrate override is disabled, an override of 100% is always
applied regardless of the setting of the feedrate override switch on the
machine operator’s panel.

� When exact stop check is disabled, no exact stop check (position
check) is made even in blocks including those which do not perform
cutting.

O0001 ;
N1 G00 G91 X#24 Y#25 ;
N2 Z#18 ;

G04 ;
N3 #3003=3 ;
N4 #3004=7 ;
N5 G01 Z#26 F#9 ;
N6 M04 ;
N7 G01 Z–[ROUND[#18]+ROUND[#26]] ;

G04 ;
N8 #3004=0 ;
N9 #3003=0 ;
N10 M03 ;

M99 ;

N1

N2

N3, N4

N6

N7

N8, N9,
N10

N5

Fig. 16.2  Example of using variable #3004 in a tapping cycle

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

304

Settings can be read and written.  Binary values are converted to
decimals.

REVX : X–axis mirror image on/off
REVY : Y–axis mirror image on/off
TVON : TV check on/off
ISO : Output code, EIA/ISO
INCH : Metric input/inch input
ABS : Incremental programming/absolute programming
SEQ : Sequence–number automatic insertion on/off
REV4 : Fourth axis mirror image on/off
TAPE : F10/11 tape format on/off

#15 #14 #13 #12 #11 #10 #9 #8
TAPE REV4Setting

#7 #6 #5 #4 #3 #2 #1 #0

SEQ ABS INCH ISO TVON REVY REVXSetting

#3005

The number (target number) of parts required and the number (completion
number) of machined parts can be read and written.

Table 16.2 (h)  System variables for the number of parts required and the
number of machined parts

Variable number Function

#3901 Number of machined parts (completion number)

#3902 Number of required parts (target number)

NOTE
Do not substitute a negative value.

� ��������

� Number of machined
parts

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

305

Modal information specified in blocks up to the immediately preceding
block can be read.

Table 16.2(i)  System variables for modal information

Variable
number Function

#4001
#4002
#4003
#4004
#4005
#4006
#4007
#4008
#4009
#4010
#4011
#4012
#4014
#4015
#4016

:
#4022
#4102
#4107
#4109
#4111
#4113
#4114
#4115
#4119
#4120

G00, G01, G02, G03, G33 (Group 01)
G17, G18, G19 (Group 02)
G90, G91 (Group 03)

(Group 04)
G94, G95 (Group 05)
G20, G21 (Group 06)
G40, G41, G42 (Group 07)
G43, G44, G49 (Group 08)
G73, G74, G76, G80–G89 (Group 09)
G98, G99 (Group 10)
G50, G51 (Group 11)
G65, G66, G67 (Group 12)
G54–G59 (Group 14)
G61–G64 (Group 15)
G68, G69 (Group 16)
    : :            

(Group 22)
B code
D code
F code
H code
M code
Sequence number
Program number
S code
T code

Example:
When #1=#4001; is executed, the resulting value in #1 is 0, 1, 2, 3,
or 33.

Position information cannot be written but can be read.

Table 16.2(j)  System variables for position information

Variable
number

Position
information

Coordinate
system

Tool com-
pensation

value

Read
operation

during
movement

#5001–#5004 Block end point Workpiece
coordinate
system

Not 
included

Enabled

#5021–#5024 Current position Machine
coordinate
system

Included Disabled

#5041–#5044 Current position Workpiece
coordinate

#5061–#5064 Skip signal position
coordinate
system Enabled

#5081–#5084 Tool offset value Disabled

#5101–#5104 Deviated servo
position

� Modal information

� Current position

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

306

� The first digit (from 1 to 4) represents an axis number.  Digit 1
corresponds to the X–axis, digit 2 to the Y–axis, digit 3 to the Z–axis,
and digit 4 to the fourth axis.

� The tool offset value currently used for execution rather than the
immediately preceding tool offset value is held in variables #5081 to
5088.

� The tool position where the skip signal is turned on in a G31 (skip
function) block is held in variables #5061 to #5068.  When the skip
signal is not turned on in a G31 block, the end point of the specified
block is held in these variables.

� When read during movement is “disabled,” this means that expected
values cannot be read due to the buffering (preread) function.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

307

Workpiece zero point offset values can be read and written.

Table 16.2 (k)  System variables for workpiece 
zero point offset values

Variable
number Function

#2500
#2501

:
#2506

First axis external workpiece zero point offset value
First axis G54 workpiece zero point offset value

:
First axis G59 workpiece zero point offset value

#2600
#2601

:
#2606

Second axis external workpiece zero point offset value 
Second axis G54 workpiece zero point offset value

:
Second axis G59 workpiece zero point offset value

#2700
#2701

:
#2706

Third axis external workpiece zero point offset value
Third axis G54 workpiece zero point offset value

:
Third axis G59 workpiece zero point offset value

#2800
#2801

:
#2806

Fourth axis external workpiece zero point offset value 
Fourth axis G54 workpiece zero point offset value

:
Fourth axis G59 workpiece zero point offset value

#7001
:

#7004

First–axis workpiece zero point offset value (G54 P1)
:

Fourth–axis workpiece zero point offset value

#7021
:

#7024

First–axis workpiece zero point offset value (G54 P2)
:

Fourth–axis workpiece zero point offset value

:      :

#7941
:

#7944

First–axis workpiece zero point offset value (G54 P48)
:

Fourth–axis workpiece zero point offset value

NOTE
Variables #2500 to #2806 are optional variables for the
workpiece coordinate systems.  Variables #7001 to #7948
(G54 P1 to G54 P48) are optional variables for additional 48
workpiece coordinate systems.
The variable number for the workpiece origin offset (G54Pp)
for the Nth axis is obtained by:  #(7000 + (P – 1) � 20 + N)

� Workpiece coordinate
system compensation
values (workpiece zero
point offset values)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

308

The operations listed in Table 16.3(a) can be performed on variables.  The
expression to the right of the operator can contain constants and/or
variables combined by a function or operator.  Variables #j and #K in an
expression can be replaced with a constant.  Variables on the left can also
be replaced with an expression.

Table 16.3 (a)  Arithmetic and logic operation

Function Format Remarks

Definition #i=#j

Sum
Difference
Product
Quotient

#i=#j+#k;
#i=#j–#k;
#i=#j*#k;
#i=#j/#k;

Sine
Cosine
Tangent
Arctangent

#i=SIN[#j];
#i=COS[#j];
#i=TAN[#j];
#i=ATAN[#j]/[#k];

An angle is specified in de-
grees.  90 degrees and 30
minutes is represented as
90.5 degrees.

Square root
Absolute value
Rounding off
Rounding down
Rounding up

#i=SQRT[#j];
#i=ABS[#j];
#i=ROUND[#j];
#i=FIX[#j];
#i=FUP[#j];

OR
XOR
AND

#i=#j OR #k;
#i=#j XOR #k;
#i=#j AND #k;

A logical operation is per-
formed on binary numbers
bit by bit.

Conversion from BCD to BIN
Conversion from BIN to BCD

#i=BIN[#j];
#i=BCD[#j];

Used for signal exchange to
and from the PMC

The units of angles used with the SIN, COS, TAN, and ATAN functions
are degrees.  For example, 90 degrees and 30 minutes is represented as
90.5 degrees.

After the ATAN function, specify the lengths of two sides separated by
a slash.  A result is found where 0 �result�360.

Example: When #1=ATAN[1]/[–1], the value of #1 is 135.0

� When the ROUND function is included in an arithmetic or logic
operation command, IF statement, or WHILE statement, the ROUND
function rounds off at the first decimal place.

Example:
When #1=ROUND[#2]; is executed where #2 holds 1.2345, the
value of variable #1 is 1.0.

16.3
ARITHMETIC AND
LOGIC OPERATION

Explanations

� Angle units

� ATAN  function

� ROUND  functionww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

309

� When the ROUND function is used in NC statement addresses, the
ROUND function rounds off the specified value according to the least
input increment of the address.

Example:
Creation of a drilling program that cuts according to the values
of variables #1 and #2, then returns to the original position 
Suppose that the increment system is 1/1000 mm, variable #1
holds 1.2345, and variable #2 holds 2.3456.  Then, 
G00 G91 X–#1; Moves 1.235 mm.
G01 X–#2 F300; Moves 2.346 mm.
G00 X[#1+#2];

Since 1.2345 + 2.3456 = 3.5801, the travel distance is 3.580,
which does not return the tool to the original position. 

This difference comes from whether addition is performed
before or after rounding off.  G00X–[ROUND[#1]+ROUND
[#2]] must be specified to return the tool to the original
position.

With NC, when the absolute value of the integer produced by an operation
on a number is greater than the absolute value of the original number, such
an operation is referred to as rounding up to an integer.  Conversely, when
the absolute value of the integer produced by an operation on a number
is less than the absolute value of the original number, such an operation
is referred to as rounding down to an integer.  Be particularly careful when
handling negative numbers.

Example:
Suppose that #1=1.2 and #2=–1.2.
When #3=FUP[#1] is executed, 2.0 is assigned to #3.
When #3=FIX[#1] is executed, 1.0 is assigned to #3.
When #3=FUP[#2] is executed, –2.0 is assigned to #3.
When #3=FIX[#2] is executed, –1.0 is assigned to #3.

When a function is specified in a program, the first two characters of the
function name can be used to specify the function.

Example: ROUND → RO
FIX → FI

� Functions
� Operations such as multiplication and division (*, /, AND, MOD)
� Operations such as addition and subtraction (+, –, OR, XOR)

Example) #1=#2+#3*SIN[#4];

�

�

�

�, �, and � indicate the order of operations.

� Rounding up and down
to an integer

� Abbreviations of
arithmetic and logic
operation commands

� Priority of operations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

310

Brackets are used to change the order of operations.  Brackets can be used
to a depth of five levels including the brackets used to enclose a function.
When a depth of five levels is exceeded, alarm No. 118 occurs.

Example) #1=SIN [ [ [#2+#3] *#4 +#5] *#6] ;

�

�

�

�

�
� to � indicate the order of operations.

Brackets ([, ]) are used to enclose an expression.  Note that parentheses
are used for comments.

Errors may occur when operations are performed.

Table 16.3(b)  Errors involved in operations

Operation Averageerror
Maximum

error Type of error

a = b*c 1.55�10–10 4.66×10–10
Relative error (*1)

a  = b / c 4.66�10–10 1.88×10–9
Relative error ( 1)

�

a � b� 1.24�10
–9 3.73×10–9

�
a

a = b + c
a = b – c

2.33�10–10 5.32×10–10  (*2)
�
bMin

�
c,

a = SIN [ b ]
a = COS [ b ]

5.0�10–9 1.0×10–8 Absolute error (*3)

ε degrees
a = ATAN [ b ] / [ c ]     (*4) 1.8�10–6 3.6×10–6

degrees

NOTE
1 The relative error depends on the result of the operation.
2 Smaller of the two types of errors is used.
3 The absolute error is constant, regardless of the result of the

operation.
4 Function TAN performs SIN/COS.

� Bracket nesting

�����������

� Brackets

� Operation error

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

311

� The precision of variable values is about 8 decimal digits.  When very
large numbers are handled in an addition or subtraction, the expected
results may not be obtained.

Example:
When an attempt is made to assign the following values to
variables #1 and #2:  
   #1=9876543210123.456
   #2=9876543277777.777
the values of the variables become:
   #1=9876543200000.000
   #2=9876543300000.000
In this case, when #3=#2–#1; is calculated, #3=100000.000
results.  (The actual result of this calculation is slightly
different because it is performed in binary.)

� Also be aware of errors that can result from conditional expressions
using EQ, NE, GE, GT, LE, and LT.

�,�!$ ��

����	 �� �
� �' �����(�� �- �&&#&' �" �#(� �	 �"� �
�

$#''�� - &�') (�"� �" �" �"�#&&��( ����'�#"�

���&��#&�� �"'(��� ��"� (�� �����&�"�� ��(+��" (�� (+#

*�&��� �' +�(� �������	��
�������	��

���"� �'')!� (��( (�� *� )�' #� (�� (+# *�&��� �' �&� �%)� 

+��" (�� �����&�"�� �#�' "#( �,���� �" �  #+�� �  �!�( �����	

�" (��' ��'���

� Also, be careful when rounding down a value.

Example:
When #2=#1*1000; is calculated where #1=0.002;, the
resulting value of variable #2 is not exactly 2 but 1.99999997.
Here, when #3=FIX[#2]; is specified, the resulting value of
variable #1 is not 2.0 but 1.0.  In this case, round down the value
after correcting the error so that the result is greater than the
expected number, or round it off as follows:
#3=FIX[#2+0.001]
#3=ROUND[#2]

When a divisor of zero is specified in a division or TAN[90], alarm No.
112 occurs.

� Divisorww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

312

The following blocks are referred to as macro statements:

� Blocks containing an arithmetic or logic operation (=)

� Blocks containing a control statement (such as GOTO, DO, END)

� Blocks containing a macro call command (such as macro calls by
G65, G66, G67, or other G codes, or by M codes)

Any block other than a macro statement is referred to as an NC statement.

� Even when single block mode is on, the machine does not stop.  
Note, however, that the machine stops in the single block mode when
bit 5 of parameter 011 is 1.

� Macro blocks are not regarded as blocks that involve no movement in
the cutter compensation mode  (see Section 16.7).

� Subprogram call blocks (blocks in which subprogram calls using
M98, M codes, or T codes are specified) which only contain addresses
O, N, P, and L have the same features as a macro statement.

� Blocks containing M99 and addresses O, N, P, and L have the same
features as a macro statement.

16.4
MACRO
STATEMENTS AND
NC STATEMENTS

�
�����	����

� Differences from NC
statements

� NC statements that have
the same property as
macro statements

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

313

In a program, the flow of control can be changed using the GOTO
statement and IF statement.  Three types of branch and repetition
operations are used:

Branch and repetition GOTO statement (unconditional branch)

IF statement (conditional branch: if ..., then...)

WHILE statement (repetition while ...)

A branch to sequence number n occurs.  When a sequence number outside
of the range 1 to 9999 is specified, alarm No. 128 occurs.  A sequence
number can also be specified using an expression.

GOTO n ;  n:  Sequence number (1 to 9999)

Example:
GOTO1;
GOTO#10;

Specify a conditional expression after IF.  If the specified conditional
expression is satisfied, a branch to sequence number n occurs.  If the
specified condition is not satisfied, the next block is executed.

IF [#1 GT 10] GOTO 2 ;

N2 G00 G91 X10.0  ;
               :

If the value of variable #1 is greater than 10, a branch to sequence number
N2 occurs.

If the condition
is not satisfied

Processing If the condition is satisfied

A conditional expression must include an operator inserted between two
variables or between a variable and constant, and must be enclosed in
brackets ([, ]).  An expression can be used instead of a variable.

16.5
BRANCH AND
REPETITION

16.5.1
Unconditional Branch
(GOTO Statement)

16.5.2
Conditional Branch 
(IF Statement)

�
�����	����

� Conditional expression

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

314

Operators each consist of two letters and are used to compare two values
to determine whether they are equal or one value is smaller or greater than
the other value.  Note that the inequality sign cannot be used.

Table 16.5.2  Operators

Operator Meaning

EQ Equal to (=)

NE Not equal to (�)

GT Greater than (�)

GE Greater than or equal to (�)

LT Less than (�)

LE Less than or equal to (�)

The sample program below finds the total of numbers 1 to 10.

O9500;
 #1=0; Initial value of the variable to hold the sum. . . . . . . . . . . . . . . . . 
 #2=1; Initial value of the variable as an addend. . . . . . . . . . . . . . . . . 
N1 IF[#2 GT 10] GOTO 2; Branch to N2 when the addend is greater than 10
 #1=#1+#2; Calculation to find the sum. . . . . . . . . . . . . 
 #2=#2+1; Next addend. . . . . . . . . . . . . . 
 GOTO 1; Branch to N1. . . . . . . . . . . . . . 
N2 M30; End of program. . . . . . . . . . . . . . . . 

Specify a conditional expression after WHILE.  While the specified
condition is satisfied, the program from DO to END is executed.  If the
specified condition is not satisfied, program execution proceeds to the
block after END.

WHILE [conditional expression] DO m ; (m=1,2,3)

END m  ;
     :

ProcessingIf the condition
is not satisfied

If the condition
is satisfied

While the specified condition is satisfied, the program from DO to END
after WHILE is executed.  If the specified condition is not satisfied,
program execution proceeds to the block after END.  The same format as
for the IF statement applies.  A number after DO and a number after END
are identification numbers for specifying the range of execution.  The
numbers 1, 2, and 3 can be used.  When a number other than 1, 2, and 3
is used, alarm No. 126 occurs.

� Operators

Sample program

16.5.3
Repetition 
(WHILE Statement)

�
�����	����

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

315

The identification numbers (1 to 3) in a DO–END loop can be used as
many times as desired.  Note, however, when a program includes crossing
repetition loops (overlapped DO ranges), alarm No. 124 occurs.

1. The identification numbers
(1 to 3) can be used as many
times as required.

WHILE [ … ] DO 1 ;

END 1 ;
:

WHILE [ … ] DO 1 ;

END 1 ;

WHILE [ … ] DO 1 ;

END 1 ;
:

WHILE [ … ] DO 2 ;

END 2 ;

WHILE [ … ] DO 1 ;

WHILE [ … ] DO 2 ;
:

WHILE [ … ] DO 3 ;
:

END 3 ;
:

END 2 ;
:

END 1 ;

WHILE [ … ] DO 1 ;

END 1 ;

IF [ … ] GOTO n ;

Nn

WHILE [ … ] DO 1 ;

END 1 ;

IF [ … ] GOTO n ;

Nn … ;

:

2. DO ranges cannot overlap.

Processing

Processing

Processing

Processing

Processing

3. DO loops can be nested to a
maximum depth of three levels.

4. Control can be transferred to
the outside of a loop.

5. Branches cannot be made to
a location within a loop.

When DO m is specified without specifying the WHILE statement, an
infinite loop ranging from DO to END is produced.

When a branch to the sequence number specified in a GOTO statement
occurs, the sequence number is searched for.  For this reason, processing
in the reverse direction takes a longer time than processing in the forward
direction.  Using the WHILE statement for repetition reduces processing
time.

In a conditional expression that uses EQ or NE, a null value and zero have
different effects.  In other types of conditional expressions, a null value
is regarded as zero.

� Nesting

�����������

� Infinite loops

� Processing time

� Undefined variable

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

316

The sample program below finds the total of numbers 1 to 10.

O0001;
#1=0;
#2=1;
WHILE[#2 LE 10]DO
1;
#1=#1+#2;
#2=#2+1;
END 1;
M30;

Sample program

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

317

A macro program can be called using the following methods:

Macro call Simple call ((G65)
modal call (G66, G67)
Macro call with G code
Macro call with M code
Subprogram call with M code
Subprogram call with T code

Macro call (G65) differs from subprogram call (M98) as described below.

� With G65, an argument (data passed to a macro) can be specified.  M98
does not have this capability.

� When an M98 block contains another NC command (for example,
G01 X100.0 M98Pp), the subprogram is called after the command is
executed.  On the other hand, G65 unconditionally calls a macro.

� When an M98 block contains another NC command (for example,
G01 X100.0 M98Pp), the machine stops in the single block mode.  On
the other hand, G65 does not stops the machine.

� With G65, the level of local variables changes.  With M98, the level
of local variables does not change.

When G65 is specified, the custom macro specified at address P is called.
Data (argument) can be passed to the custom macro program.

G65  P p  L �  <argument–specification> ;

P : Number of the program to call
� : Repetition count (1 by default)
Argument : Data passed to the macro

O0001 ;
     :
G65 P9010 L2 A1.0 B2.0 ;
     :
M30 ;

O9100 ;
#3=#1+#2 ;
IF [#3 GT 360] GOTO 9 ;
G00 G91 X#3 ;
N9 M99 ;

� After G65, specify at address P the program number of the custom
macro to call.

� When a number of repetitions is required, specify a number from 1 to
9999 after address L.  When L is omitted, 1 is assumed.

� By using argument specification, values are assigned to corresponding
local variables.

16.6
MACRO CALL

����������


� Differences between
macro calls and
subprogram calls

16.6.1
Simple Call (G65)

��	��������


� Call

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

318

Two types of argument specification are available.  Argument
specification I uses letters other than G, L, O, N, and P once each.
Argument specification II uses A, B, and C once each and also uses I, J,
and K up to ten times.  The type of argument specification is determined
automatically according to the letters used.

Argument specification I
Variable
number

Variable
number

A
B
C
D
E
F
H

#1
#2
#3
#7
#8
#9
#11

I
J
K
M
Q
R
S

#4
#5
#6
#13
#17
#18
#19

T
U
V
W
X
Y
Z

#20
#21
#22
#23
#24
#25
#26

Address Address Address Variable
number

� Addresses G, L, N, O, and P cannot be used in arguments.

� Addresses that need not be specified can be omitted.  Local variables
corresponding to an omitted address are set to null.

Argument specification II 
Argument specification II uses A, B, and C once each and uses I, J, and
K up to ten times.  Argument specification II is used to pass values such
as three–dimensional coordinates as arguments.

A
B
C
I1
J1
K1
I2
J2
K2
I3
J3

#1
#2
#3
#4
#5
#6
#7
#8
#9
#10
#11

K3
I4
J4
K4
I5
J5
K5
I6
J6
K6
I7

#12
#13
#14
#15
#16
#17
#18
#19
#20
#21
#22

J7
K7
I8
J8
K8
I9
J9
K9
I10
J10
K10

#23
#24
#25
#26
#27
#28
#29
#30
#31
#32
#33

Address Variable
number

Address Variable
number

Address Variable
number

� Subscripts of I, J, and K for indicating the order of argument
specification are not written in the actual program.

G65 must be specified before any argument.

The NC internally identifies argument specification I and argument
specification II.  If a mixture of argument specification I and argument
specification II is specified, the type of argument specification specified
later takes precedence.

The units used for argument data passed without a decimal point
correspond to the least input increment of each address.  The value of an
argument passed without a decimal point may vary according to the
system configuration of the machine.  It is good practice to use decimal
points in macro call arguments to maintain program compatibility.

� Argument specification

�����������

� Format

� Mixture of argument
specifications I and II

� Position of the decimal
point

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

319

Calls can be nested to a depth of four levels including simple calls (G65)
and modal calls (G66).  This does not include subprogram calls (M98).

� Local variables from level 0 to 4 are provided for nesting.

� The level of the main program is 0.

� Each time a macro is called (with G65 or G66), the local variable level
is incremented by one.  The values of the local variables at the previous
level are saved in the NC.

� When M99 is executed in a macro program, control returns to the
calling program.  At that time, the local variable level is decremented
by one; the values of the local variables saved when the macro was
called are restored.

O0001 ;
     :
#1=1 ;
G65 P2 A2 ;
     :
     :
M30 ;

O0002 ;
     :
     :
G65 P3 A3 ;
     :
     :
M99 ;

O0003 ;
     :
     :
G65 P4 A4 ;
     :
     :
M99 ;

O0004 ;
     :
     :
G65 P5 A5 ;
     :
     :
M99 ;

O0005 ;
     :
     :
     :
     :
     :
M99 ;

#1 1

::

#33

2 3

:

4

:

5

:

#33

#100–, #500–

Main program
(level 0) Macro (level 1) Macro (level 2) Macro (level 3)

Macro
(level 4)

Local variables
(level 0) (Level 1) (Level 2) (Level 3) (Level 4)

Common variables

Variables that can be read from and written to by
macros at different levels

#1

:

#33

#1

:

#33

#1

:

#33

� Call nesting

� Local variable levels

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

320

A macro is created which drills H holes at intervals of B degrees after a
start angle of A degrees along the periphery of a circle with radius I.
The center of the circle is (X,Y).  Commands can be specified in either
the absolute or incremental mode.  To drill in the clockwise direction,
specify a negative value for B.

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇ
ÇÇ

ÇÇ
ÇÇ
ÇÇ

H=3

H=4

H=2
H=1

A

BB

 

Center (X,Y)
Radius I

G65  P9100  X x  Y y  Z z  R r  F f  I i  A a  B b  H h ;

X: X coordinate of the center of the circle (absolute or incremental
specification) (#24). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

Y: Y coordinate of the center of the circle (absolute or incremental
specification) (#25). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

Z : Hole depth (#26). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
R: Coordinates of an approach point (#18). . . . . . . . . . . . . . . . . . . . . . 
F : Cutting feedrate (#9). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
I : Radius of the circle (#4). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
A: Drilling start angle (#1). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
B: Incremental angle (clockwise when a negative value is specified)

(#2). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
H: Number of holes (#11). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

Sample program
(bolt hole circle)

� Calling format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

321

O0002;
G90 G92 X0 Y0 Z100.0;
G65 P9100 X100.0 Y50.0 R30.0 Z–50.0 F500 I100.0 A0 B45.0 H5;
M30;

O9100;
#3=#4003; Stores G code of group 3.. . . . . . . . . . . . . . . . . . . . . . . . . . 
G81 Z#26 R#18 F#9 K0; (Note) Drilling cycle.. . . . . . . . . . . . . . . . . . . 

Note:  L0 can also be used.
IF[#3 EQ 90]GOTO 1; Branches to N1 in the G90 mode.. . . . . . . . . . 
#24=#5001+#24; Calculates the X coordinate of the center.. . . . . . . . . 
#25=#5002+#25; Calculates the Y coordinate of the center.. . . . . . . . . 

N1 WHILE[#11 GT 0]DO 1;
Until the number of remaining holes reaches 0. . . . . . . . . . . . . . . . . . . 

#5=#24+#4*COS[#1]; Calculates a drilling position on the X–axis.. . . 
#6=#25+#4*SIN[#1]; Calculates a drilling position on the Y–axis.. . . 
G90 X#5 Y#6; Performs drilling after moving to the target position.. 
#1=#1+#2; Updates the angle.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#11=#11–1; Decrements the number of holes.. . . . . . . . . . . . . . . . . . . . 
END 1;
G#3 G80; Returns the G code to the original state.. . . . . . . . . . . . . . 
M99;

Meaning of variables:

#3:  Stores the G code of group 3.
#5:  X coordinate of the next hole to drill
#6:  Y coordinate of the next hole to drill

� Program calling a macro
program

� Macro program 
(called program)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

322

Once G66 is issued to specify a modal call a macro is called after a block
specifying movement along axes is executed.  This continues until G67
is issued to cancel a modal call.

O0001 ;
     :
G66 P9100 L2 A1.0 B2.0 ;
G00 G90 X100.0 ;
Y200.0 ;
X150.0 Y300.0 ;
G67 ;
     :
M30 ;

O9100 ;
     :
G00 Z–#1 ;
G01 Z–#2 F300 ;
     :
     :
     :
     :
M99 ;

G66  P p  L �  <argument–specification> ;

P : Number of the program to call
� : Repetition count (1 by default)
Argument : Data passed to the macro

� After G66, specify at address P a program number subject to a modal
call.

� When a number of repetitions is required, a number from 1 to 9999 can
be specified at address L.

� As with a simple call (G65), data passed to a macro program is
specified in arguments.

When a G67 code is specified, modal macro calls are no longer performed
in subsequent blocks.

Calls can be nested to a depth of four levels including simple calls (G65)
and modal calls (G66).  This does not include subprogram calls (M98).

Modal calls can be nested by specifying another G66 code during a modal
call.

� In a G66 block, no macros can be called.

� G66 needs to be specified before any arguments.

� No macros can be called in a block which contains a code such as a
miscellaneous function that does not involve movement along an axis.

� Local variables (arguments) can only be set in G66 blocks.  Note that
local variables are not set each time a modal call is performed.

16.6.2
Modal Call (G66)

��	��������


� Call

� Cancellation

� Call nesting

� Modal call nesting

����������


ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

323

The same operation as the drilling canned cycle G81 is created using a
custom macro and the machining program makes a modal macro call.  For
program simplicity, all drilling data is specified using absolute values.

Z=0

R

Z

The canned cycle consists of the following
basic operations:

Operation 1:
  Positioning along the X–axis and Y–axis

Operation 2:
  Rapid traverse to point R

Operation 3:
  Cutting feed to point Z

Operation 4:
  Rapid traverse to point R or I

Rapid traverse

Cutting feed

Operation 1 Position I

Operation 2 Operation 4

Position R

Operation 3

Position Z

G65  P9110  X x  Y y  Z z  R r  F f  L l ;

X: X coordinate of the hole (absolute specification only) (#24). . . . . . 
Y: Y coordinate of the hole (absolute specification only) (#25). . . . . . 
Z : Coordinates of position Z (absolute specification only) (#26). . . . . 
R: Coordinates of position R (absolute specification only) (#18). . . . . 
F : Cutting feedrate (#9). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
L : Repetition count

O0001; 
G28 G91 X0 Y0 Z0; 
G92 X0 Y0 Z50.0; 
G00 G90 X100.0 Y50.0; 
G66 P9110 Z–20.0 R5.0 F500; 
G90 X20.0 Y20.0;
X50.0; 
Y50.0; 
X70.0 Y80.0; 
G67;
M30;

O9110;
#1=#4001; Stores G00/G01.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#3=#4003; Stores G90/G91.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#4=#4109; Stores the cutting feedrate.. . . . . . . . . . . . . . . . . . . . . . . . . 
#5=#5003; Stores the Z coordinate at the start of drilling.. . . . . . . . . . 
G00 G90 Z#18; Positioning at position R. . . . . . . . . . . . . . . . . . . . . . 
G01 Z#26 F#9; Cutting feed to position Z. . . . . . . . . . . . . . . . . . . . . . 
IF[#4010 EQ 98]GOTO 1; Return to position I. . . . . . . . . . . . . . . . . . . 
G00 Z#18; Positioning at position R. . . . . . . . . . . . . . . . . . . . . . . . . . 
GOTO 2;

N1 G00 Z#5; Positioning at position I. . . . . . . . . . . . . . . . . . . . . . . . . . . 
N2 G#1 G#3 F#4; Restores modal information.. . . . . . . . . . . . . . . . . . . 

M99;

Sample program

� Calling format

� Program that calls a
macro program

� Macro program
(program called)ww

w.
cn

cc
en

ter
.co

m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

324

By setting a G code number used to call a macro program in a parameter,
the macro program can be called in the same way as for a simple call
(G65).

O0001 ;
     :
G81 X10.0 Y20.0 Z–10.0 ;
     :
M30 ;

O9010 ;
     :
     :
     :
N9 M99 ;

Parameter 220 = 81

By setting a G code number from 1 to 255 used to call a custom macro
program (9010 to 9019) in the corresponding parameter (220 to 229), the
macro program can be called in the same way as with G65.
For example, when a parameter is set so that macro program O9010 can
be called with G81, a user–specific cycle created using a custom macro
can be called without modifying the machining program.

O9010
O9011
O9012
O9013
O9014
O9015
O9016
O9017
O9018
O9019

220
221
222
223
224
225
226
227
228
229

Program number Parameter number

As with a simple call, a number of repetitions from 1 to 9999 can be
specified at address L.

As with a simple call, two types of argument specification are available:
Argument specification I and argument specification II.  The type of
argument specification is determined automatically according to the
addresses used.

In a program called with a G code, no macros can be called using a G code.
A G code in such a program is treated as an ordinary G code.  In a program
called as a subprogram with an M or T code, no macros can be called using
a G code.  A G code in such a program is also treated as an ordinary G code.

16.6.3
Macro Call Using 
G Code

��	��������


� Correspondence
between parameter
numbers and program
numbers

� Repetition

� Argument specification

����������


� Nesting of calls using G
codesww

w.
cn

cc
en

ter
.co

m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

325

By setting an M code number used to call a macro program in a parameter,
the macro program can be called in the same way as with a simple call
(G65).

O0001 ;
     :
M50 A1.0 B2.0 ;
     :
M30 ;

O9020 ;
     :
     :
     :
M99 ;

Parameter 230 = 50

By setting an M code number from 1 to 255 used to call a custom macro
program (9020 to 9029) in the corresponding parameter (230 to 239), the
macro program can be called in the same way as with G65.

O9020
O9021
O9022
O9023
O9024
O9025
O9026
O9027
O9028
O9029

230
231
232
233
234
235
236
237
238
239

Program number Parameter number

As with a simple call, a number of repetitions from 1 to 9999 can be
specified at address L.

As with a simple call, two types of argument specification are available:
Argument specification I and argument specification II.  The type of
argument specification is determined automatically according to the
addresses used.

– An M code used to call a macro program must be specified at the start
of a block.

–  In a macro called with a G code or in a program called as a subprogram
with an M or T code, no macros can be called using an M code.  An
M code in such a macro or program is treated as an ordinary M code.

16.6.4
Macro Call Using an 
M Code

��	��������


� Correspondence
between parameter
numbers and program
numbers

� Repetition

� Argument specification

����������


ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

326

By setting an M code number used to call a subprogram (macro program)
in a parameter, the macro program can be called in the same way as with
a subprogram call (M98).

O0001 ;
     :
M03 ;
     :
M30 ;

O9001 ;
     :
     :
     :
M99 ;

Parameter 240 = 03

By setting an M code number from 1 to 255 used to call a subprogram in
a parameter (240 to 242), the corresponding macro program (9001 to
9009) can be called in the same way as with M98.

O9001
O9002
O9003

240
241
242

Program number Parameter number

As with a simple call, a number of repetitions from 1 to 9999 can be
specified at address L.

Argument specification is not allowed.

An M code in a macro program that has been called is treated as an
ordinary M code.

In a macro called with a G code or in a program called with an M or T code,
no subprograms can be called using an M code.  An M code in such a
macro or program is treated as an ordinary M code.

16.6.5
Subprogram Call Using
an M Code

��	��������


� Correspondence
between parameter
numbers and program
numbers

� Repetition

� Argument specification

� M code

����������


ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

327

By enabling subprograms (macro program) to be called with a T code in
a parameter, a macro program can be called each time the T code is
specified in the machining program.

O0001 ;
     :
T23 ;
     :
M30 ;

O9000 ;
     :
     :
     :
M99 ;

Bit 5 of parameter 040 = 1

By setting bit 5 of parameter 040 to 1, the macro program O9000 can be
called when a T code is specified in the machining program.  A T code
specified in a machining program is assigned to common variable #149.

In a macro called with a G code or in a program called with an M or T code,
no subprograms can be called using a T code.  A T code in such a macro
or program is treated as an ordinary T code.

16.6.6
Subprogram Calls
Using a T Code

��	��������


� Call

����������


ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

328

By using the subprogram call function that uses M codes, the cumulative
usage time of each tool is measured.

� The cumulative usage time of each of tools T01 to T05 is measured.
No measurement is made for tools with numbers greater than T05.

� The following variables are used to store the tool numbers and
measured times:

#501

#502

#503

#504

#505

Cumulative usage time of tool number 1

Cumulative usage time of tool number 2

Cumulative usage time of tool number 3

Cumulative usage time of tool number 4

Cumulative usage time of tool number 5

� Usage time starts being counted when the M03 command is specified
and stops when M05 is specified.  System variable #3002 is used to
measure the time during which the cycle start lamp is on.  The time
during which the machine is stopped by feed hold and single block
stop operation is not counted, but the time used to change tools and
pallets is included.

Set 3 in parameter 240, and set 05 in parameter 241.

Set 0 in variables #501 to #505.

O0001;
T01 M06; 
M03; 
G04 X20.0; 
M05; Changes #501.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
T02 M06; 
M03; 
G04 X20.0; 
M05; Changes #502.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
T03 M06;
M03;
G04 X20.0; 
M05; Changes #503.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
T04 M06;
M03; 
G04 X20.0;
M05; Changes #504.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
T05 M06;
M03; 
G04 X20.0;
M05; Changes #505.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
M30;

16.6.7
Sample Program

Conditions

Operation check

� Parameter setting

� Variable value setting

� Program that calls a
macro program

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

329

O9001(M03); Macro to start counting. . . . . . . . . . . . . . . . . . . . . . . . . . 
M01;
IF[#4120 EQ 0]GOTO 9; No tool specified. . . . . . . . . . . . . . . . . . . . . 
IF[#4120 GT 5]GOTO 9; Out–of–range tool number. . . . . . . . . . . . . . 
#3002=0; Clears the timer.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

N9 M03; Rotates the spindle in the forward direction.
M99;

O9002(M05); Macro to end counting. . . . . . . . . . . . . . . . . . . . . . . . . . . 
M01;
IF[#4120 EQ 0]GOTO 9; No tool specified. . . . . . . . . . . . . . . . . . . . . 
IF[#4120 GT 5]GOTO 9; Out–of–range tool number. . . . . . . . . . . . . . 
#[500+#4120]=#3002+#[500+#4120]; Calculates cumulative time.. . . . 

N9 M05; Stops the spindle.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
M99;

Macro program
(program called)

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

330

For smooth machining, the NC statement is preread to be performed next.
This operation is referred to as buffering.  In cutter compensation mode
(G41, G42), the NC prereads NC statements two or three blocks ahead to
find intersections.  Macro statements for arithmetic expressions and
conditional branches are processed as soon as they are read into the buffer.
Blocks containing M00, M01, M02, or M30, blocks containing M codes
for which buffering is suppressed by setting parameters 111 to 112, and
blocks containing G31 are not preread.

N1 G31 X100.0 ;
 N2 #100=1
         :

>

> :Block being executed

NC statement
execution

Macro statement execution

Buffer

N1

N2

N1 X100.0 ;>

> : Block being executed
� : Block read into the buffer

NC statement
execution

Macro statement
execution

Buffer

N1

N2 N3

N4

N2 #1=100 ;
N3 #2=200 ;
N4 Y200.0 ;
        :

N4

When N1 is being executed, the next NC statement (N4) is read into the
buffer.  The macro statements (N2, N3) between N1 and N4 are processed
during execution of N1.

16.7
PROCESSING
MACRO
STATEMENTS

Explanations

� When the next block is
not buffered 
(M codes that are not
buffered, G31, etc.)

� Buffering the next block
in other than cutter
compensation mode
(G41, G42) (normally
prereading one block)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

331

N1 G01 G41 G91 X50.0 Y30.0 F100 Dd ;>

> : Block being executed
� : Blocks read into the buffer

NC statement
execution

Macro statement
execution

Buffer

N1

N2

N3

N2 #1=100 ;
N3 X100.0 ;
N4 #2=200 ;
N5 Y50.0 ;
        :

N4

N5

N3

When N1 is being executed, the NC statements in the next two blocks (up
to N5) are read into the buffer.  The macro statements (N2, N4) between
N1 and N5 are processed during execution of N1.

N1 G01 G41 X100.0 G100 Dd ;>

> : Block being executed
� : Blocks read into the buffer

N1

N2

N3

N2 #1=100 ;
N3 Y100.0 ;
N4 #2=200 ;
N5 M08 ;
N6 #3=300 ;
N7 X200.0 ;
        :

N4

N3

N5

N6

N7

NC statement
execution

Macro statement
execution

Buffer

When the NC1 block is being executed, the NC statements in the next two
blocks (up to N5) are read into the buffer.  Since N5 is a block that involves
no movement, an intersection cannot be calculated.  In this case, the NC
statements in the next three blocks (up to N7) are read.  The macro
statements (N2, N4, and N6) between N1 and N7 are processed during
execution of N1.

Custom macro programs are similar to subprograms.  They can be
registered and edited in the same way as subprograms.  The storage
capacity is determined by the total length of tape used to store both custom
macros and subprograms.

� Buffering the next block
in cutter compensation
mode (G41, G42)

� When the next block
involves no movement in
cutter compensation C
(G41, G42) mode

16.8
REGISTERING
CUSTOM MACRO
PROGRAMS

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

332

Macro call can be specified in automatic operation.  During automatic
operation, however, it is impossible to switch to the MDI mode for a
macro program call.  Macro call can also be specified in MDI operation
B.

A custom macro program cannot be searched for a sequence number.

Even while a macro program is being executed, blocks can be stopped in
the single block mode (except blocks containing macro call commands,
arithmetic operation commands, and control commands).
A block containing a macro call command (G65, G66, or G67) does not
stop even when the single block mode is on.  Blocks containing arithmetic
operation commands and control commands can be stopped in single
block mode by setting (bit 5 of parameter 011) to 1.
Single block stop operation is used for testing custom macro programs.
Note that when a single block stop occurs at a macro statement in cutter
compensation C mode, the statement is assumed to be a block that does
not involve movement, and proper compensation cannot be performed in
some cases.  (Strictly speaking, the block is regarded as specifying a
movement with a travel distance 0.)

A / appearing in the middle of an <expression> (enclosed in brackets [ ]
on the right–hand side of an arithmetic expression) is regarded as a
division operator; it is not regarded as the specifier for an optional block
skip code.

Registered custom macro programs and subprograms should be protected
from being destroyed by accident.  By setting (bit 0 of parameter 389 #2)
and (bit 4 of parameter 010) to 1, deletion and editing are disabled for
custom macro programs and subprograms with program numbers 8000
to 8999 and 9000 to 9999.  When the entire memory is cleared (by

pressing the RESET  and DELET  keys at the same time to turn on the power),

the contents of memory such as custom macro programs are deleted.

Local variables and common variables #100 to #199 are cleared to null
values by a reset operation.  They can be prevented from being cleared by
setting, (bits 6 and 7 of parameter 040).  System variables #1000 to #1133
are not cleared.
A reset operation clears any called states of custom macro programs and
subprograms, and any DO states, and returns control to the main program.

As with M98, the M and T codes used for subprogram calls are not
displayed.

When a feed hold is enabled during execution of a macro statement, the
machine stops after execution of the macro statement.  The machine also
stops when a reset or alarm occurs.

+0.0000001 to +99999999
–99999999 to –0.0000001
The number of significant digits is 8 (decimal).  If this range is exceeded,
alarm No. 003 occurs.

16.9
LIMITATIONS

� MDI operation

� Sequence number
search

� Single block

� Optional block skip

� Operation in EDIT mode

� Reset

� Display of the PROGRAM
RESTART page

� Feed hold

� Constant values that can
be used in <expression>

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

333

In addition to the custom macro commands, the following macro
commands are available.  They are referred to as external output
commands.
–  BPRNT
–  DPRNT
–  POPEN
–  PCLOS
These commands are provided to output variable values and characters
through the reader/punch interface.

Specify these commands in the following order:

Open command:  POPEN
Before specifying a sequence of data output commands, specify this
command to establish a connection to an external input/output device.

Data output command:  BPRNT or DPRNT
Specify necessary data output.

Close command:  PCLOS
When all data output commands have completed, specify PCLOS to
release a connection to an external input/output device.

POPEN
POPEN establishes a connection to an external input/output device.  It
must be specified before a sequence of data output commands.  The NC
outputs a DC2 control code.

BPRNT  [  a  #b        [ c ] … ]

Number of significant decimal places
Variable

Character

The BPRNT command outputs characters and variable values in binary.

(i) Specified characters are converted to corresponding codes according
to the setting (ISO) that is output at that time.
Specifiable characters are as follows:
–  Letters (A to Z)
–  Numbers
–  Special characters ( * , /, +, –, etc.)
An asterisk (*) is output by a space code.

(ii) All variables are stored with a decimal point.  Specify a variable
followed by the number of significant decimal places enclosed in
brackets.  A variable value is treated as 2–word (32–bit) data,
including the decimal digits.  It is output as binary data starting from
the highest byte.

(iii) When specified data has been output, an EOB code is output
according to the ISO code settings on the parameter screen.

(iv) Null variables are regarded as 0.

16.10
EXTERNAL OUTPUT
COMMANDS

�
�����	����

� Open command POPEN

� Data output command
BPRNT

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

334

LF
12 (0000000C)
M
–1638400(FFE70000)

Y

410 (0000019A)
X
Space
C

BPRINT [ C** X#100 [3] Y#101 [3] M#10 [0] ]
Variable value

#100=0.40596
#101=–1638.4
#10=12.34

DPRNT  [  a  #b        [ c d ] … ]

Number of significant decimal places

Number of significant digits in the integer part

Variable

Character

The DPRNT command outputs characters and each digit in the value of
a variable according to the code set in the settings (ISO).

(i) For an explanation of the DPRNT command, see Items (i), (iii), and
(iv) for the BPRNT command.

(ii) When outputting a variable, specify # followed by the variable
number, then specify the number of digits in the integer part and the
number of decimal places enclosed in brackets.  
One code is output for each of the specified number of digits, starting
with the highest digit.  For each digit, a code is output according to
the settings (ISO).  The decimal point is also output using a code set
in the settings (ISO).
Each variable must be a numeric value consisting of up to eight
digits.  When high–order digits are zeros, these zeros are not output
if (bit1 of parameter 040) is 1.  If it is 0, a space code is output each
time a zero is encountered.
When the number of decimal places is not zero, digits in the decimal
part are always output.  If the number of decimal places is zero, no
decimal point is output.
When (bit 1 of parameter 040) is 0, a space code is output to indicate
a positive number instead of +; if it is 1, no code is output.

Examples

� Data output command
DPRNT

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

335

sp

DPRINT [ X#2 [53] Y#5 [53] T#30 [20] ]
Variable value

#2=128.47398
#5=–91.2
#30=123.456

� Parameter (No.040#1)=0

L F

T

Y –

X

91.200

128.474

23

LF

T23

Y–91.200

X128.474

� Parameter (No.040#1)=1

sp sp sp

sp sp sp

PCLOS ;
The PCLOS command releases a connection to an external input/output
device.  Specify this command when all data output commands have
terminated.  DC4 control code is output from the CNC.

Specify the channel use for parameter.  According to the specification of
this parameter, set data items (such as the baud rate) for the reader/punch
interface.  The remote buffer cannot be specified.
Specify that the reader/punch interface is used as the output device for
punching.  (Never specify output to the FANUC CASSETTE or floppy
disks.)
To indicate the end of a line of data in ISO code, specify whether to use
only an LF (bit 4 of parameter 057 is 0) or an LF and CR (bit 4 of parameter
057 is 1).

Examples

� Close command PCLOS

� Required settingww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

336

NOTE
1 It is not necessary to always specify the open command

(POPEN), data output command (BPRNT, DPRNT), and
close command (PCLOS) together.  Once an open
command is specified at the beginning of a program, it does
not need to be specified again except after a close
command was specified.

2 Be sure to specify open commands and close commands
in pairs.  Specify the close command at the end of the
program.  However, do not specify a close command if no
open command has been specified.

3 When a reset operation is performed while commands are
being output by a data output command, output is stopped
and subsequent data is erased.  Therefore, when a reset
operation is performed by a code such as M30 at the end
of a program that performs data output, specify a close
command at the end of the program so that processing such
as M30 is not performed until all data is output.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

337

When a program is being executed, another program can be called by
inputting an interrupt signal (UINT) from the machine.  This function is
referred to as an interruption type custom macro function.  Program an
interrupt command in the following format:

M96 P���� ;

M97 ;

Enables custom macro interrupt

Disables custom macro interrupt

Use of the interruption type custom macro function allows the user to call
a program during execution of an arbitrary block of another program.
This allows programs to be operated to match situations which vary from
time to time.

(1)When a tool abnormality is detected, processing to handle the
abnormality is started by an external signal.

(2)A sequence of machining operations is interrupted by another
machining operation without the cancellation of the current operation.

(3)At regular intervals, information on current machining is read.
Listed above are examples like adaptive control applications of the
interruption type custom macro function.

Interrupt
signal
(UINT)*

Interrupt
signal
(UINT)

Interrupt
signal
(UINT)*

M96 Pxxxx;

N����;

M97  ;

M99 (P����);

O xxxx;

Fig.16.11 Interruption type sustom macro function

When M96Pxxxx is specified in a program, subsequent program
operation can be interrupted by an interrupt signal (UINT) input to
execute the program specified by Pxxxx.
When the interrupt signal (UINT, marked by * in Fig. 16.11 is input
during execution of the interrupt program or after M97 is specified, it is
ignored.

16.11
INTERRUPTION TYPE
CUSTOM MACRO

��
���

�	���������

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

338

A custom macro interrupt is available only during program execution.  It
is enabled under the following conditions
–  When memory operation or MDI operation B is selected
–  When STL (start lamp) is on
–  When a custom macro interrupt is not currently being processed

Generally, the custom macro interrupt function is used by specifying M96
to enable the interrupt signal (UINT) and M97 to disable the signal.
Once M96 is specified, a custom macro interrupt can be initiated by the
input of the interrupt signal (UINT) until M97 is specified or the NC is
reset.  After M97 is specified or the NC is reset, no custom macro
interrupts are initiated even when the interrupt signal (UINT) is input.
The interrupt signal (UINT) is ignored until another M96 command is
specified.

1
0

M96 M97 M96

Interrupt signal
(UINT)

Effective interrupt
input signal

When UINT is kept on

The interrupt signal (UINT) becomes valid after M96 is specified.  Even
when the signal is input in M97 mode, it is ignored.  When the signal input
in M97 mode is kept on until M96 is specified, a custom macro interrupt
is initiated as soon as M96 is specified (only when the status–triggered
scheme is employed); when the edge–triggered scheme is employed, the
custom macro interrupt is not initiated even when M96 is specified.

NOTE
For the status–triggered and edge–triggered schemes, see
Item “Custom macro interrupt signal (UINT)” of Subsec.
16.11.2.

16.11.1
Specification Method

�
�����	����

� Interrupt conditions

� Specification

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

339

There are two types of custom macro interrupts:  Subprogram–type
interrupts and macro–type interrupts.  The interrupt type used is selected
by (bit 5 of parameter 056).

(a)Subprogram–type interrupt
An interrupt program is called as a subprogram.  This means that the
levels of local variables remain unchanged before and after the
interrupt.  This interrupt is not included in the nesting level of
subprogram calls.

(b)Macro–type interrupt
An interrupt program is called as a custom macro.  This means that the
levels of local variables change before and after the interrupt.  The
interrupt is not included in the nesting level of custom macro calls.
When a subprogram call or a custom macro call is performed within
the interrupt program, this call is included in the nesting level of
subprogram calls or custom macro calls.  Arguments cannot be passed
from the current program even when the custom macro interrupt is a
macro–type interrupt.

In general, custom macro interrupts are controlled by M96 and M97.
However, these M codes, may already being used for other purposes (such
as an M function or macro M code call) by some machine tool builders.
For this reason, (bit 4 of parameter 056) is provided to set M codes for
custom macro interrupt control.
When specifying this parameter to use the custom macro interrupt control
M codes set by parameters, set parameters 246 and 247 as follows:
Set the M code to enable custom macro interrupts in parameter 246, and
set the M code to disable custom macro interrupts in parameter 247.
When specifying that parameter–set M codes are not used, M96 and M97
are used as the custom macro control M codes regardless of the settings
of parameters 246 and 247.
The M codes used for custom macro interrupt control are processed
internally (they are not output to external units).  However, in terms of
program compatibility, it is undesirable to use M codes other than M96
and M97 to control custom macro interrupts.

When performing a custom macro interrupt, the user may want to
interrupt the NC statement being executed, or the user may not want to
perform the interrupt until the execution of the current block is completed.
(bit 2 of parameter 056)is used to select whether to perform interrupts
even in the middle of a block or to wait until the end of the block.

16.11.2
Details of Functions

�
�����	����

� Subprogram–type
interrupt and macro–type
interrupt

� M codes for custom
macro interrupt control

� Custom macro interrupts
and NC statementsww

w.
cn

cc
en

ter
.co

m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

340

(i) When the interrupt signal (UINT) is input, any movement or dwell
being performed is stopped immediately and the interrupt program
is executed.

(ii) If there are NC statements in the interrupt program, the command in
the interrupted block is lost and the NC statement in the interrupt
program is executed.  When control is returned to the interrupted
program, the program is restarted from the next block after the
interrupted block.

(iii) If there are no NC statements in the interrupt program, control is
returned to the interrupted program by M99, then the program is
restarted from the command in the interrupted block.

ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

Execution in 
progress

Normal program

Interrupted by macro interrupt

Execution in 
progress

Interrupt signal (UINT) input

CNC command restart; when
there are no NC statements in
the interrupt program

Custom macro
interrupt

(i) If the block being executed is not a block that consists of several cycle
operations such as a drilling canned cycle and automatic reference
position return (G28), an interrupt is performed as follows:
When an interrupt signal (UINT) is input, macro statements in the
interrupt program are executed immediately unless an NC statement
is encountered in the interrupt program.  NC statements are not
executed until the current block is completed.

(ii) If the block being executed consists of several cycle operations, an
interrupt is performed as follows:
When the last movement in the cycle operations is started, macro
statements in the interrupt program are executed unless an NC
statement is encountered.  NC statements are executed after all cycle
operations are completed.

ÇÇÇ
ÇÇÇ

Execution in 
progress

Normal program

Execution in 
progress

Interrupt signal (UINT) input

Custom macro
interrupt

NC statement in the
interrupt program

Type I 
(when an interrupt is
performed even in the middle
of a block)

Type II 
(when an interrupt is
performed at the end of the
block)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

341

The interrupt signal becomes valid after execution starts of a block that
contains M96 for enabling custom macro interrupts.  The signal becomes
invalid when execution starts of a block that contains M97.
While an interrupt program is being executed, the interrupt signal
becomes invalid.  The signal become valid when the execution of the
block that immediately follows the interrupted block in the main program
is started after control returns from the interrupt program.  In type I, if the
interrupt program consists of only macro statements, the interrupt signal
becomes valid when execution of the interrupted block is started after
control returns from the interrupt program.

Even when cycle operation is in progress, movement is interrupted, and
the interrupt program is executed.  If the interrupt program contains no
NC statements, the cycle operation is restarted after control is returned to
the interrupted program.  If there are NC statements, the remaining
operations in the interrupted cycle are discarded, and the next block is
executed.

When the last movement of the cycle operation is started, macro
statements in the interrupt program are executed unless an NC statement
is encountered.  NC statements are executed after cycle operation is
completed.

� Conditions for enabling
and disabling the custom
macro interrupt signal

� Custom macro interrupt
during execution of a
block that involves cycle
operation

For type I

For type II

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

342

There are two schemes for custom macro interrupt signal (UINT) input:
The status–triggered scheme and edge– triggered scheme.  When the
status–triggered scheme is used, the signal is valid when it is on.  When
the edge triggered scheme is used, the signal becomes valid on the rising
edge when it switches from off to on status.
One of the two schemes is selected with (bit 3 of parameter 056).  When
the status–triggered scheme is selected by this parameter, a custom macro
interrupt is generated if the interrupt signal (UINT) is on at the time the
signal becomes valid.  By keeping the interrupt signal (UINT) on, the
interrupt program can be executed repeatedly.
When the edge–triggered scheme is selected, the interrupt signal (UINT)
becomes valid only on its rising edge.  Therefore, the interrupt program
is executed only momentarily (in cases when the program consists of only
macro statements).  When the status–triggered scheme is inappropriate,
or when a custom macro interrupt is to be performed just once for the
entire program (in this case, the interrupt signal may be kept on), the
edge–triggered scheme is useful.
Except for the specific applications mentioned above, use of either
scheme results in the same effects.  The time from signal input until a
custom macro interrupt is executed does not vary between the two
schemes.

1

0

Interrupt signal (UINT)

Interrupt
execution

Interrupt
execution

Interrupt
execution

Interrupt
execution

Interrupt
execution

Status–triggered
scheme

Edge–triggered
scheme

In the above example, an interrupt is executed four times when the status
triggered scheme is used;  when the edge– triggered scheme is used, the
interrupt is executed just once.

� Custom macro interrupt
signal (UINT)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

343

To return control from a custom macro interrupt to the interrupted
program, specify M99.  A sequence number in the interrupted program
can also be specified using address P.  If this is specified, the program is
searched from the beginning for the specified sequence number.  Control
is returned to the first sequence number found.
When a custom macro interrupt program is being executed, no interrupts
are generated.  To enable another interrupt, execute M99.  When M99 is
specified alone, it is executed before the preceding commands terminate.
Therefore, a custom macro interrupt is enabled for the last command of
the interrupt program.  If this is inconvenient, custom macro interrupts
should be controlled by specifying M96 and M97 in the program.
When a custom macro interrupt is being executed, no other custom macro
interrupts are generated; when an interrupt is generated, additional
interrupts are inhibited automatically.  Executing M99 makes it possible
for another custom macro interrupt to occur.  M99 specified alone in a
block is executed before the previous block terminates.  In the following
example, an interrupt is enabled for the Gxx block of O1234.  When the
signal is input, O1234 is executed again.  O5678 is controlled by M96 and
M97.  In this case, an interrupt is not enabled for O5678 (enabled after
control is returned to O1000).

M99;

GxxXxxx;

O1234

O1000;

M96P1234;

M96P5678

M97

O5678

GxxXxxx;

M96;

M99;

M97

X

Interrupt

Interrupt

Interrupt

Interrupt

� Return from a custom
macro interrupt

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0816. CUSTOM MACRO B

344

NOTE
When an M99 block consists only of address O, N, P, L, or
M, this block is regarded as belonging to the previous block
in the program.  Therefore, a single–block stop does not
occur for this block.  In terms of programming, the following
� and � are basically the same.  (The difference is whether
G�� is executed before M99 is recognized.)

G�� X��� ;
M99 ;
G�� X��� M99 ;�

�

A custom macro interrupt is different from a normal program call.  It is
initiated by an interrupt signal (UINT) during program execution.  In
general, any modifications of modal information made by the interrupt
program should not affect the interrupted program.
For this reason, even when modal information is modified by the interrupt
program, the modal information before the interrupt is restored when
control is returned to the interrupted program by M99.
When control is returned from the interrupt program to the interrupted
program by M99 Pxxxx, modal information can again be controlled by
the program.  In this case, the new continuous information modified by
the interrupt program is passed to the interrupted program. Restoration of
the old modal information present before the interrupt is not desirable.
This is because after control is returned, some programs may operate
differently depending on the modal information present before the
interrupt.  In this case, the following measures are applicable:

� The interrupt program provides modal information to be used after
control is returned to the interrupted program.

� After control is returned to the interrupted program, modal
information is specified again as necessary.

O∆∆∆∆

M96Pxxx

N����;

M99(P����);

Oxxx;

Interrupt signal (UINT)

(Without P specification)
Modify modal information

Modal
information remains
unchanged before and
after the interrupt.

(With P specification)

The new modal information modified by the interrupt
program is present.

� Custom macro interrupt
and modal information

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 16. CUSTOM MACRO BPROGRAMMING

345

The modal information present before the interrupt becomes valid.  The
new modal information modified by the interrupt program is made
invalid.

The new modal information modified by the interrupt program remains
valid even after control is returned.  The old modal information which was
valid in the interrupted block can be read using custom macro system
variables #4001 to #4120.
Note that when modal information is modified by the interrupt program,
system variables #4001 to #4120 are not changed.

� The coordinates of point A can be read using system variables #5001
and up until the first NC statement is encountered.

� The coordinates of point A’ can be read after an NC statement with no
move specifications appears.

� The machine coordinates and workpiece coordinates of point B’ can
be read using system variables #5021 and up and #5041 and up.

B’

B

A’

A

Interrupt generated
Tool center path

Offset vector

Programmed tool path

When the interrupt signal (UINT) is input and an interrupt program is
called, the custom macro modal call is canceled (G67).  However, when
G66 is specified in the interrupt program, the custom macro modal call
becomes valid.  When control is returned from the interrupt program by
M99, the modal call is restored to the state it was in before the interrupt
was generated.  When control is returned by M99Pxxxx;, the modal call
in the interrupt program remains valid.

When the interrupt signal (UINT) is input while a return operation is being
performed in the dry run mode after the search operation for program
restart, the interrupt program is called after restart operation terminates
for all axes.  This means that interrupt type II is used regardless of the
parameter setting.

Modal information when
control is returned by M99

Modal information when
control is returned by M99
P����

� System variables
(position information
values) for the interrupt
program

� Custom macro interrupt
and custom macro
modal call

� Custom macro interrupt
and program restart

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0817. PATTERN DATA INPUT FUNCTION

346

17 PATTERN DATA INPUT FUNCTION
This function enables users to perform programming simply by extracting
numeric data (pattern data) from a drawing and specifying the numerical
values from the CRT/MDI panel.  
This eliminates the need for programming using an existing NC language.

With the aid of this function, a machine tool builder can prepare the
program of a hole machining cycle (such as a boring cycle or tapping
cycle) using the custom macro function, and can store it into the program
memory.
This cycle is assigned pattern names, such as BOR1, TAP3, and DRL2.

An operator can select a pattern from the menu of pattern names displayed
on the screen. 
Data (pattern data) which is to be specified by the operator should be
created in advance with variables in a drilling cycle.
The operator can identify these variables using names such as DEPTH,
RETURN RELIEF, FEED, MATERIAL or other pattern data names.  The
operator assigns values (pattern data) to these names.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 17. PATTERN DATA INPUT FUNCTIONPROGRAMMING

347

Pressing the   MENU OFSET key and the soft key [MENU]  is displayed on the

following pattern menu screen.

 1.  BOLT HOLE
 2.  GRID
 3.  LINE ANGLE
 4.  TAPPING
 5.  DRILLING
 6.  BORING
 7.  POCKET
 8.  PECK
 9.  TEST PATRN
10.  BACK

MENU : HOLE PATTERN             O0000 N00000

SELECT = S 0  T 
 10:01:29 MDI
[ OFFSET ] [  MACRO ] [ MENU ] [    ] [    ]

HOLE PATTERN : This is the menu title.  An arbitrary character string
consisting of up to 12 characters can be specified.

BOLT HOLE : This is the pattern name.  An arbitrary character
string consisting of up to 10 characters can be
specified, including katakana.

The machine tool builder should specify the character strings for the menu
title and pattern name using the custom macro, and load the character
strings into program memory as a subprogram of program No. 9500.

17.1
DISPLAYING THE
PATTERN MENU

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0817. PATTERN DATA INPUT FUNCTION

348

Menu title : C1 C2 C3 C4 C5 C6 C7 C8 C9C10 C11 C12
C1,C2, ,C12 : Characters in the menu title (12 characters). . 
Macro instruction
G65 H90 Pp Qq Rr Ii Jj Kk :
H90:Specifies the menu title

p : Assume a1 and a2 to be the codes of characters C1 and C2. Then, 

P��� ���

Code a2 of character C2

Code a1 of character C1

q : Assume a3 and a4 to be the codes of characters C3 and C4.  Then, 
q=a3103+a4

r : Assume a5 and a6 to be the codes of characters C5 and C6.  Then, 
r=a5103+a6

i : Assume a7 and a8 to be the codes of characters C7 and C8.  Then, 
i=a7103+a8

j : Assume a9 and a10 to be the codes of characters C9 and C10.  Then, 
j=a9103+a10

k : Assume a11 and a12 to be the codes of characters C11 and C12.Then,
k=a11103+a12

Example) If the title of the menu is “HOLE PATTERN” then the macro
instruction is as follows:

G65 H90 P072079 Q076069 R032080
HO LE P

 I065084 J084069 K082078;
AT TE RN

For codes corresponding to these characters, refer to the table
in 17.3.

� Macro commands
specifying the menu
title

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 17. PATTERN DATA INPUT FUNCTIONPROGRAMMING

349

Pattern  name: C1 C2 C3 C4 C5 C6 C7 C8 C9C10
C1, C2, ,C10: Characters in the pattern name (10 characters). . . 
Macro instruction
G65 H91 Pn Qq Rr Ii Jj Kk ;
H91: Specifies the menu title

n : Specifies the menu No. of the pattern name
n=1 to 10

q : Assume a1 and a2 to be the codes of characters C1 and C2.  Then,
q=a1�103+a2

r : Assume a3 and a4 to be the codes of characters C3 and C4.  Then,
r=a3�103+a4

i : Assume a5 and a6 to be the codes of characters C5 and C6.  Then,
i=a5�103+a6

j : Assume a7 and a8 to be the codes of characters C7 and C8.  Then,
j=a7�103+a8

k : Assume a9 and a10 to be the codes of characters C9 and C10.  Then,
k=a9�103+a10

Example) If the pattern name of menu No. 1 is “BOLT HOLE” then the
macro instruction is as follows.

G65 H91 P1 Q066079 R076084 I032072 J079076 K069032 ; 
BO LT H OL E

To select a pattern from the pattern menu screen, enter the corresponding
pattern No.  The following is an example.

1 INPUT

The selected pattern No. is assigned to system variable #5900.  The
custom macro of the selected pattern can be started by starting a fixed
program (external program No. search) with an external signal then
referring to the system variable #5900 in the program.

NOTE
If each characters of P, Q, R, I, J, and K are not specified in
a macro instruction, two spaces are assigned to each
omitted character.

� ����� ���������

	
������ ��
 ����
��

���


� ����
�� ��� �
�
����

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0817. PATTERN DATA INPUT FUNCTION

350

Custom macros for the menu title and hole pattern names.

 1.  BOLT HOLE
 2.  GRID
 3.  LINE ANGLE
 4.  TAPPING
 5.  DRILLING
 6.  BORING
 7.  POCKET
 8.  PECK
 9.  TEST PATRN
10.  BACK

MENU : HOLE PATTERN             O0000 N00000

SELECT = S 0  T 
 10:01:29 MDI
[ OFFSET ] [  MACRO ] [ MENU ] [    ] [    ]

O9500 ; 

N1G65 H90 P072 079 Q076 069 R032 080 I 065 084 J 084 069 K082 078; HOLE PATTERN

N2G65 H91 P1 Q066 079 R076 084 I 032 072 J 079 076 K069 032 ; 1.BOLT HOLE

N3G65 H91 P2 Q071 082 R073 068 ; 2.GRID

N4G65 H91 P3 Q076 073 R078 069 I 032 065 J 078071 K076069 3.LINE ANGLE

N5G65 H91 P4 Q084 065 R080 080 I 073 078 J 071 032 ; 4.TAPPING

N6G65 H91 P5 Q068 082 R073 076 I 076 073 J 078 071 ; 5.DRILLING

N7G65 H91 P6 Q066079 R082073 I 078 071 ; 6.BORING

N8G65 H91 P7 Q080 079 R067 075 I 069 084 ; 7.POCKET

N9G65 H91 P8 Q080069 R067075 ; 8.PECK

N10G65 H91 P9 Q084 069 R083 084 I032 080 J065 084 K082 078 ; 9.TEST PATRN

N11G65 H91 P10 Q066 065 R067 0750 ; 10.BACK

N12M99 ;

�������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 17. PATTERN DATA INPUT FUNCTIONPROGRAMMING

351

When a pattern menu is selected, the necessary pattern data is
displayed.

NO.   NAME DATA   COMMENT
500 TOOL 0
501 KIJUN X 0 *BOLT HOLE
502 KIJUN Y 0      CIRCLE*
503 RADIUS 0 SET PATTERN
504 S. ANGL 0 DATA TO VAR.
505 HOLES NO 0 NO.500–505.
506 0
507 0

ACTUAL POSITION (RELATIVE)
     X      0.000          Y      0.000
     Z      0.000

VAR. : BOLT HOLE                  O9501 N0014

NO. 500 = S 0 T

10:00:48

[ OFFSET ] [ MACRO ] [ MENU ] [     ] [     ]

––

BOLT HOLE  : This is the pattern data title.  A character string
consisting of up to 12 characters can be set.

TOOL  : This is the variable name.  A character string
consisting of up to 10 characters can be set.

*BOLT HOLE 
   CIRCLE* : This is a comment statement.  A character string

can be displayed consisting of up to 8 lines, 12
characters per line.

(It is permissible to use katakana in a character string or line.)
The machine tool builder should program the character strings of pattern
data title, pattern name, and variable name using the custom macro, and
load them into the program memory as a subprogram whose No. is 9500
plus the pattern No. (O9501 to O9510).

17.2
PATTERN DATA
DISPLAY

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0817. PATTERN DATA INPUT FUNCTION

352

Menu title  : C1 C2 C3 C4 C5 C6 C7 C8 C9C10C11C12
C1 ,C2,…, C12 : Characters in the menu title (12 characters)
Macro instruction
G65 H92 Pn Qq Rr Ii Jj Kk ;
H92 : Specifies the pattern name
p : Assume a1 and a2 to be the codes of characters C1 and C2.  Then,

p=a1�103+a2
See 17.3 for character codes.

q : Assume a3 and a4 to be the codes of characters C3 and C4.  Then, 
q=a3�103+a4

r : Assume a5 and a6 to be the codes of characters C5 and C6.  Then,
r=a5�103+a6

i : Assume a7 and a8 to be the codes of characters C7 and C8.  Then,
i=a7�103+a8

j : Assume a9 and a10 to be the codes of characters C9 and C10.  Then, 
j=a9�103+a10

k : Assume a11 and a12 to be the codes of characters C11 and C12.  Then,
k=a11�103+a12

Example) Assume that the pattern data title is ”BOLT HOLE.”The
macro instruction is given as follows:

G65 H92 P066079 Q076084 R032072 I079076 J069032;
BO LT   H OL E

Variable name  : C1 C2 C3 C4 C5 C6 C7 C8 C9C10
C1, C2,…, C10 : Characters in the variable name (10 characters)
Macro instruction
G65 H93 Pn Qq Rr Ii Jj Kk ; 
H93 : Specifies the variable name
n : Specifies the menu No. of the variable name

n=1 to 10
q : Assume a1 and a2 to be the codes of characters C1 and C2.  Then, 

q=a1�103+a2
r : Assume a3 and a4 to be the codes of characters C3 and C4.  Then, 

r=a3�103+a4
i : Assume a5 and a6 to be the codes of characters C5 and C6.  Then,

i=a5�103+a6
j : Assume a7 and a8 to be the codes of characters C7 and C8.  Then,

j=a7�103+a8
k : Assume a9 and a10 to be the codes of characters C9 and C10.  Then,

k=a9�103a+a10
Example) Assume that the variable name of the variable No. 503 is

“RADIUS.”  The macro instruction is given as follows:

G65 H93 P503 Q082065 R068073 I085083 ; 
RA DI US

NOTE
Variable names can be assigned to 32 common variables
#500 to #531, which are not cleared when the power is
turned off.

� Macro instruction
specifying the pattern
data title
(the menu title)

� Macro instruction
specifying the variable
name

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 17. PATTERN DATA INPUT FUNCTIONPROGRAMMING

353

One comment line: C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12
C1, C2,…, C12 :  Character string in one comment line (12 characters)
Macro instruction
G65 H94 Pn Qq Rr Ii Jj Kk ; 
H94 : Specifies the comment

p : Assume a1 and a2 to be the codes of characters C1 and C2.  Then,
p=a1�103+a2
See 17.7 for character codes.

q : Assume a3 and a4 to be the codes of characters C3 and C4.  Then,
q=a3�103+a4

r : Assume a5 and a6 to be the codes of characters C5 and C6.  Then, 
r=a5�103+a6

i : Assume a7 and a8 to be the codes of characters C7 and C8.  Then, 
i=a7�103+a8

j : Assume a9 and a10 to be the codes of characters C9 and C10.  Then,
j=a9�103+a10

k : Assume a11 and a12 to be the codes of characters C11 and C12.  Then,
k=a11�103+a12

A comment can be displayed in up to eight lines.  The comment consists
of the first line to the eighth line in the programmed sequence of G65 H94
for each line.

Example) Assume that the comment is “BOLT HOLE.”  The macro
instruction is given as follows:

G65 H94 P042066 Q079076 R084032 I072079 J076069;
*B OL T HO LE

� Macro instruction to
describe a comment

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0817. PATTERN DATA INPUT FUNCTION

354

Macro instruction to describe a parameter title , the variable name, and a
comment.

NO.   NAME DATA   COMMENT
500 TOOL 0
501 KIJUN X 0 *BOLT HOLE
502 KIJUN Y 0      CIRCLE*
503 RADIUS 0 SET PATTERN
504 S. ANGL 0 DATA TO VAR.
505 HOLES NO 0 NO.500–505.
506 0
507 0

ACTUAL POSITION (RELATIVE)
     X      0.000          Y      0.000
     Z      0.000

VAR. : BOLT HOLE                  O9501 N0014

NO. 500 = S 0 T

10:00:48

[ OFFSET ] [ MACRO ] [ MENU ] [     ] [     ]

––

O9501 ; 

N1G65 H92 P066 079 Q076 084 R032 072 I 079 076 J069 032; VAR:BOLT HOLE

N2G65 H93 P500 Q084 079 R079076; #500 TOOL

N3G65 H93 P501 Q075 073 R074 085 I078 032 J088 032 ; #501 KIJUN X

N4G65 H93 P502 Q075 073 R074 085 I 078 032 J089 032 ; #502 KIJUN Y

N5G65 H93 P503 Q082 065 R068 073 I 085 083 ; #503 RADIUS

N6G65 H93 P504 Q083 046 R032 065 I 078 071 J 076 032; #504 S.ANGL

N7G65 H93 P505 Q072 079 R076 069 I 083 032 J078 079 K046 032 ; #505 HOLES NO

N8G65 H94; Comment

N9G65 H94 P042 066 Q079 076 R084 032 I072 079 J076 069 ; *BOLT HOLE

N10G65 H94 R032 067 I073 082 J067 076 K069 042 ;    CIRCLE*

N11G65 H94 P083 069 Q084 032 080 065 I084 084 J069 082 K078 032 ;    SET PATTERN

N12G65 H94 P068 065 Q084 065 R032 084 I079 032 J086 065 K082046 ;    DATA NO VAR.

N13G65 H94 P078 079 Q046 053 R048 048 I045 053 J048 053 K046 032 ;    No.500–505

N14M99 ;

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 17. PATTERN DATA INPUT FUNCTIONPROGRAMMING

355

Table. 17.3(a)   Characters and codes to be used for the pattern data input
function

Char-
acter

Code Comment Char-
acter

Code Comment

A 065 6 054

B 066 7 055

C 067 8 056

D 068 9 057

E 069 032 Space

F 070 ! 033 Exclamation mark

G 071 ” 034 Quotation mark

H 072 # 035 Hash sign

I 073 $ 036 Dollar sign

J 074 % 037 Percent

K 075 & 038 Ampersand

L 076 ’ 039 Apostrophe

M 077 ( 040 Left parenthesis

N 078 ) 041 Right parenthesis

O 079 � 042 Asterisk

P 080 + 043 Plus sign

Q 081 , 044 Comma

R 082 – 045 Minus sign

S 083 . 046 Period

T 084 / 047 Slash

U 085 : 058 Colon

V 086 ; 059 Semicolon

W 087 < 060 Left angle bracket

X 088 = 061 Equal sign

Y 089 > 062 Right angle bracket

Z 090 ? 063 Question mark

0 048 @ 064 “At”mark

1 049 [ 091 Left square bracket

2 050 ^ 092

3 051 ¥ 093 Yen sign

4 052 ] 094 Right squar bracket

5 053 _ 095 Underscore

17.3
CHARACTERS AND
CODES TO BE USED
FOR THE PATTERN
DATA INPUT
FUNCTION

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0817. PATTERN DATA INPUT FUNCTION

356

Table 17.3 (b)  Numbers of subprograms employed in the pattern data input function

Subprogram No. Function

O9500 Specifies character strings displayed on the pattern data menu.

O9501 Specifies a character string of the pattern data corresponding to pattern No.1

O9502 Specifies a character string of the pattern data corresponding to pattern No.2

O9503 Specifies a character string of the pattern data corresponding to pattern No.3

O9504 Specifies a character string of the pattern data corresponding to pattern No.4

O9505 Specifies a character string of the pattern data corresponding to pattern No.5

O9506 Specifies a character string of the pattern data corresponding to pattern No.6

O9507 Specifies a character string of the pattern data corresponding to pattern No.7

O9508 Specifies a character string of the pattern data corresponding to pattern No.8

O9509 Specifies a character string of the pattern data corresponding to pattern No.9

O9510 Specifies a character string of the pattern data corresponding to pattern No.10

Table. 17.3 (c)  Macro instructions used in the pattern data input function

G code H code Function

G65 H90 Specifies the menu title.

G65 H91 Specifies the pattern name.

G65 H92 Specifies the pattern data title.

G65 G93 Specifies the variable name.

G65 H94 Specifies the comment.

Table. 17.3 (d)  System variables employed in the pattern data input function

System variable Function

#5900 Pattern No. selected by user.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
18. PROGRAMMABLE PARAMETER

 ENTRY (G10)PROGRAMMING

357

18 PROGRAMMABLE PARAMETER ENTRY (G10)
The values of parameters can be entered in a lprogram. This function is
used for setting pitch error compensation data when attachments are
changed or the maximum cutting feedrate or cutting time constants are
changed to meet changing machining conditions.

General

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
18. PROGRAMMABLE PARAMETER 

ENTRY (G10)

358

G10L50; Parameter entry mode setting
N_P_;

G11; Parameter entry mode cancel

N_: Parameter No. (4digids) or data No. for pitch errors compensation 
P_: Parameter setting value (Leading zeros can be omitted.)

Meaning of command

Format

Can not use a decimal point in a value set in a parameter (P_).
a decimal point cannot be used in a custom macro variable for P_
either.

WARNING
1 Do not fail to perform reference point return manually after

changing the pitch error compensation data or backlash
compensation data.  Without this, the machine position can
deviate from the correct position.

2 The canned–cycle mode must be cancelled before entering
of parameters.

NOTE
Other NC statements cannot be specified while in
parameter input mode.

G10L50 ;  Parameter entry mode
N500 P50 ; 
G11 ; cancel parameter entry mode

To change the length of the effective area (in–position)
along the X–axis

Format

Explanations

� Parameter setting 
value (P_)

Examples

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
19. MEMORY OPERATION USING Series

10/11 TAPE FORMATPROGRAMMING

359

19 MEMORY OPERATION USING Series 10/11 TAPE FORMAT
Memory operation of the program registered by Series 10/11 tape format
is possible  with setting of the setting parameter (TAPEF).

Data formats for cutter compensation, subprogram calling, and canned
cycles are different between the Series 0 and Series 10/11.  The Series
10/11 data formats can be processed for memory operation.Other data
formats must comply with the Series 0.When a value out of the specified
range for the Series 0 is registered, an alarm occurs.  Functions not
available in the Series 0 cannot be registered or used for memory
operation.

Offset numbers are specified by address D in the Series 10/11.  When an
offset number is specified by address D, the modal value specified by
address H is replaced with the offset number specified by address D.

If a subprogram number of more than four digits is specified, the four
low–order digits are regarded as the subprogram number.  If no repeat
count is specified, 1 is assumed.

Table 19 (a)  Subprogram call data format

CNC Data format

Series 10/11 M98 P����� L���� ;
P : Subprogram number
L : Repetition count

Series 0 M98 P���  ���� ;

   Repetition count   Subprogram number

The Series 10/11 and Series 0 use different addresses for the repeat count
for canned cycles as listed in Table 19 (b).

Table 19 (b)  Address for times of repetition of canned cycle

CNC Address

Series 10/11 L

Series 0 K

General

Explanations

� Address for the cutter
compensation offset
number

� Subprogram call

� Address for the canned
cycle repetition count

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0820. HIGH SPEED CYCLE CUTTING

360

20 HIGH SPEED CYCLE CUTTING
This function can convert the machining profile to a data group that can
be distributed as pulses at high–speed by the macro compiler or macro
executor.  The function can also call and execute the data group as a
machining cycle using the CNC command (G05 command).

G05 P10��� L��� ;

P10��� is number of the machining cycle to be called first:
   P10001 to P10999  
L��� is repetition count of the machining cycle 
(L1 applies when this parameter is omitted.) :  
   L1 to L999

Call and execute the data for the high speed cutting cycle specified by the
macro compiler and macro executor using the above command.
Cycle data can be prepared for up to 999 cycles.  Select the machining
cycle by address P.  More than one cycle can be called and executed in
series using the cycle connection data in the header.
Specify the repetition count of the called machining cycle by address L.
The repetition count in the header can be specified for each cycle.
The connection of cycles and their repetition count are explained below
with an example.

Example) Assume the following:
Cycle 1  Cycle connection data 2  Repetition count 1
Cycle 2  Cycle connection data 3  Repetition count 3
Cycle 3  Cycle connection data 0  Repetition count 1
G05 P10001 L2 ;
The following cycles are executed in sequence: 
  Cycles 1, 2, 2, 2, 3, 1, 2, 2, 2, and3

General

Format

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 20. HIGH SPEED CYCLE CUTTINGPROGRAMMING

361

Four axes maximum (Four axes can be controlled simultaneously.).

Set the number of pulses per cycle in parameter 055 #4 to #6 as a macro
variable (#20000 to #85535) for high speed cycle cutting using the macro
compiler and macro executor.
The unit for the number of pulses is the least input increment.

20.1
NUMBER OF
CONTROL AXES

20.2
PULSE
DISTRIBUTION

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0820. HIGH SPEED CYCLE CUTTING

362

Data for the high speed cycle cutting is assigned to variables (#20000 to
#85535)  for the high speed cycle cutting by the macro compiler and
macro executor.

Configuration of the high speed cutting cycle data

Number of registered cycles

Header of cycle 1

Header of cycle 2

#20000

#20001

#20017

#20033 Header of cycle 3

Data group of cycle 1

Data group of cycle 2

Data group of cycle 3

Specify the number of cycles (number of headers) of high–speed
machining cycle data.  Values from 1 to 999 can be specified.

The header for high–speed cycle machining data has the following
configuration:

Total number of fixed data items for the 4th axis

Cycle repetition count#20001/20017/20033..

Cycle connection data#20002/20018/20034..

Number of data items#20003/20019/20035..

Data type#20004/20020/20036..

Variable assigned to the 1st axis data#20005/20021/20037..

#20006/20022/20038..

#20007/20023/20039..

#20008/20024/20040..

#20009/20025/20041..

#20010/20026/20042..

#20011/20027/20043..

#20012/20028/20044..

#20013/20029/20045..

#20014/20030/20046..

#20015/20031/20047..

Header configuration

#20016/20032/20048..

Variable assigned to the 2nd axis data

Variable assigned to the 3rd axis data

Variable assigned to the 4th axis data

Total number of fixed data items for the 1st axis

Total number of fixed data items for the 2nd axis

Total number of fixed data items for the 3rd axis

20.3
CONFIGURATION OF
HIGH SPEED CYCLE
CUTTING DATA

20.3.1
Number of Registered
Cycles

20.3.2
Header

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 20. HIGH SPEED CYCLE CUTTINGPROGRAMMING

363

Specify the repetition count for this cycle.  Values from 0 to 32767 can
be specified.  When 0 or 1 is specified, the cycle is executed once.

Specify the number (1 to 999) of the cycle to be executed after this cycle.
When no connection cycle exists because of the last cycle, specify 0.

Specify the number of data items per cycle.  Valid values are from 1 to
32767.
When a fixed data item is specified, the fixed data is repeated for the
specified number of times in one cycle.

– – – –r4 r3 r2 r1 t4 t3 t2 t1

15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0

– – – –

The bits from t1 to t4, corresponding to the 1st to 4th axes, have the
following meanings:
0:  Distribution data is always constant.
1:  Distribution data is variable or fixed.
When the distribution data is variable or fixed, the bits from r1 to r4,
corresponding to the 1st to 4th axes, have the following meanings:
0:  Distribution data is read forward.
1:  Distribution data is read backwards.
Because the data consists of bits, it is necessary to use a binary–coded
decimal value when setting it using the macro compiler and macro
executor.
Example)
When constant data is assigned to the 1st and 2nd axes and variable data
is assigned to the 3rd and 4th axes, #20004 = 12; (t4 and t3: 0, t2 and t1: 1)

� Constant data
When the corresponding data type bit (t4 to t1) is 0, specify
“distribution data value”.

� Variable data
When the corresponding data type bit (t4 to t1) is 1 and the total
number of fixed data items = 0, specify “(Storing start data variable
No. of the distribution data)/10”.

� Fixed data
When the corresponding data type bit (t4 to t1) is 1 and the total
number of fixed data items is other than 0, specify “(Storing start data
variable No. of the distribution data)/10”.
The applicable value for the variable data and fixed data is 2001 to
8553.  It is not possible to start storing data in the executable format
from a variable No. that is not a multiple of 10.
To read the distribution data backwards, set the variable No. of the data
to be distributed last.  For example, to read the distribution data in
#25000 to #25999 backwards, set 25000 as the data assignment
variable.

Set the length of the fixed data for the cycle.
The first address of the fixed data must be specified by the data
assignment variable.  When the total number of fixed data items = 0 and
the corresponding data type bit (t4 to t1) is 1, the data is regarded as a
variable data.

�
�����	����

� Cycle repetition count

� Cycle connection data

� Number of data items

� Data type

� Variables assigned to
data for the 1st to 4th
axes

� Total number of fixed
data items for the first to
4th axes

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0820. HIGH SPEED CYCLE CUTTING

364

NOTE
1 When the high–speed machining function is used, an extended

RAM is necessary.  The length of tape that can be specified is

limited to 80 meters.

2 An alarm is issued if the function is executed in the G41/G42 mode.

3 Single block stop, dry run/feedrate override, automatic

acceleration/deceleration and handle interruption are  disabled

during high–speed cycle machining.

4 When the distribution cycle is 2 ms or 1 ms set the total number

of distribution data items for one cycle to a multiple of the following

values.  This does not apply when the distribution cycle is 16 ms

8 ms or 4 ms.  

If the total number is not a multiple of one of the following values,

movement in the remaining cycle becomes zero.

Example)
When all 41 data items (distribution cycle:  1 ms) are
specified, movement is zero in the remaining 3 ms.
    Distribution cycle  2 ms:  Multiple of 2
    Distribution cycle  1 ms:  Multiple of 4

���	


�	��
���������
�

115 The contents of the header are invalid.  This alarm is issued in the
following cases.
1. The header corresponding to the number of the specified call

machining cycle was not found.
2. A cycle connection data value is not in the valid range 

(0 to 999).
3. The number of data items in the header is not in the valid range

(1 to 32767).
4. The first variable No. for storing data in the executable format

is not in the valid range (#20000 to #85535).
5. The last variable No. for storing data in the executable format

exceeds the limit (#85535).
6. The first variable No. for start data in the executable format

overlaps with a variable No. used in the header.

178 High–speed cycle machining was specified in the G41/G42
mode.

179 The number of control axes specified in parameter 597 exceeds
the maximum number.

���	�

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 21. SIMPLE SYNCHRONOUS CONTROLPROGRAMMING

365

21 SIMPLE SYNCHRONOUS CONTROL
It is possible to change the operating mode for two or more specified axes
to either synchronous operation or normal operation by an input signal
from the machine.
For example, The following operating modes are applicable to machines
having two tables driven independently by separate control axes.  The
following example is of a machine with two tables driven independently
by the Y axis and V axis.  If the axis names are different, substitute a
suitable name for the ones below.

V

X

Y

Z

Fig. 21  Example of axis configuration of the machine operated
by simple synchronous control

General

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0821. SIMPLE SYNCHRONOUS CONTROL

366

This mode is used for machining large workpieces that extend over two
tables.
While operating one axis with a move command, it is possible to
synchronously move the other axis.  In the synchronous mode, the axis
to which the move command applies is called the master axis, and the axis
that moves synchronously with the master axis is called the slave axis.
In this example, it is assumed that Y axis is the master axis and V axis is
the slave axis.  Here, the Y axis and the V axis move synchronously in
accordance with program command Yyyyy issued to the Y axis (master
axis).
Synchronous operation here means that the move command for the master
axis is issued simultaneously to both the servo motor for the master axis
and that for the slave axis.  In synchronous operation, the servo motor for
the slave axis is not compensated for the deviation which is always
detected between the two servo motors.
Synchronous operation is possible during automatic operation, jog feed,
manual handle feed using the manual pulse generator, and incremental
feed, but is not possible during manual reference position return.

This operating mode is used for machining different workpieces on each
table.  The operation is the same as in ordinary CNC control, where the
movement of the master axis and slave axis is controlled by the
independent axis address (Y and V).  It is possible to issue the move
commands to both the master axis and slave axis in the same block.

� The Y axis moves normally according to program command Yyyyy
issued to the master axis.

� The V axis moves normally according to program command Vvvvv
issued to the slave axis.

� The Y axis and the V axis move simultaneously according to program
command YyyyyVvvvv.
Both automatic and manual operations are the same as in ordinary
CNC control.

Explanations

� Synchronous operation

� Normal operation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 21. SIMPLE SYNCHRONOUS CONTROLPROGRAMMING

367

CAUTION
1 When the automatic reference position return command (G28) and the 2nd/3rd/4th reference

position return command (G30) are issued during synchronous operation, the V axis follows
the same movement as the Y axis returns to the reference position.  If the V axis is positioned
at the reference position after the return movement is complete, the reference position return
complete signal of the V axis goes on when that of the Y axis goes on.
As a rule, commands G28 and G30 must be issued in the normal operating mode.

2 The machine must be manually returned to the reference position in the normal operating
mode.

3 Both the pitch error and backlash are compensated independently for the master axis and the
slave axis.

4 Turn on the manual absolute switch (ABS = 1) during synchronous operation.  If it is off, the
slave axis may not move correctly.

5 When the machine is manually returned to the reference position during synchronous
operation, both the master axis and the slave axis move synchronously until the acceleration
movement is complete.  However, grid detection thereafter is carried out independently.

6 The operation can be switched between synchronous operation and normal operation by using
a signal input from the PMC.

NOTE
1 When the automatic reference position return check command (G27) is issued during

synchronous operation, the V axis and Y axis move in tandem.  If both the Y axis and the V axis
have reached their respective reference positions after the movement is complete, the
reference position return complete signals go on.  If either axis is not at the reference position,
an alarm is issued.  As a rule, command G27 must be issued in the normal operating mode.

2 In synchronous axis control, commands that require no axis motion, such as the workpiece
coordinate system setup command (G92) and the local coordinate system setup command
(G52), are set to the Y axis by program command Yyyyy issued to the master axis.

3 For signals such as external deceleration, interlock, and machine lock, only the signals issued
to the master axis are valid in the synchronous operating mode.  Signals issued to other axes
are ignored.

4 The axis which is to be the master axis must be specified by parameter No. 075#0, #1.
5 The slave axis is exclusively set to the 4th axis.
6 When a move command is issued to the slave axis during synchronous operation, a P/S alarm

(No. 213) is issued.

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0822. ROTARY AXIS ROLL–OVER

368

22 ROTARY AXIS ROLL–OVER
The roll–over function prevents coordinates for the rotation axis from
overflowing.  The roll–over function is enabled by setting bit 1 of
parameter 398 to 1.

For an incremental command, the tool moves the angle specified in the
command.  For an absolute command, the coordinates after the tool has
moved are values set in parameter No. 860, and rounded by the angle
corresponding to one rotation.  The tool moves in the direction in which
the final coordinates are closest when bit 2 of parameter No. 398 is set to
0.  Displayed values for relative coordinates are also rounded by the angle
corresponding to one rotation when bit 3 of parameter No. 398 is set to
1.

Assume that axis A is the rotating axis and that the amount of movement
per rotation is 360.000 (parameter No. 1260 = 360000).  When the
following program is executed using the roll–over function of the rotating
axis, the axis moves as shown below.

G90 A0 ; Sequence number

Actual
movement

value

Absolute coordinate 
value after movement end

N1 G90 A–150.0 ; N1 –150 210

N2 G90 A540.0 ; N2 –30 180

N3 G90 A–620.0 ; N3 –80 100

N4 G91 A380.0 ; N4 +380 120

N5 G91 A–840.0 ; N5 –840 0

Absolute 
coordinate value

Relative 
coordinate value –720°

–0°

–360°

–0° –0°

–0° 360°

–0°

N1

N2

N3

N4

N5

210° (Absolute)

180°
100°

120°

NOTE
This function cannot be used together with the indexing
function of the index table.

Genera �

Explanations

��������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
23. ANGULAR AXIS CONTROL

 (0–GSC, 0–GSD/II)PROGRAMMING

369

23 ANGULAR AXIS CONTROL (0–GSC, 0–GSD/II)
When the Y–axis makes an angle other than 90° with the Z–axis, the
inclined axis control function controls the distance traveled along each
axis according to the inclination angle. A program, when created,
assumes that the Y–axis and Z–axis intersect at right angles. However, the
actual distance traveled is controlled according to an inclination angle.

+Y

+Y

Program coordinate system

Coordinate system actually used

+Z

θ

θ : Inclination angle

The distance traveled along each axis is controlled according to the
formulas described below.
The distance traveled along the Y–axis is determined by the following
formula:
  Ya=Yp/cos θ
The distance traveled along the Z–axis is corrected by the inclination of
the Y–axis, and is determined by the following formula:
   Za=Zp–Yp* tanθ
The feedrate is determined as described below. The speed component
along the Y–axis is determined by the following formula:
   Fa=Fp/cos θ
           Ya, Za, Fa : Actual distance and speed
           Yp, Zp, Fp : Programmed distance and speed

Parameter (No. 077#5) enables or disables the inclined axis control
function. If the function is enabled, the distance traveled along each axis
is controlled according to an inclination angle (No. 837).
Parameter (No. 077#4) enables Y–axis manual reference point return only
with a distance along the Y–axis.

An absolute and a relative position are indicated in the programmed
Cartesian coordinate system.
Machine position display

A machine position indication is provided in the machine coordinate
system where an actual movement is taking place according to an
inclination angle. However, when inch/metric conversion is performed,
a position is indicated which incorporates inch/metric conversion applied
to the results of inclination angle operation.

General

Explanations

� ��	��� �� 
��

� Absolute and relative
position display

� Machine position display

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/08
23. ANGULAR AXIS CONTROL 

(0–GSC, 0–GSD/II)

370

WARNING
1 After inclined axis control parameter setting, be sure to

perform manual reference point return operation.
2 If a movement along the Z–axis occurs in Y–axis manual

reference point return operation, be sure to perform
reference point return operation starting with the Y–axis.

3 If an inclination angle close to 0° or �90° is set, an error can
occur. (A range from �20° to �90° should be used.)

4 Before a Z–axis reference point return check (G37) can be
made, Y–axis reference point return operation must be
completed.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 24. ADVANCED PREVIEW CONTROLPROGRAMMING

371

24 ADVANCED PREVIEW CONTROL
This function is designed to enable high–speed, high–precision
machining.  This function can suppress the delay that is incurred by
acceleration/deceleration and the servo system and which increases as a
higher feedrate is used.  Thus, the tool can exactly follow the specified
values, minimizing the machining figure error.  This function is optional.

Using the command shown below, advanced preview control mode can
be turned on and off.  High–speed, high–precision machining is
performed in advanced preview control mode.

G08   P  p      ;

p = 1:  Turns advanced preview control mode on.
= 0:  Turns advanced preview control mode off.

Note)  A block containing G08 must not include any other codes.

In advanced preview control mode, the following functions are enabled:

1 Cutting feed linear acceleration/deceleration before interpolation

2 Automatic corner deceleration

3 Block overlap

4 Look–ahead feed forward

For information about these functions, see the relevant sections.  Note that
dedicated parameters for advanced preview control are available.

General

Explanations

ww
w.

cn
cc

en
ter

.co
m



PROGRAMMING B–61404E/0824. ADVANCED PREVIEW CONTROL

372

NOTE
1 In advanced preview control mode, the following cannot be

specified:
� Control along the C–axis normal
� Cylindrical interpolation
� Polar coordinate specification
� F 1–digit feed/threading/synchronous feed
� Index table indexing
� Rigid tapping
� High–speed cycle machining/high–speed remote buffer
� Handle interrupt
� Program restart
� Simple synchronous control
� Interrupt–type custom macro
� Automatic tool length measurement
� Small–diameter peck drilling cycle
� PMC–based axis control
� Cs contour control
� Skip cutting/high–speed skip cutting
� Automatic signal–based reference position return

2 In advanced preview control mode, servo look–ahead feed
forward control is used.  For information about the servo software
and parameters to be set, refer to the documentation provided with
the servo system.

3 Advanced preview control mode is canceled by the input of a reset
signal.

ww
w.

cn
cc

en
ter

.co
m



III.  OPERATION

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

375

1 GENERAL

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

376

The CNC machine tool has a position used to determine the machine
position.
This position is called the reference position, where the tool is replaced
or the coordinate are set.  Ordinarily, after the power is turned on, the tool
is moved to the reference position.
Manual reference position return is to move the tool to the reference
position using switches and pushbuttons located on the operator’s panel.

Reference position

Tool

Machine operator’s panel

Fig. 1.1 (a)  Manual reference position return

The tool can be moved to the reference position also with program
commands.
This operation is called automatic reference position return (See Section
II–6).

1.1
MANUAL
OPERATION

Explanations

� Manual reference
position return 
(See Section III–3.1)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

377

Using machine operator’s panel switches, pushbuttons, or the manual
handle, the tool can be moved along each axis.

Tool

Workpiece

Machine operator’s panel

Manual
pulse 
generator

Fig. 1.1 (b)  The tool movement by manual operation

The tool can be moved in the following ways:

(i) Jog feed (See Section III–3.2)
The tool moves continuously while a pushbutton remains pressed.

(ii) Incremental feed (See Section III–3.3)
The tool moves by the predetermined distance each time a button is
pressed.

(iii) Manual handle feed (See Section III–3.4)
By rotating the manual handle,the tool moves by the distance
corresponding to the degree of handle rotation.

� The tool movement by
manual operation

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

378

Automatic operation is to operate the machine according to the created
program.  It includes memory, DNC, and MDI operations. 
(See Section III–4).

Program

Tool

01000 ;
M_S_T ;
G92_X_ ;
G00... ;
G01...... ;

.

.

.

.

Fig. 1.2 (a)  Tool Movement by Programming

After the program is once registered in memory of CNC, the machine can
be run according to the program instructions.  This operation is called
memory operation.

 CNC Machine

Memory

Fig. 1.2 (b)  Tool Movement by Programming

In this mode of operation, the program is not registered in the CNC
memory.  It is read from the connected I/O unit instead.  This mode is
useful when the program is too large to fit the CNC memory.  It can also
be used for high–speed machining by means of a remote buffer.

1.2
TOOL MOVEMENT
BY PROGRAMMING–
AUTOMATIC
OPERATION

Explanations

� ����
� �	�
�����

� DNC operation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

379

After the program is entered, as an command group, from the MDI
keyboard, the machine can be run according to the program.  This
operation is called MDI operation.

MDI keyboardCNC

Manual program 
input

Machine

Fig. 1.2 (c)  MDI operation

� MDI  operation

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

380

Select the program used for the workpiece.  Ordinarily, one program is
prepared for one workpiece.  If two or more programs are in memory,
select the program to be used, by searching the program number (Section
III–9.3).

G92

O1001 Program number

M30

G92

O1002
G92

M30

Program number
Program number
search

Automatic
operation

O1003
––––––

M30

––––––

––––––

Work–1 program

Work–2 program

Program number

Work–3 program

In memory or on a tape

Fig. 1.3 (a)  Program selection for automatic operation

Pressing the cycle start pushbutton causes automatic operation to start.
By pressing the feed hold or reset pushbutton, automatic operation pauses
or stops.  By specifying the program stop or program termination
command in the program, the running will stop during automatic
operation.  When one process machining is completed, automatic
operation stops.

Cycle start

Feed hold 
Reset

Program stop
Program end

Stop caused
by program

Start

Stop
Automatic operation

Fig. 1.3 (b)  Start and stop for automatic operation

1.3
AUTOMATIC
OPERATION

Explanations

� Program selection

� Start and stop 
(See Section III–4)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

381

While automatic operation is being executed, tool movement can overlap
automatic operation by rotating the manual handle.

Z

X

Programmed 
depth of cut

Depth of cut by 
handle interruption

Tool position after
handle interruption

Tool position during 
automatic operation

Fig. 1.3 (c)  Handle interruption for automatic operation

� Handle interruption 
(See Section III–4.7)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

382

Before machining is started, the automatic running check can be
executed.  It checks whether the created program can operate the machine
as desired.  This check can be accomplished by running the machine
actually or viewing the position display change (without running the
machine) (See Section III–5).

Remove the workpiece, check only movement of the tool.  Select the tool
movement rate using the dial on the operator’s panel.

Tool

Table

Fig. 1.4.1 (a)  Dry run

Check the program by changing the feed rate specified by the program.

Tool

Feed rate specified by program :
100 mm/min.

Feed rate after feed rate override :
20 mm/min.

Workpiece

Fig. 1.4.1 (b)  Feedrate override

1.4
TESTING A
PROGRAM

1.4.1
Check by Running the
Machine

Explanations

� Dry run 
(See Section III–5.4)

� Feedrate override 
(See Section III–5.2)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

383

When the cycle start pushbutton is pressed, the tool executes one
operation then stops.  By pressing the cycle start again, the tool executes
the next operation then stops.  The program is checked in this manner.

Cycle start

Cycle start

Cycle start

Cycle start

StopStop

Stop

Tool

Workpiece

Fig. 1.4.1 (c)  Single block

Tool

CRT/MDI

X
Y
Z

The tool remains stopped, and only the
positional displays of the axes change.

Workpiece

Fig. 1.4.2  Machine lock

When automatic running is placed into the auxiliary function lock mode
during the machine lock mode, all auxiliary functions (spindle rotation,
tool replacement, coolant on/off, etc.) are disabled.

� Single block 
(See Section III–5.5)

1.4.2
How to View the
Position Display
Change without
Running the Machine

Explanations

� Machine lock 
(See Sections III–5.1)

� Auxiliary function lock
(See Section III–5.1)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

384

After a created program is once registered in memory, it can be corrected
or modified from the CRT/MDI panel  (See Section III–9).
This operation can be executed using the part program storage/edit
function.

Program registration

CRT/MDI

 CNC  CNC

Program correction or modification

Tape reader

CNC tape (program)

Fig. 1.5  Part program editing

1.5
EDITING A PART
PROGRAM

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

385

The operator can display or change a value stored in CNC internal
memory by key operation on the CRT/MDI screen (See III–11).

Data setting

CRT/MDI

Data display

Screen Keys

CNC memory

Fig. 1.6 (a)  Displaying and setting data

Tool compensation
number1      12.3 25.0
Tool compensation
number2      20.0 40.0
Tool compensation
number3      ⋅⋅⋅ ⋅⋅⋅
⋅⋅⋅⋅⋅⋅⋅⋅⋅⋅⋅⋅ ⋅⋅⋅ ⋅⋅⋅

Setting

Display

CNC memory

Screen Keys

CRT/MDI

Geometry 
compensation

Wear com-
pensation

Fig. 1.6 (b)  Displaying and setting offset values

The tool has the tool dimension (length, diameter).  When a workpiece is
machined, the tool movement value depends on the tool dimensions.
By setting tool dimension data in CNC memory beforehand,
automatically generates tool routes that permit any tool to cut the
workpiece specified by the program.  Tool dimension data is called the
offset value  (See Section III–11.4.1).

1.6
DISPLAYING AND
SETTING DATA

Explanations

� Offset value

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

386

Machined
shape

1st tool path

2nd tool path

Offset value of the 1st tool

Offset value of the 2nd tool

Fig. 1.6 (c)  Offset value

Apart from parameters, there is data that is set by the operator in
operation.  This data causes machine characteristics to change.
For example, the following data can be set:
⋅ Inch/Metric switching
⋅ Selection of I/O devices
⋅ Mirror image cutting on/off
The above data is called setting data  (See Section III–11.5.3).

⋅
⋅
⋅

Setting

DisplayingScreen  Keys

Setting data

⋅Inch/Metric switching
⋅Selection of I/O device
⋅Mirror image ON/OFF setting

CNC Memory

Program Automatic
operation

Operational
characteristics

Movement of 
the machine

Fig. 1.6 (d)  Displaying and setting operator’s setting data

� Displaying and setting
operator’s setting data

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

387

The CNC functions have versatility in order to take action in
characteristics of various machines.
For example, CNC can specify the following:
⋅ Rapid traverse rate of each axis
⋅ Whether increment system is based on metric system or inch system.
⋅ How to set command multiply/detect multiply (CMR/DMR)
Data to make the above specification is called parameters  (See Section
III–11.5.1). 
Parameters differ depending on machine tool.

CRT/MDI

CNC memory

Parameter
Rapid traverse rate
Position control
Reference position return
Backlash compensation data
Pitch error compensation
data ⋅

⋅
⋅

Program

Operational 
characteristics

Setting

DisplayScreen    Keys

Automatic
operation

Movement
of the 
machine

Fig. 1.6 (e)  Displaying and setting parameters

A key called the data protection key can be defined.  It is used to prevent
part programs from being registered, modified, or deleted erroneously
(See Section III–11).

Program

CNC memory

Screen Keys

CRT/MDI
Protection Key

Registration / modification inhibition

Program edition

Fig. 1.6 (f)  Data protection key

� Displaying and setting
parameters

� Data protection key

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

388

The contents of the currently active program are displayed.  In addition,
the programs scheduled next and the program list are displayed.

PROGRAM O1100 N0005
N1  G90 G17 G00 G41 D07 X250.0 Y550.0 ;
N2  G01 Y900.0 F150 ;
N3  X450.0 ;
N4  G03 X500.0 Y1150.0 R650.0 ;
N5  G02 X900.0 R–250.0 ;
N6  G03 X950.0 Y900.0 R650.0 ;
N7  G01 X1150.0 ;
N8  Y550.0 ;
N9  X700.0 Y650.0 ;
N10 X250.0 Y550.0 ;
N11 G00 G40 X0 Y0 ;

[ PRGRM ] [CURRNT] [ NEXT ] [ CHECK ]

Active program number
Active sequence number

Program
content

The cursor indicates the currently executed location
Currently executed program

PROGRAM O1100 N0003

SYSTEM EDITION 0466 – 24
PROGRAM NO. USED :  14 FREE :   53
MEMORY AREA USED : 960 FREE : 5280

PROGRAM LIBRARY LIST
O0001 O0002 O0010 O0020 O0040 O0050
O0100 O0200 O1000 O1100

[ PROGRAM ][ CONDNS ][      ][      ][      ]

1.7
DISPLAY

1.7.1
Program Display 
(See Subsections
III–11.2.1 and III–11.3.1)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

389

The current position of the tool is displayed with the coordinate values.
The distance from the current position to the target position can also be
displayed.

Y

�

�

�

Workpiece coordinate system

ACTUAL POSITION (ABSOLUTE) O0003 N0003

[  ABS  ][  REL  ][  ALL  ][ HNDL  ][       ]

X 150.000
Y 300.000
Z 100.000

When a trouble occurs during operation, error code and alarm message are
displayed on CRT screen. See APPENDIX G for the list of error codes and
their meanings.

ALARM MESSAGE O1000 N0003

010 P/S ALARM

S 0T

09:52:24 ALARM

[ ALARM ][  OPR  ][  MSG  ][       ][       ]

1.7.2
Current Position
Display (See Section
III–11.1.1 to 11.1.3)

1.7.3
Alarm Display 
(See Section III–7.1)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/081. GENERAL

390

When an option is selected, two types of run time and number of parts are
displayed on the screen.

ACTUAL POSITION (ABSOLUTE) O0003 N0003

      PART COUNT        1
RUN TIME 0H 0M CYCLE TIME 0H 0M44S
ACT.F 3000 MM/M S 0 T
01:35:22         BUF AUTO

[  ABS  ][  REL  ][  ALL  ][ HNDL  ][       ]

X 150.000
Y 300.000
Z 100.000

Programmed tool movement can be displayed on the following planes:
1) XY plane
2) YZ plane
3) XZ plane
4) Three dimensional display

Z

X

Z

Z

X Y

Y

Y

X

Three dimensional display (isometric)

Display on the XY plane Display on the YZ plane

Display on the XZ plane

� �

� �

Fig . 1.7.5  Graphic display

1.7.4
Parts Count Display,
Run Time Display 
(See Section III–11.1.5)

1.7.5
Graphic Display 
(See Section III–12)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. GENERALOPERATION

391

Programs, offset values, parameters, etc.  input in CNC memory can be
output to paper tape, cassette, or a floppy disk for saving.  After once
output to a medium, the data can be input into CNC memory.

Memory

Program

Offset

Parameters

Reader/puncher
interface

Portable tape reader

CNC
Automatic programming system

Floppy disk

FANUC Floppy
cassette adaptor

FANUC cassette

SYSTEM  P

FANUC PPR

Paper tape

.

.

.

Fig. 1.8  Data output

1.8
DATA OUTPUT 
(SEE CHAPTER III–8)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

392

2 OPERATIONAL DEVICES
The peripheral devices available include the CRT/MDI panel attached to
the CNC, machine operator’s panel and external input/output devices
such as tape reader, PPR, floppy cassette, and FA card.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

393

Figs. 2.1 (a) to 2.1 (e) show the CRT/MDI and LCD/MDI panels.

9″ small monochrome or color CRT/MDI panel (with softkey)
Fig.2.1(a). . . . . . . . . . . . . . . 

9″ monochrome or color CRT/MDI panel (without softkey)
Fig.2.1(b). . . . . . . . . . . . . . . 

9″ monochrome or color CRT/MDI panel (with full key)
Fig.2.1(c). . . . . . . . . . . . . . . 

Thin type display/MDI pane Fig.2.1(d). . . . . . . . . . . . . . . 
14″ color CRT/MDI panel Fig.2.1(e). . . . . . . . . . . . . . . 

CRT (9″ amber) Reset key Data input key

Program edit key

Input key

Start/output keyFunction key

Cursor move key

Page 
change key

Fig. 2.1 (a)  9 ″ small monochrome or color CRT/MDI (with softkey)

CRT (9″ amber) Reset key Data input key

Function key

Cursor move key

Page 
change key

Program edit key

Start/output key

Input key

Fig. 2.1 (b)  9 ″ monochrome or color CRT/MDI panel (without softkey)

2.1
CRT/MDI PANELS
AND LCD/MDI
PANELS

External view

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

394

Reset key Data input key

Program edit key

Input key

Function key
Cursor move key
Page change key Start/output key

Fig. 2.1 (c)  9 ″ monochrome or color CRT/MDI panel (with full key)

6–φ4

130

20
0

19
0

5

5
5 5130 130

400

Fig. 2.1 (d)  Thin type display/MDI panel

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

395

10–φ4.8 520

168 170 168

37
0

17
8

17
8

7
7

7
7

Fig. 2.1 (e)  14 ″ color CRT/MDI panel

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

396

8–φ4

400

20
0

130 130 130 5

5
5

19
0

5

Fig. 2.1 (f)  9 ″ small monochrome/or color CRT/MDI panel (with soft key)

Table 2.1  Explanation of the MDI keyboard

Number Name Explanation

1 Power ON and OFF but-
tons

O OFF I ON

Press theses buttons to turn CNC power ON and OFF.

2 RESET key

RESET

Press this key to reset the CNC, to cancel an alarm, etc.

3 START key

OUTPT-
START

This key is used to start MDI operation or automatic operation, depending on the ma-
chine.  Refer to the manual provided by the machine tool builder.  This key is also
used to output data to an input/output unit.

4 Soft keys (option) The soft keys have various functions, according to the Applications.  The soft key
functions are displayed at the bottom of the CRT screen.

5 Address and numeric keys

(N 4
…

Press these keys to input alphabetic, numeric, and other characters.

6 SHIFT key

SHIFT

Some keys have two characters on their keytop.  Pressing the <SHIFT> key
switches the characters.  Special character Λ is displayed on the screen when a
character indicated at the bottom right corner on the keytop can be entered.
(The standard MDI key panel does not have this key.)

7 INPUT key

INPUT

When an address or a numerical key is pressed, the data is input to the buffer, and
it is displayed on the CRT screen.  To copy the data in the key input buffer to the offset
register, etc., press the <INPUT> key.
This key is also used to input data from an input/output unit.

Explanation of the
keyboard

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

397

Table 2.1  Explanation of the MDI keyboard

Number ExplanationName

8 Cancel key

CAN

Press this key to delete the last character or symbol input to the key input buffer.

9 Program edit keys

ALTER INSRT DELET

Press these keys when editing the program.

:  Alteration

:  Insertion

:  Deletion

ALTER

DELET

INSRT

10 Function keys

…POS PRGRM

Press theses keys to switch display screens for each function.
See sec. 2.2 for detailas of the function keys.

11 Cursor move keys

CURSOR

There are two different cursor move keys.

: This key is used to move the cursor in a downward or forward 
direction.  The cursor is moved in small units in the forward direction.

: This key is used to move the cursor in an upward or reverse direction. 
The cursor is moved in small units in the reverse direction.

12 Page change keys
PAGE

Two kinds of page change keys are described below.

: This key is used to changeover the page on the CRT screen in the 
forward direction.

: This key is used to changeover the page on the CRT screen in the
reverse direction.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

398

1 Press a function key on the CRT/MDI panel.  The chapter selection
soft keys that belong to the selected function appear.

2 Press one of the soft keys.  The screen for the selected chapter appears.
If the soft key for a target chapter is not displayed, press the
continuous menu key (next–menu key).
In some cases, additional chapters can be selected within a chapter.

3 To redisplay the previous soft keys, press the return menu key.

The general screen display procedure is explained above.  However, the
actual display procedure varies from one screen to another.  For details,
see the description of individual operations.

If the soft keys are not provided, press a key having the equivalent
function to select the desired chapter.
The functions of the soft keys are automatically displayed, depending on
the configuration.  The functions are displayed, irrespective of the
function configuration, if bit 7 of parameter 048 is specified accordingly.

2.2
FUNCTION KEYS
AND SOFT KEYS

2.2.1
General Screen
Operations

Function keys

Chapter selection soft keys
Operation selection key

Return menu key Continuous menu key

MENU

OFSET
PRGRMPOS

DGNOS

PARAM

OPR

ALARM

AUX

GRAPH

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

399

Function keys are provided to select the type of screen to be displayed.
The following function keys are provided on the CRT/MDI panel:

Press this key to display the position screen .

Press this key to display the program screen .

Press this key to display the offset screen .

Press this key to display the parameter/diagnosis screen .

Press this key to display the alarm screen.

Press this key to display the graphics screen .

2.2.2
Function Keys

POS

PRGRM

MENU

OFSET

DGNOS

PARAM

OPR

ALARM

AUX

GRAPH

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

400

When an address and a numerical key are pressed, the character
corresponding to that key is input once into the key input buffer.  The
contents of the key input buffer is displayed at the bottom of the CRT
screen.   
The key input buffer begins with “ADDRESS”.  When an address is input,
the key input buffer begins with “NUMERIC”.

Key input buffer display

   [ ]   [ ]   [ ]   [ ]   [ ]

Key input buffer display af-
ter address input

   [ ]   [ ]   [ ]   [ ]   [ ]

Address

Numeric

Fig. 2.2.3 (a)  Key input buffer display

On the standard key panel, the same key is used to input both an address
and a numeric value.  
When the key input buffer begins with “ADDRESS”, pressing that key
inputs the address.  When the key input buffer begins “NUMERIC”,
pressing that key inputs the numeric value.

[       ]

[       ]

4
X

[       ]

[       ]

4
X

Address

Numeric   X

Numeric   X

Numeric   X  4

Press key Press key

2.2.3
Key Input and Input
Buffer

Explanations

� For standard key

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

401

Data of one word (address + numeric value) can be entered into the key
input buffer at one time.  The following data input keys are used to input
addresses.  Each time the key is pressed, the input address changes as
shown below:

4th
B D B 4th

K
J
I I J K

L
P
Q P Q L

NO.

D 4th is the address of the 
fourth axis.  If an additional 
axis is not provided, 
either D or B is input.

(C)*

* If the optional–angle chamfering/
corner rounding function is provided,
the address C can be entered using 

the  key.4th
B

D

Pressing the CAN  key deletes all the data input to the key input buffer.

When bit 7 of parameter 0394 is set to 1, each press of the CAN  key deletes

only the most recently entered character during data input using the
parameter, diagnostic, or offset screen.

When an address and a numerical key are pressed, the character
corresponding to that key is input once into the key input buffer.  The
contents of the key input buffer is displayed at the bottom of the CRT
screen.   
A “ <” is displayed at the end of the key input data indicating the input
position of the next character.

Key input buffer display

   [ ]   [ ]   [ ]   [ ]   [ ]

  N001X100Z<

Fig. 2.2.3 (b)  Key input buffer display

� For full key

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

402

To input the lower character of the keys that have two characters inscribed

on them, first press theSHIFT key and then the key in question.

When the SHIFT key is pressed, “<” indicating the next character input
position changes to “Λ”.  Now lowercase characters can be entered (shift
state).
When a character is input in shift status the shift status is canceled.

Furthermore, if theSHIFT key is pressed in shift status, the shift status is

canceled.
It is possible to input up to 32 characters at a time in the key input buffer.

Press theCAN key to cancel the last character or symbol input in the key

input buffer.

(Example)
   When the key input buffer displays
   N001X100Z<
   and the cancel key is pressed, Z is canceled and
   N001X100<
   is displayed.

There are 12 soft keys in the 14″ CRT/MDI panel.  As illustrated below,
the 5 soft keys on the right and those on the right and left edges operate
in the same way as the 9″ CRT, whereas the 5 keys on the left hand side
are expansion keys dedicated to the 14″ CRT.

ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ

9″ CRT soft key

14″ CRT dedicated expansion soft keys

14″ CRT soft key

Fig. 2.2.4  CRT and LCD soft key configuration

Whenever a position display appears in the left half of the screen after a

function key other than POS  is pressed, the soft keys on the left half of

the soft key display area are displayed as follows:

ABS REL ALL HNDL

2.2.4
14″ CRT Soft Key
Configuration

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

403

Five types of external input/output devices are available.  This section
outlines each device.  For details on these devices, refer to the
corresponding manuals listed below.

Table 2.3  External I/O device

Device name Usage Max.
storage
capacit

Reference
manual

FANUC Handy File Easy–to–use, multi function
input/output device.  It is de-
signed for FA equipment and
uses floppy disks.

3600m B–61834E

FANUC Floppy Cas-
sette

Input/output device. Uses
floppy disks.

2500m B–66040E

FANUC FA Card Compact input/output de-
vice.  Uses FA cards.

160m B–61274E

FANUC PPR Input/output device consist-
ing of a paper tape reader,
tape punch, and printer.

275m B–58584E

Portable Tape Reader Input device for reading pa-
per tape.

   Appendix H

The following data can be input/output to or from external input/output
devices:
1.  Programs
2.  Offset data
3.  Parameters
4.  Custom macro common variables
For how data is input and output, see Chapter 8.

2.3
EXTERNAL I/O
DEVICES

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

404

Before an external input/output device can be used, parameters must be
set as follows.

Series 0

MEMORY CARD

Channel 1 Channel 2 Channel 3

M5 M74

RS–422RS–232–CRS–232–C

M77

RS–232–C

Reader/
puncher

Host 
computer

Host 
computer

Reader/
puncher

I/O = 0
or
I/O = 1

I/O = 2 I/O = 3 I/O = 3

REMOTE BUFFER

Series 0 has three channels of reader/punch interfaces.  The input/output
device to be used is specified by setting the channel connected to that
device in setting parameter I/O.
The specified data, such as a baud rate and the number of stop bits, of an
input/output device connected to a specific channel must be set in
parameters for that channel in advance.
For channel 1, two combinations of parameters to specify the input/output
device data are provided.
The following shows the interrelation between the reader/punch interface
parameters for the channels.

I/O

Specify a channel for an 
input/output device.

I/O
 = 0 : Channel 1
 = 1 : Channel 1
 = 2 : Channel 2
 = 3 : Channel 3

I/O = 0
(channel 1)

002 Stop bit and other data

038 #6,#7
Number specified for the 
input/output device

552 Baud rate

I/O = 1
(channel1 )

012 Stop bit and other data

038 #6,#7 Number specified for the input/output device

553 Baud rate

I/O = 2
(channel 2)

050

038 #4,#5

250

I/O = 3
(channel 3)

051

038 #1,#2

251

055#2 Selection of protocol

055 #3 Selection of RS–422 or
RS–232C, and other data

Parameter Number

Stop bit and other data

Number specified for the 
input/output device

Baud rate

Stop bit and other data

Number specified for the 
input/output device

Baud rate

SETTING

Parameter

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

405

The Handy File is an easy–to–use, multi function floppy disk
input/output device designed for FA equipment.  By operating the Handy
File directly or remotely from a unit connected to the Handy File,
programs can be transferred and edited.
The Handy File uses 3.5–inch floppy disks, which do not have the
problems of paper tape (i.e., noisy during input/output, easily broken, and
bulky).
One or more programs (up to 1.44M bytes, which is equivalent to the
memory capacity of 3600–m paper tape) can be stored on one floppy disk.

RS–232–C or
RS–422 Interface
(Punch panel, etc.)

Handy File

RS–232–C
Interface

RS–422
Interface

FANUC

When the Floppy Cassette is connected to the NC, machining programs
stored in the NC can be saved on a Floppy Cassette, and machining
programs saved in the Floppy Cassette can be transferred to the NC.

RS–232–C Interface
(Punch panel, etc.)

�

�

�

�

�

�

�

FANUC

ON OFF

POWER

2.3.1
FANUC Handy File

2.3.2
FANUC Floppy
Cassette

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

406

An FA Card is a memory card used as an input medium in the FA field.
It is compact, but has a large memory capacity with high reliability, and
requires no special maintenance.
When an FA Card is connected to the CNC via the card adapter, NC
machining programs stored in the CNC can be transferred to and saved
in an FA Card.  Machining programs stored on an FA Card can also be
transferred to the CNC.

RS–232–C Interface
(Punch panel, etc.)

READY

EJECT

READ

WRITE

ALARM

RESET

FANUC

The FANUC PPR consists of three units:  A printer, paper tape punch, and
paper tape reader.
When the PPR is used alone, data can be read from the tape reader and
printed or punched out.  It is also possible to perform TH and TV checks
on data that was read.

RS–232–C Interface
(Punch panel, etc.)

2.3.3
FANUC FA Card

2.3.4
FANUC PPR

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

407

The portable tape reader is used to input data from paper tape.

�

+

�

+ +

RS–232–C Interface
(Punch panel, etc.)

2.3.5
Portable Tape Reader

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/082. OPERATIONAL DEVICES

408

Procedure of turning on the power

1 Check that the appearance of the CNC machine tool is normal.  
(For example, check that front door and rear door are closed.)

2 Turn on the power according to the  manual issued by the machine
tool builder.

3 After the power is turned on, check that the position screen is
displayed.  If the software configuration screen is being displayed, a
system failure may have occurred.

ACTUAL POSITION (ABSOLUTE) O0010 N0010

      PART COUNT       16
RUN TIME 0H57M CYCLE TIME 0H 0M38S
ACT.F 3000 MM/M S 0 T
16:17:47         BUF AUTO

[  ABS  ][  REL  ][  ALL  ][ HNDL  ][       ]

X 123. 456
Y 363. 233
Z 0.000

Position display (for 9 ″ CRT)

4 Check that the fan motor is rotating.

WARNING
When pressing the <POWER ON> key, do not touch any
other CRT/MDI or thin type display/MDI panel keys, until the
positional or alarm screen is displayed.  Some keys are
used for the maintenance or special operation purpose.
When they are pressed, unexpected operation may be
caused.

2.4
POWER ON/OFF

2.4.1
Turning on the Power

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 2. OPERATIONAL DEVICESOPERATION

409

O466–22 CNC control software
SERVO : 9030–16

SUB : xxxx–xx
OMM : yyyy–yy
PMC : zzzz–zz

Digital servo ROM

Sub CPU (remote buffer)
Order–made macro/macro
compiler
PMC

1 Check that the LED indicating the cycle start is off on the operator’s
panel.

2 Check that all movable parts of the CNC machine tool is stopping.

3 If an external input/output device such as the Handy File is connected
to the CNC, turn off the external input/output device.

4 Continue to press the POWER OFF pushbutton for about 5 seconds.

NOTE
Refer to the machine tool builder’s manual for turning off the
power to the machine.

2.4.2
Display of Software
Configuration

2.4.3
Power Disconnection

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

410

3 ������ �	�
�����
MANUAL OPERATION are five kinds as follows :

3.1 Manual reference position return
3.2 Jog feed
3.3 Incremental feed
3.4 Manual handle feed
3.5 Manual absolute on and off

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 3. MANUAL OPERATIONOPERATION

411

The tool is returned to the reference position as follows :
The tool is moved in the direction specified in parameter (bit 0 to #3 of
No. 003) for each axis with the reference position return switch on the
machine operator’s panel. The tool moves to the deceleration point at the
rapid traverse rate, then moves to the reference position at the FL speed.
The rapid traverse rate and FL speed are specified in parameters (No. 518
to 521, 533, and 534).
Fourstep rapid traverse override is effective during rapid traverse.
When the tool has returned to the reference position, the reference
position return completion LED goes on. The tool generally moves along
only a single axis, but can move along three axes simultaneously when
specified so in parameter (bit 4 of No.049).

ÇÇ
ÇÇ
ÇÇ

Rapid traverse rate
(rapid traverse override is
effective)

Rapid traverse motion Decelerated
motion
FL speed

ÇÇ
ÇÇ
ÇÇ

Reference
position

Deceleration 
      point

Procedure for Manual Reference Position Return

1 Press the reference position return switch, one of the mode selection
swithces.

2 To decerease the feedrate, press a rapid traverse override switch.
When the tool has returned to the reference position, the reference
position return completion LED goes on.

3 Press the feed axis and direction selection switch corresponding to the
axis and direction for reference position return. Continue pressing the
switch until the tool returns to the reference position. The tool can be
moved along three axes simultaneously when specified so in an
appropriate parameter setting.  The tool moves to the deceleration
point at the rapid traverse rate, then moves to the reference position at
the FL speed set in a parameter.

4 Perform the same operations for other axes, if necessary.
The above is an example. Refer to the appropriate manual provided by
the machine tool builder for the actual operations.

ZERO 
POSITION

X

MIRRROR IMAGE

Y Z C X Y Z

PROGRAM
STOP

M02/
 M30

MANU
ABS

SPINDLE
ORI TAP

ATC
READY NC? MC?

3.1
MANUAL
REFERENCE
POSITION RETURN

REMOTE MDIMEMORYEDIT

 ZERO
RETURN

TEACHJOGHANDLE

MODE

50 10025F0

RAPID TRAVERSE
OVERRIDE (%)

+C +Z +Y

+X–X

–C–Y –Z

RAPID

AXIS DIRECTION

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

412

If the parameter for automatic coordinate system setting (bit 7 of
parameter 010) is specified, the coordinate system is determined
automatically when a manual reference position return is made.  If α, β,
γ, and δare specified in parameters 708 to 711, the system specifies a
workpiece coordinate system such that the tip of the basic tool or a
reference position on the tool holder, after reference position return,
becomes X =α, Y = β, Z =γ, and 4th =δ.

Once the REFERENCE POSITION RETURN COMPLETION LED
lights at the completion of reference position return, the tool does not
move unless the REFERENCE POSITION RETURN switch is turned
off.

The REFERENCE POSITION RETURN COMPLETION LED is
extinguished by either of the following operations:
–  Moving from the reference position. 
–  Entering an emergency stop state.

For the distance (Not in the deceleration condition) to return the tool to
the reference position, refer to the manual issued by the machine tool
builder.

Explanations

� Automatic coordinate
system setting

Restrictions

� ����� ��� ���� ����

� �������	� �������� ������

	��������� ���

� ��� 
�����	� �� ������ ��

�������	� ��������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 3. MANUAL OPERATIONOPERATION

413

In the jog mode, pressing a feed axis and direction selection switch on the
machine operator’s panel continuously moves the tool along the selected
axis in the selected direction.
The jog feedrate is specified in Table 3.2.

Table 3.2  Jog Feedrate

Rotary
switch

Feedrate Rotary
switch

Feedrate
switch

position  Metric input
(mm/min)

Inch input
(inch/min)

switch
position  Metric input

(mm/min)
Inch input
(inch/min)

0 0 0 8 50 2.0

1 2.0 0.08 9 79 3.0

2 3.2 0.12 10 126 5.0

3 5.0 0.2 11 200 8.0

4 7.9 0.3 12 320 12

5 12.6 0.5 13 500 20

6 20 0.8 14 790 30

7 32 1.2 15 1260 50

NOTE
The feedrate error (about ±3%) affects on the feedrate in the table
above.

The jog feedrate can be adjusted with the jog feedrate override dial.
Pressing the rapid traverse switch moves the tool at the rapid traverse
feedrate regardless of the postiotion of the jog feedrate override dial.
Manual operation is allowed for one axis at a time. 3 axes can be selected
at a time by parameter JAX (No.049#4).

ÇÇ
ÇÇ

Z

X

Y

While a switch is pressed, the
tool moves in the direction
specified by the switch.

3.2
JOG FEED

ÅÅ
ÅÅ
ÅÅ

REMOTE MDIMEMORYEDIT

 ZERO
RETURN

TEACHJOGHANDLE

MODE

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

414

Procedure for Jog Feed

1 Press the jog switch, one of the mode selection switches.

2 Press the feed axis and direction selection switch corresponding to the
axis and direction the tool is to be moved.  While the switch is pressed,
the tool moves at the feedrate specified in Table 3.2.  The tool stops
when the switch is released.

3 The jog feedrate can be adjusted with the jog feedrate override dial.

4 Pressing the rapid traverse switch while pressing a feed axis and
direction selection switch moves the tool at the rapid traverse rate
while the rapid traverse switch is pressed.  Rapid traverse override by
the rapid traverse override switches is effective during rapid traverse.

The above is an example.  Refer to the appropriate manual provided
by the machine tool builder for the actual operations.

Feedrate, time constant and method of automatic acceleration/
deceleration for manual rapid traverse are the same as G00 in programmed
command.

Changing the mode to the jog mode while pressing a feed axis and
direction selection switch does not enable jog feed.  To enable jog feed,
enter the jog mode first, then press a feed axis and direction selection
switch.

If reference position return is not performed after power–on, pushing
RAPID TRAVERSE button does not actuate the rapid traverse but the
remains at the JOG feedrate.  This function can be disabled by setting
parameter (No.010 #0).

+C +Z +Y

+X–X

–C–Y –Z

RAPID

AXIS DIRECTION

0   1260

JOG FEED RATE OVERRIDE

50 10025F0

RAPID TRAVERSE
OVERRIDE (%)

Restrictions

� Acceleration/decelera–
tion for rapid traverse

� Change of modes

� Rapid traverse prior to
reference position return

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 3. MANUAL OPERATIONOPERATION

415

In the incremental (STEP) mode, pressing a feed axis and direction
selection switch on the machine operator’s panel moves the tool one step
along the selected axis in the selected direction.  The minimum distance
the tool is moved is the least input increment.  Each step can be 10, 100,
or 1000 times the least input increment.  
This mode is effective when a manual pulse generator is not
connected.

Tool
Each time a switch is
pressed, the tool moves
one step in the direction
specified by the switch.

Z

X

Y

Procedure for Incremental Feed

1 Press the STEP switch, one of the mode selection switches.

2 Select the distance to be moved for each step with the magnification
dial.

3 Press the feed axis and direction selection switch corresponding to the
axis and direction the tool is to be moved.  Each time a switch is
pressed, the tool moves one step.  The feedrate is the same as the jog
feedrate.

4 If an axis direction selection switch is pressed after rapid traverse has
been selected, movement is made at the rapid traverse rate.
Rapid traverse override by the rapid traverse override switch is
effective during rapid traverse.

The above is an example.  Refer to the appropriate manual provided
by the machine tool builder for the actual operations.

3.3
INCREMENTAL FEED

X10 X100

X1 X1000

+C +Z +Y

+X–X

–C–Y –Z

RAPID

AXIS DIRECTION

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

416

In the handle mode, the tool can be minutely moved by rotating the
manual pulse generator on the machine operator’s panel.  Select the axis
along which the tool is to be moved with the handle feed axis selection
switches.
The minimum distance the tool is moved when the manual pulse
generator is rotated by one graduation is equal to the least input increment.
Or the distance the tool is moved when the manual pulse generator is
rotated by one graduation can be magnified by 10 times or by one of the
two magnifications specified by parameters (No. 121 and 699).

Z

X

Y

Manual pulse generator

ÇÇ
ÇÇ

Procedure for Manual Handle Feed

1 Press the HANDLE switch, one of the mode selection switches.

2 Select the axis along which the tool is to be moved by pressing a
handle feed axis selection switch.

3 Select the magnification for the distance the tool is to be moved by
pressing a handle feed magnification switch.  The minimum distance
the tool is moved when the manual pulse generator is rotated by one
graduation is equal to the least input increment.

4 Move the tool along the selected axis by rotating the handle.  Rotating
the handle 360 degrees moves the tool the distance equivalent to 100
graduations.
The above is an example.  Refer to the appropriate manual provided
by the machine tool builder for the actual operations.

3.4
MANUAL HANDLE
FEED

REMOTE MDIMEMORYEDIT

 ZERO
RETURN

TEACHJOG

MODE

HANDLE

Manual pulse generatorww
w.

cn
cc

en
ter

.co
m



B–61404E/08 3. MANUAL OPERATIONOPERATION

417

Parameter (bit 0 of No. 013) enables or disables the manual handle feed
in the JOG mode.
When the parameter (bit 0 of No. 013) is set 1,both manual handle feed
and incremental feed are enabled.

Parameter (bit 6 of No. 002) enables or disables the manual handle feed
in the TEACH IN JOG mode.

Parameter (bit 4 of No. 060) specifies as follows:

SET VALUE 0 : The feedrate is clamped at the rapid traverse rate
andgenerated pulses exceeding the rapid traverse rate
are ignored.(The distance the tool is moved may not
match the graduations on the manual pulse
generator.)

SET VALUE 1 : The feedrate is clamped at the rapid traverse rate and
generated pulses exceeding the rapid traverse rate are
not ignored but accumulated in the CNC.
(No longer rotating the handle does not immediately
stop the tool.  The tool is moved by the pulses
accumulated in the CNC before it stops.)

Up to three manual pulse generators can be connected, one for each axis.
The three manual pulse generators can be simultaneously operated.

WARNING
Rotating the handle quickly with a large magnification such
as x100 moves the tool too fast.  The feedrate is clamped
at the rapid traverse feedrate.

NOTE
Rotate the manual pulse generator at a rate of five rotations
per second or lower.  If the manual pulse generator is
rotated at a rate higher than five rotations per second, the
tool may not stop immediately after the handle is no longer
rotated or the distance the tool moves may not match the
graduations on the manual pulse generator.

Explanations

� Availability of manual
pulse generator in Jog
mode

� Availability of manual
pulse generator in
TEACH IN JOG mode

� A command to the MPG
exceeding rapid traverse
rate

Restrictions

� Number of MPGs

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

418

Whether the distance the tool is moved by manual operation is added to
the coordinates can be selected by turning the manual absolute switch on
or off on the machine operator’s panel.  When the switch is turned on, the
distance the tool is moved by manual operation is added to the
coordinates.  When the switch is turned off, the distance the tool is moved
by manual operation is not added to the coordinates.

O
P1

P2

Y axis

X axis

Manual operation

The coordinates values change by the amount of manual operation.

Fig. 3.5 (a)  Coordinates with the switch ON

X2

X1

Y1

Y2

P1

P2

O1

O2

The coordinates do not change.

Fig. 3.5 (b)  Coordinates with the switch OFF

3.5
MANUAL ABSOLUTE
ON AND OFF

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 3. MANUAL OPERATIONOPERATION

419

The following describes the relation between manual operation and
coordinates when the manual absolute switch is turned on or off, using a
program example.

G01G90
X200.0Y150.0
X100.0Y100.0F010

X300.0Y200.0

; �
; �
; �

The subsequent figures use the following notation:

Movement of the tool when the switch is on
Movement of the tool when the switch is off

The coordinates after manual operation include the distance the tool
is moved by the manual operation.  When the switch is off, therefore,
subtract the distance the tool is moved by the manual operation.

Coordinates when block � has been executed after manual operation
(X–axis +20.0, Y–axis +100.0) at the end of movement of block �.

Y

X

(120.0 , 200.0)
(220.0 , 250.0)

(200.0 , 150.0)
Switch OFF

Switch ON

(100.0 , 100.0)

Manual 
operation

Coordinates when the feed hold button is pressed while block � is being
executed, manual operation (Y–axis + 75.0) is performed, and the cycle
start button is pressed and released.

(300.0 , 275.0)

(300.0 , 200.0)(200.0 , 150.0)
(150.0 , 125.0)

(150.0 , 200.0)

(200.0 , 225.0)

Y

X

Switch OFF

Switch ON

Manual 
operation

Explanations

� Manual operation after
the end of block

� Manual operation after a
feed hold

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

420

Coordinates when the feed hold button is pressed while block � is being
executed, manual operation (Y–axis +75.0) is performed, the control unit
is reset with the RESET button, and block � is read again

(300.0 , 275.0)

(200.0,150.0)
(300.0 , 200.0)

(150.0 , 200.0)
(200.0,225.0)

(150.0 , 125.0)(100.0 , 100.0)

Y

X
Switch OFF

Switch ON

Manual 
operation

When there is only one axis in the following command, only the
commanded axis returns.

Manual 
operation

N2

N1

N3

N1G01X100.0Y100.0F500;
N2X200.0;
N3Y150.0;

Y

X
(100.0 , 100.0)

(200.0 , 100.0)

(200.0 , 150.0)

Switch OFF

Switch ON

When the following commands are incremental commands, operation is
the same as when the switch is OFF.

When the switch is OFF
After manual operation is performed with the switch OFF during cutter
compensation, automatic operation is restarted then the tool moves
parallel to the movement that would have been performed if manual
movement had not been performed.  The amount of separation equals to
the amount that was performed manually.

Manual 
operation

Cutter path

Programmed path

Cutter path after
manual operation

� When reset after a
manual operation
following a feed hold

� When a movement
command in the next
block is only one axis

� When the next move
block is an incremental

� Manual operation during
cutter compensation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 3. MANUAL OPERATIONOPERATION

421

When the switch is ON during cutter compensation
Operation of the machine upon return to automatic operation after manual
intervention with the switch is ON during execution with an absolute
command program in the cutter compensation mode will be described.
The vector created from the remaining part of the current block and the
beginning of the next block is shifted in parallel. A new vector is created
based on the next block, the block following the next block and the
amount of manual movement.  This also applies when manual operation
is performed during cornering.

Manual operation performed in other than cornering
Assume that the feed hold was applied at point PH while moving from PA
to PB of programmed path PA, PB, and PC and that the tool was manually
moved to PH’.  The block end point PB moves to the point PB’ by the
amount of manual movement, and vectors VB1 and VB2 at PB also move
to VB1’ and VB2’.  Vectors VC1 and VC2 between the next two blocks PB
– PC and PC – PD are discarded and new vectors VC1’ and VC2’ (VC2’ =
VC2 in this example) are produced from the relation between PB’ – PC and
PC – PD.  However, since VB2’ is not a newly calculated vector, correct
offset is not performed at block PB’ – PC.  Offset is correctly performed
after PC.

VC1

VC2

PA

PD

PC

PH’

PB

VB2

VB1

VB2’

VC1’

PH
VB1’

Cutter path after 
manual operation

Programmed path
(absolute command)

Cutter path before 
manual operation

Manual operation

P’B

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/083. MANUAL OPERATION

422

Manual operation during cornering
This is an example when manual operation is performed during cornering.
VA2’, VB1’, and VB2’ are vectors moved in parallel with VA2, VB1 and VB2
by the amount of manual movement.  The  new vectors  are calculated
from VC1 and VC2.  Then correct cutter compensation is performed for the
blocks following Pc.

VB2

VB1

VC1

VC2

PA’

PCPB

VC1’

VA1VA2

VA2’
VA1’PH’

PH

PA

VB1’

VB2’

Cutter path after 
manual operation

Programmed path
(absolute command)

Cutter path before 
manual operation

Manual operation

P’B

Manual operation after single block stop
Manual operation was performed when execution of a block was
terminated by single block stop.
Vectors VB1 and VB2 are shifted by the amount of manual operation.
Sub–sequent processing is the same as case a described above. An MDI
operation can also be interveneted as well as manual operation.  The
movement is the same as that by manual operation.

VB2

VB1

VC1

VC2PC

PB’

VC1’

VB2’

VB1’

PB

PA

Cutter path after 
manual operation

Manual 
operation

Programmed path
(absolute command)

Cutter path before 
manual operationww

w.
cn

cc
en

ter
.co

m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

423

4 AUTOMATIC OPERATION
Programmed operation of a CNC machine tool is referred to as automatic
operation.
This chapter explains the following types of automatic operation:

� MEMORY OPERATION
Operation by executing a program registered in CNC memory

� MDI OPERATION
Operation by executing a program entered from the MDI panel

� DNC OPERATION
Function for operating a machine while reading a program from an
input/output unit

� PROGRAM RESTART
Restarting a program for automatic operation from an intermediate
point

� SCHEDULING FUNCTION
Scheduled operation by executing programs (files) registered in an
external input/output device (Handy File, Floppy Cassette, or FA
Card)

� SUBPROGRAM CALL FUNCTION
Function for calling and executing subprograms (files) registered
in an external input/output device (Handy File, Floppy Cassette, or
FA Card) during memory operation

� MANUAL HANDLE INTERRUPTION
Function for performing manual feed during movement executed
by automatic operation

� MIRROR IMAGE
Function for enabling mirror–image movement along an axis
during automatic operation

� SEQUENCE NUMBER SEARCH
This function is usually used to search for a sequence number
within a program and to start or resume the program from the block
having that sequence number.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

424

Programs are registered in memory in advance.  When one of these
programs is selected and the cycle start switch on the machine operator’s
panel is pressed, automatic operation starts, and the cycle start lamp goes
on.
When the feed hold switch on the machine operator’s panel is pressed
during automatic operation, automatic operation is stopped temporarily.
When the cycle start switch is pressed again, automatic operation is
restarted.
When the reset switch on the CRT/MDI panel is pressed, automatic
operation terminates and the reset state is entered.
The following procedure is given as an example.  For actual operation,
refer to the manual supplied by the machine tool builder.

Procedure for Memory Operation

1 Press the AUTO mode selection switch.

2 Select a program from the registered programs.  To do this, follow the
steps below.

2–1 Press PRGRM  to display the program screen.

2–2 Press address O .

2–3 Enter a program number using the numeric keys.

2–4 Press the cursor key .

3 Press the cycle start switch on the machine operator’s panel.
Automatic operation starts, and the cycle start lamp goes on. When
automatic operation terminates, the cycle start lamp goes off.

4 To stop or cancel memory operation midway through, follow the
steps below.

a. Stopping memory operation
Press the feed hold switch on the machine operator’s panel.  The
feed hold lamp goes on and the cycle start lamp goes off.  The
machine responds as follows:

(i) When the machine was moving, feed operation decelerates
and stops.

(ii) When dwell was being performed, dwell is stopped.

(iii) The current operation, instigated by executing by an M, S, or
T command, is continued.

b. Terminating memory operation

Press the RESET  key on the CRT/MDI panel.

Automatic operation is terminated and the reset state is entered. 
When a reset is applied during movement, movement decelerates
then stops.

4.1
MEMORY
OPERATION

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

425

After memory operation is started, the following are executed:
� A one–block command is read from the specified program.
� The block command is decoded.
� The command execution is started.
� The command in the next block is read.
� Buffering is executed.  That is, the command is decoded to allow

immediate execution.
� Immediately after the preceding block is executed, execution of the

next block can be started.  This is because buffering has been
executed.

� Hereafter, memory operation can be executed by repeating the
steps � to �.

Memory operation can be stopped using one of two methods:  Specify a
stop command, or press a key on the machine operator’s panel.

– The stop commands include M00 (program stop), M01 (optional
stop), and M02 and M30 (program end).

– There are two keys to stop memory operation:  The feed hold key
and reset key.

Memory operation is stopped after a block containing M00 is executed.
When the  program is stopped, all existing modal information remains
unchanged as in single block operation.  The memory operation can be
restarted by pressing the cycle start button.  Operation may vary
depending on the machine tool builder.  Refer to the manual supplied by
the machine tool builder.

Similarly to M00, memory operation is stopped after a block containing
M01 is executed.  This code is only effective when the Optional Stop
switch on the  machine operator’s panel is set to ON.   Operation may vary
depending on the machine tool builder.  Refer to the manual supplied by
the machine tool builder.

When M02 or M30 (specified at the end of the main program) is read,
memory operation is terminated and the reset state is entered.
In some machines, M30 returns control to the top of the program.  For
details, refer to the manual supplied by the machine tool builder.

When Feed Hold button on the operator’s panel is pressed during memory
operation, the tool decelerates to a stop at a time.

Automatic operation can be stopped and the system can be made to the

reset state by using RESET  key on the CRT/MDI panel or external reset

signal.  When reset operation is applied to the system during a tool
moving status, the motion is slowed down then stops.

When the optional block skip switch on the machine operator’s panel is
turned on, blocks containing a slash (/) are ignored.

A file (subprogram) in an external input/output device such as a Floppy
Cassette can be called and executed during memory operation.  For
details, see Section 4.5.

Explanations

Memory operation

Stopping and
terminating memory
operation

� Program stop (M00)

� Optional stop (M01)

� Program end
(M02, M30)

� Feed hold

� Reset

� Optional block skip

Calling a subprogram
stored in an external
input/output device

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

426

In the MDI mode, a program can be inputted in the same format as normal
programs and executed from the MDI panel.
MDI operation is used for simple test operations.
The following procedure is given as an example.  For actual operation,
refer to the manual supplied by the machine tool builder.

Procedure for MDI Operation – A

One command block can be entered from the CRT/MDI for execution.

1 Press MDI key on the mode select switch.

2 Press the PRGRM  button.

3 Press soft key [MDI]  to display a screen with MDI at the top left.

PROGRAM            O9501 N9501
  (MDI)  (MODAL)

[ PRGRM ][ CURRNT ][ NEXT ] [ MDI ] [ RSTR ]

ADRS.    S  0  T
 10:29:38         MDI

G67 G00 F      
G97 G17 R      
G54 G90 P      
G64 G22 Q      
G69 G94 H     D
G15 G21 M      
G25 G40 S      
    G49 T      
    G80 B      
    G98        
    G50

4 Input “X 10.5” by address/numeric key.

5 Press INPUT key.  

The data, X 10.5, is input and displayed.  If you are aware of an error in

the keyed–in number before pressing the INPUT  key , press the CAN

key and key in X and the correct number again.

6 Input “Y 200.5” by address/numeric key.

7 Press INPUT  key.

The data, Y200.5 is input and displayed.  If you pressed wrong
number keys, correct the operation following the instruction
described above.

4.2
MDI OPERATION

Example of X10.5 Y200.5;

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

427

PROGRAM           O9501 N9501
   (MDI)    (MODAL)    
          X    10.500 G67 G00 F      
          Y   200.500 G54 G17 R      

G64 G90 P      
G69 G22 Q      
G15 G94 H     
G25 G21 M      
    G40 S      
    G49 T      
    G80 B      
    G98        
    G50        

ADRS.         S    0 T
 10:30:25      MDI       
[ PRGRM ][ CURRNT ][ NEXT ] [ MDI ] [ RSTE ]

8 Press the OUTPTSTART key.

Press the cycle start button on the machine operator’s panel
(depending on the machine tool).

To modify X10.5Y200.5 to X10.5, cancel Y200.5, by following the steps
described below:

1 Press Y CAN INPUT  keys.

2 Press the OUTPTSTART  or the cycle start button on the machine operator’s

panel.

WARNING
Modal G codes cannot be cancelled.  Enter the correct data
again.

� A single MDI operation executes a single input block.  Two or more
blocks cannot be executed at one time.

� The end–of–block symbol (;) need not be entered.

� A subprogram call or macro call cannot be specified.

� In MDI operation, the setting (absolute) determines whether the
commands are absolute or incremental.  The G code (G90/G91) is
ignored.

� The input block is cleared when the MDI operation is completed or
when a reset is specified.

Cancel before pressing
the START button

Limitations

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

428

Procedure for MDI Operation – B

1 Press the MDI mode selection switch.

2 Press the PRGRM  function key on the CRT/MDI panel to select the

program screen.  The following screen appears:

PROGRAM  ( MDI )

O0000
%

G00 G90 G94 G40 G80 G50 G54 G69
G17 G22 G21 G49 G98 G67 G64
F    P  H  S
R    Q  M  T
<   S    0 T
 11:26:11 MDI

O1234 N5678

[ PRGRM ][ CURRNT ][ NEXT ] [ MDI ] [ RSTR ]

Program number O0000 is entered automatically.

3 Prepare a program to be executed by an operation similar to normal
program editing.  M99 specified in the last block can return control to
the beginning of the program after operation ends.  Word insertion,
modification, deletion, word search, address search, and program
search are available for programs created in the MDI mode.  For
program editing, see Chapter 9.

4 To entirely erase a program created in MDI mode,use one of the
following methods:

a. Enter address O , then press the DELET  key on the MDI panel.

b. Alternatively, press the RESET  key.  In this case, set bit 7 of

parameter 057 to 1 in advance.

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

429

5 To execute a program, set the cursor on the head of the program.  (Start
from an intermediate point  is possible.)   Push Cycle Start button on the
operator’s panel.  By this action, the prepared program will start.  When
the program end (M02, M30) or ER(%) is executed, the prepared
program will be automatically erased and the operation will end.
By command of M99, control returns to the head of the prepared
program.

PROGRAM  ( MDI )

O0000 G00 X100. Y200. ;
M03 ;
G01 Z120. F500 ;
M98 P9010 ;
G00 Z0 ;
%

    (MODAL)
G00 G90 G94 G40 G80 G50 G54 G69
G17 G22 G21 G49 G98 G67 G64
F    P  H  S
R    Q  M  T
<   S    0 T
11:04:44 MDI

O1234 N5678

[ PRGRM ][ CURRNT ][ NEXT ] [ MDI ] [ RSTR ]

6 To stop or terminate MDI operation in midway through, follow the
steps below.

a. Stopping MDI operation
Press the feed hold switch on the machine operator’s panel.  The
feed hold lamp goes on and the cycle start lamp goes off.  
When the cycle start switch on the machine operator’s panel is
pressed, machine operation restarts.

b. Terminating MDI operation

Press the RESET  key on the CRT/MDI panel. 

Automatic operation is terminated and the reset state is entered. 
When a reset is applied during movement, movement decelerates
then stops.

The previous explanation of how to execute and stop memory operation also
applies to MDI operation, except that in MDI operation –B, M30 does not
return control to the beginning of the program (M99 performs this function).

Programs prepared in the MDI operation will be erased in the following
cases:

⋅ In MDI operation, if M02, M30 or ER(%) is executed.
⋅ In AUTO mode, if memory operation is performed.
⋅ In EDIT mode, if any editing is  performed.
⋅ Background editing is performed.

After the editing operation during the stop of MDI operation  was done,
operation starts from the current cursor position.

Explanations

� Erasing the program

� Restart

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

430

The setting (absolute) determines whether commands are absolute or
incremental.  If bit 5 of parameter 029 is set to 1, G90/G91 in the program
is enabled.  To call a subprogram or macro program during MDI
operation, set bit 5 of parameter 029 to 1.

Programs created in MDI mode cannot be registered.

A program can have as many lines as can fit on one page of the CRT
screen.
A program consisting of up to six lines can be created.  When parameter
(No. 028 #3) is set to 0 to specify a mode that suppresses the display of
continuous–state information, a program of up to 10 lines can be created.
If the created program exceeds the specified number of lines, % (ER) is
deleted (prevents insertion and modification).

Calls to subprograms (M98) can be specified in a program created in the
MDI mode.  This means that a program registered in memory can be
called and executed during MDI operation.  In addition to the main
program executed by automatic operation, up to two levels of subprogram
nesting are allowed (when the custom macro option is provided, up to four
levels are allowed).

Main program Subprogram

One–level nesting Two–level nesting

O0000;

M98P 1000;

M30;

O1000; O2000;

M98P M98P2000; 3000;

M99; M99;

Subprogram

Fig. 4.2  Nesting level of subprograms called from the MDI program

When the custom macro option is provided, macro programs can also be
created, called, and executed in the MDI mode. However, macro call
commands cannot be executed when the mode is changed to MDI mode
after memory operation is stopped during execution of a subprogram.

When a program is created in the MDI mode, an empty area in program
memory is used.  If the maximum number of programs has already been
registered, or if the part program storage is full, a program cannot be
created in MDI mode.

� Absolute/incremental
command

Explanations

� Program registration

� Number of lines in a 
program

� Subprogram nesting

� Macro  call

� Memory  areaww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

431

In DNC operation, the machine is not operated by a program registered
in memory of the CNC, instead being operated by a program read directly
from a connected input/output unit.  This mode is used when the program
is too large to be registered in the memory of the CNC.  This mode is also
used for high–speed machining using a remote buffer.
For DNC operation with the Floppy Cassette directory display function
(the Floppy Cassette directory display function is supported and the
Floppy Cassette is specified as the input/output unit), see Chapter 8.

Procedure for DNC Operation

1 Select the MDI mode and specify the channel for the connected
input/output unit in the I/O field on the setting screen.

2 Select AUTO mode.

3 Search for the beginning of the program of the input/output unit.

4 Input the DNCI signal.  (For details of the actual operation, refer to the
manual provided by the machine tool builder.)

5 Press the cycle start key.

DNC operation starts.  The operation can be stopped and resumed in the
same way as for memory operation.

� In DNC operation mode, the current program can call a subprogram
registered in memory.

� In DNC operation mode, the current program can specify a custom
macro.  However, a repeat instruction or branch instruction cannot be
programmed.

� In DNC operation mode, the current program can call a macro program
registered in memory.

� In DNC operation mode, to return the system from the current
subprogram or macro program to the calling program, a sequence
number (M99P****) cannot be specified.

� If input/output channels 1 and 2 are used for DNC operation, the DC3
code is output and reading is stopped at the end of each block (each
time the EOB is read).  To enable continuous reading of the blocks,
specify bit 7 of parameter 0390 accordingly.

� In DNC operation mode, to allow a program to be resumed specify bit
7 of parameter 0387 accordingly.

� In DNC operation mode, no program can be displayed.  Only the
current block and subsequent block can be displayed.

� In DNC operation mode, F is displayed as the address of the program
number at the top right corner of the CRT screen.

4.3
DNC OPERATION

Explanations

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

432

This function specifies Sequence No. of a block to be restarted when a tool
is broken down or when it is desired to restart machining operation after
a day off, and restarts the machining operation from that block.  It can also
be used  as a high–speed program check function.
There are two restart methods:  the P–type method and Q–type method.

P TYPE Operation can be restarted anywhere. This restart method is
used when operation is stopped because of a broken tool.

Program start point (machining start point)

Restart position

Return operation

ÇÇ
ÇÇ
ÇÇ

Q TYPE Before operation can be restarted, the machine must be
moved to the programmed start point (machining start point)

ÇÇ
ÇÇ

Program start point 
(machining start point)

Return operation

Restart position

4.4
PROGRAM RESTART

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

433

Procedure for Program restart

1 Retract the tool and replace it with a new one.  When necessary,
change the offset.  (Go to step 2.)

1 When power is turned ON or emergency stop is released, perform all
necessary operations at that time, including the reference position
return.

2 Move the machine manually to the program starting point (machining
start point), and keep the modal data and coordinate system in the
same conditions as at the machining start.

3 If necessary, modify the offset amount.

1 Turn the program restart switch on the machine operator’s panel ON.

2 Press PRGRM  on the CRT/MDI panel to display the desired program.

3 Find the program head.

4 [P TYPE] Input address P, then the sequence number of the block to

be resumed.  Press the cursor down  key.

[Q TYPE] Input address Q, then the sequence number of the block to 

be resumed.  Press the cursor down  key.

If the same sequence number appears more than once, the location of
the target block must be specified.  Specify a frequency and a
sequence number.

��������P

��������Q[Q TYPE]

Frequency
Sequence No.

Frequency

Sequence No.

[P TYPE]

�	����
	� �

 [P TYPE]

 [Q TYPE]

�	����
	� �

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

434

5 Once the search to resume the program has been completed, the CRT
screen displays the program resume screen.

PROGRAM RESTART         O0100 N0123

    (DESTINATION)   M010 015 050 *** ***
     X   300.000     *** *** *** *** ***
     Y   300.000     *** *** *** *** ***
     Z   300.000     *** *** *** *** ***

*** *** *** *** ***
*** *** *** *** ***

    (DISTANCE TO GO) *** *** *** *** ***
  1  X   254.052                        
  2  Y   243.988    T   **** ****       
  3  Z   249.368    S  *****            
                    B ******            

        S    0 T  
  14:08:12 BUF AUTO        RSTR
[ PRGRM ][ CURRNT ][ NEXT ][ MDI ][ RSTR ]

DESTINATION shows the position at which machining is to restart.
DISTANCE TO GO shows the distance from the current tool position
to the position where machining is to restart.  A number to the left of
each axis name indicates the order of axes (determined by parameter
No. 124 to 127) along which the tool moves to the restart position.
M:  Thirty–five most recently specified M codes
T:  Two most recently specified T codes
S:  Most recently specified S code
B:  Most recently specified B code

6 Turn the program re–start switch OFF.  At this time, the figure at the
left side of axis name DISTANCE TO GO blinks.

7 Check the screen for the M, S, T, and B codes to be executed.  If they
are found, execute the M, S, T, and B functions by the MDI mode.
After execution, restore the previous mode.

8 Check that the distance indicated under DISTANCE TO GO is correct.
Also check whether there is the possibility that the tool might hit a
workpiece or other objects when it moves to the machining restart
position.  If such a possibility exists, move the tool manually to a
position from which the tool can move to the machining restart
position without encountering any obstacles.

9 Press the cycle start button.  The tool moves to the machining restart
position at the dry run feedrate sequentially along axes in the order
specified by parameter settings.  Machining is then restarted.ww

w.
cn

cc
en

ter
.co

m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

435

Under any of the following conditions, P–type restart cannot be
performed:

⋅ When automatic operation has not been performed since the power
was turned on

⋅ When automatic operation has not been performed since an
emergency stop was released

⋅ When automatic operation has not been performed since the
coordinate system was changed or shifted (change in an external
offset from the workpiece reference point)

The block to be restarted need not be the block which was interrupted;
operation can restart with any block.  When P–type restart is performed,
the restart block must use the same coordinate system as when operation
was interrupted.

When single block operation is ON during movement to the restart
position, operation stops every time the tool completes movement along
an axis.  When operation is stopped in the single block mode, MDI
intervention cannot be performed.

During movement to the restart position, manual intervention can be used
to perform a return operation for an axis if it has not yet been performed
for the axis.  A return operation cannot be done further on axes for which
a return has already been completed.

Never reset during the time from the start of a search at restart until
machining is restarted.  Otherwise, restart must be performed again from
the first step.

Regardless of whether machining has started or not, manual operation
must be performed when the manual absolute mode is on.

If no absolute–position detector (absolute pulse coder) is provided, be
sure to perform reference position return after turning on the power and
before performing restart.

WARNING
As a rule, the tool cannot be returned to a correct position under the following conditions.
Special care must be taken in the following cases since none of them cause an alarm:
⋅ Manual operation is performed when the manual absolute mode is OFF.
⋅ Manual operation is performed when the machine is locked. (ignore the Z–axis)
⋅ When the mirror image is used.
⋅ When manual operation is performed in the course of axis movement for returning operation.
⋅ When the program restart is commanded for a block between the block for skip cutting and

subsequent absolute command block.

Restrictions

� P–type restart

� Restart block

� ��
�	� �	���

� Manual intervention

� Reset

� Manual absolute

� Reference position
return

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

436

The schedule function allows the operator to select files (programs)
registered on a floppy–disk in an external input/output device (Handy
File, Floppy Cassette, or FA Card) and specify the execution order and
number of repetitions (scheduling) for performing automatic operation.
It is also possible to select only one file from the files in the external
input/output device and execute it during automatic operation.
This function is enabled if the Floppy Cassette directory display function
is supported and the Floppy Cassette is specified as the input/output unit.

FILE DIRECTORY

FILE NO. FILE NAME

 0001 O0010
 0002 O0020
 0003 O0030
 0004 O0040

Set file number and
number of repetitions.

ORDER FILE NO REPETITION

 01    0002 2
 02    0003 1
 03    0004 3
 04    0001 2

Scheduling screen

Executing automatic operation

List of files in an external input/output device

4.5
SCHEDULING
FUNCTION

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

437

Procedure for Scheduling Function

1 Press the AUTO switch on the machine operator’s panel, then press

the PRGRM  function key on the MDI panel.

2 Press the rightmost soft key (continuous menu key), then press the
[FL. SDL]  soft key.  A list of files registered in the Floppy Cassette is
displayed on screen No. 1.  To display more files that are not
displayed on this screen, press the page key on the MDI panel.  Files
registered in the Floppy Cassette can also be displayed successively.

FILE DIRECTORY O1200 N1200

CURRENT SELECTED : SCHEDULE

 NO. FILE NAME (METER) VOL
0000 SCHEDULE
0001 PARAMETER 65.6
0002 ALL PROGRAM 1.9
0003 O0001 1.3
0004 O0002 1.3
0005 O0003 1.3
0006 O0004 1.3
0007 O0005 1.3
0008 O0100 1.9

Screen No.1

                      S    0 T  
  14:33:53         AUTO        RSTR
[ SELECT ][     ][     ][     ][ SCHDUL ]

3 Press the�������� soft keys to display “SELECT FILE NO.” (on

screen No. 2).  Enter a file number, then press the INPUT  key and the

[EXEC] soft key .  The file for the entered file number is selected, and
the file name is indicated after “CURRENT SELECTED:”.

Screen No.2

FILE DIRECTORY         O0000 N0000

  CURRENT SELECTED:O0005
    NO.   FILE NAME         (METER)  VOL
   0000  SCHEDULE                       
   0001  PARAMETER             65.6  
   0002  ALL.PROGRAM              1.9  
   0003  O0001              1.3  
   0004  O0002              1.3  
   0005  O0003              1.3  
   0006  O0004              1.3  
   0007  O0005              1.3  
   0008  O0100              1.9  
  SELECT FILE NO.=    7
  NUM.          S    0 T  
  14:46:01     AUTO        
 [ EXEC ][      ][      ][      ][SCHDUL]

�	����
	�

� Procedure for executing
one file

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

438

4 Press theDNC operation switch on the machine operator’s panel, then
press the cycle start switch.  The selected file is executed.  For details on
the DNC operation switch, refer to the manual supplied by the machine
tool builder.  The selected file number is indicated at the upper right
corner of the screen as an F number (instead of an O number).

Screen No.3

FILE DIRECTORY         F0007 N1200
 CURRENT SELECTED:O0005

        S    0 T  
 15:00:16 BUF AUTO        
[ SELECT ][      ][      ][      ][SCHDUL]

1 Display the list of files registered in the Floppy Cassette.  The display
procedure is the same as in steps 1 and 2 for executing one file.

2 On screen No. 2, press the [SELECT]  soft key to display “SELECT
FILE NO.”

3 Enter file number 0, and press the [EXEC]  soft key.  “SCHEDULE” is
indicated after “CURRENT SELECTED:”.

4 Press the leftmost soft key (return menu key) and the [SCHDUL]  soft
key.  Screen No. 4 appears.

F0000 N1200

ORDER FILE NO. REQ.REP CUR.REP
   01  _
   02
   03
   04
   05
   06
   07
   08
   09
   10

Screen No.4

SCHEDULE

NUM. S 0  T
15:01:17 AUTO

[      ][      ][ CLEAR ][      ][  DIR  ]

Move the cursor and enter the file numbers and number of repetitions
in the order in which to execute the files. At this time, the current
number of repetitions “CUR.REP” is 0.

� Procedure for executing
the scheduling function

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

439

5 Press the DNC operation switch on the machine operator’s panel, and
then press the start switch.  The files are executed in the specified
order. When a file is being executed, the cursor is positioned at the
number of that file.
The current number of repetitions CUR.REP is increased when M02
or M30 is executed in the program being run.

Screen No.5

SCHEDULE        F0000 N0002

 ORDER FILE NO. REQ.REP CUR.REP
   01        0007            5        5
   02        0003           23       23
   03        0004         9999       22
   04        0005         LOOP        0
   05
   06
   07
   08
   09
   10

 NUM.       S    0 T  
 19:31:53     AUTO        
[      ][      ][ CLEAR ][      ][  DIR  ]

If no file number is specified on screen No. 4 (the file number field is left
blank), program execution is stopped at that point.  To leave the file

number field blank, press numeric key 0  or CAN  then INPUT .

If a negative value is set as the number of repetitions, <LOOP> is
displayed, and the file is repeated indefinitely.

When the [CLEAR]  and [EXEC]  soft keys are pressed on screen No. 4, all
data is cleared. However, these keys do not function while a file is being
executed.

When the leftmost soft key (return menu key) is pressed on screen No. 1,
2, 3, 4, or 5, the program screen is displayed.

Explanations

� Specifying no file
number

� Endless repetition

� Clear

� Return to the program
screen

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

440

Up to 9999 can be specified as the number of repetitions. If 0 is set for a
file, the file becomes invalid and is not executed.

By pressing the page key on screen No. 4, up to 20 files can be registered.

When M codes other than M02 and M30 are executed in a program, the
current number of repetitions is not increased.

During the execution of file, the floppy directory display of background
editing cannot be referenced.

To resume automatic operation after it is suspended for scheduled
operation, press the reset button.

Explanations

� Number of repetitions

� Number of files
registered

� M code

� Displaying the floppy
disk directory during file
execution

� Restarting automatic
operation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

441

The subprogram call function is provided to call and execute subprogram
files stored in an external input/output device(Handy File, FLOPPY
CASSETTE, FA Card)during memory operation.
When the following block in a program in CNC memory is executed, a
subprogram file in the external input/output device is called:
To execute this function, the Floppy Cassette directory display function
is required.

2. FS10/11 tape format

M198  P����  L∆∆∆∆ ;

Number of repetitions

File number for a file in the I/O device

I/O devices call instruction

1. F0 tape format

M198  P���  ∆∆∆∆ ;

Number of repetitions

I/O devices call instruction

File number for a file 
in the I/O device

The subprogram calling function is enabled when the Floppy Cassette
(program file) is specified as the input/output unit.
When the custom macro B option is provided, either format 1 or 2 can be
used. A different M code can be used for a subprogram call depending on
the setting of parameter No.248. In this case, M198 is executed as a
normal M code. The file number is specified at address P. If the parameter
No. 063 #2 is set to 1, a program number can be specified. When a file
number is specified at address P, Fxxxx is indicated instead of Oxxxx on
the upper–right corner of the CRT screen.

Programs in memory 
execution mode

N1                        ;

N2                        ; 0123 ....  File number

N3 M198 P0003 0123 ;             

N4                        ;             

N5                        ;              

: First call/return

: Second call/return

: Third call/return

Program in the external 
input/output device

Fig. 4.6  Program flow when M198 is specified

4.6
SUBPROGRAM CALL
FUNCTION

Format

Explanations

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

442

NOTE
1 When M198 in the program of the file saved in a floppy

cassette is executed, a P/S alarm (No.210) is given.  When
a program in the memory of CNC is called and M198 is
executed during execution of a program of the file saved in
a floppy cassette, M198 is changed to an ordinary M–code.

� When MDI is intervened and M198 is executed after M198
is commanded in the AUTO mode, M198 is changed to an
ordinary M–code.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

443

The movement by manual handle operation can be done by overlapping
it with the movement by automatic operation in the automatic operation
mode.

�

X

Programmed 
depth of cut

Depth of cut by 
handle interruption

Tool position after
handle interruption

Tool position during 
automatic operation

Fig. 4.7  Manual handle interruption

� Handle interruption axis selection signals
For the handle interruption axis selection signals, refer to the manual
supplied by the machine tool builder.

During automatic operation, handle interruption is enabled for an axis if
the handle interruption axis selection signal for that axis is on. Handle
interruption is performed by turning the handle of the manual pulse
generator.

WARNING
The travel distance by handle interruption is determined
according to the amount by which the manual pulse
generator is turned and the handle feed magnification (x1,
x10, xM, xN).
Since this movement is not accelerated or decelerated, it is
very dangerous to use a large magnification value for
handle interruption.

NOTE
The amount of travel by the handle interrupt is equal to the
output unit.  The amount of travel by the handle interrupt can
be changed to the input unit by setting bit 2 of parameter
0075 accordingly.  If this is specified, acceleration/
deceleration is also applied to the amount of travel by the
handle interrupt.

4.7
MANUAL HANDLE
INTERRUPTION

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

444

The following table indicates the relation between  other functions and the
movement by  handle interrupt.

Signal Relati��

Machine lock Machine lock is effective.  The tool does not move even when
this signal turns on.

Interlock Interlock is effective.  The tool does not move even when this
signal turns on.

Mirror image Mirror image is not effective. Interrupt functions on the plus
direction by plus direction command, even if this signal turns
on.

The following table shows the relation between various position display
data and the movement by handle interrupt.

Display Relation

Absolute coordinate 
value

Handle interruption does not change absolute coordi-
nates.

Relative coordinate
value

Handle interruption does not change relative coordi-
nates.

Machine coordinate 
value

Machine coordinates are changed by the travel dis-
tance specified by handle interruption.

The move amount by the handle interrupt is displayed on the 4th page of
the position display screen. The following 4 kinds of data are displayed
concurrently.

O0000 N0200HANDLE INTERRUPTION

(INPUT UNIT) (OUTPUT UNIT)
X 69.594 X 69.594
Y 137.783 Y 137.783
Z –61.439 Z –61.439

(RELATIVE)
X 0.000 X 0.000
Y 0.000 Y 0.000
Z 0.000 Z 0.000

(DISTANCE TO GO)

PART COUNT16
RUN TIME0H 57M CYCLE TIME 0H 0M 38S

         S    0 T  
 19:09:10 MDI              
[  ABS  ][  REL  ][  ALL  ][ HNDL ][     ]

(a) INPUT UNIT : Handle interrupt move amount in input unit
system
Indicates the travel distance specified by
handle interruption according to the least input
increment.

Explanations

� Relation with other
functions

� Position display

� Travel distance display

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

445

(b) OUTPUT UNIT :Handle interrupt move amount in output unit
system  
Indicates the travel distance specified by
handle interruption according to the least
command increment.

(c) RELATIVE : Position in relative coordinate system
These values have no effect on the travel
distance specified by handle interruption.

(d) DISTANCE TO GO :The remaining travel distance in the current
block has no effect on the travel distance
specified by handle interruption.

The handle interrupt move amount is cleared when the low speed
reference position return (the first reference position return when
power is turned on) ends every axis.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

446

During automatic operation, the mirror image function can be used for
movement along an axis. To use this function, set the mirror image switch
to ON on the machine operator’s panel, or set the mirror image setting to
ON from the CRT/MDI panel.

Y

X

Y–axis mirror image goes on.

Programmed tool path

Tool path after the mirror 
image function is used

Tool

Fig. 4.8  Mirror image

Procedure for mirror image

The following procedure is given as an example. For actual operation,
refer to the manual supplied by the machine tool builder.

1 Press the single block switch to stop automatic operation. When the
mirror image function is used from the begining of operation, this step
is omitted.

2 Press the mirror image switch for the target axis on the machine
operator’s panel.
Alternatively, turn on the mirror image setting by following the steps
below:

2–1 Set the MDI mode.

2–2 Press the DGNOSPARAM function key.

4.8
MIRROR IMAGE

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

447

2–3 Press the page key for chapter selection to display the setting
screen.

PARAMETER           O0100 N0002

    (SETTING 1)
   _REVX = 0
    REVY = 0
    TVON = 0
    ISO = 1   (0:EIA 1:ISO  )
    INCH = 0   (0:MM 1:INCH)
    I/O = 0
    ABS = 0   (0:INC 1:ABS)
    SEQ = 0
    CLOCK 97/07/07
          19:32:00
NO. REVX =          S    0 T  
  19:32:51                MDI
[ PARAM ][ DGNOS ][      ][ SV–PRM ][      ]

2–4 Move the cursor to the mirror image setting position, then set the
target axis to 1.

3 Enter an automatic operation mode (AUTO mode or MDI mode),
then press the cycle start button to start automatic operation.

For the mirror image switches, refer to the manual supplied by the
machine tool builder.

The direction of movement during manual operation, the direction of
movement from an intemidiate point to the reference position during
automatic reference position return, the direction of approach during
unidirectional positioning (G60), and the shift direction in a boring cycle
(G76, G87) cannot be reserved.

Explanations

Restrictions

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/084. AUTOMATIC OPERATION

448

Sequence number search operation is usually used to search for a
sequence number in the middle of a program so that execution can be
started or restarted at the block of the sequence number.

Example)Sequence number 2346 in a program (O0002) is searched for.

O0001 ;
N1234 X100.0 Z100.0 ;
S12 ;
   :
O0002 ;
N2345 X20.0 Z20.0 ;
N2346 X10.0 Y10.0 ;
   :
O0003 ;
   :

Program

Selected program

Target sequence 
number is found.

This selection is searched
starting at the beginning.
(Search operation is 
performed only within a 
program.)

Procedure for sequence number search

1 Select AUTO mode.

2 Press PRGRM  key.

3 ⋅If the program contains a sequence number to be searched for,
 perform the operations 4 to 7 below.
⋅If the program does not contain a sequence number to be searched
 for, select the program number of the program that contains the 
 sequence number to be searched for.

4 Key in address N .

5 Key in a sequence number to be searched for.

6 Press the cursor  key.

7 Upon completion of search operation, the sequence number searched
for is displayed in the upper–right corner of the CRT screen.

4.9
SEQUENCE NUMBER
SEARCH

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 4. AUTOMATIC OPERATIONOPERATION

449

Those blocks that are skipped do not affect the CNC.  This means that the
data in the skipped blocks such as coordinates and M, S, and T codes does
not alter the CNC coordinates and modal values.
So, in the first block where execution is to be started or restarted by using
a sequence number search command, be sure to enter required M, S, and
T codes and coordinates.  A block searched for by sequence number
search usually represents a point of shifting from one process to another.
When a block in the middle of a process must be searched for to restart
execution at the block, specify M, S, and T codes, coordinates, and so
forth as required from the MDI after closely checking the machine tool
and NC states at that point.

During search operation, the following checks are made :
⋅Optional block skip
⋅P/S alarm (No. 003 to 010)
A P/S alarm 003 to 010 occurring during the sequence number search can
be ignored if bit 1 of parameter 050 is specified accordingly.

During sequence number search operation, M98Pxxxx (subprogram call)
is not executed.  So an alarm (No. 060) is raised if an attempt is made to
search for a sequence number in a subprogram called by the program
currently selected.

O1234
     :
     :
M98 P5678 ;
     :
     :

O5678
     :
N8888
     :
M99 ;
     :

Main program Subprogram

If an attempt is made to search for N8888 in the example above, 
an alarm is raised.

Number Contents

60 Command sequence number was not found in the sequence
number search.

Explanations

� Operation during Search

� Checking during search

Limitations

� Searching in
sub–program

Alarm

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/085. TEST OPERATION

450

5 TEST OPERATION
The following functions are used to check before actual machining
whether the machine operates as specified by the created program.
1. Machine Lock and Auxiliary Function Lock
2. Feedrate Override
3. Rapid Traverse Override
4. Dry Run
5. Single Block

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. TEST OPERATIONOPERATION

451

To display the change in the position without moving the tool, use
machine lock.
There are two types of machine lock:  all–axis machine lock, which stops
the movement along all axes, and Z–axis machine lock, which stops the
movement along Z–axis only.  In addition, auxiliary function lock, which
disables M, S, and T commands, is available for checking a program
together with machine lock.

CRT/MDI

X
Y
Z

The tool does not move but the position
along each axis changes on the display.

Tool

Workpiece

Fig. 5.1 Machine lock

Procedure for Machine Lock and Auxiliary Function Lock

Press the machine lock switch on the operator’s panel.  The tool does not
move but the position along each axis changes on the display as if the tool
were moving.
Some machines have a Z–axis machine lock switch.  Refer to the
appropriate manual provided by the machine tool builder for machine
lock.
The position relationship between the workpiece coordinates and
machine coordinates may change after automatic operation by the
machine lock function has been executed.  If this occurs, reset the
workpiece coordinate system by specifying the coordinate system setting
command or by making a manual reference position return.

Press the auxiliary function lock switch on the operator’s panel.  M, S, and
T codes are disabled and not executed.  Refer to the appropriate manual
provided by the machine tool builder for auxiliary function lock.

M, S, and T commands are executed in the machine lock state.

When a G27, G28, or G30 command is issued in the machine lock state,
the command is accepted but the tool does not move to the reference
position and the reference position return LED does not go on.

M00, M01, M02, M30, M98, M99, M198, and M199 and commands are
executed even in the auxiliary function lock state.

5.1
MACHINE LOCK AND
AUXILIARY
FUNCTION LOCK

� Machine Lock

� Auxiliary Function Lock

Explanations

� M, S, T command by only
machine lock

� Reference position
return under Machine
Lock

� M codes not locked by
auxiliary function lock

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/085. TEST OPERATION

452

A programmed feedrate can be reduced or increased by a percentage (%)
selected by the override dial.This feature is used to check a program.
For example, when a feedrate of 100 mm/min is specified in the program,
setting the override dial to 50% moves the tool at 50 mm/min.

Tool
Check the machining by
altering the feedrate from
the value specified in the
program.

Feedrate 100 mm/min
(Specified by programmed)

Feedrate 50 mm/min after
50% feedrate override

Workpiece

Fig. 5.2  Feedrate override

Procedure for Feedrate Override

Set the feedrate override dial to the desired percentage (%) on the
machine operator’s panel, before or during automatic operation.
On some machines, the same dial is used for the feedrate override dial
and jog feedrate dial.  Refer to the appropriate manual provided by the
machine tool builder for feedrate override.

The override that can be specified ranges from 0 to 150% (10% steps).
For individual machines, the range depends on the specifications of the
machine tool builder.

During threading, the override is ignored and the feedrate remains as
specified by program.

5.2
FEEDRATE
OVERRIDE

���������

0   150

JOG FEED RATE OVERRIDE

Explanations

� Override Range

� Override during thread

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. TEST OPERATIONOPERATION

453

An override of four steps (F0, 25%, 50%, and 100%) can be applied to the
rapid traverse rate.  F0 is set by a parameter (No. 533).

ÇÇ
ÇÇ
ÇÇ

ÇÇ
ÇÇ
ÇÇ

Rapid traverse
rate10m/min

Override
50%

5m/min

Fig. 5.3  Rapid traverse override

Rapid Traverse Override

Select one of the four feedrates with the rapid traverse override switch
during rapid traverse.  Refer to the appropriate manual provided by the
machine tool builder for rapid traverse override.

The following types of rapid traverse are available.  Rapid traverse
override can be applied for each of them.
1) Rapid traverse by G00 
2) Rapid traverse during a canned cycle 
3) Rapid traverse in G27, G28 and G30 
4) Manual rapid traverse
5) Rapid traverse in manual reference position return

5.3
RAPID TRAVERSE
OVERRIDE

���������

100
25 50

LOW

Rapid traverse override

Explanations

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/085. TEST OPERATION

454

The tool is moved at the feedrate specified by a parameter regardless of
the feedrate specified in the program.  This function is used for checking
the movement of the tool under the state taht the workpiece is removed
from the table.

Tool

Table

Fig. 5.4  Dry run

Procedure for Dry Run

Press the dry run switch on the machine operator’s panel during automatic
operation.
The tool moves at the feedrate specified in a parameter.  The rapid traverse
switch can also be used for changing the feedrate.
Refer to the appropriate manual provided by the machine tool builder for
dry run.

The dry run feedrate changes as shown in the table below according to the
rapid traverse switch and parameters.

Rapid traverse
Program command

p
button

Rapid traverse Feed

ON Rapid traverse rate Jog maximum feedrate

OFF
Jog feedrate or 

rapid traverse rate *1)
Jog feedrate

*1 : Jog feedrate when parameter (bit 6 of No. 001) is 1. 
Rapid traverse rate when that parameter is 0.

5.4
DRY RUN

���������

Explanations

� Dry run feedrate

DRY
RUN

MC
LOCK

SINGLE
BLOCK

OPT
STOP

MST
LOCK

BLOCK
SKIP

WORK
LIGHT

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 5. TEST OPERATIONOPERATION

455

Pressing the single block switch starts the single block mode.  When the
cycle start button is pressed in the single block mode, the tool stops after
a single block in the program is executed.  Check the program in the single
block mode by executing the program block by block.

Cycle start

Stop

Workpiece

Cycle start

Cycle start

Stop

Stop

Tool

Fig. 5.5 (a)  Single block

Procedure for Single block

1 Press the single block switch on the machine operator’s panel.  The
execution of the program is stopped after the current block is
executed.

2 Press the cycle start button to execute the next block.  The tool stops
after the block is executed.

Refer to the appropriate manual provided by the machine tool builder
for single block execution.

5.5
SINGLE BLOCK

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/085. TEST OPERATION

456

If G28 to G30 are issued, the single block function is effective at the
intermediate point.

In a canned cycle, the single block stop points are the end of ,� �, and
� shown below.  When the single block stop is made after the point �
or �, the feed hold LED lights.

�

�

�

�

�

Rapid traverse

Feed

�

S

S

S

(S)

S : Single block stop point

Fig. 5.5 (b) Single block during canned cycle

Single block stop is not performed in a block containing M98P_;. M99;
or G65.
However, single block stop is even performed in a block with M98P_ or
M99 command, if the block contains an address other than O, N or P.

Explanations

� Reference position
return and single block

� Single block during a
canned cycle

� Subprogram call and
single block

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 6. SAFETY FUNCTIONSOPERATION

457

6 SAFETY FUNCTIONS
To immediately stop the machine for safety, press the Emergency stop
button.  To prevent the tool from exceeding the stroke ends, Overtravel
check and Stroke check are available.  This chapter describes emergency
stop., overtravel check, and stroke check.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/086. SAFETY FUNCTIONS

458

If you press Emergency Stop button on the machine operator’s panel, the
machine movement stops in a moment.

EMERGENCY STOP

Red

Fig. 6.1  Emergency stop

This button is locked when it is pressed.  Although it varies with the
machine tool builder, the button can usually be unlocked by twisting it.

EMERGENCY STOP interrupts the current to the motor. 
Causes of trouble must be removed before the button is released.

6.1
EMERGENCY STOP

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 6. SAFETY FUNCTIONSOPERATION

459

When the tool tries to move beyond the stroke end set by the machine tool
limit switch, the tool decelerates and stops because of working the limit
switch and an OVER TRAVEL is displayed.

Y

�

Deceleration and stop

Stroke end Limit switch

Fig. 6.2  Overtravel

When the tool touches a limit switch along an axis during automatic
operation, the tool is decelerated and stopped along all axes and an
overtravel alarm is displayed.

In manual operation, the tool is decelerated and stopped only along the
axis for which the tool has touched a limit switch.  The tool still moves
along the other axes.

Press the reset button to reset the alarm after  moving the tool to the safety
direction by manual operation.  For details on operation, refer to the
operator’s manual of the machine tool builder.

No. Description

5n4 The tool has exceeded the hardware–specified overtravel limit along
the positive nth axis (n : 1 to 3).

5n5 The tool has exceeded the hardware–specified overtravel limit along
the negative nth axis (n : 1 to 3).

Setting bit 5 of parameter 0057 enables or disables the overtravel limit
switch.  For details, refer to the manual provided by the machine tool
builder.

6.2
OVERTRAVEL

Explanations

� Overtravel during
automatic operation

� Overtravel during
manual operation

� Releasing overtravel

� Alarm

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/086. SAFETY FUNCTIONS

460

Two areas which the tool cannot enter can be specified with stored stroke
limit 1, 2 and stored stroke limit 3.

ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ

(I,J,K)

(I,J,K)

(X,Y,Z)

ÇÇ�Forbidden area for the tool

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

(X,Y,Z)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

 � Forbidden area is inside.

� Forbidden area is outside

ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇ

Ç

Fig. 6.3 (a)  Stroke check

When the tool exceeds a stored stroke limit, an alarm is displayed and the
tool is decelerated and stopped.
When the tool enters a forbidden area and an alarm is generated, the tool
can be moved in the reverse direction from which the tool came.

Parameters (Nos. 700 to 707 or Nos. 743 to 750) set boundary.  Outside
the area of the set limits is a forbidden area.  The machine tool builder
usually sets this area as the maximum stroke.

Parameters (Nos. 804 to 809) or commands set these boundaries.  Inside
or outside the area of the limit can be set as the forbidden area.  Parameter
(No. 024#4) selects either inside or outside as the forbidden area. 
In case of program command a G22 command forbids the tool to enter the
forbidden area, and a G23 command permits the tool to enter the
forbidden area. Each of G22; and G23; should be commanded
independently of another commands in a block.
The command below creates or changes the forbidden area:

6.3
STROKE CHECK

Explanations

� Stored stroke limit 1 
and 2

� Stored stroke limit 3
(extended stored stroke
check)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 6. SAFETY FUNCTIONSOPERATION

461

(I,J,K)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

(X,Y,Z)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

X>I, Y>J, Z>K
X–I > δ
Y–J > δ
Z–K > δ

G 22X_Y_Z_I_J_K_;

δmm=
7500

Fmm / min

Fig. 6.3 (b)  Creating or changing the forbidden area using a program

When setting the area by parameters, points A and B in the figure below
must be set.

B (I,J,K)

ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

A (X,Y,Z)ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇ

X>I, Y>J, Z>K
X–I > δ
Y–J > δ
Z–K > δ

δmm=
7500

Fmm / min

Fig. 6.3 (c)  Creating or changing the forbidden area using a parameters

In limit 3, even if you mistake the order of the coordinate value of the two
points, a rectangular, with the two points being the apexes, will be set as
the area.
When you set the forbidden area through parameters  (Nos. 804, 809), the
data should be specified by the distance from the reference position in the
least command increment (Output increment).
If it is set by a G22 command, specify the data  by the distance from the
reference position in the least input increment (Input increment.)   The
programmed data are then converted into the numerical values in the least
command increment, and the values are set as the parameters.
At power–on, G22 mode is selected.ww

w.
cn

cc
en

ter
.co

m



OPERATION B–61404E/086. SAFETY FUNCTIONS

462

Confirm the checking position (the top of the tool or the tool chuck) before
programming the forbidden area.
If point A (The top of the tool) is checked in Fig. 6.3 (d) , the distance “a”
should be set as the data for the stored stroke limit function.  If point B
(The tool chuck) is checked, the distance “b” must be set. When checking
the tool tip (like point A), and if the tool length varies for each tool, setting
the forbidden area for the longest tool requires no re–setting and results
in safe operation.

ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇÇÇÇÇ

A

B

a

b

The position of the
tool after reference
position return

Area boundary

Fig. 6.3 (d)  Setting the forbidden area

Area can be set in piles.

ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ
ÇÇÇÇÇÇÇÇÇÇ

ÇÇÇÇÇÇ
ÇÇÇÇÇÇ

Fig. 6.3 (e)  The forbidden area over lapping

Unnecessary limits should be set beyond the machine stroke.

If the maximum rapid traverse rate is F mm/minute, the maximum
overrun amount, L mm, of the stored stroke limit is obtained from the
following expression:

L mm = F/7500
The tool enters the specified inhibited area by up to L mm.  The tool can
be stopped at a position up to L mm in front of the inhibited area if bit 7
of parameter 0076 is specified accordingly.  In this case, the tool will not
enter the inhibited area.

� Checkpoint for the
forbidden area

� Forbidden area over–
lapping

� Overrun amount of
stored stroke limit

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 6. SAFETY FUNCTIONSOPERATION

463

Bit 3 of parameter 065 is used to select whether each stroke limit is
enabled, either immediately after power–on or later, after a manual
reference position return or reference position return by G28.
After the power is turned on, if the reference position is in the forbidden
area of each limit, an alarm is generated immediately.  (Only in G22 mode
for stored stroke limit 3).

If a stroke check alarm occurs, manually retract the tool from the inhibited
area in the direction opposite to the displayed alarm direction.  Press the
reset key to cancel the alarm.  If the tool has entered two inhibited areas,
thus preventing manual retraction of the tool, set the system to the
emergency stop state.  Change the stroke limit parameter and cancel the
alarm.  Then, manually retract the tool.

When G23 is switched to G22 in the forbidden area, the following results.

� When the forbidden area is inside, an alarm is informed in the next
move.

� When the forbidden area is outside, an alarm is informed immediately.

NOTE
In setting  a forbidden area, if the two points to be set are the
same, the area is as follows:
1 When the forbidden area is limit 1, 2, all areas are

forbidden areas.
2 When the forbidden area is limit 3, all areas are movable

areas.

Number Message Contents

5n0 OVER TRAVEL: +n Exceeded the n–th axis (1–8) + side stored
stroke limit 1 or 2.

5n1 OVER TRAVEL: –n Exceeded the n–th axis (1–8) � side stored
stroke limit 1 or 2.

5n2 OVER TRAVEL: +n Exceeded the n–th axis (1–3) + side stored
stroke limit 3.

5n3 OVER TRAVEL: –n Exceeded the n–th axis (1–3) � side
stored stroke limit 3.

� Effective time for a
forbidden area

� Releasing the alarms

� Change from G23 to G22
in a forbidden area

Alarms

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/08
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

464

7 �
��� ��� ��
���	����	� �����	��
When an alarm occurs, the corresponding alarm screen appears to indicate
the cause of the alarm.  The causes of alarms are classified by error codes.
The system may sometimes seem to be at a halt, although no  alarm is
displayed.   In this case, the system may be performing some processing.
The state of the system can be checked using the self–diagnostic function.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONSOPERATION

465

When an alarm occurs, the alarm screen appears.

ALARM MESSAGE         O0000 N0000

   100  P/S ALARM
   417  SERVO ALARM : X AXIS DGTL PARAM
   427  SERVO ALARM : Y AXIS DGTL PARAM

          S    0 T
NOT READY ALARM       MDI       
[ ALARM ][  OPR  ][  MSG  ][     ][     ]

In some cases, the alarm screen may not be displayed.  Instead, ALARM
will blink at the bottom of the screen.

PARAMETER           O0100 N0002

   (SETTING 1)
    REVX = 0
    REVY = 0
    TVON = 0
    ISO = 1   (0:EIA 1:ISO  )
    INCH = 0   (0:MM 1:INCH)
    I/O = 0
    ABS = 0   (0:INC 1:ABS)
    SEQ = 0

     CLOCK 93/12/07
           19:34:32
NO. REVX =         S    0 T  
NOT READY ALARM       MDI
[ PARAM ][ DGNOS ][      ][ SV–PRM ][     ]

In this case, display the alarm screen as follows:

1 Press the function OPRALARM key .

2 Press the soft key [ALARM] .

7.1
ALARM DISPLAY

Explanations

� Alarm screen

� Another method for
alarm displays

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/08
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

466

Error codes and messages indicate the cause of an alarm.  To recover from
an alarm, eliminate the cause and press the reset key.

The error codes are classified as follows:
No. 000 to 250: Program errors(*1)
No. 3n0 to 3n8: Absolute pulse coder (APC) alarms (*2)
No. 3n9: Serial pulse coder (SPC) alarms (*2)
No. 400 to 495: Servo alarms
No. 510 to 581: Overtravel alarms
No. 600 to 607: PMC alarms
No. 700 to 704: Overheat alarms
No. 910 to 988: System alarms

*1) For an alarm (No. 000 to 250) that occurs in association with
background operation, the indication ”xxxBP/S alarm” is provided
(where xxx is an alarm number).  Only a BP/S alarm is provided for
No. 140.

*2) n is controlled axis number.

See the error code list in the Appendix G for details of the error codes.

� Reset of the alarm

� Error codes

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONSOPERATION

467

The system may sometimes seem to be at a halt, although no alarm has
occurred.  In this case, the system may be performing some processing.
The state of the system can be checked by displaying the self–diagnostic
screen.

Procedure for Diagnois

1 Press the function key DGNOSPARAM .

2 Press the soft key [DGNOS].

3 The diagnostic screen has more than 1 pages.  Select the screen by the
following operation.

(1) Change the page by the 1–page change key.

(2) · Press the No.  key.

· Key input the number of the diagnostic data to be displayed. 

· Press the INPUT  key.

PARAMETER          O1224 N0000

  NO.       DATA       NO.       DATA 
  0700    00000000     0725    00000000
  0701    00000000     0726    00000000
  0710    00000000     0727    00000000
  0711    00000000     0730    00000000
  0712    00000000     0731    00000000
  0720    00000000     0732    00000000
  0721    00000000     0733    00000000
  0722    00000000     0734    00000000
  0723    00000000     0735    00000000
  0724    00000000     0736    00000000
  
NO. 0700 =         S    0 T  
 04:02:02      AUTO
[ PARAM ][ DGNOS ][      ][ SV–PRM ][      ]

#7
0700

#6
CSCT

#5
CITL

#4
COVZ

#3
CINP

#2
CDWL

#1
CMTN

#0
CFIN

When a digit is “1”, the corresponding status is effective.

CFIN The M, S, O, or T function is being executed.

CMTN A move command in the cycle operation is being executed.

CDWL Dwell is being executed.

CINP An in–posiiton check is being executed.

COVZ Override is at 0%.

CITL Interlock signal (STLK) is turned on.

CSCT Speed arrival signal of spindle is turned on.

7.2
CHECKING BY
SELF–DIAGNOSTIC
SCREEN

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/08
7. ALARM AND SELF–DIAGNOSIS

FUNCTIONS

468

#7
0701

#6 #5
CRST

#4 #3 #2 #1 #0

CRST One of the following : The reset button on the MDI panel, emergency stop,
or remote reset is on.

#7
STP0712

#6
REST

#5
EMS

#4 #3
RSTB

#2 #1 #0
CSU

Indicates automatic operation stop or feed hold status.  These are used for
troubleshooting.

STP The flag which stops the automatic operation.  This is set at the following
condition.

� External reset signal is turned on.

� Emergency stop signal is turned on.

� Feed hold signal is turned on.

� Reset button on the CRT/MDI panel is turned on.

� The mode is changed to the manual mode, such as JOG,
HANDLE/STEP, TEACH INJOG, TEACH IN HANDLE.

� Other alarm is generated.

REST This is set when one of the external reset, emergency stop, or reset button
is set on.

EMS This is set when the emergency stop is set on.

RSTB This is set when the reset button is on.

CSU This is set when the emergency stop is turned on, or when the servo alarm
has been generated.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

469

8 DATA INPUT/OUTPUT
NC data is transferred between the NC and external input/output devices
such as the Handy File.  
The following types of data can be entered and output :
 1.Program
 2.Offset data
 3.Parameter
 4.Pitch error compensation data
 5.Custom macro common variable
Before an input/output device can be used, the input/output related
parameters must be set.

FANUC Handy File

RS–422
interface

RS–232–C
interface

RS–232–C or
RS–422 interface
(Punch panel etc...)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

470

Of the external input/output devices, the FANUC Handy File and FANUC
Floppy Cassette use floppy disks as their input/output medium, and the
FANUC FA Card uses an FA card as its input/output medium.
In this manual, an input/output medium is generally referred to as a
floppy.  However, when the description of one input/output medium
varies from the description of another, the name of the input/output
medium is used.  In the text below, a floppy represents a floppy disk or
FA card.
Unlike an NC tape, a floppy allows the user to freely choose from several
types of data stored on one medium on a file–by–file basis.
Input/output is possible with data extending over more than one floppy
disk.

The unit of data, which is input/output between the floppy and the CNC
by one input/output operation (pressing the [READ] or [PUNCH] key),
is called a “file”. When inputting CNC programs from, or outputting them
to the floppy, for example, one or all programs within the CNC memory
are handled as one file.
Files are assigned automatically file numbers 1,2,3,4 and so on, with the
lead file as 1.

File 1 File n BlankFile 2 File 3

When one file has been entered over two floppies, LEDs on the adaptor
flash alternately on completion of data input/output between the first
floppy and the CNC, prompting floppy replacement.  In this case, take the
first floppy out of the adaptor and insert a second floppy in its place. Then,
data input/output will continue automatically.
Floppy replacement is prompted when the second floppy and later is
required during file search–out, data input/output between the CNC and
the floppy, or file deletion.
Floppy 1

File 1 File 2 File 3 File (k–1) File k

Floppy 2

Continuation
of file k File (k+1) File n Blank

Since floppy replacement is processed by the input/output device, no
special operation is required.  The CNC will interrupt data input/output
operation until the next floppy is inserted into the adaptor.
When reset operation is applied to the CNC during a request for floppy
replacement, the CNC is not reset at once, but reset after the floppy has
been replaced.

8.1
FILES

Explanations

� What is a File

� Request for floppy
replacement

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

471

The floppy is provided with the write protect switch.  Set the switch to the
write enable state. Then, start output operation.

Write protect switch

(2) Write–enabled (Reading, writ-
ing, and deletion are possible.)

Write protect switch of a cassette Write protect switch of a card

(1) Write–protected
(Only reading is
possible.)

(1) Write–protected
(Only reading is
possible.)

(2) Write–enabled (Reading, writ-
ing, and deletion are possible.)

Fig. 8.1   Protect swtich

Once written in the cassette or card, data can subsequently be read out by
correspondence between the data contents and file numbers. This
correspondence cannot be verified, unless the data contents and file
numbers are output to the CNC and displayed. The data contents can be
displayed with display function for directory of floppy disk
(See Section 8.8).
To display the contents,write the file numbers and the contents on the
memo column which is the back of floppy.

(Entry example on MEMO)
File 1 NC parameters
File 2 Offset data
File 3 NC program O0100

⋅ ⋅
⋅ ⋅
⋅ ⋅

File (n–1) NC program O0500
File n NC program O0600

� Protect switch

� Writing memo

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

472

When the program is input from the floppy, the file to be input first must
be searched.
For this purpose, proceed as follows:

File 1

File searching of the file n

File n BlankFile 2 File 3

Procedure for File heading

1 Press the EDIT or AUTO switch on the machine operator’s panel.

2 Press function PRGRM key and display the program screen..

3 Enter address N key.

4 Enter the number of the file to search for.

� N0
The beginning of the cassette or card is searched.

� One of N1 to N9999
Of the file Nos. 1 to 9999, a designated file is searched.

� N–9999
The file next to that accessed just before is searched.

� N–9998
When N–9998 is designated, N–9999 is automatically
inserted each time a file is input or output.  This condition is
reset by the designation of N1,N1 to 9999, or N�9999 or reset.

5 Press soft key INPUT .  The specified file is searched for.

The same result is obtained both by sequentially searching the files by
specifying Nos. N1 to N9999 and by first searching one of N1 to N9999
and then using the N–9999 searching method. The searching time is
shorter in the latter case.

No. Description

86 The ready signal (DR) of an input/output device is off.

An alarm is not immediately indicated in the CNC even when an
alarm occurs during head searching (when a file is not found, or
the like).

An alarm is given when the input/output operation is performed af-
ter that. This alarm is also raised when N1 is specified for writing
data to an empty floppy.  (In this case, specify N0.)

8.2
FILE SEARCH

���������

Explanations

� File search by N–9999

Alarmww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

473

Files stored on a floppy can be deleted file by file as required.

Procedure for File Deletion

1 Insert the floppy into the input/output device so that it is ready for
writing.

2 Press the EDIT switch on the machine operator’s panel.

3 Press function PRGRM key and display the program screen.

4 Enter address N key.

5 Enter the number (from 1 to 9999) of the file to delete.

6 Press soft key OUTPTSTART .

The specified file is deleted.

When a file is deleted, the file numbers after the deleted file are each
decremented by one.  Suppose that a file numbered k was deleted.  In this
case, files are renumbered as follows:

Before deletion after deletion
1 to (k–1) 1 to (k–1). . . 
k Deleted. . . . . . . . . . 
(k+1) to n k to (n–1). . . 

Set the write protect switch to the write enable state to delete the files.

8.3
FILE DELETION

���������

Explanations

� File number after the file
is deleted

� Protect  switch

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

474

This section describes how to load a program into the CNC from a floppy
or NC tape.

Procedure for Inputting a Program

1 Make sure the input device is ready for reading.

2 Press the EDIT switch on the machine operator’s panel.

3 When using a floppy, search for the required file according to the
procedure in Section 8.2.

4 Press function PRGRM key and display the program screen.

5 After entering address O, specify a program number to be assigned to
the program.  When no program number is specified here, the
program number used on the floppy or NC tape is assigned.

6 Press soft key INPUT .  

The program is input and the program number specified is assigned to
the program.

7 To abandon the input at any point, press the RESET  key.

If a program is input while the data protect key on the machine operator’s
panel turns ON, the program loaded into the memory is verified against
the contents of the floppy or NC tape.
If a mismatch is found during collation, the collation is terminated with
an alarm (P/S No. 79).
If the operation above is performed with the data protection key turns
OFF, collation is not performed, but programs are registered in memory.

When a tape holds multiple programs, the tape is read up to ER (or %).

O3333   M02;O1111 M02; ER(%)O2222   M30;

8.4
PROGRAM
INPUT/OUTPUT

8.4.1
Inputting a Program

���������

Explanations

� Collation

� Inputting multiple
programs from an NC
tapeww

w.
cn

cc
en

ter
.co

m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

475

� When a program is entered without specifying a program number.

⋅ The O–number of the program on the NC tape is assigned to the
program.  If the program has no O–number, the N–number in the first
block is assigned to the program.

⋅ When the program has neither an O–number nor N–number, the
previous program number is incremented by one and the result is
assigned to the program.

� When a program is entered with a program number 
The O–number on the NC tape is ignored and the specified number is
assigned to the program.  When the program is followed by additional
programs, the first additional program is given the program number.
Additional program numbers are calculated by adding one to the last
program.

The soft keys can be used to input a program.

This operation is enabled if the floppy disk directory display function is
not supported or, if the function is supported, the Floppy Cassette is not
specified as the input/output unit.

Procedure for program input with the soft keys

1 Display the program screen in EDIT mode or background edit mode.

2 Press the [I/O]  soft key.

3 Input address O , then the program number.  If this step is skipped,

the program number on the NC tape is automatically selected.

4 Press the [READ]  soft key.  To abandon input at any point, press the
[STOP]  soft key.

5 After input has been completed, press the [CAN]  soft key to display
the program screen again.

Program input is identical to that in foreground edit mode.  If the reset key
is pressed to abandon input in the background while a program is being
executed, however, the program execution is also halted.  To input a
program in background edit mode, use the soft keys.

No. Description

70 The size of memory is not sufficient to store the input programs

73 An attempt was made to store a program with an existing program
number.

79 The verification operation found a mismatch between a program
loaded into memory and the contents of the program on the floppy
or NC tape.

� Program numbers on a
NC tape

� Input with the soft keys

���������

� Program input in
background edit mode

Alarmww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

476

A program stored in the memory of the CNC unit is output to a floppy or
NC tape.

Procedure for Outputting a Program

1 Make sure the output device is ready for output.

2 To output to an NC tape, specify the punch code system (ISO or EIA)
using a parameter.  To output the program to a floppy disk, select ISO.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function PRGRM key.

5 Enter address O key.

6 Enter a program number.  If –9999 is entered, all programs stored in
memory are output.
To output multiple programs by full MDI key at one time, enter a
range as follows :
O∆∆∆∆,O����
Programs No.∆∆∆∆ to No.���� are output.

7 Press soft key OUTPTSTART .

The specified program or programs are output.

When output is conducted to the floppy, the program is output as the new
file after the files existing in the floppy.  New files are to be written from
the beginning with making the old files invalid, use the above  output
operation after the N0 head searching.

When P/S alarm 86 occurs during program output, the floppy is restored
to the condition before the output.

When program output is conducted after N1 to N9999 head searching, the
new file is output as the designated n–th position.  In this case, 1 to n–1
files are effective, but the files after the old n–th one are deleted.  If an
alarm occurs during output, only the 1 to n–1 files are restored.

To efficiently use the memory in the cassette or card, output the program
by setting parameter (No. 002#7, No. 012#7, No. 050#7, or 051#7) to 1.
This parameter makes the feed is not output, utilizing the memory
efficiently.

Head searching with a file No. is necessary when a file output from the
CNC to the floppy is again input to the CNC memory or compared with
the content of the CNC memory.  Therefore, immediately after a file is
output from the CNC to the floppy, record the file No. on the memo.

8.4.2
Outputting a Program

���������

Explanations
(Output to a floppy)

� File output location

� An alarm while a
program is output

� Outputting a program
after file heading

� Efficient use of memory

� On the memo record

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

477

The soft keys can be used to input a program.

This operation is enabled if the floppy disk directory display function is
not supported or, if the function is supported, the Floppy Cassette is not
specified as the input/output unit.

Procedure for program output with the soft keys

1 Display the program screen in EDIT mode or background edit mode.

2 Press the [I/O]  soft key.

3 Input address O , then the program number.  If –9999 is entered as

the program number, all programs in memory are output.
To output multiple programs by full MDI key at one time, enter a
range as follows :
O∆∆∆∆,O����
Programs No.∆∆∆∆ to No.���� are output.

4 Press the [PUNCH]  soft key.  To abandon input at any point, press the
[STOP]  soft key.

5 After input has been completed, press the [CAN]  soft key to display
the program screen again.

Program input is identical to that in foreground edit mode.  If the reset key
is pressed to abandon input in the background while a program is being
executed, however, the program execution is also halted.  A program that
is currently selected in the foreground can also be output.

NOTE
Some machines also use the         key, used to start
punching of the CNC tape in the background, as the cycle
start key to start automatic operation.  If such a machine is
being used, punch the CNC tape in a mode other than
automatic operation mode.  (To check whether the key is
used for both purposes, refer to the manual provided by the
machine tool builder.)

OUTPT
START

� Output with the soft keys

� Program outnput in
background edit mode

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

478

A program is output to paper tape in the following format:
ER
(%)

Program ER
(%)

Feed of 3 feet Feed of 3 feet

If three–feet feeding is too long, press the CAN  key during feed punching

to cancel the subsequent feed punching.

A space code for TV check is automatically punched.

When a program is punched in ISO code, two CR codes are punched after
an LF code.

LF CR CR

Only LF can be punched as the EOB if bit 7 of parameter 070 is specified
accordingly.

Press the RESET  key to stop punch operation.

All programs are output to paper tape in the following format.
ER
(%)

Program Program Program ER
(%)

Space of 1–feet Feed of 3–feet

The sequence of the programs punched is undefined.

Explanations
(Output to an NC tape)

� Format

� TV check

� ISO code

� Stopping the punch

� Punching all programs

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

479

Offset data is loaded into the memory of the CNC from a floppy or NC
tape. The input format is the same as for offset value output. See section
8.5.2.
When an offset value is loaded which has the same offset number as an
offset number already registered in the memory, the loaded offset data
replaces existing data.

Procedure for Inputting Offset data

1 Make sure the input device is ready for reading

2 Press the EDIT switch on the machine operator’s panel.

3 When using a floppy, search for the required file according to the
procedure in Section 8.2.

4 Press function MENUOFSET key.and display the offset screen.

5 Press INPUT key.

The input offset data will be displayed on the screen after completion
of input operation.

8.5
OFFSET DATA INPUT
AND OUTPUT

8.5.1
Inputting Offset Data

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

480

All offset data is output in a output format from the memory of the CNC
to a floppy or NC tape.

Procedure for Outputting Offset Data

1 Make sure the output device is ready for output.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function MENUOFSET key.

5 Press soft keyOUTPUTSTART .

Offset data is output in the output format described below.

Output format is as follows:

Format
(1)For tool compensation memory A

G10 P_R_;
where P_:  Offset No.

R_:  Tool compensation amount

(2)For tool compensation memory B
Setting/changing the geometric compensation amount
G10 L10 P_R_;
Setting/changing the wear compensation amount
G10 L11 P_R_;

The L1 command may be used instead of L11 for format compatibility of
the conventional CNC.

When the floppy disk directory display function is used, the name of the
output file is OFFSET.

8.5.2
Outputting Offset Data

���������

Explanations

� Output format

� Output file name

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

481

Parameters and pitch error compensation data are input and output from
different screens, respectively. This chapter describes how to enter them.

Parameters are loaded into the memory of the CNC unit from a floppy or
NC tape.  The input format is the same as the output format.  See Section
8.6.2.  When a parameter is loaded which has the same data number as a
parameter already registered in the memory, the loaded parameter
replaces the existing parameter.

Inputting parameters

1 Make sure the input device is ready for reading.

2 When using a floppy, search for the required file according to the
procedure in Section 8.2.

3 Press the EMERGENCY STOP button on the machine operator’s
panel.

4 Press function DGNOSPARAM key and display the parameter screen.

5 Enter 1 in response to the prompt for writing parameters (PWE).
Alarm P/S100 (indicating that parameters can be written) appears.

6 Press soft key INPUT .

Parameters are read into memory.  Upon completion of input, the
“INPUT” indicator at the lower–right corner of the screen disappears.

7 Enter 0 in response to the prompt for writing parameters.

8 Turn the power to the NC back on.

9 Release the EMERGENCY STOP button on the machine operator’s
panel.

NOTE
For a full keyboard, before performing this procedure, set bit 3 of
parameter No. 0038 to 1.

8.6
INPUTTING AND
OUTPUTTING
PARAMETERS AND
PITCH ERROR
COMPENSATION
DATA

8.6.1
Inputting Parameters

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

482

All parameters are output in the defined format from the memory of the
CNC to a floppy or NC tape.

Outputting parameters

1 Make sure the output device is ready for output.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function DGNOSPARAM key. and display the parameter screen.

5 Press soft key OUTPUTSTART .

All parameters are output in the defined format.

Output format is as follows:
N P ;. . . . . . . . 

N:Parameter No.
P:Parameter setting value .

When the floppy disk directory display function is used, the name of the
output file is PARAMETER.

8.6.2
Outputting Parameters

���������

Explanations

� Output format

� Output file name

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

483

The value of a custom macro B common variable (#500 to #999) is loaded
into the memory of the CNC from a floppy or NC tape.  The same format
used to output custom macro B common variables is used for input.  See
Section 8.7.2.  For a custom macro common variable to be valid, the input
data must be executed by pressing the cycle start button after data is input.
When the value of a common variable is loaded into memory, this value
replaces the value of the same common variable already existing (if any)
in memory.

Inputting custom macro common variables

1 Input the program according to the procedure in Section 8.4.1.

2 Press the AUTO switch on the machine operator’s panel upon
completing input.

3 Press the cycle start button to execute the loaded program.

4 Display the macro vriable screen to chek whether the values of the
common variables have been set correctly.

The common variables (#500 to #531) can be input and output.
When the option for adding a common variable is specified, values from
#500 to #999 can be input and output.  Common variables #100 to 199
cannot be input or output.

8.7
INPUTTING/
OUTPUTTING
CUSTOM MACRO B
COMMON
VARIABLES

8.7.1
Inputting Custom
Macro B Common
Variables

���������

Explanations

� Common variables

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

484

Custom macro common variables (#500 to #999) stored in the memory
of the CNC can be output in the defined format to a floppy or NC tape.

Outputting custom macro common variable

1 Make sure the output device is ready for output.

2 Specify the punch code system (ISO or EIA) using a parameter.

3 Press the EDIT switch on the machine operator’s panel.

4 Press function MENUOFSET key and display the macro variables.

5 Press function OUTPTSTART key.  Common variables are output in the defined

format.

The output format is as follows:

%
;
#500=[25283*65536+65536]/134217728 �. . . . . . 
#501=#0; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#502=0; �. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
#503= ;. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

;. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
;. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 

#531= ;. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
M02;
%

� The precision of a variable is maintained by outputting the value of the
variable as <expression>.

� Undefined variable

� When the value of a variable is 0

When the floppy disk directory display function is used, the name of the
output file is [MACRO VAR ].

The common variables (#500 to #531) can be input and output.
When the option for adding a common variable is specified, values from
#500 to #999 can be input and output.
Common variables #100 to 199 cannot be input or output.

8.7.2
Outputting Custom
Macro B Common
Variable

���������

Explanations

� Output format

� Output file name

� Common variableww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

485

On the floppy directory display screen, a directory of the FANUC Handy
File, FANUC Floppy Cassette, or FANUC FA Card files can be displayed.
In addition, those files can be loaded, output, and deleted.

O0001  N00000
 (METER) VOL

DIRECTORY (FLOPPY)
    NO.   FILE NAME

         S    0 T
 19:35:17      EDIT       
[ SRHFIL ][ READ ][ PUNCH ][ DELETE ][      ]

This operation is enabled if the floppy disk directory display function is
supported and the Floppy Cassette is specified as the input/output unit.

8.8
DISPLAYING
DIRECTORY OF
FLOPPY DISK

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

486

Displaying the directory of floppy disk files

Use the following procedure to display a directory of all the
files stored in a floppy:

1 Press the EDIT switch on the machine operator’s panel.

2 Press function PRGRM key .

3 Press soft key [FLOPPY] .

4 Press page key  or .

5 The screen below appears.

O0555 N0000
 (METER) VOL

19:36:51 EDIT

0001 PARAMETER
0002 ALL. PROGRAM
0003 O0001
0004 O0002
0005 O0003
0006 O0004
0007 O005
0008 O0100
0009 O0555

65.6
 1.9
 1.3
 1.3
 1.3
 1.3
 1.3
 1.9
 1.3

DIRECTORY (FLOPPY)
   NO. FILE NAME

S 0  T

[ SRHFIL ][ READ ][ PUNCH ][ DELETE ][     ]

Fig. 8.8.1 (a)

6 Press a page key again to display another page of the directory.

8.8.1
Displaying the
Directory

������	�� �

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

487

Use the following procedure to display a directory of files
starting with a specified file number :

1 Press the EDIT switch on the machine operator’s panel.

2 Press function PRGRM key.

3 Press soft key [FLOPPY] .

4 Press soft key [F SRH] .

5 Enter a file number, and press INPUT key.

6 Press soft key[EXEC] .

7 Press a page key to display another page of the directory.

8 Press soft key [CAN]  to return to the soft key display shown in the
screen of Fig 8.8.1(a).

19:37:46

SEARCH
_FILE NO. =

NUM. S 0  T

O0555 N0000
(METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

EDIT
[  EXEC  ][  CAN  ][     ][     ][  STOP  ]

Fig. 8.8.1 (b)

NO : Displays the file number
FILE NAME : Displays the file name.
(METER) : Converts and prints out the file capacity to paper tape

length.  You can also produce “(FEET)” by setting the
INPUT UNIT to INCH of the setting data.

VOL. : When the file is multi–volume, that state is displayed.

C01

C02
L03

C(number)means  CONTINUE. . . . . . . 
L(number)means  LAST. . . . . . . 
number  number of floppies or cards. . . . . . . . . . . . . . . 

(Ex.) Floppy or card A

Floppy or card B
Floppy or card C

������	�� �

Explanations

� Screen fields and their 
meanings

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

488

The contents of the specified file number are read to the memory of NC.

Reading files

1 Press the EDIT switch on the machine operator’s panel.

2 Press function PRGRM key.

3 Press soft key [FLOPPY] .

4 Press soft key [READ] .

19:38:35

READ
_FILE NO. = PROGRAM NO. =

NUM.            S   0  T

O0555 N0000
(METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

EDIT
[  EXEC  ][  CAN  ][     ][     ][  STOP  ]

Fig. 8.8.2

5 Enter a file number.

6 Press function INPUT key .

7 To modify the program number, enter the program number, then press

function INPUT  key.

8 Press soft key [EXEC] .  The file number indicated in the lower–left
corner of the screen is automatically incremented by one.

9 Press soft key [CAN]  to return to the soft key display shown in the
screen of Fig. 8.8.1.(a).

8.8.2
Reading Files

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

489

Any program in the memory of the CNC unit can be output to a floppy
as a file.

Outputting programs

1 Press the EDIT switch on the machine operator’s panel.

2 Press function PRGRM key.

3 Press soft key [FLOPPY] .

4 Press soft key [PUNCH] .

19:39:17

PUNCH
_FILE NO. = _ PROGRAM NO. =

NUM. S 0  T

O0555 N0000
(METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

EDIT
[ EXEC ][  CAN  ][ PRG–NO ][     ][ STOP ]

5 Enter a program number.  To write all programs into a single file, enter
–9999 in the program number field.  In this case, the file name
“ALL.PROGRAM”  is registered.

6 Press function INPUT  key .

To output multiple programs by full MDI key at one time, enter a range
as follows :
���� → [PRG–NO.] → ���� → [PRG–NO.]
Programs No.���� to No. ���� are output.

7 Press soft key [EXEC] .  The program or programs specified in step 5
are written after the last file on the floppy.  To output the program after
deleting files starting with an existing file number, key in the file

number, then press function INPUT key followed by soft key [EXEC] .

8 Press soft key [CAN]  to return to the soft key display shown in the
screen of Fig. 8.8.1 (a).

8.8.3
Outputting Programs

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

490

The file with the specified file number is deleted.

Deleting files

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PRGRM .

3 Press soft key [FLOPPY] .

4 Press soft key [DELETE] .

19:39:56

DELETE
_FILE NO. =

NUM. S 0  T

O0555 N0000
(METER) VOL

DIRECTORY (FLOPPY)
   NO. FILE NAME

EDIT
[  EXEC  ][  CAN  ][     ][     ][  STOP  ]

5 Specify the file to be deleted.
When specifying the file with a file number, type the number and 

press function INPUT key.

6 Press soft key [EXEC] . 
The file specified in the file number field is deleted.  When a file is
deleted, the file numbers after the deleted file are each decremented
by one.

7 Press soft key [CAN]  to return to the soft key display shown in the
screen of Fig. 8.8.1 (a).

If CAN � INPUT keys are pressed without key inputting file number and

program number, file number or program number shows  blank.  When
0 is entered for file numbers or program numbers, 1 is displayed.

To use channel 1 for the input/output unit, set the device of bits 6 and 7
of parameter 038 to the Floppy Cassette.  To use channel 2, set the device
of bits 4 and 5 of parameter 038 to the Floppy Cassette.  To use channel
3, set the device of bits 1 and 2 of parameter 038 to the Floppy Cassette.

8.8.4
Deleting Files

���������

Restrictions

� Inputting file numbers
and program numbers
with keys

� I/O devices

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 8. DATA INPUT/OUTPUTOPERATION

491

For the numeral input in the data input area with FILE NO. and
PROGRAM NO., only lower 4 digits become valid.

When the data protection key on the machine operator’s panel is ON, no
programs are read from the floppy.  They are verified against the contents
of the memory of the CNC instead.

No. Contents

71 An invalid file number or program number was entered.
(Specified program number is not found.)

79 Verification operation found a mismatch between a program
loaded into memory and the contents of the floppy

86 The dataset–ready signal (DR) for the input/output device is
turned off. (The no file error or duplicate file error occurred on the
input/output device because an invalid file number, program num-
ber, or file name was entered.

� Significant digits

� Collation

ALARM

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/088. DATA INPUT/OUTPUT

492

Change the name of the file having the specified file number.

Procedure for changing the file name

1 Press the EDIT switch on the machine operator’s panel.

2 Press function key PRGRM .

3 Press soft key [FLOPPY] .

4 Press soft key [RENAME] .

5 Position the cursor to FILE NO. then enter the number of the file

whose name is to be changed.  Press the INPUT key.

6 Position the cursor to NAME and key in a new file name.  Then, press

the INPUT key.

7 Press soft key [EXEC] .

8 To return to the previous screen, press the [CAN]  soft key.

RENAME
FILE NO. = NAME=

NUM. S 0 T0101
21:59:53 EDIT

O0001 N0000
(METER) VOL

FILE DIRECTORY 
  NO. FILE NAME
0001 PARAMETER 87.1
0002 ALL.PROGRAM 87.1
0003 O0001 1.9
0004 O0021 7.1
0005 O0041 7.1
0006 O0615 5.8
0007 O0651 9.1
0008 O0601 7.1
0009 O0645 5.8

EXEC CAN STOP

� Use channel 1 or 2 for the input/output unit and specify NEW
INTERFACE as the device.  These channels cannot be used for some
connected input/output units.

� If the standard MDI key panel is being used, the file name will consist
of an address and a numeric value.

8.8.5
Changing the File
Name

���������

Limitationsww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

493

9 EDITING PROGRAMS
This chapter describes how to edit programs registered in the CNC.
Editing includes the insertion, modification, deletion, and replacement of
words.  Editing also includes deletion of the entire program and automatic
insertion of sequence numbers.  The extended part program editing
function can copy, move, and merge programs.  This chapter also
describes program number search, sequence number search, word search,
and address search, which are performed before editing the program.

1) Program number search:  See Section 9.3.
2) Word search:  See Section 9.1.1.
3) Address search:  See Section 9.1.1.

1) Inserting, altering, and deleting a word:  See Sections 9.1.3 to 9.1.5.
2) Replacing words and addresses:  See Section 9.5.6.
3) Deleting blocks:  See Sections 9.2. 
4) Copying, moving, and merging programs:  See Sections 9.5.1 and 9.5.5
5) Deleting programs:  See section 9.4.

Search for part of
program to be
edited

Inserting, altering,
and deleting pro-
grams

Registration

Editing

Output Execution

General

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

494

This section outlines the procedure for inserting, modifying, and deleting
a word in a program registered in memory.

Procedure for inserting, altering and deleting a word

1 Select EDIT mode.

2 Press function PRGRM key and display the program screen.

3 Select a program to be edited.
If a program to be edited is selected, perform the operation 4.
If a program to be edited is not selected, search for the program
number.

4 Search for a word to be modified.
⋅ Scan method
⋅ Word search method

5 Perform an operation such as altering, inserting, or deleting a word.

A word is an address followed by a number.  With a custom macro B, the
concept of word is ambiguous.
So the editing unit is considered here.
The editing unit is a unit subject to alteration or deletion in one operation.
In one scan operation, the cursor indicates the start of an editing unit.
An insertion is made after an editing unit.
Definition of editing unit

(i) Program portion from an address to immediately before the next
address

(ii)An address is an alphabet, IF, WHILE , GOTO, END, DO=,or ;  (EOB).

According to this definition, a word is an editing unit.
The word “word,” when used in the description of editing, means an
editing unit according to the precise definition.

To insert or modify a word during editing, the following data is entered.

� When the standard key panel is being used
One word (a single alphabetic character followed by a numeric value
or symbol) is entered.

� Editing B with the standard key panel
Even if the standard key panel is being used, editing B can be enabled
by specifying bit 7 of parameter 018 accordingly.  Two or more

addresses can be input at one time.  If the INPUT  key is pressed after a

single word (a single alphabetic character followed by a numeric value
or symbol) is input, another word can be input.  After all data has been
entered, press the edit key to start editing.

9.1
INSERTING,
ALTERING AND
DELETING A WORD

���������

Explanations

� Concept of word and
editing unit

� Data input during editing

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

495

To enable editing B, note the following:

� The INPUT  key is used to identify a breakpoint between words.  

A program cannot be input or output while a program is displayed.
Input or output a program on the program directory screen.

� Input a program number as one word containing address O.

� Up to 32 characters can be entered at one time.

� Each time the CAN  key is pressed, only the most–recently entered

character is deleted.

� When the full key panel is being used
Two or more words, or a desired character string, can be input at one
time.

WARNING
The user cannot continue program execution after altering,
inserting, or deleting data of the program by suspending
machining in progress by means of an operation such as a
single block stop or feed hold operation during program
execution.  If such a modification is made, the program may
not be executed exactly according to the contents of the
program displayed on the screen after machining is
resumed.  So, when the contents of memory are to be
modified by part program editing, be sure to enter the reset
state or reset the system upon completion of editing before
executing the program.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

496

A word can be searched for by merely moving the cursor through the text
(scanning), by word search, or by address search.

Procedure for scanning a program

1 Press the cursor key 

The cursor moves forward word by word on the screen; the cursor is
displayed at a selected word.  The cursor is positioned to the address
of the selected word.

2 Press the cursor key

The cursor moves backward word by word on the screen; the cursor is
displayed at a selected word.

Example)  When Z1250.0 is scanned

Program O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0
S12  ;
N5678  M03  ;
M02  ;
%

;

3 Holding down the cursor key  or  scans words

continuously.

4 Pressing the page key  displays the next page and searches for

the first word of the page.

5 Pressing the page key  displays the previous page and searches

for the first word of the page.

6 Holding down the page key  or  displays one page after

another.

9.1.1
Word Search

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

497

Procedure for searching a word

Example) of Searching for S12

PROGRAM O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0  ;
S12  ;
N5678  M03  ;
M02  ;
%

N1234 is being
searched for/
scanned currently.
S12 is searched for.

1 Key in addressS .

2 Key in 1 2 .

⋅ S12 cannot be searched for if only S1 is keyed in.
⋅ S09 cannot be searched for by keying in only S9.

To search for S09, be sure to key in S09.

3 Pressing the cursor key  starts search operation.

Upon completion of search operation, the cursor is displayed at “S” of

S12.  Pressing the cursor key  rather than the cursor  key

performs search operation in the reverse direction.

Procedure for searching an address

Example) of Searching for M03

PROGRAM O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0  ;
S12  ;
N5678  M03  ;
M02  ;
%

N1234 is being
searched for/
scanned currently.

M03 is searched for.

1 Key in address M .

2 Press the cursor key .

Upon completion of search operation, the cursor is displayed at “M”

of M03.  Pressing the  key rather than the  key performs

search operation in the reverse direction.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

498

Alarm number Description

71 The word or address being searched for was not found.

The cursor can be jumped to the top of a program.  This function is called
heading  the program pointer.  This section describes the two methods for
heading the program pointer.

Procedure for Heading a Program

1 Press RESET  when the program screen is selected in EDIT mode.

When the cursor has returned to the start of the program, the contents
of the program are displayed from its start on the screen.

1 Select AUTO or EDIT mode�

2 Press function PROG key and display the program.

3 Press the address key O .

4 Press the cursor key .

Alarm

9.1.2
Heading a Program

     Method 1

     Method 2

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

499

Procedure for inserting a word

1 Search for or scan the word immediately before a word to be inserted.

2 Key in an address to be inserted.

3 Key in data.

4 Press the INSRT  key.

Example of Inserting T15

1 Search for or scan Z1250.0.

Program O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0
S12  ;
N5678  M03  ;
M02  ;
%

;
Z1250.0 is
searched for/
scanned.

2 Key in T 1 5 �

3 Press theINSRT key.

Program O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0  T15  ;
S12  ;
N5678  M03  ;
M02  ;
%

T15 is inserted.

9.1.3
Inserting a Word

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

500

Procedure for altering a word

1 Search for or scan a word to be altered.

2 Key in an address to be inserted.

3 Key in data.

4 Press theALTER  key.

Example of changing T15 to M15

1 Search for or scan T15.

Program O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0  T15
S12  ;
N5678  M03  ;
M02  ;
%

;
T15 is searched
for/scanned.

2 Key in M 1 5  .

3 Press the ALTER key.

Program O0050  N1234
O0050  ;
N1234  X100.0  Z1250.0  M15  ;
S12  ;
N5678  M03  ;
M02  ;
%

T15 is changed to
M15.

9.1.4
Altering a Word

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

501

Procedure for deleting a word

1 Search for or scan a word to be deleted.

2 Press theDELET  key.

Example of deleting X100.0

1 Search for or scan X100.0.

Program O0050  N1234
O0050  ;
N1234  X100.0
S12  ;
N5678  M03  ;
M02  ;
%

X100.0 is
searched for/
scanned.

Z1250.0  M15  ;

2 Press theDELET  key.

Program O0050  N1234
O0050  ;
N1234  Z1250.0  M15  ;
S12  ;
N5678  M03  ;
M02  ;
%

X100.0 is deleted.

9.1.5
Deleting a Word

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

502

A block or blocks can be deleted in a program.

The procedure below deletes a block up to its EOB code; the cursor
advances to the address of the next word.

Procedure for deleting a block

1 Search for or scan address N for a block to be deleted.

2 Key in EOB .

3 Press the DELET  key.

Example of deleting a block of No.1234

1 Search for or scan N1234.

Program O0050  N1234
O0050  ;
N1234  Z1250.0  M15  ;
S12  ;
N5678  M03  ;
M02  ;
%

N1234 is
searched for/
scanned.

2 Key in EOB .

3 Press theDELET  key.

Program O0050  N1234
O0050  ;
S12  ;
N56789  M03  ;
M02  ;
%

Block containing
N1234 has been
deleted.

9.2
DELETING BLOCKS

9.2.1
Deleting a Block

���������

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

503

The blocks from the currently displayed word to the block with a specified
sequence number can be deleted.

Procedure for deleting multiple blocks

1 Search for or scan a word in the first block of a portion to be deleted.

2 Key in address N  .

3 Key in the sequence number for the last block of the portion to be
deleted.

4 Press the DELET  key.

Example of deleting blocks from a block containing N01234 to a block containing N56789

1 Search for or scan N1234.

Program O0050  N1234
O0050  ;
N1234  Z1250.0  M15  ;
S12  ;
N56789  M03  ;
M02  ;
%

N1234 is
searched for/
scanned.

2 Key in N 5 6 7 8 .

Program O0050  N1234
O0050  ;
N1234  Z1250.0  M15  ;
S12  ;
N5678  M03  ;
M02  ;
%

Underlined
part is de-
leted.

3 Press theDELET  key.

Program O0050  N1234
O0050  ;
M02  ;
%

Blocks from block
containing N1234
to block contain-
ing N5678 have
been deleted.

9.2.2
Deleting Multiple
Blocks

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

504

When memory holds multiple programs, a program can be searched for.
There are two methods as follows.

Procedure for program number search

1 Select EDIT or AUTO mode.

2 Press PRGRM key to display the program screen.

3 Key in addressO .

4 Key in a program number to be searched for.

5 Press the cursor key .

6 Upon completion of search operation, the program number searched
for is displayed in the upper–right corner of the CRT screen
If the program is not found , P/S alarm No. 71 occurs.

1 Select EDIT or AUTO mode.

2 Press PRGRM key to display the program screen.

3 Key in addressO .

4 Press the cursor key .

In this case, the next program in the directory is searched for .

No. Contents

59 The program with the selected number cannot be searched
during external program number search.

71 The specified program number was not found during 
program number search.

9.3
PROGRAM NUMBER
SEARCH

     Method 1

     Method 2

Alarm

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

505

Programs registered in memory can be deleted, either one program by one
program or all at once.  Also, More than one program can be deleted by
specifying a range.

A program registered in memory can be deleted.

Procedure for deleting one program

1 Select the EDIT mode.

2 Press PRGRM to display the program screen.

3 Key in addressO .

4 Key in a desired program number.

5 Press the DELET  key.

The program with the entered program number is deleted.

All programs registered in memory can be deleted.

Procedure for deleting all programs

1 Select the EDIT mode.

2 Press PRGRM  to display the program screen.

3 Key in address O .

4 Key in –9999.

5 Press edit key DELET  to delete all programs.

9.4
DELETING
PROGRAMS

9.4.1
Deleting One Program

���������

9.4.2
Deleting All Programs

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

506

Programs within a specified range in memory are deleted.

Procedure for deleting more than one program by specifying a range

1 Select the EDIT mode.

2 Press PRGRM key to display the program screen.

3 Enter the range of program numbers to be deleted with address and
numeric keys in the following format:
OXXXX,OYYYY
where XXXX is the starting number of the programs to be deleted and
YYYY is the ending number of the programs to be deleted.

4 Press edit key DELET  to delete programs No. XXXX to No. YYYY.

This operation is possible only when the full MDI key panel is being used.

9.4.3
Deleting More Than
One Program by
Specifying a Range

Limitations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

507

With the extended part program editing function, the operations described
below can be performed using soft keys for programs that have been
registered in memory.
Following editing operations are available :

� All or part of a program can be copied or moved to another program.

� One program can be merged at free position into other programs.

� A specified word or address in a program can be replaced with another
word or address.

9.5
EXTENDED PART
PROGRAM EDITING
FUNCTION

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

508

A new program can be created by copying a program.

A

Oxxxx

A

Oxxxx

After copy

A

Oyyyy

Copy

Before copy

Fig. 9.5.1  Copying an entire program

In Fig. 9.5.1 , the program with program number xxxx is copied to a newly
created program with program number yyyy. The program created by
copy operation is the same as the original program except the program
number.

Procedure of copying an entire program

1 Enter the EDIT mode.

2 Press function PRGRM key to display the program screen .

3 Press the continuous menu key .

4 Press soft key [EX–EDT] .

5 Check that the screen for the program to be copied is selected 
and press soft key [COPY] .

6 Press soft key [ALL] .

7 Enter the number of the new program (with only numeric keys ) and

press theINPUT  key.

8 Press soft key [EXEC] .

9.5.1
Copying an Entire
Program

Continuous
menu key 

0 9Numeric keys to

(EX–EDT)

COPY

ALL

EXEC ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

509

A new program can be created by copying part of a program.

B

Oxxxx Oxxxx

After copy

B

Oyyyy

Copy

Before copy

A

C

B

A

C

Fig. 9.5.2  Copying part of a program

In Fig. 9.5.2 , part B of the program with program number xxxx is copied
to a newly created program with program number yyyy.  The program
which No.is xxxx remains unchanged after copy operation.

Procedure for copying part of a program

1 Perform steps 1 to 5 in subsection 9.5.1.

2 Move the cursor to the start of the range to be copied and press soft key
[CRSR�].

3 Move the cursor to the end of the range to be copied and press soft key
[�CRSR] or [�BTTM]  (in the latter case, the range to the end of the
program is copied regardless of the position of the cursor).

4 Enter the number of the new program (with only numeric keys) and

press the INPUT key.

5 Press soft key [EXEC] .

9.5.2
Copying Part of a
Program

CRSR�

0 9to

�CRSR

EXEC

Numeric keys

�BTTM

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

510

A new program can be created by moving part of a program.

B

Oxxxx Oxxxx

After copy

B

Oyyyy

Copy

Before copy

A

C

A

C

Fig. 9.5.3  Moving part of a program

In Fig. 9.5.3 , part B of the program with program number xxxx is moved
to a newly created program with program number yyyy; part B is deleted
from the program with program number xxxx.

Procedure for moving part of a program

1 Perform steps 1 to 4 in subsection 9.5.1.

2 Check that the screen for the program to be moved is selected and
press soft key [MOVE] .

3 Move the cursor to the start of the range to be moved and press soft
key [CRSR�].

4 Move the cursor to the end of the range to be moved and press soft key
[�CRSR] or [�BTTM]  (in the latter case, the range to the end of the
program is copied regardless of the position of the cursor).

5 Enter the number of the new program (with only numeric keys) and

press the INPUT  key.

6 Press soft key [EXEC] .

9.5.3
Moving Part of a
Program

CRSR�

EXEC

0 9Numeric keys to

�CRSR �BTTM

MOVE

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

511

Another program can be inserted at an arbitrary position in the current
program.

Oxxxx

Before merge

B

Oyyyy

MergeA

Oxxxx

After merge

B

Oyyyy

B

A

C

C

Merge
location

Fig. 9.5.4  Merging a program at a specified location

In Fig. 9.5.4 , the program with program number XXXX is merged with
the program with program number YYYY.  The OYYYY program
remains unchanged after merge operation.

Procedure for merging a program

1 Perform steps 1 to 4 in subsection 9.5.1.

2 Check that the screen for the program to be edited is selected and press
soft key [MERGE] .

3 Move the cursor to the position at which another program is to be
inserted and press soft key [�’CRSR]  or [�BTTM’]  (in the latter
case, the end of the current program is displayed).

4 Enter the number of the program to be inserted (with only numeric

keys) and press the INPUT  key.

5 Press soft key [EXEC] .
The program with the number specified in step 4 is inserted before the
cursor positioned in step 3.

9.5.4
Merging a Program

EXEC

0 9to

�’CRSR�BTTM’

MERGE

Numeric keys

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

512

The setting of an editing range start point with [CRSR�] can be changed
freely until an editing range end point is set with [�CRSR] or [�BTTM] .
If an editing range start point is set after an editing range end point, the
end point must be reset.
The setting of an editing range start point and end point remains valid until
an operation is performed to invalidate the setting.
One of the following operations invalidates a setting:

� An edit operation other than address search, word search/scan, and
search for the start of a program is performed after a start point or end
point is set.

� Processing is returned to operation selection after a start point or end
point is set.

In copying program and moving program, if [EXEC]  is pressed without
specifying a program number after an editing range end point is set, a
program with program number O0000 is registered as a work program.
This O0000 program has the following features:

� The program can be edited in the same way as a general program.  (Do
not run the program.)

� If a copy or move operation is newly performed, the previous
information is deleted at execution time, and newly set information
(all or part of the program) is reregistered.  (In merge operation, the
previous information is not deleted.)

� When the program becomes unnecessary, delete the program by a 
normal editing operation.

When the system is waiting for a program number to be entered,
no edit operation can be performed.

If a program number is specified by 5 or more digits, a format error is
generated.

Alarm no. Contents

70 Memory became insufficient while copying or inserting a pro-
gram. Copy or insertion is terminated.

101 The power was interrupted during copying, moving, or insert-
ing a program and memory used for editing must be cleared.

9.5.5
Supplementary
Explanation for
Copying, Moving and
Merging

Explanations

� Setting an editing range

� Without specifying a
program number

� Editing when the system
waiting for a program
number to be entered

Restrictions

� Number of digits for
program number

Alarmww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

513

Replace one or more specified words.
Replacement can be applied to all occurrences or just one occurrence of
specified words or addresses in the program.

Procedure for hange of words or addresses

1 Perform steps 1 to 4 in subsection 9.5.1.

2 Press soft key [CHANGE] .

3 Enter the word or address to be replaced.

4 Press soft key [BEFORE] .

5 Enter the new word or address.

6 Press soft key [AFTER] .

7 Press soft key [EXEC]  to replace all the specified words or addresses
after the cursor.
Press soft key [1–EXEC]  to search for and replace the first occurrence
of the specified word or adress after the cursor.
Press soft key [SKIP]  to only search for the first occurrence of the
specified word or address after the cursor.

9.5.6
Replacement of Words
and Addresses

EXEC

BEFORE

CHANGE

AFTER

1–EXEC SKIP

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

514

[CHANGE] X 1 0 0 [BEFORE] Y 2 0 0
[AFTER][EXEC]

[CHANGE] X 1 0 0 Y 2 0 0

[BEFORE] X 3 0 [AFTER][EXEC]

[CHANGE] I F [BEFORE] W H I L E

[AFTER] [EXEC]

[CHANGE] X [BEFOR] , C 1 0 [AFTER][EXEC]

The following custom macro B words are replaceable:
IF, WHILE, GOTO, END, DO, BPRNT, DPRINT, POPEN, PCLOS
The abbreviations of custom macro B words can be specified.
When abbreviations are used, however, the screen displays the
abbreviations as they are key input, even after soft key [BEFORE]  and
[AFTER]  are pressed.

Up to 15 characters can be specified for words before or after replacement.
(Sixteen or more characters cannot be specified.)

Words before or after replacement must start with a character representing
an address.(A format error occurs.)

Explanations

� Replace X100 with Y200

� Replace X100Y200 with
X30

� Replace IF with WHILE

� Replace X with ,C10

Explanations

� Replacing custom
macros

Restrictions

� The number of
characters for
replacement

� The characters for
replacement

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

515

Unlike ordinary programs, custom macro B programs are modified,
inserted, or deleted based on editing units.
Custom macro words can be entered in abbreviated form.
Comments can be entered in a program.
Refer to the section 10.1 for the comments of a program.

When editing a custom macro B already entered, the user can move the
cursor to each editing unit that starts with any of the following characters
and symbols:

(a) Address

(b)# located at the start of the left side of a substitution statement

(c) /, (,=, and ;

(d)First character of IF, WHILE, GOTO, END, DO, POPEN, BPRNT,
DPRNT and PCLOS

On the CRT screen, a blank is placed before each of the above characters
and symbols.  
(Example) Head positions where the cursor is placed

N001 X–#100 ;
#1 =123 ;
N002 /2 X[12/#3] ;
N003 X–SQRT[#3/3*[#4+1]] ;
N004 X–#2 Z#1 ;
N005 #5 =1+2–#10 ;
IF[#1NE0] GOTO10 ;
WHILE[#2LE5] DO1 ;
#[200+#2] =#2*10 ;
#2 =#2+1 ;
END1 ;

When a custom macro B word is altered or inserted, the first two
characters or more can replace the entire word.
Namely,

WHILE → WH or WD GOTO  → GO XOR → XO AND → AN
SIN → SI COS → CO TAN → TA ATAN  → AT 
SQRT → SQ ABS  → AB BCD  → BC BIN  → BI
FIX → FI FUP → FU ROUND → RO END → EN
POPEN → PO BPRNT → BP DPRNT → DP PCLOS→PC
(Example) Keying in

WH [AB [#2 ] LE RO [#3 ] ] 
has the same effect as
WHILE  [ABS  [#2 ] LE ROUND [#3 ] ]

The program is also displayed in this way.

9.6
EDITING OF CUSTOM
MACRO B

Explanations

� Editing unit

� Abbreviations of custom
macro B word

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

516

Editing a program while executing another program is called background
editing. The method of editing is the same as for ordinary editing
(foreground editing).
During background editing, all programs cannot be deleted at once.

Procedure for background editing

1 Press function PRGRM key to display the program screen.

2 Press the rightmost soft key (continuous menu key), then press soft
key [BG–EDT] .
The background editing screen is displayed (PROGRAM (BG–EDIT)
is displayed at the top left of the screen).

3 Edit a program on the background editing screen in the same way as
for ordinary program editing.

4 After editing is completed, press soft key [BG–END] .

Alarms that may occur during background editing do not affect
foreground operation.  Conversely, alarms that may occur during
foreground operation do not affect background editing.  In background
editing, if an attempt is made to edit a program selected for foreground
operation, a BP/S alarm (No. 140) is raised.  On the other hand, if an
attempt is made to select a program subjected to background editing
during foreground operation (by means of subprogram calling or program
number search operation  using an external signal), a P/S alarm (Nos. 059,
078) is raised in foreground operation.  As with foreground program
editing, P/S alarms occur in background editing.  However, to distinguish
these alarms from foreground alarms, BP/S is displayed in the data input
line on the background editing screen.

9.7
BACKGROUND
EDITING

Explanations

� Alarms during
background editing

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 9. EDITING PROGRAMSOPERATION

517

NOTE
1 If the available part program storage is 80 m or less, free

space in memory is used for background editing.  A program
to be subjected to background editing is copied into the free
area in memory, then the original program is deleted.
Subsequently, editing starts.  Background editing can be
executed if the part program storage has sufficient free area
to which the target program can be copied and if program
registration is allowed in terms of number.  If background
editing is repeated, the number of deleted areas will
increase.  To use these deleted areas efficiently, memory
must be reorganized.

2 If the available part program storage is 120 m or more,
background editing can be executed while leaving the
registered programs as is.  Such editing may create an
unused area in memory.  The unused area can be deleted
by reorganizing the memory however.

3 If the reset key is pressed to abandon program input or
output in background editing, the machining in the
foreground will also be halted.  To input or output a program
in the background, therefore, use the soft keys.  To halt the
input or output, press the [STOP]  soft key.

4 If a reset by M02/M30 of the machining program in the
foreground is executed during program input or output in
background editing, program input or output is halted.
Program input or output can be prevented from being halted
by the reset in the foreground if bit 2 of parameter 076 is
specified accordingly.

5 In background editing, program input or output by the
external activation signal (MINP) or input/output unit
external control is inhibited.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/089. EDITING PROGRAMS

518

If the available part program storage is 120 m or more, or if the
background editing function is supported, repeated program editing will
create many small, unused areas in memory.  Reorganizing memory
arranges these unused areas into a single, contiguous area that can be used
by programs.

Procedure for Reorganiging Memory

Press the emergency stop, external reset, or reset key.  The procedure
for reorganizing memory is automatically started.

1 Select EDIT mode.

2 Press the PRGRM key to display the program.

3 Press the [LIB]  soft key.

4 Press the [REORGANIZE]  soft key.

NOTE
1 One memory is reorganized, the system searches for the

beginning of the selected program and the cursor is
returned to that point.

2 If the power is turned off during the memory reorganization,
alarm 101 occurs when the power is subsequently turned
on.  Before turning the power off after resetting an alarm,
first check whether memory reorganization has been
completed.  While memory reorganization is being
performed, EDIT blinks at the bottom right corner of the
screen.

3 As described in procedure 1, above, the memory
reorganization procedure is automatically started when a
reset is performed.  Memory reorganization can be
prevented from being started by a reset if bit 0 of parameter
056 is specified accordingly.

4 Memory reorganization cannot be executed during
background editing.

9.8
REORGANIZING
MEMORY

Procedure 1
(reset key)

Procedure 2
(soft key)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

519

10 CREATING PROGRAMS
Programs can be created using any of the following methods:

⋅ MDI keyboard
⋅ PROGRAMMING IN TEACH IN MODE
⋅ CONVERSATIONAL PROGRAMMING INPUT WITH GRAPHIC

FUNCTION

⋅ MENU PROGRAMMING FUNCTION
⋅ CONVERSATIONAL AUTOMATIC PROGRAMMING FUNCTION
⋅ AUTOMATIC PROGRAM PREPARATION DEVICE (FANUC

SYSTEM P)

This chapter describes creating programs using the MDI panel, TEACH
IN mode, menu programming function, and conversational  programming
with graphic function.  This chapter also describes the automatic insertion
of sequence numbers.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0810. CREATING PROGRAMS

520

Programs can be created in the EDIT mode using the program editing
functions described in Chapter 9.

Procedure for Creating Programs Using the MDI Panel

1 Enter the EDIT mode.

2 Press the PRGRM key.

3 Press address key O and enter the program number.

4 Press the INSRT key.

5 Create a program using the program editing functions described in
Chapter 9.

For the full key type MDI panel, comments can be written in a program
using the control in/out codes.

Example)O0001 (FANUC SERIES 0) ;
M08  (COOLANT ON) ;

� When the INSRT  key is pressed after the control–out code “(”,

comments, and control–in code “)” have been typed, the typed
comments are registered.

� When the INSRT  key is pressed midway through comments, to enter

the rest of comments later, the data typed before theINSRT key is

pressed may not be correctly registered (not entered, modified, or lost)
because the data is subject to an entry check which is performed in
normal editing.

Note the following to enter a comment:

� Control–in code “)” cannot be registered by itself.

� Comments entered after the INSRT  key is pressed must not begin with

a number, space, or address O.

� If an abbreviation for a macro is entered, the abbreviation is converted
into a macro word and registered (see Section 9.6).

� Address O and subsequent numbers, or a space can be entered but are
omitted when registered.

10.1
CREATING
PROGRAMS USING
THE MDI PANEL

���������

Explanations

� Comments in a program

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

521

Sequence numbers can be automatically inserted in each block when a
program is created using the MDI keys in the EDIT mode.
Set the increment for sequence numbers in parameter 550.

Procedure for automatic insertion of sequence numbers

1 Set 1 for SEQUENCE (see subsection 11.5.3).

2 Enter the EDIT mode.

3 Press PRGRM to display the program screen.

4 Search for or register the number of a program to be edited and move
the cursor to the EOB (;) of the block after which automatic insertion
of sequence numbers is started.
When a program number is registered and an EOB (;) is entered with

the INSRT key, sequence numbers are automatically inserted starting

with 0.  Change the initial value, if required, according to step 10, then
skip to step 7.

5 Press address key N and enter the initial value of N.

6 Press INSRT key.

7 Enter each word of a block.

8 Press EOB  key.

10.2
AUTOMATIC
INSERTION OF
SEQUENCE
NUMBERS

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0810. CREATING PROGRAMS

522

9 Press INSRT key.  The EOB is registered in memory and sequence

numbers are automatically inserted.  For example, if the initial value
of N is 10 and the parameter for the increment is set to 2, N12 inserted
and displayed below the line where a new block is specified.

19:42:18 EDIT

PROGRAM O0040 N0012

O0040 ;
N10 G92 X0 Y0 Z0 ;
N12
%

( S 0  T

[ PRGRM ][  LIB  ][FLOPPY][      ][ C.A.P. ]

10 ⋅ In the example above, if N12 is not necessary in the next block,

pressing the DELET  key after N12 is displayed deletes N12.

⋅ To insert N100 in the next block instead of N12, enter N100 and

press ALTER after N12 is displayed.  N100 is registered and initial

value is changed to 100.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

523

When the playback option is selected, the TEACH IN JOG  mode and
TEACH IN HANDLE  mode are added.  In these modes, a machine position
along the X, Y, and Z axes obtained by manual operation is stored in
memory as a program position to create a program.
The words other than X, Y, and Z, which include O, N, G, R, F, C, M, S,
T, P, Q, and EOB, can be stored in memory in the same way as in EDIT
mode.

Procedure for Creating Programs in TEACH IN Mode

The procedure described below can be used to store a machine position
along the X, Y, and Z axes.

1 Select the TEACH IN JOG  mode or TEACH IN HANDLE  mode.

2 Move the tool to the desired position with jog or handle.

3 Press PRGRM  key to display the program screen.  Search for or register

the number of a program to be edited and move the cursor to the
position where the machine position along each axis is to be
registered (inserted).

4 Key in address X .

5 Press the INSRT  key.  Then a machine position along the X axis is

stored in memory.
(Example) X10.521 Machine positon (for mm input)

X10521 Data stored in memory

6 Similarly, key in Y , then press the INSRT key.  Then a machine

position along the Y axis is stored in memory.  Further, key in Z ,

then press the INSRT  key.  Then a machine position along the Z axis is

stored in memory.

The coordinates registered in this way are coordinates without a
decimal point.  If the calculator–type decimal point input is selected,
the decimal point is added to the coordinates.

10.3
CREATING
PROGRAMS IN
TEACH IN MODE

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0810. CREATING PROGRAMS

524

Procedure example for creating the program in TEACH IN MODE

O1234 ;
N1 G92 X10000 Y0 Z10000 ;
N2 G00 G90 X3025 Y23723 ;
N3 G01 Z–325 F300 ;
N4 M02 ;

X

Z

Y

P0

(10.000, 0, 10.000)

P1

P2

(3.025, 23.723, 10.000)

(3.025, 23.723, –0.325)

1 Set the setting data SEQUENCE NO. to 1 (on).  (The incremental
value parameter (No. 550) is assumed to be “1”.)

2 Select the TEACH IN HANDLE  mode.

3 Make positioning at position P0 by the manual pulse generator.

4 Select the program screen.

5 Enter program number O1234 as follows:

 O 1 2 3 4 INSRT

This operation registers program number O1234 in memory.
Next, press the following keys:

 EOB  INSRT

An EOB (;) is entered after program number O1234.  Because no
number is specified after N, sequence numbers are automatically
inserted for N0 and the first block (N1) is registered in memory.

6 Enter the P0 machine position for data of the first block as follows:

 G 9 2 INSRT X INSRT Y INSRT Z

 INSRT EOB INSRT

This operation registers G92X10000Y0Z10000; in memory.  The
automatic sequence number insertion function registers N2 of the
second block in memory.

7 Position the tool at P1 with the manual pulse generator.

8 Enter the P1 machine position for data of the second block as follows:

 G 0 0 INSRT G 9 0 X INSRT Y

 INSRT EOB INSRT

This operation registers G00G90X3025Z23723; in memory.  The
automatic sequence number insertion function registers N3 of the
third block in memory.

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

525

9 Position the tool at P2 with the manual pulse generator.

10 Enter the P2 machine position for data of the third block as follows:

 G 0 1 INSRT Z INSRT F 3 0 0

 INSRT EOB INSRT

This operation registers G01Z –325 F300; in memory.  
The automatic sequence number insertion function registers N4 of the
fourth block in memory.

11 Register M02; in memory as follows:

 M 0 2 INSRT EOB INSRT

N5 indicating the fifth block is stored in memory using the automatic

sequence number insertion function.  Press the DELET  key to delete it.

This completes the registration of the sample program.

The contents of memory can be checked in the TEACH IN mode by using
the same procedure as in EDIT mode.

PROGRAM O1234 N0004

(RELATIVE) (ABSOLUTE)
X    0.000 X    0.000
Y    0.000 Y    0.000
Z    0.000 Z    0.000

O1234  ;
N1 G92 X10000 Y0 Z10000 ;
N2 G00 G90 X3025 Y23723 ;
N3 G01 Z–325 F300 ;
N4 M02 
%

ADRS. S 0  T
19:44:29 THND

[ PRGRM ][  LIB  ][      ][      ][      ]

When a value is keyed in after keying in address X , Y , or Z ,

then the INSRT key is pressed, the value keyed in for a machine position

is added for registration.  This operation is useful to correct a machine
position by key–in operation.

Commands to be entered before and after a machine position must be
entered before and after the machine position is registered, by using the
same operation as program editing in EDIT mode.

Explanations

� Checking contents of the
memory

� Registering a position
with compensation

� Registering commands
other than position
commands

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0810. CREATING PROGRAMS

526

When a program is created in EDIT mode, the G code menu is displayed
on the screen.

Procedure for Menu Programming

1 Select EDIT mode then press the PRGRM  function key.  The program

screen is displayed.

2 Press the address key G .  The G code menu is displayed in the

lower half of the screen.For example, if G is keyed in after inserting
N30, the following G code menu is displayed:

PROGRAM O0100 N0030

O0100 ;
N10 G92 X0 Y0 Z0 ;
N20 G00 G10. Y–50. ;
N30 ;
%

10:37:37 EDIT

G00 : POSITIONING
G01 : LINEAR IPL.
G02 : CIRCULAR IPL. CW
G03 : CIRCULAR IPL. CCW
G04 : DWELL
G <

S 0  T

[PRGRM ][  LIB  ][FLOPPY][     ][ C.A.P. ]

3 The G dode menu after G05 can be sequentially indicated by pushing
the page key.

10.4
MENU
PROGRAMMING

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

527

4 When a G code selected from the menu is input, The standard format
of the one block corresponding to the G code is indicated.  
For example, when selecting G01, key in 0 and 1, and then press

INSRT  key.  G01 is inserted to the memory as shown below, and the

standard format of the G01 block is indicated on the screen.

PROGRAM O0100 N0030

O0100 ;
N10 G92 X0 Y0 Z0 ;
N20 G00 X10. Y–50. ;
N30 G01;
%

10:38:27 EDIT

G01  X(Z,Y) ––– Y(X,Z) ––– F–––
M––– S––– T–––

< S 0  T

[PRGRM ][  LIB  ][FLOPPY][     ][ C.A.P. ]

5 Observing this format, enter an address and numeric value, then press

the INSRT key.  Repeat this step as many times as necessary to insert a

block.  If the following is keyed in, for example:

X 2 0 0 INSRT Y – 6 0 INSRT

F 5 0 0 INSRT T 1 2 EOB INSRT

the following screen is displayed:

PROGRAM O0100 N0040

O0100 ;
N10 G92 X0 Y0 Z0 ;
N20 G00 X10. Y–50. ;
N30 G01 X200. Y–60. F500 T12 ;
N40
%

10:39:27 EDIT
< S 0  T

[PRGRM ][  LIB  ][FLOPPY][     ][ C.A.P. ]
ww

w.
cn

cc
en

ter
.co

m



OPERATION B–61404E/0810. CREATING PROGRAMS

528

Programs can be created block after block on the conversational screen
while displaying the G code menu.
Blocks in a program can be modified, inserted, or deleted using the G code
menu and conversational screen.

Procedure for Conversational Programming with Graphic Function � Creating a block  �

1 Enter the EDIT mode.

2 Press PRGRM key.  If no program is registered, the following screen is

displayed.  If a program is registered, the program currently selected
is displayed.

PROGRAM O0000 N0000

11:59:46 EDIT
< S 0  T

[PRGRM ][  LIB  ][FLOPPY][     ][ C.A.P. ]

3 Key in the program number of a program to be registered after keying

in address O, then press INSRT .  For example, when a program with

program number 10 is to be registered, key in O 1 0 , then

press INSRT .  This registers a new program O0010.

10.5
CONVERSATIONAL
PROGRAMMING
WITH GRAPHIC
FUNCTION

Procedure 1

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

529

4 Press the [C.A.P] soft key. The following G code menu is displayed
on the screen.
If soft keys different from those shown in step 2 are displayed, press
the menu return key  to display the correct soft keys.

PROGRAM O0010 N0000

G00 : POSITIONING
G01 : LINEAR IPL
G02 : CIRCULAR IPL. CW
G03 : CIRCULAR IPL. CCW
G04 : DWELL
G09 : EXACT STOP CHECK
G10 : OFFSET&TLC VALUE SETTING (0)
G17 : XY PLANE
G18 : ZX PLANE
G19 : YZ PLANE
G20 : INCH
G21 : METRIC
ADRS.
14:26:15 EDIT

[  MENU  ][      ][      ][      ][      ]

5 Key in the G code corresponding to a function to be programmed.
When the positioning function is desired, for example, the G code
menu lists the function with the G code G00.  So key in G00.  If the
screen does not indicate a function to be programmed, press the page

key  to display the next G code menu screen.  Repeat this

operation until a desired function appears.  If a desired function is not
a G code, key in no data.

6 Press the soft key [MENU] to display a detailed screen for a keyed in G
code.  The figure below shows an example of detailed screen for G00.

PROGRAM
G00 : POSITIONING

O0010 N0000

G00 G G G
X Y
Z (X, Y, Z, )
H OFFSET NO.
M
S
T
B
 :

01:26:55 EDIT

[  MENU  ][      ][      ][      ][      ]
ww

w.
cn

cc
en

ter
.co

m



OPERATION B–61404E/0810. CREATING PROGRAMS

530

When no keys are pressed, the standard details screen is displayed.

O0010  N0000PROGRAM

G G G G
X Y
Z
H F
R M
S T
B I
J K
P Q
L
:

EDIT01:28:46

[ G.MENU  ][      ][      ][      ][      ]

7 Move the cursor to the block to be modified on the program screen.

8 Enter numeric data by pressing the numeric keys and press the

[INPUT]  soft key or INPUT  key.  This completes the input of one data

item.

9 Repeat this operation until all data required for the entered G code is
entered.

10 Press the INSRT  key.  This completes the registration of data of one

block in program memory.  On the screen, the G code menu screen is
displayed, allowing the user to enter data for another block.  Repeat
the procedure starting with 5 as required.

11 After registering all programs, press the leftmost soft key  (the

menu return key).  The registered programs are converted to the
converssational format and displayed.

12 Press the RESET  key to return to the program head.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 10. CREATING PROGRAMSOPERATION

531

Procedure for conversational programming with graphic function � Modifying a block  �

1 Move the cursor to the block to be modified on the program screen
and press the [C.A.P]  soft key.  Or, press the [C.A.P]  soft key first to

display the conversational screen, then press the  or  page

key until the block to be modified is displayed.

2 When data other than a G code is to be altered, just move the cursor to

the data and key in a desired value, then press INPUT  key.

3 When a G code is to be altered, press the menu return key  and the
soft key [G.MENU] .  Then the G code menu appears.  Select a desired
G code, then key in the value.  For example, to specify a cutting feed,
since the G code menu indicates G01, key in G01.  Then press the soft
key [MENU] .  The detailed screen of the G code is displayed, so enter
the data.

4 After data is changed completely, press the ALTER  key.  This operation

replaces an entire block of a program.

Procedure for conversational programming with graphic function � Inserting a block  �

1 On the conversational screen, display the block immediately before a
new block is to be inserted, by using the page keys.  On the program
screen, move the cursor with the page keys and cursor keys to
immediately before the point where a new block is to be inserted.

2 Press the soft key [G.MENU]  to display the G code menu.  Then enter
new block data.

3 When input of one block of data is completed in step 2, press the

INSRT  key.  This operation inserts a block of data.

Procedure for conversational programming with graphic function � Inserting a block  �

1 On the conversational screen, display the contents of a block to be

deleted, then press the DELET  key.

2 The contents of the block displayed are deleted from program
memory.  Then the contents of the next block are displayed on the
conversational screen.

Procedure

Procedure

Procedureww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

532

11 SETTING AND DISPLAYING DATA
To operate a CNC machine tool, various data must be set on the CRT/MDI
panel.  The operator can monitor the state of operation with data displayed
during operation.
This chapter describes how to display and set data for each function.
This chapter describes the procedure, assuming that the soft keys are used
to select a desired chapter.  If the soft keys are not supported, press the key
having the equivalent function two or more times to select the desired
chapter.

The screen transition for when each function key on the MDI panel is
pressed is shown below.  The subsections referenced for each screen are
also shown.  See the appropriate subsection for details of each screen and
the setting procedure on the screen.  See other chapters for screens not
described in this chapter. 

See Chapter 12 for the screen that appears when function key AUXGRAPH  is

pressed.  

The machine may have a data protection key to protect part programs.
Refer to the manual issued by the machine tool builder for where the data
protection key is located and how to use it.

General

Explanations

� Screen transition chart

MDI function keys
(Shaded keys (       ) are described
in this chapter.)

PRGRMPOS MENU
OFSET

DGNOS

PARAM

OPR

ALARM

AUX

GRAPH

� Data protection key

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

533

POS

Screen transition triggered by the function key POSPOSITION DISPLAY SCREEN

Current position screen

Position display of
work coordinate
system
�See subsec. 11.1.1.

Display of run time
and parts count
�See subsec. 11.1.5.

Display of actual
speed
�See subsec. 11.1.4.

Position displays
relative coordinate
system
�See subsec. 11.1.2.

Total position display
of each coordinate
system
�See subsec.11.1.3.

Manual handle in-
terruption
�See sec. 4.7.

ABS REL ALL HNDL

Display of actual
speed
�See subsec. 11.1.4.

Display of actual
speed
�See subsec. 11.1.4.

Setting of relative
coordinate values
�See subsec. 11.1.2.

Display of 
distance to go
�See subsec. 11.1.3.

Display of actual
speed
�See subsec. 11.1.4.

Display of run time
and parts count
�See subsec. 11.1.5.

Display of run time
and parts count
�See subsec. 11.1.5.

Display of run time
and parts count
�See subsec. 11.1.5.

Current position screen

MONI

Display of op-
erating monitor
�See 11.1.6

(This screen is displayed when the parameter (No. 0060#5) is set)ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

534

Screen transition triggered by the function key
in the AUTO or MDI mode

Program screen

Display of pro-
gram contents
�See subsec. 11.2.1.

Display of current
block and modal
data
�See subsec. 11.2.2.

PRGRM CHECKCURRNT NEXT

PRGRM

PROGRAM SCREEN

AUTO  (MDI)*

Display of current
block and next
block
�See subsec. 11.2.3.

Program being executed
Absolute / relative 
coordinate value
Distance to go
modal values
�See subsec. 11.2.4.

Display of program
number and se-
quence number
�See subsec. 11.7.1.

FL.SDL

Command 
for MDI operation
�See subsec. 11.2.5.

[SCHDUL]

Setting of
schedule
�See sec. 4.5.

Program screen

PRGRM

(MDI)*
RSTR

Program restart
�See subsec. 4.4.

*

*

**

AUTO

BG–EDT
**

Back ground
editing screen
�See sec. 9.7.

Displayed in MDI mode

Not displayed in MDI mode

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

535

Program editing
screen
�See chapter 10

Program memory
and program direc-
tory
�See subsec. 11.3.1.

PRGRM LIB C.A.P.

EDIT

Conversational 
programming 
screen
�See chapter 10.5

EDIT

Back ground edit-
ing screen
�See sec. 9.7.

Program screen

PROGRAM SCREEN Screen transition triggered by the function key
in the EDIT mode

Program screen

PRGRM

PRGRM

FLOPPY
I/O

Program memory
and program direc-
tory
�See subsec. 11.3.1.

BG–EDT EX–EDT

Extended part pro-
gram editing
�See sec. 9.5.

*

*

**

*

**

Displayed if the floppy disk directory display option is supported and if the Floppy Cas-
sette is specified as the input/output unit

Displayed if the above conditions are not satisfied

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

536

Setting workpiece origin 
offset value
�See subsec. 11.4.3.

Setting of the work-
piece origin offset
value
�See subsec. 11.4.3.

Tool offset value

Display of tool off-
set value
�See subsec. 11.4.1.

OFFSET

Screen transition triggered by the function keyOFFSET SCREEN

Display of 
custom macro 
variables
�See subsec. 11.4.4.

Setting of tool off-
set data
�See subsec. 11.4.1.

Display of pattern
data
�See subsec. 11.4.5.

Tool length
measurement
�See subsec. 11.4.2.

�See subsec.
  11.4.3.

Tool offset value

Display of pattern
menu
�See subsec. 11.4.5.

MENU
OFSET

MENU

OFSET

MACRO MENU TOOLLFWORK

Display of work-
piece coordinate
system
�See subsec. 11.4.3.

Display of tool life
management data
�See subsec. 11.4.6.

Setting of macro
variables
�See subsec. 11.4.4.

Preset of tool life
counter
�See subsec. 11.4.6.

WORK48

Displaying the 
additional workpiece
coordinate systems 
(48 systems)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

537

Setting of pitch 
error compensation
data
�see Subsec.11.5.2

Parameter screen

PARAM DGNOS

PARAMETER/DIAGNOSTIC SCREEN

Display of param-
eter screen
�see Subsec.11.5.1

Setting of parameter
�see Subsec.11.5.1

Display of diag-
nosis screen
�See Sec. 7.2

Screen transition triggered by the function
key DGNOS

PARAM

DGNOS

PARAM

SV–PRM

Display of diag-
nosis screen
�See chapter 7

�see Subsec. 11.5.3

*

Display of diag-
nosis screen
�See chapter 7

Display of setting
data

Setting of setting 
data

�see Subsec. 11.5.3

* The servo setting/adjustment screen can be suppressed if bit 0
of parameter 0389 is specified accordingly.

Setting of Sequence
Number Comparison
and Stop
�see Subsec. 11.5.4

Setting of parts count
�see Subsec. 11.5.5

Display of Run 
time, Parts count

�see Subsec. 11.5.5

�see Subsec. 11.5.5

Display of time 
and setting

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

538

OPR
ALARM

OPR

Display of alarm
screen
� see sec. 7.1 � see Subsec. 

    11.6.2

ALARM

Display of software
operator’s panel

ALARM SCREEN Screen transition triggered by the function key

Alarm screen

ALARM OPR MSG

Display of opera-
tor’s message

� see Subsec. 
    11.6.1

� see Subsec. 11.6.2

Setting of software 
operator’s panel
switch

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

539

The table below lists the data set on each screen.

Table 11  Setting screen and data on them

No. Setting screen Contents of setting Reference
item

1 Tool offset value Tool offset value
Tool length offset value
Cutter compensation value

Subsec. 11.4.1

Tool length measurement Subsec. 11.4.2

2 Setting data (handy) Parameter write
TV check
Punch code
Input unit (mm/inch)
I/O channel
Automatic insert of Sequence No.
Conversion of tape format
Incremental/absolute MDI travel dis-
tance

Subsec. 11.5.3

Sequence number comparison and
stop

Subsec. 11.5.4

Mirror image Subsec. 11.5.3

Parts required Subsec. 11.5.5

3 Macro variables Custom macro common variables
(#100 to #149) or (#100 to #199)
(#500 to #531) or (#500 to #599)

Subsec. 11.4.4

4 Parameter Parameter Subsec. 11.5.1

Pitch error compensation data Subsec. 11.5.2

5 software operator’s panel Mode selection
Jog feed axis selection
Jog rapid traverse
Axis selection for Manual pulse
generator
Multiplication for manual pulse
generator
Jog feedrate
Feedrate override
Rapid traverse override
Optional block skip
Single block
Machine lock
Dry run
Protect key
Feed hold

Subsec. 11.6.2

6 Tool life data
(Tool life management)

Life count Subsec. 11.4.6

7 Work coordinate system
setting

Work origin offset value Subsec. 11.4.3

� Setting screens

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

540

Press function key POS  to display the current position of the tool.

The following three screens are used to display the current position of the
tool:

� Position display screen for the work coordinate system.

� Position display screen for the relative coordinate system.

� Overall position display screen.

The above screens can also display the feedrate, run time, and the number
of parts.

Function key POS  can also be used to display the screen for displaying

the distance moved by handle interruption.  See Section 4.7 for details on
this screen.

11.1
SCREENS
DISPLAYED BY
FUNCTION KEY
@pos

POS

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

541

Displays the current position of the tool in the workpiece coordinate
system.  The current position changes as the tool moves.  The least input
increment is used as the unit for numeric values.  The title at the top of
the screen indicates that absolute coordinates are used.

1 Press function key POS .

2 Press soft key [ABS] .

[  ABS   ] [  REL  ] [  ALL  ] [ HNDL ] [      ]

ACTUAL POSITION (ABSOLUTE)   O0010 N0000

PART COUNT   1
RUN TIME      0H  1M CYCLE TIME  0H 1M33S
ACT.F     3000 MM/M     S    0 T
01:35:22 BUF AUTO

X 123.456
Y 363.233
Z 0.000

Bits 5 of parameter 018 can be used to select whether the displayed values
include tool length offset.

11.1.1
Position Display in the
Work Coordinate
System

Explanations

� Display including
compensation values

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

542

Displays the current position of the tool in a relative coordinate system
based on the coordinates set by the operator.  The current position changes
as the tool moves.  The increment system is used as the unit for numeric
values.  The title at the top of the screen indicates that relative coordinates
are used.
On this screen, relative coordinates can be reset.

Display procedure for the current position screen with the relative coordinate system

1 Press function key POS .

2 Press soft key [REL] .

[  ABS   ] [  REL   ] [  ALL  ] [  HNDL ] [     ]

ACTUAL POSITION (RELATIVE)   O0010 N0000

PART COUNT   1
RUN TIME      0H  1M CYCLE TIME  0H 1M33S
ACT.F     3000 MM/M     S    0 T
01:36:12 BUF AUTO

X 123.456
Y 363.233
Z 0.000

11.1.2
Position Display in the
Relative Coordinate
System

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

543

The current position of the tool in the relative coordinate system can be
reset to 0 or preset to a specified value as follows:

Procedure to reset the axis coordinate to a specified value

1 Key in the address of the axis name (X, Y, etc.) on the relative
coordinate screen.  The entered axis address blinks.  Two or more axis
names can be input.

2 Press the CAN  key.  The relative coordinates of the axis having the

blinking address are reset to 0.

Procedure topreset a value for a specified axis

1 Key in the desired axis name and value on the relative coordinate
screen.  The entered axis address blinks.

2 Press the INPUT  key.  The relative coordinate of the axis with the

blinking address is preset to the specified value.

To enable this operation, specify bit 0 of parameter 0064 accordingly.  In
this mode, a reset cannot be performed for the specified axis.  To reset the
coordinate, key in 0 as the preset value.

Bit 1 of parameter 0001 can be used to select whether the displayed values
include tool length offset and cutter compensation.

Bit 1 of parameter 0002 is used to specify whether the displayed positions
in the relative coordinate system are preset to the same values as in the
workpiece coordinate system when a coordinate system is set by a G92
command or when the manual reference position return is made.

Explanations

� Setting the relative
coordinates

� Display including
compensation values

� Presetting by setting a
coordinate system

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

544

Displays the following  positions on a screen :  Current positions of the
tool in the workpiece coordinate system, relative coordinate system, and
machine coordinate system, and the remaining distance.

Procedure for displaying overall position display screen

1 Press function key POS .

2 Press soft key [ALL] .

 (RELATIVE)
X   246.912
Y   913.780
Z  1578.246

 (ABSOLUTE)
X   123.456
Y   456.890
Z   789.123

 (MACHINE)
X     0.000
Y     0.000
Z     0.000

(DISTANCE TO GO)
X     0.000
Y     0.000
Z     0.000

[  ABS   ] [  REL   ] [  ALL  ] [  HNDL ] [     ]

ACTUAL POSITION           O1000 N00010

  PART COUNT          1
RUN TIME    0H 4M   CYCLE TIME   0H 1M38S
ACT.F     0 MM/M       S   0 T
01:54:57   MDI

The current positions of the tool in the following coordinate systems are
displayed at the same time:

� ����
�� ������ � ��
 �
����
 ����	���
 ����
�

��
����
 ����	���
�

� ����
�� ������ � ��
 ���� ����	���
 ����
�

��������
 ����	���
�

� ����
�� ������ � ��
 �����
 ����	���
 ����
�

������
 ����	���
�

� ������
 �� �� �	�����
 �� ���

The distance remaining is displayed in the AUTO or MDI mode.  The
distance the tool is yet to be moved in the current block is displayed.

The least command increment is used as the unit for values displayed in
the machine coordinate system.  However, the least input increment can
be used by setting bit 0 of parameter 063.

11.1.3
Overall Position
Display

Explanations

� ���������� �������

� �������� �� 	�

� ���
��� ����������

�����

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

545

The actual feedrate on the machine (per minute) can be displayed on a
current position display screen or program check screen by setting bit 2
of parameter 028.  On a 14–inch CRT, the actual feedrate is always
displayed.

Display procedure for the actual feedrate on the current position display screen

1 Press function key POS  to display a current position display screen.

[  ABS   ] [  REL   ] [  ALL  ] [  HNDL ] [     ]

ACTUAL POSITION (ABSOLUTE)   O0010 N0000

PART COUNT   1
RUN TIME      0H  1M CYCLE TIME  0H 1M33S
ACT.F     3000 MM/M     S    0 T
01:35:22 BUF AUTO

X 123.456
Y 363.233
Z 0.000

The actual feedrate is displayed in units of milimeter/min or inch/min
(depending on the specified least input increment) under the display of the
current position.

The actual rate is calculated by the following expression:

Fact� �
n

i�1

(fi)2�

where
n : Number of axes
fi : Cutting feed rate in the tangential direction of each axis or rapid

traverse rate
Fact : Actual feedrate displayed
The display unit: mm/min (metric input)

inch/min (Inch input)

In the case of feed per revolution and thread cutting, the actual feedrate
displayed is the feed per minute rather than feed per revolution.

In the case of movement of rotary axis, the speed is displayed in units of
deg/min but is displayed on the screen in units of input system at that time.
For example, when the rotary axis moves at 50 deg/min, the following is
displayed: 50 INCH/M

The program check screen also displays the actual feedrate.

11.1.4
Actual Feedrate
Display

Explanations

� Actual feedrate value

� Actual feedrate display
of feed per revolution

� Actual feedrate display
of rotary axis

� Actual feedrate display
on the other screen

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

546

The run time, cycle time, and the number of machined parts are displayed
on the current position display screens.

Procedure for displaying run time and parts count on the current position display screen

1 Press function key POS  to display a current position display screen.

[  ABS   ] [  REL  ] [  ALL  ] [  HNDL ] [ OPRT ]

ACTUAL POSITION(RELATIVE)   O0010 N0000

  PART COUNT          5
RUN TIME    0H15M   CYCLE TIME   0H 0M38S
ACT.F     3000 MM/M     S   0 T0000
01:36:12   BUF  AUTO

X 123.456
Y 363.233
Z 0.000

The number of machined parts (PART COUNT), run time (RUN
TIME), and cycle time (CYCLE TIME) are displayed under the
current position.

Indicates the number of machined parts.  The number is incremented each
time M02, M30, or an M code specified by parameter 6710 is executed.

Key in address P , then press the CAN  key.  The value is reset to 0.

Indicates the total run time during automatic operation, excluding the stop
and feed hold time.

Key in address R , then press the CAN  key.  The value is reset to 0.

Indicates the run time of one automatic operation, excluding the stop and
feed hold time.  This is automatically preset to 0 when a cycle start is
performed at reset state.  It is preset to 0 even when power is removed.

Details of the run time and the number of machined parts are displayed
on the setting screen.  See subsection 11.5.5.

The number of machined parts and run time cannot be set on current
position display screens.  They can be set on the setting screen.

Bit 0 (PCM) of parameter 219 is used to specify whether the number of
machined parts is incremented each time M02, M30, or an M code
specified by parameter  is executed, or only each time an M code specified
by parameter 6710 is executed.

11.1.5
Display of Run Time
and Parts Count

Explanations

� PART COUNT

� RUN TIME

� CYCLE TIME

� Display on the other
screen

� Setting of Machine parts
and run time

� Incrementing the number
of machined parts

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

547

This function displays the loads on the basic axes and serial spindle (first
spindle).  This function can also display the speed of the serial spindle
(first spindle).

Procedure for manipulating the monitor display

1 Display the current position display screen by pressing function key

POS .

2 Press the rightmost soft key [>].

3 Press the [MONI]  soft key.
These steps display the operating monitor screen.  The operating

monitor screen can also be displayed by pressing the  and 

page keys several times instead of performing steps 2 and 3.

Operating monitor O1000 N0000
   (Load meter)

X:********** 0%   S1:**********  0%

Y:********** 0%
                 (Speed meter     RPM)
Z:********** 0%   S1:**********   0

 
[  MONI  ][       ][       ][       ][       ]

(1)Load meter (X to Z)
The load on each axis is indicated as a percentage of the rated torque
and a string of asterisks (*).  One asterisk represents 10%.

(2)Load meter (S1)
The load on the first serial spindle is indicated as a percentage of the
rated torque and a string of asterisks (*).  One asterisk represents 20%.

(3)Speed meter (S1)
The speed of the first serial spindle is indicated using RPM and a string
of asterisks (*).  One asterisk represents 10% of the maximum speed.

NOTE
1 Load data is displayed only for the basic axes.
2 Data is displayed only for the first serial spindle.  No data is

displayed for the second serial spindle or analog interface
spindle.

3 Data is displayed when bit 5 of parameter No. 060 is set to
1.

11.1.6
Operating Monitor
Display

Procedure

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

548

This section describes the screens displayed by pressing function key

PRGRM in AUTO or MDI mode.The first four of the following screens

display the execution state for the program currently being executed in
AUTO or MDI mode and the last screen displays the command values for
MDI operation in the MDI mode:

1. Program contents display screen
2. Current block display screen
3.  Next block display screen
4. Program check screen
5. Program screen for MDI operation

Function key PRGRM  can also be pressed in AUTO mode to display the

program restart screen and scheduling screen.
See Section 4.4 for the program restart screen.
See Section 4.5 for the scheduling screen.

11.2
SCREENS 
DISPLAYED BY 
FUNCTION KEY @prg  
(IN AUTO MODE OR 
MDI MODE)

PRGRM

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

549

Displays the program currently being executed in AUTO mode.

Procedure for displaying the program contents

1 Press function PRGRM  key to display the program.

2 Press soft key [PRGRM] .
The cursor is positioned at the block currently being executed.

PROGRAM           O2000 N0130
O2000 ;
N100 G92 X0 Y0 Z50. ;
N110 G91 G00 Y50. ;
N120 Z–50. ;
N130 G41 G17 H1 G01 X20. F3000 ;
N140 G02 J–25.5 ;
N150 X20. ;
N160 G02 X12.5 Y12.5 R12.5 ;
N170 G01 Y40. ;
N180 X30. Y30. ;
N190 G40 X50. ;

        S    0 T   
 16:59:40 BUF AUTO       
[ PRGRM ][CURRNT][ NEXT ][ CHECK ][ RSTR ]

11.2.1
Program Contents
Display

Procedure

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

550

Displays the block currently being executed and modal data in the AUTO
or MDI mode.

Procedure for displaying the current block display screen

1 Press function key PRGRM .

2 Press soft key [CURRNT] .
The block currently being executed and modal data are displayed.

  (CURRNT)        (MODAL)

X 20.000 G67 G01 F 3000
G01 F 3000 G54 G17 R
G17 H 1 G64 G91 P

G69 G22 Q
G15 G94 H
G25 G21 M 

G41 S
G41 G49 T

G80
G80 G98 S

G50

                              S   0  T0000
 02:50:52 BUF AUTO
[ PRGRM ][ CURRNT ][ NEXT ][ CHECK ][ RSTR ]

PROGRAM              O2000 N00130

The current block display screen is not provided for 14–inch CRTs.  Press
soft key [PRGRM]  to display the contents of the program on the right half
of the screen.  The block currently being executed is indicated by the
cursor.  Modal data is displayed on the left half of the screen.

ACTUAL POSITION
(ABSOLUTE)

G01 G21 G50 G15 F    3000  M
G17 G41 G67 G25 R
G91 G49 G54 P
G22 G80 G64 Q   S
G94 G98 G69 H 1 T

O2000 N0130
F               3000

PROGRAM

O2000 ;
N100 G92 X0 Z50. ;
N110 G91 G00 Y50.  ;
N120 Z–50. ;
N130 G41 G17 H1 G01 X20. F3000 ;
N140 G02 J–25.5 ;
N150 X20. ;
N160 G02 X12.5 Y12.5 R12.5 ;
N170 G01 Y40. ;
N180 X30. Y30. ;
N190 G40 X50. ;

S   0 T
02:39:41 BUF AUTO

�

(MODAL)

MM/MX 17.199
Y 50.000
Z 0.000

 PART COUNT 1
RUN TIME 0H 4M CYCLE TIME 0H 0M 2S

ABS REL ALL HNDL PRGRM COMMND RSTR

11.2.2
Current Block Display
Screen

Explanations

� 14 inch CRT screen

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

551

Displays the block currently being executed and the block to be executed
next in the AUTO or MDI mode.

Procedure for displaying the next block display screen

1 Press function key PRGRM .

2 Press soft key [NEXT] .
The block currently being executed and the block to be executed next
are displayed.

X 20.000 J –25.500
G01 F 3000 G02
G17 H 1
 

(CURRNT)     (NEXT)

                               S   0  T
02:52:14    BUF AUTO
[ PRGRM ][ CURRNT ][ NEXT ][ CHECK ][ RSTR ]

PROGRAM           O2000 N0130

G41

G80 G80
 

11.2.3
Next Block Display
Screen

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

552

Displays the program currently being executed, current position of the
tool, and modal data in the AUTO mode.

Procedure for displaying the program check screen

1 Press function key PRGRM .

2 Press soft key [CHECK] .
The program currently being executed, current position of the tool,
and modal data are displayed.

N130 G41 G17 H1 G01 X20.  F3000 ;
N140 G02 J–25.5 ;
N150 X20.0 ;
N160 G02 X12.5 Y12.5 R12.5 ;

(RELATIVE) (DIST TO GO) (G)
 X 17.600  X     2.400 G01 G21 G50
 Y 50.000  Y     0.000 G17 G41 G67
 Z  0.000  Z     0.000 G91 G49 G54

G22 G80 G64
G94 G98 G69

 F       3000  P H  1  S
 R  Q M     T

ACT.F 3000  MM/M S   0  T
02:53:16 BUF AUTO
[ PRGRM ][ CURRNT ][ NEXT ][ CHECK ][ RSTR ]

PROGRAM CHECK O2000 N0130

For the program currently being executed, the block currently being
executed is displayed first.

The position in the workpiece coordinate system or relative coordinate
system and the remaining distance are displayed.  The absolute positions
and relative positions are switched by parameter No. 028 #0.

11.2.4
Program Check Screen

Explanations

� Program display

� Current position display

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

553

The program check screen is not provided for 14–inch CRTs.  Press soft
key [PRGRM]  to display the contents of the program on the right half of
the screen.  The block currently being executed is indicated by the cursor.
The current position of the tool and modal data are displayed on the left
half of the screen.

ACTUAL POSITION
(ABSOLUTE)

G01 G21 G50 G15 F    3000  M
G17 G41 G67 G25 R
G91 G49 G54 P
G22 G80 G64 Q   S
G94 G98 G69 H 1 T

O2000 N0130
F               3000

PROGRAM

O2000 ;
N100 G92 X0 Z50. ;
N110 G91 G00 Y50.  ;
N120 Z–50. ;
N130 G41 G17 H1 G01 X20. F3000 ;
N140 G02 J–25.5 ;
N150 X20. ;
N160 G02 X12.5 Y12.5 R12.5 ;
N170 G01 Y40. ;
N180 X30. Y30. ;
N190 G40 X50. ;

S   0 T
02:39:41 BUF AUTO

�

(MODAL)

MM/MX 17.199
Y 50.000
Z 0.000

 PART COUNT 1
RUN TIME 0H 4M CYCLE TIME 0H 0M 2S

ABS REL ALL HNDL PRGRM COMMND RSTR

� 14 inch CRT

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

554

Displays the program input from the MDI and modal data in the MDI
mode.

Procedure for displaying the program screen for MDI operation

1 Press function key PRGRM .

2 Press soft key [MDI] .
The program input from the MDI and modal data are displayed.

(1) MDI operation – A

(MDI) (MODAL)
X 10.500 F 2000
Y 200.500  G00 R

 G17 P
 G90 Q
 G94 H    2
 G21 M
 G40 S    15
 G49 T    02
 G80
 G98
 G67

ADDRESS

                MDI 
[ PRGRM ][ CURRNT ][ NEXT ][  MDI  ][     ]

PROGRAM O2000 N0130

(2) MDI operation – B

(MODAL)
G00  G90  G94  G40  G80  G50  G54  G69
G17  G22  G21  G49  G98  G67  G64
F P H S
R Q M T

<     S  0 T

11:04:44 MDI 

[ PRGRM ][ CURRNT ][ NEXT ][  MDI  ][ RSTR ]

PROGRAM (MDI) O1234 N5678

O0000 G00 X100. Y200. ;
M03 ;
G01 Z120. F500 ;
M98 P9010 ;
G00 Z0 ;
%

11.2.5
Program Screen for
MDI Operation

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

555

See Section 4.2 for MDI operation.

The modal data is displayed when bit 7 (MDL) of parameter 3107 is set
to 1.  On a 14–inch CRT, however, the contents of the program are
displayed on the right half of the screen and the modal data is displayed
on the left half of the screen, regardless of this parameter.

Explanations

� MDI operation

� Modal information

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

556

This section describes the screens displayed by pressing function key

PRGRM  in the EDIT mode.  Function key PRGRM  in the EDIT mode can

display the program editing screen and the library screen (displays

memory used and a list of programs).  Pressing function key PRGRM  in the

EDIT mode can also display the conversational graphics programming
screen and the floppy file directory screen.  See Chapter 9 for the program
editing screen and conversational graphics programming screen.  See
Chapter 8 for the floppy file directory screen.

11.3
SCREENS 
DISPLAYED BY 
FUNCTION KEY @prg 
(IN THE EDIT MODE)

PRGRM

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

557

Displays the number of registered programs, memory used, and a list of
registered programs.

Procedure for displaying memory used and a list of programs

1 Select the EDIT mode.

2 Press function key PRGRM .

3 Press soft key [LIB] .

    SYSTEM EDITION    0466 – 25
  PROGRAM NO.  USED : 14  FREE : 49
  MEMORY AREA  USED : 275 FREE : 3820
PROGRAM LIBRARY LIST

O0010 O2000 O0020 O0030 O0200 O0300
O0555 O1200 O0777 O1234 O0040 O0050
O1969 O1224 

>                                  S   0  T
03:04:17
[ PRGRM ][ CONDNS ][      ][     ][ C.A.P. ]

PROGRAM O1224 N0000

PROGRAM NO. USED

PROGRAM NO. USED : The number of the programs registered 
(including the subprograms)

FREE : The number of programs which can be
registered additionally.

MEMORY AREA USED
MEMORY AREA USED : The capacity of the program memory in

which data is registered (indicated by the
number of characters).

FREE : The capacity of the program memory which
can be used additionally (indicated by the
number of characters).

11.3.1
Displaying Memory
Used and a List of
Programs

Explanations

� Details of memory used

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

558

Program Nos. registered are indicated.
Also, the program name can be displayed in the program table by setting
parameter No. 040#0.

    SYSTEM EDITION    0466 – 25
  PROGRAM NO.  USED : 14  FREE : 49
  MEMORY AREA  USED : 275 FREE : 3820
PROGRAM LIBRARY LIST

O0010 (MACRO–GCODE.MAIN)
O2000 (MACRO GCODE.SUB1)
O0020 (TEST–PROGRAM.NO–1)
O0030 (TEST–PROGRAM.F10–MACRO)
O0200 (TEST–PROGRAM.OFFSET)
O0300
O0555 (INCH/MM CONVERT CHECK NO–1)
O1200 (MACRO–MCODE.MAIN)

>                                  S   0  T
03:05:57 EDIT
[ PRGRM ][ CONDNS ][      ][     ][ C.A.P. ]

PROGRAM O1224 N0000

Always enter a program name between the control out and control in
codes immediately after the program number.  
Up to 31 characters can be used for naming a program within the
parentheses.  If 31 characters are exceeded, the exceeded characters are
not displayed. 
Only program number is displayed for the program without any program
name. 

�∆∆∆∆…∆�� ���� �

Program number Program name (up to 31 characters)

Software series of the system is displayed.
It is used for maintenance ; user is not required this information.

Programs are displayed in the same order that they are registered in the
program library list.  However, if bit 4 of parameter 040 is set to 1,
programs are displayed in the order of program number starting from the
smallest one.

Any unused areas created by background editing are counted as used
program and used memory areas.  When memory is reorganized (refer to
Sec. 9.8), these unused areas are counted as free areas.

� Program library list

� Program name

� Software series

� Order in which programs
are displayed in the
program library list

� Free area

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

559

Press function key MENUOFSET to display or set tool compensation values and

other data.
This section describes how to display or set the following data:

1. Tool offset value
2. Workpiece origin offset value
3. Custom macro common variables
4. Pattern menu and pattern data
5. Tool life management data

This section also describes measurement of tool length and the sequence
number comparison and stop function.
The pattern menu, pattern data, and tool life management data depend on
the specifications of the machine tool builder.  See the manual issued by
the machine tool builder for details.

11.4
SCREENS
DISPLAYED BY 
FUNCTION KEY
 @menuofset

MENU

OFSET

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

560

Tool offset values, tool length offset values, and cutter compensation
values are specified by D codes or H codes in a program.  Compensation
values corresponding to D codes or H codes are displayed or set on the
screen.

Procedure for setting and displaying the cutter compensation value

1 Press function key MENUOFSET .

2 Press soft key [OFFSET] .
The screen varies according to the type of tool offset memory.

OFFSET                            O1224 N0000
   NO.       DATA        NO.      DATA
   001       10.000         009         0.000
   002        0.000        010        12.269
   003        5.000        011        10.230
   004        0.000        012       –11.265
   005       12.580        013        –8.562
   006        0.000        014         0.000
   007        0.000        015         0.000
   008        0.000        016         0.000
ACTUAL POSITION (RELATIVE)
      X     0.000           Y          0.000
      Z     0.000

Tool offset memory A

NO. 013 = S 0  T

03:22:13 MDI

[ OFFSET ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

OFFSET / WEAR                  O0000 N0000
   NO.      DATA          NO.        DATA
  HW 001      10.000      HW 0.009      0.000
  HW 002       0.000     HW 0.010     12.269 
  HW 003       5.000     HW 0.011     10.230 
  HW 004       0.000     HW 0.012    –11.265 
  HW 005      12.580     HW  0.013     –8.562 
  HW 006       0.000     HW 0.014      0.000 
  HW 007       0.000     HW 0.015      0.000 
  HW 008       0.000     HW 0.016      0.000 
ACTUAL POSITION (RELATIVE)
      X     0.000           Y          0.000
      Z     0.000

Tool offset memory B

NO. 013 = S 0  T

11:29:58 MDI

[ GEOM ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

11.4.1
Setting and Displaying
the Tool Offset Value

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

561

3 Move the cursor to the compensation value to be set or changed using

page keys and cursor keys.  Press NO.  key and enter the compensa–

tion number for the compensation value to be set or changed and then

press INPUT key.

4 Enter a compensation value, and INPUT key.

A decimal point can be used when entering a compensation value.

An external input/output device can be used to input or output a cutter
compensation value.  See Chapter 9.  A tool length offset value can be set
by measuring the tool length as described in the next subsection.

There are tool offset memories A, B, and C, which are classified as
follows:

Tool offset memory A

Tool geometry compensation and tool wear compensation are treated
the same.

Tool offset memory B

D codes and H codes are treated the same.  Tool geometry
compensation and tool wear compensation are treated differently.

Tool offset memory C

Offset memory is divided into two areas: one area for tool length offset
data (H), and the other for cutter compensation data (D).

The entry of compensation values may be disabled by setting bit 0 and 1
of parameter 078 (not applied to tool offset memory A).

The current compensation value can be incremented or decremented if bit
4 of parameter 001 is specified accordingly.  If this is selected, key in a
desired increment or decrement.

Explanations

� Decimal point input

� Other method

� Tool offset memory

� Disabling entry of
compensation values

� Incremental input

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

562

The length of the tool can be measured and registered as the tool length
offset value by moving the reference tool and the tool to be measured until
they touch the specified position on the machine.  
The tool length can be measured along the X–, Y–, or Z–axis.

Procedure for tool length measurement

1 Use manual operation to move the reference tool until it touches the
specified position on the machine (or workpiece.)

2 Press function key POS until the current position display screen with

relative coordinates is displayed.

03:29:10 HNDL
[  ABS   ] [  REL  ] [  ALL  ] [  HNDL ] [     ]

ACTUAL POSITION(RELATIVE)     O1000 N00010

PART COUNT 17
RUN TIME    0H 4M CYCLE TIME   0H 0M 2S
ACT.F      0 MM/M    S    0 T

X 19.690
Y 12.240
Z 146.550

3 Reset the relative coordinate for the Z–axis to 0 (see subsection 11.1.2
for details).

4 Press function key MENUOFSET  until the tool compensation screen is

displayed.

5 Use manual operation to move the tool to be measured until it touches
the same specified position.  The difference between the length of the
reference tool and the tool to be measured is displayed in the relative
coordinates on the screen.

6 Move the cursor to the compensation number for the target tool (the
cursor can be moved in the same way as for setting tool compensation
values).

7 While holding down the EOB  key, key in address Z .

If either X or Y key is depressed instead of Z key, the X or Y

axis relative coordinate value is input as an tool length compensation
value.

11.4.2
Tool Length
Measurement

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

563

8 Press the INPUT  key.  The Z axis relative coordinate value is input and

displayed as an tool length offset value.

ÇÇ
ÇÇ
ÇÇ

ÇÇ
ÇÇ
ÇÇ
ÇÇ

A prefixed position

Reference
tool

The difference is set as a tool
length offset value

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

564

Displays the workpiece origin offset for each workpiece coordinate
system (G54 to G59 and G54 P1 to G54 P48) and external workpiece
origin offset.  The workpiece origin offset and external workpiece origin
offset can be set on this screen.

Procedure for Displaying and Setting the Workpiece Origin Offset Value

1 Press function key MENUOFSET .

2 Press soft key [WORK]  or [WORK48] .
The workpiece coordinate system setting screen is displayed.

  NO.     (SHIFT)
 _00 X   0.000
 Y   0.000

Z   0.000

  NO.    (G54)
  01 X   0.000
 Y   0.000

Z   0.000

  NO.     (G55)
  02 X 0.000
 Y 0.000

Z 0.000

  NO.    (G56)
  03 X 0.000
 Y 0.000

Z 0.000

ADRS.                          S   0  T

03:36:12       MDI

[ WEAR ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

WORK COORDINATES             O0001 N00000

  P : 01  (G54)
 _01 X   0.000
 Y   0.000

Z   0.000

  P : 02  (G54)
  02 X   0.000
 Y   0.000

Z   0.000

  P : 03  (G54)
  03 X   0.000
 Y   0.000

Z   0.000

  P : 04  (G54)
  04 X   0.000
 Y   0.000

Z   0.000

ADRS.                          S   0  T

03:38:13       MDI

[      ][      ][      ][ WORK48 ][      ]

WORK COORDINATES             O1224 N0000

11.4.3
Displaying and Setting
the Workpiece Origin
Offset Value

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

565

3 The screen for displaying the workpiece origin offset values consists
of two or more pages.  Display a desired page in either of the
following two ways:

Press the page up  or page down  key.

Press NO.  key and nter the workpiece coordinate system number (0:

external workpiece origin offset, 1 to 6:  workpiece coordinate
systems G54 to G59, 1 to 48:  workpiece coordinate systems G54 P1

to G54 P48), and then press INPUT  key.

4 Move the cursor to the workpiece origin offset to be changed.

5 Press the address key corresponding to the desired axis.

6 Enter a desired value by pressing numeric keys, then press INPUT  key .

The entered value is specified in the the workpiece origin offset value.

7 Repeat 4 and 6 to change other offset values.

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

566

Displays common variables (#100 to #149 or #100 to #199, and #500 to
#531 or #500 to #999).  When the absolute value for a common variable
exceeds 99999999, ******** is displayed.  The values for variables can
be set on this screen.  Relative coordinates can also be set to valiables.

Procedure for displaying and setting custom macro common variables

1 Press function key MENUOFSET .

2 Press the soft key [MACRO] .  The following screen is displayed:

   NO.      DATA         NO.       DATA
   100 00010.000 108
   101 00020.000 109 02564.146
   102 00156.870 110
   103 0.000 111 25000.000
   104 0.000 112 0.000
   105 01523.579 113
   106 0.000 _114 30000.000
   107 00458.256 115
  ACTUAL POSITION (RELATIVE)
      X 0.000    Y 0.000
      Z 0.000

VARIABLE                      O1224 N0000

NO. 114 =                        S     0  T
03:40:20 MDI
[ WEAR ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

3 Move the cursor to the variable number to set using either of the
following methods:

� Press the NO.  key and enter the variable number.  And then press

INPUT  key.

� Move the cursor to the variable number to set by pressing page keys

 and/or  and cursor keys  and/or .

4 Enter data with numeric keys and press INPUT  key.

5 To set a relative coordinate in a variable,press address key X ,

Y , or Z , while holding down the EOB  key.  Then press

INPUT key.

6 To set a blank in a variable, just press INPUT  key after CAN  key.  The

value field for the variable becomes blank.  (Only for custom macro
B)

11.4.4
Displaying and Setting
Custom Macro
Common Variables

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

567

This subsection uses an example to describe how to display or set
machining menus (pattern menus) created by the machine tool builder.
Refer to the manual issued by the machine tool builder for the actual
pattern menus and pattern data.  See PROGRAMMING for the pattern
data entry function.

Procedure for displaying the pattern data and the pattern menu

1 Press function key MENUOFSET .

2 Press the soft key [MENU] .
The following screen (pattern menu screen) is displayed:

 1.  BOLT HOLE
 2.  GRID
 3.  LINE ANGLE
 4.  TAPPING
 5.  DRILLING
 6.  BORING
 7.  POCKET
 8.  PECK
 9.  TEST PATTERN
10.  BACK

MENU : HOLE PATTERN           O9501 N0014

SELECT = S 0  T

10:01:29 MDI

[ WEAR ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

3 Enter a pattern number and press INPUT  key.

In this example, press 5 , then press INPUT key.

The following screen (pattern data screen) is displayed:

NO.   NAME DATA   COMMENT
500 TOOL 0
501 KIJUN X 0 *BOLT HOLE
502 KIJUN Y 0 CIRCLE*
503 RADIUS 0 SET PATTERN
504 S. ANGL 0 DATA TO VAR.
505 HOLES NO. 0 NO.500–505.
506 0
507 0

ACTUAL POSITION (RELATIVE)
     X      0.000          Y      0.000
     Z      0.000

VAR. : BOLT HOLE              O9501 N0014

NO. 500= S 0  T
10:00:48 MDI
[ WEAR ][MACRO][ MENU ][ WORK ][ TOOLLF ]

11.4.5
Displaying Pattern
Data and Pattern Menu

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

568

4 Enter necessary pattern data and press INPUT .

5 After entering all necessary data, enter the AUTO mode and press the
cycle start button to start machining.

HOLE PATTERN  :  Menu title
An optional character string can be displayed within 12 characters.

BOLT HOLE  :  Pattern name
An optional character string can be displayed within 10 characters.

The machine tool builder should program character strings of menu title
and pattern name by custom macro, and load them into the program
memory.

BOLT HOLE  :  Pattern data title
An optional character string can be displayed within 12 characters.

TOOL :  Variable name
An optional character string can be displayed within 10 characters.

BOLT HOLE CIRCLE  :  Comment statement

An optional character string can be displayed up to 12 characters/line
by 8 lines.

The machine tool builder should program the character strings of variable
name and comment statement by custom macro, and load them into the
program memory.

Explanations

� Explanation of the
pattern menu screen

� Explanation of the
pattern data screen

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

569

Tool life data can be displayed to inform the operator of the current state
of tool life management.  Groups which require tool changes are also
displayed.The tool life counter for each group can be preset to an arbitrary
value.  To register or modify tool life management data, a program must
be created and executed.  See Explanations in this section for details.

Procedure for display and setting the tool life management data

1 Press function key MENUOFSET .

2 Press soft key [TOOLLF] .

3 One page displays data on two groups.  Pressing page key  or

 successively displays data on the following groups.  Up to four

group Nos.,  for which the Tool Change signal is being issued, are
displayed at the bottom of each page.  An arrow shown in the figure is
displayed for five or more groups, if exists.

TOOL LIFE DATA  :               O3000 N00060
                   SELECTED GROUP 000

GROUP  001 : LIFE   0150   COUNT   0007
0034 0078 0012 0056
0090 0035 0026 0061
0000 0000 0000 0000
0000 0000 0000 0000

GROUP  002 : LIFE   1400   COUNT   0000
0062 0024 0044 0074
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000

TO BE CHANGED  : 003 004 005 006 –––>

NUM. S 0  T

04:01:12 AUTO

[ WEAR ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

4 Press NO.  key and to display the page containing the data for a

group, enter the group number and press INPUT  key.

The cursor can be moved to an arbitrary group by pressing cursor key

 or  .

5 To change the life count of a group, position the cursor to that group,

key in a desired count, then press the INPUT  key.

11.4.6
Displaying and Setting
Tool Life Management
Data

TOOLLF

Continuous menu key

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

570

6 To reset the tool data of a group, position the cursor to that group, key

in –9999, then press the INPUT  key.  All current execution data for the

group selected with the cursor is cleared and the tool is considered as
not being used.

TOOL LIFE DATA  :               O3000 N00060
                   SELECTED GROUP 000

GROUP  001 : LIFE   0150   COUNT   0007
0034 0078 0012 0056
0090 0035 0026 0061
0000 0000 0000 0000
0000 0000 0000 0000

GROUP  002 : LIFE   1400   COUNT   0000
0062 0024 0044 0074
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000

TO BE CHANGED  : 003 004 005 006 –––>

NUM. S 0  T

04:01:12 AUTO

[ WEAR ][ MACRO ][ MENU ][ WORK ][ TOOLLF ]

� The first line is the title line.

� In the second line the group number of the current command is
displayed.
When there is no group number of the current command, 0 is
displayed.

� In lines 3 to 7 the tool life data of the group is displayed.
The third line displays group number, life and the count used.
The life count is chosen by parameter (No. 039#2) as either minutes(or
hours) or number of times used.
In lines 4 to 5, tool numbers are displayed.  In this case, the tool is
selected in the order, 0034 → 0078 → 0012 → 056 → 0090 ...
The meaning of each mark before the tool numbers is :
    * : Shows the life has finished.
    # : Shows that the skip command has been accepted.
   @ : Shows that the tool is currently being used.
The life counter counts for tool with @.
“*” is displayed when the next command is issued by the group to
which it belongs.

� Lines 8 to 12 are next group life data to the group displayed in lines
3 to 7.

� In the thirteenth line the group number when the tool change signal is
being emitted is displayed.  The group number display appears in
ascending order.  When it cannot be completely displayed, “–––>” is
displayed.

Explanations

� Display contents

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

571

Parameters must be set to determine the specifications and functions of
the machine in order to fully utilize the characteristics of the servo motor
or other parts.
This chapter describes how to set parameters on the MDI panel.
Parameters can also be set with external input/output devices such as the
Handy File (see Chapter 8).

If the DGNOSPARAM  function key is pressed, the following data can be displayed

and set:

� Pitch error compensation data

� Setting data

� Sequence number compensation and stop

� Run time and parts count

� Self–diagnostic data

See Chapter 7 for the diagnostic screens.

11.5
SCREENS
DISPLAYED BY 
FUNCTION KEY
 @dgnosparam

DGNOS

PARAM

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

572

Parameters are set to determine the specifications and functions of the
machine in order to fully utilize the characteristics of the servo motor.  The
setting of parameters depends on the machine.  Refer to the parameter list
prepared by the machine tool builder.
Normally, the user need not change parameter setting.

Procedure for displaying and setting parameters

1 When set the paameter, set 1 for PARAMETER WRITE (PWE)  to
enable writing.  See the procedure for enabling/disabling parameter
writing described below.

2 Press function key DGNOSPARAM .

3 Press soft key [PARAM]  to display the parameter screen.

PARAMETER O1224 N0000
 NO. DATA  NO. DATA

_ 0001 00000000 0011 00000000
0002 00000011 0012 00000000
0003 00000000 0013 00000000
0004 01110111 0014 00000100
0005 01110111 0015 00000000
0006 01110111 0016 00000000
0007 00000000 0017 01111111
0008 00000000 0018 00000000
0009 00000000 0019 10000000
0010 10000000 0020 00000000

NO. 0001 = S 0  T
04:02:02 MDI
[ PARAM ][ DGNOS ][      ][ SV–PRM ][       ]

4 Move the cursor to the parameter number to be set or displayed in
either of the following ways:

� Press the NO.  key and enter the variable number.  And then press

INPUT  key.

� Move the cursor to the parameter number using the page keys,

 and , and cursor keys,  and .

5 To set the parameter, enter a new value with numeric keys and press

INPUT  key.  The parameter is set to the entered value and the value is

displayed.

6 When the parameter is set, set 0 for PARAMETER WRITE (PWE)  to
disable writing.

11.5.1
Displaying and Setting
Parameters

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

573

Procedure for enabling/displaying parameter writing

1 Select the MDI mode or enter state emergency stop.

2 Press function key DGNOSPARAM .

3 Press soft key [PARAM]  to display the setting screen.

PARAMETER                      O1224 N0000

[ PARAM ][ DGNOS ][      ][ SV–PRM ][     ]

PART TOTAL = 17
PART REQUIRED = 50
PART COUNT = 17
 RUN TIME 0H 4M CYCLE TIME  0H OM 2S
NO. PWE = = S 0  T
 03:35:07

(SETTING 2)
 PWE = 1 (0:DISABLE 1:ENABLE)
 REV4 = 0
 TAPEF = 0
(SEQUENCE STOP)
 PRGNO = 0
 SEQNO = 0

 

4 Move the cursor to PARAMETER WRITE (PWE)using cursor keys.

5 Press 1 , then press INPUT  key to enable parameter writing.

At this time, the CNC enters the P/S alarm state (No. 100).

6 After setting parameters, move the cursor to PARAMETER WRITE

(PWE) and press 0  key, then press INPUT  key.

7 Depress the RESET  key to release the alarm condition.  If alarm No. 000

has occurred, however, turn off the power supply and then turn it on,
otherwise the alarm is not released.

See Chapter 9 for setting parameters with external input/output devices
such as the Handy File.

Parameters are not effective until the power is turned off and on again after
they are set.  Setting such parameters causes alarm 000.  In this case, turn
off the power, then turn it on again.

Explanations

� Setting parameters with
external input/output
devices

� Parameters that require
turning off the power
ww

w.
cn

cc
en

ter
.co

m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

574

If pitch error compensation data is specified, pitch errors of each axis can
be compensated per axis.  
Pitch error compensation data is set for each compensation point at the
intervals specified for each axis.  The origin of compensation is the
reference position to which the tool is returned.
The pitch error compensation data is set according to the characteristics
of the machine.  The content of this data varies according to the  machine
model.  If it is changed, the machine accuracy is reduced.
In principle, the end user must not alter this data.
Pitch error compensation data can be set with external devices such as the
Handy File (see Chapter 9).  Compensation data can also be written
directly with the MDI panel.
The following parameters must be set for pitch error compensation.  Set
the pitch error compensation value by these parameters.
In the following example, 33 is set for the pitch error compensation point
at the reference position.

1

2

3

333231 34 35 36 37

–1

–2

�035 �036 �037 �038�032 �033 �034

+3 –1 –1 +1 +2 –1 –3

34 35 36 3731 32 33

Reference position

Pitch error compensation value (absolute value)

Compensation number parameter
for the reference position 
(No. �0000)

Compensation interval parameter
(No. 712 to 715)

� : Axis number

Compensation magnification
parameter (No. 011#0, #1)

Parameter

Compensation
position number

Compensation
value to be set

� Number of the pitch error compensation point at the reference position
(� : axis number) :  Parameter No. �000

� Pitch error compensation magnification :  Parameter No. 011#0, #1

� Interval of the pitch error compensation points :  Parameter No. 0712
to 0715

� Setting compensation value :  Parameter No. �001 + compensation
points

11.5.2
Displaying and Setting
Pitch Error
Compensation Data

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

575

128 compensation points from No. 0 to 127 are available for each axis.
Specify the compensation number for the reference position of each axis
in the corresponding parameter (Parameter n000, n:  axis number).

Specify the compensation value in the corresponding parameter
(Parameter n001 + compensation point number, n:  axis number).

Compensation values can be set within the range from –7 x compensation
magnification (output unit) to +7 x compensation magnification
(detection unit).  The compensation magnification can be set 1, 2, 4, 8 in
parameter No. 011#0, #1.  The units of the compensation value can be
changed to the detection units if bit 7 of parameter 035 is specified
accordingly.

The pitch error compensation points are arranged with equally spaced.
Set the space between two adjacent positions for each axis to the
parameter (No. 712 to 715).
Valid data range is 0 to 99999999.
The minimum interval between pitch error compensation points is limited
and obtained from the following equation:
Minimum interval of pitch error compensation points = maximum
feedrate (rapid traverse rate) / 7500
Unit: mm, inches, deg, and mm/min, inches/min, deg/min

For the rotating axis, the interval between the pitch error compensation
points shall be set to one per integer of the amount of movement (normally
360°) per rotation. The sum of all pitch error compensation amounts per
rotation must be made to 0.

Note that the pitch error is not compensated in the following cases:

� When the machine is not returned to the reference position after
turning on the power.  If an absolute–position detector is provided and
if the reference position has been determined, pitch error
compensation is carried out.

� If the interval between the pitch error compensation points is 0.

Explanations

� Compensation point
number

� Compensation value

Restrictions

� Compensation value
range

� Intervals of
compensation points

� Pitch error
compensation of the
rotary axis

� Conditions where pitch
error compensation is
not performed

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

576

⋅ Machine stroke:  –400 mm to +800 mm
⋅ Interval between the pitch error compensation points:  50 mm
⋅ No. of the compensation point of the reference position:  40
If the above is specified, the No. of the farthest compensation point in the
negative direction is as follows:
No. of the compensation point of the reference position – (Machine stroke
on the negative side/Interval between the compensation points) + 1
= 40 – 400/50 + 1= 33
No. of the farthest compensation point in the positive direction is as
follows:
No. of the compensation point of the reference position + (Machine stroke
on the positive side/Interval between the compensation points)
= 40 + 800/50= 56
The correspondence between the machine coordinate and the
compensation point No. is as follows:

33 39 40 41 42 56

–400 –350 –100 –50 0 50 100 750 800
Machine 
coordinate (mm)

Compensation 
point number.

Compensation values are output at the positions indicated by �.

Therefore, set the parameters as follows:

Parameter Setting value

1000 : Compensation number for the reference position 40

011#0, #1 : Compensation magnification #0=0,  #1=0

0712 : Interval between pitch error compensation points 50000

Explanations

� For linear axis (X axis)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

577

The compensation amount is output at the compensation point No.
corresponding to each section between the coordinates.  
The following is an example of the compensation amounts.

Compensation
value

Compensation
position number

1034 1035 1036 1037 1038 1039 1040 1041 1042

+2 +1 +1 –2 0 –1 0 –1 +2

33 34 35 36 37 38 39 40 41

1043 1044 1045 1046 1047 1048 1049 1050

+1 0 –1 –1 –2 0 +1 +2

1057

1

42 43 44 45 46 47 48 49 56

Parameter

Parameter

Compensation
position number

Compensation
value

–400 –300 –200 –100 100 200 300 400
(mm)0

33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49

–1

–2

–3

–4

+1

+2

+3

+4
Pitch error compensation value 
(absolute value)

Reference
position

X

⋅Amount of movement per rotation:  360°
⋅ Interval between pitch error compensation points:  45°
⋅ No. of the compensation point of the reference position:  60
If the above is specified, the No. of the farthest compensation point in the
negative direction for the rotating axis is always equal to the
compensation point No. of the reference position.
The No. of the farthest compensation point in the positive direction is as
follows:
No. of the compensation point of the reference position + (Move amount
per rotation/Interval between the compensation points)
= 60 + 360/45= 68

� For rotary axis (C axis)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

578

The correspondence between the machine coordinate and the
compensation point No. is as follows:

0.0

45.0

90.0

135.0

180.0

225.0

270.0

315.0
(68)
(60)

(67)

(66)

(65)(64)

(63)

(62)

(61)

(+)

Reference position

Compensation values are output at the positions indicated by �.

If the sum of the compensation values for positions 61 to 68 is not 0, pitch
error compensation values are accumulated for each rotation, causing
positional deviation.
The same value must be set for compensation points 60 and 68.
Therefore, set the parameters as follows:

Parameter Setting value

4000 : Compensation number for the reference position 60

011#0, #1 : Compensation magnification #0=0,  #1=0

715 : Interval between pitch error compensation points 45000

The following is an example of compensation amounts.

4061 4062 4063 4064 4065 4066 4067 4068 4069

+1 –2 +1 +3 –1 –1 –3 +2 +1

60 61 62 63 64 65 66 67 68

Parameter

Compensation
value

Compensation
position number

(deg)0

61 62 63 64 65 66 67
68
(60)

–1

–2

–3

–4

+1

+2

+3

+4

Pitch error compensation value
(absolute value)

Reference position

45 90 135 180 225 270 315

61 62 63 64 65 66 67

45 90 135 180 225 270 315 0

61 62

45 90

68
(60)

C
ww

w.
cn

cc
en

ter
.co

m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

579

Data such as the TV check flag and punch code is set on the setting data
screen.  On this screen, the operator can also enable/disable parameter
writing, enable/disable the automatic insertion of sequence numbers in
program editing, and perform settings for the sequence number
comparison and stop function.
See Chapter 10 for automatic insertion of sequence numbers.
See subsection 11.4.4 for the sequence number comparison and stop
function.  This subsection describes how to set data.

Procedure for setting the setting data

1 Select the MDI mode.

2 Press function key DGNOSPARAM .

3 Press soft key [PARAM]  to display the parameter screen.
This screen consists of several pages.

Press page key  or  until the desired screen is displayed.

An example of the setting data screen is shown below.

PARAMETER                     O1224 N0000

NO. REVX = S 0  T

03:30:09 MDI

[ PARAM ][ DGNOS ][     ][ SV–PRM ][     ]

(SETTING 1)
REVX = 0
REVY = 0
TVON = 0
ISO = 0 (0:EIA 1:ISO)
INCH = 0 (0:MM 1:INCH)
I/O = 0
ABS = 0 (0:INC 1:ABS)
SEQ = 0

CLOCK 97/01/10
03:30:18

4 Move the cursor to the item to be changed by pressing cursor keys

 or .

5 Enter a new value and press INPUT  key.

Setting whether parameter writing is enabled or disabled.
0 :  Disabled
1 :  Enabled

Setting to perform TV check.0 :  No TV check
1 :  Perform TV check

11.5.3
�	��
��	�� ���

����	�� ����	�� Data

Procedure

Contents of settings

� PARAMETER WRITE
(PWE)

� TV CHECK (TV ON)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

580

Setting code when data is output through reader puncher interface.
0 :  EIA code output
1 :  ISO code output

Setting a program input unit, inch or metric system
0 :  Metric
1 :  Inch

Using channel of reader/puncher interface.
0 :  Channel 0
1 :  Channel 1
2 :  Channel 2
3 :  Channel 3

Setting of whether to perform automatic insertion of the sequence number
or not at program edit in the EDIT mode.
0 :  Does not perform automatic sequence number insertion.
1 :  Perform automatic sequence number insertion.

Setting the F10/11 tape format conversion.
0 :  Tape format is not converted.
1 :  Tape format is converted.
See PROGRAMMING for the F10/11 tape format.

Setting the sequence number with which the operation stops for the
sequence number comparison and stop function and the number of the
program to which the sequence number belongs

Setting of mirror image ON/OFF for each axes.
0 :  Mirror image off
1 :  Mirror image on

Specifies whether a travel command executed in MDI operation is
absolute or incremental.
0 :  Incremental command
1 :  Absolute command

� PUNCH CODE (ISO)

� INPUT UNIT (INCH)

� I/O CHANNEL (I/O)

� SEQUENCE NUMBER
(SEQUENCE)

� TAPE FORMAT (TAPE F)

� ���
���� �	��

(COMPENSATION AND
STOP)

� MIRROR IMAGE
(MIRROR X, MIRROR Y,
MIRROR 4)

� MDI travel command
(absolute)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

581

If a block containing a specified sequence number appears in the program
being executed, operation enters single block mode after the block is
executed.

Procedure for sequence number comparison and stop

1 Select the MDI mode.

2 Press function key DGNOSPARAM .

3 Press soft key [PARAM] .

4 Press page key  or  several times until the following screen

is displayed.

PARAMETER                     O1224 N0000

[ PARAM ][ DGNOS ][     ][ SV–PRM ][     ]

(SETTING 2)
PWE = 1 (0:DISABLE 1:ENABLE)
REV4 = 0
TAPEF = 0
(SEQUENCE STOP)
PRGNO = 0
SEQNO = 0

PART TOTAL = 17
PART REQUIRED = 50
PART COUNT = 17
 RUN TIME OH 4M CYCLE TIME  OH OM 2S

NO. PWE = S 0 T
 03:35:07           MDI

5 Enter in (PRGNO) for SEQUENCE STOP the number (1 to 9999) of
the program containing the sequence number with which operation
stops.

6 Enter in (SEQNO) for SEQUENCE STOP (with four or less digits)
the sequence number with which operation is stopped.

7 When automatic operation is executed, operation enters single block
mode at the block containing the sequence number which has been
set.

11.5.4
Sequence Number
Comparison and Stop

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

582

After the specified sequence number is found during the execution of the
program, the sequence number set for sequence number compensation
and stop is decremented by one.  When the power is turned on, the setting
of the sequence number is 0.

If the predetermined sequence number is found in a macro statement
block , the execution does not stop at that block.
Example
  N1 #1=1 ;
  N2 IF [#1 EQ 1] GOTO 08 ;
  N3 GOTO 09 ;
  N4 M98 P1000 ;
  N5 M99 ;
In the example shown above, if the predetermined sequence number is
found, the execution of the program does not stop.

If the predetermined sequence number is found in a block which has a
canned–cycle command, the execution of the program stops after the
return operation is completed.

If the predetermined sequence number appears twice or more in a
program, the execution of the program stops after the block in which the
predetermined sequence number is found for the first time is executed.

If the predetermined sequence number is found in a block which is to be
executed repeatedly, the execution of the program stops after the block is
executed specified times.

Explanations

� Sequence number after
the program is executed

� Exceptional blocks

� ��� �
 �� ��

�� ���	�

� When the same
sequence number is
found several times in
the program

� Block to be repeated a
specified number of
times

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

583

Various run times, the total number of machined parts, number of parts
required, and number of machined parts can be displayed.  The data except
for the total number of machined parts can be set on this screen .
The time can be displayed and set on the screen.

Procedure for Displaying and Setting Run Time, Parts Count and Time

1 Select the MDI mode.

2 Press function key DGNOSPARAM .

3 Press chapter selection soft key [PARAM] .

4 Press page key 
PAGE

 or 
PAGE

 several times until the following screen

is displayed.

PARAMETER                     O1224 N0000

NO. REVX = S 0  T

03:30:09 MDI

[ PARAM ][ DGNOS ][     ][ SV–PRM ][     ]

(SETTING 1)
REVX = 0
REVY = 0
TVON = 0
ISO = 0 (0:EIA 1:ISO)
INCH = 0 (0:MM 1:INCH)
I/O = 0
ABS = 0 (0:INC 1:ABS)
SEQ = 0

CLOCK 97/01/10
03:30:18

PARAMETER                     O1224 N0000

[ PARAM ][ DGNOS ][     ][ SV–PRM ][     ]

(SETTING 2)
PWE = 1 (0:DISABLE 1:ENABLE)
REV4 = 0
TAPEF = 0
(SEQUENCE STOP)
PRGNO = 0
SEQNO = 0

PART TOTAL = 17
PART REQUIRED = 50
PART COUNT = 17
 RUN TIME OH 4M CYCLE TIME  OH OM 2S

NO. PWE = S 0 T
 03:35:07           MDI

5 To set the number of parts required, move the cursor to PARTS
REQUIRED and enter the number of parts to be machined.

11.5.5
Displaying and Setting
Run Time, Parts Count,
and Time

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

584

6 To set the clock, move the cursor to DATE or TIME, enter a new date

or time, then press INPUT  key.

This value is incremented by one when M02, M30, or an M code specified
by parameter 219 is executed.  This value cannot be set on this screen.
Set the value in parameter 779.

It is used for setting the number of machined parts required.
When the “0” is set to it, there is no limitation to the number of parts.
Also, its setting can be made by the parameter (NO. 600).

This value is incremented by one when M02, M30, or an M code specified
by parameter 219 is executed.  In general, this value is reset when it
reaches the number of parts required.  Refer to the manual issued by the
machine tool builder for details.

Indicates the total run time during automatic operation,  excluding the
stop and feed hold time.

This value can be used, for example, as the total time during which coolant
flows.  Refer to the manual issued by the machine tool builder for details.

Indicates the run time of one automatic operation, excluding the stop and
feed hold time.  This is automatically preset to 0 when a cycle start is
performed at reset state.  It is preset to 0 even when power is removed.

Displays the current date and time.  The date and time can be set on this
screen.  The date is displayed in year/month/day format.  The time is
displayed in hour:minute:second format (24–hour clock).

When the command of M02 or M30 is executed, the total number of
machined parts and the number of machined parts are incremented by one.
Therefore, create the program so that M02 or M30 is executed every time
the processing of one part is completed.  Furthermore, if an M code set
to the parameter (NO. 219) is executed,  counting is made in the similar
manner.  Also, it is possible to disable counting even if M02 or M30 is
executed (parameter (No. 040#3) is set to 1).  For details, see the manual
issued by machine tool builders.

Negative value cannot be set.  Also, the setting of “M” and “S” of run time
is valid from 0 to 59.
Negative value may not be set to the total number of machined parts.

Display items

� PARTS TOTAL

� PARTS REQUIRED

� PARTS COUNT

� OPERATING TIME

� FREE PURPOSE

� CUTTING TIME

� TIME

Explanations

� Usage

Restrictions

� Run time and part count
ww

w.
cn

cc
en

ter
.co

m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

585

Neither negative value nor the value exceeding the value in the following
table can be set.

Item Maximum value Item Maximum value

Year 99 Hour 23

Month 12 Minute 59

Day 31 Second 59

� Time settings

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

586

The alarm message and operator message can be displayed by pressing the
OPR

ALARM  key.  The software operator’s panel can also be displayed and

specified.  For details of how to display the alarm message, see Chapter
7.

The operator message function displays a message on the PMC screen.

Procedure for Displaying Operator Message

1 Press function key OPRALARM

2 Press soft key [MSG] .

OPERATOR MESSAG               O0000 N0000

S 0  T

11:09:56 MDI

[ ALARM ][  OPR  ][  MSG  ][     ][     ]

NO. 2001

COOLANT ON

� If the operator message display function is enabled, the screen is
automatically switched to the operator message screen.

� A PMC command can also be used to clear the operator message.

� For details of the contents of the operator message, and how to clear
the message, refer to the manual provided by the machine tool builder.

11.6
SCREENS
DISPLAYED BY 
FUNCTION KEY 
@opralarm

OPR
ALARM

11.6.1
Displaying Operator
Message

Explanations

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

587

With this function, functions of the switches on the machine operator’s
panel can be controlled from the CRT/MDI panel.
Jog feed can be performed using numeric keys.

Procedure for displaying and setting the software operator’s panel

1 Press function key OPRALARM .

2 Press soft key [OPR] .

3 The screen consists of several pages.

Press page key  or  until the desired screen is displayed.

OPERATOR’S PANEL            O1224 N0000

 MODE :  MDI  AUTO  EDIT  HNDL  JOG  ZRN
 HANDLE AXIS :  HX  HY  HZ
 HANDLE MULT. :  * 1   * 10  * 100
 RAPID OVRD. :  100%  50%   25%   F0
 JOG FEED :   500 MM/MIN
                     **************
 FEED OVRD. :  100%
                          ******
ACTUAL POSITION (ABSOLUTE)
    X     0.000        Y     0.000
    Z     0.000

S 0  T

03:59:30              MDI

[ ALARM ][  OPR   ][  MSG  ][     ][     ]

OPERATOR’S PANEL            O1224 N0000

BLOCK SKIP : �OFF ON
SINGLE BLOCK : OFF �ON
MACHINE LOCK : OFF �ON
DRY RUN : OFF �ON
PROTECT KEY : PROTECT �RELEASE
FEED HOLD : �OFF ON

ACTUAL POSITION (ABSOLUTE)
    X     0.000        Y     0.000
    Z     0.000

                                   S   0  T

04:00:18         MDI

[ ALARM ][  OPR  ][  MSG  ][     ][      ]

4 Move the cursor to the desired switch by pressing cursor key  or

.

11.6.2
Displaying and Setting
the Software
Operator’s Panel

OPR

Continuous menu key

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

588

5 Push the cursor move key �  or EOB  to match the mark � to an

arbitrary position and set the desired condition.

6 Press one of the following arrow keys to perform jog feed.  Press the

function  key 5 together with an arrow key to perform jog rapid

traverse.

1

8

2

4 5 6

97

3

The valid operations on the software operator’s panel are shown below.
Whether to use the MDI key or machine operator’s panel for each group
of operations can be selected by parameter 017#0 to #6.
Group1 : Mode selection
Group2 : Selection of jog feed axis, jog rapid traverse
Group3 : Selection of manual pulse generator feed axis, selection of

manual pulse magnification x1, x10, x100
Group4 : Jog federate, federate override, rapid traverse override
Group5 : Optional block skip, single block, machine lock, dry run
Group6 : Protect key
Group7 : Feed hold

The groups for which the machine operator’s panel is selected by
parameter 017#0 to #6 are not displayed on the software operator’s panel.

When the screen  indicates other than the software operator’s panel screen
and diagnostic screen, jog feed is not conducted even if the arrow key is
pushed.

The feed axis and direction corresponding to the arrow keys can be set
with parameters (Nos. 130 to 137).

Eight optionally definable switches are added as an extended function of
the software operator’s panel.  The name of these switches can be set by
parameters as character strings of max. 8 characters.  For the meanings of
these switches, refer to the manual issued by machine tool builder.

Explanations

� Valid operations

� Display

� Screens on which jog
feed is valid

� Jog feed and arrow keys

� General purpose
switchesww

w.
cn

cc
en

ter
.co

m



B–61404E/08 11. SETTING AND DISPLAYING DATAOPERATION

589

The program number, sequence number, and current CNC status are
always displayed on the screen except when the power is turned on or a
system alarm occurs.
This section describes the display of the program number, sequence
number, and status.

The program number and sequence number are displayed at the top right
on the screen as shown below.

O2000 ;

N100 G92 X0 Y0 Z50. ;

N110 G91 G00 Y50. ;

N120 Z–50. ;

N130 G41 G17 H1 G01 X20. F3000 ;

N140 G02 J–25.5 ;

N150 X20. ;

N160 G02 X12.5 Y12.5 R12.5

N170 G01 Y40. ;

N180 X30. Y30 ;

N190 G40 X50.;

S 0  T

02:55:13 EDIT

[ PRGRM ][  LIB  ][  I/O  ][     ][ C.A.P. ]

PROGRAM              O2000 N0130
Sequence
No.
Program No.

The program number and sequence number displayed depend on the
screen and are given below:

On the program screen in the EDIT mode on Background edit screen :
The program No. being edited and the sequence number just prior to the
cursor are indicated.

Other than above screens :
The program No. and the sequence No. executed last are indicated.

Immediately after program number search or sequence number
search :

Immediately after the program No. search and sequence  No. search, the
program No. and the sequence No. searched are indicated.

11.7
DISPLAYING THE
PROGRAM NUMBER,
SEQUENCE
NUMBER, AND
STATUS, AND
WARNING
MESSAGES FOR
DATA SETTING

11.7.1
Displaying the
Program Number and
Sequence Number

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0811. SETTING AND DISPLAYING DATA

590

The current mode, automatic operation state, alarm state, and program
editing state are displayed on the next to last line on the CRT screen
allowing the operator to readily understand the operation condition of the
system.

NOT READY S 500 T0123
 11:53:05  ALARM BAT BUF EDIT          INPUT
             (Display soft keys)

MDI : Manual data input
AUTO : Automatic operation
RMT : Automatic operation (Tape operation, or such like)
EDIT : Memory editing
HNDL : Manual handle feed
JOG : Jog feed
TJOG : TEACH IN JOG
THND : TEACH IN HANDLE
STEP : Manual incremental feed
ZRN : Manual reference position return

ALARM : Indicates that an alarm is issued. 
BAT : Indicates that the battery is low.

hh:mm:ss  –   Hours, minutes, and seconds

INPUT : Indicates that data is being input.
OUTPUT : Indicates that data is being output.
SRCH : Indicates that a search is being performed.
EDIT : Indicates that another editing operation is being performed

(insertion, modification, etc.)
COMPARE : Indicates that the program is being collated.
LSK : Indicates that labels are skipped when data is input.
RSTR : Indicates that the program is being restarted
BUF : Indicates that the block to be executed next is being read.
NOT READY : Indicates that the system is in the emergency stop state.

The actual spindle speed is displayed after S.  (The threading function or
synchronous feed function is required.)

The specified T code is displayed.
To display the actual spindle speed and T code, bit 2 of parameter 0014
must be specified accordingly.

11.7.2
Displaying the Status
and Warning for Data
Setting

Explanations

Description of each displa

� Current mode

� Alarm status

� Current time

� Other status display

� Actual spindle speed (S)

� T codeww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

591

12 GRAPHICS FUNCTION
Two graphic functions are available.  One is a graphic display function,
and the other is a dynamic graphic display function.

The graphic display function can draw the tool path specified by a
program being executed.  The graphic display function also allows
enlargement and reduction of the display.

The dynamic graphic display function can draw a tool path and machining
profile.  In tool path drawing, automatic scaling and solid drawing are
possible. In machining profile drawing, the status of machining in
progress can be drawn through simulation.  Blank figures can also be
drawn.

This chapter mainly explains drawing procedures and drawing
parameters for the following:

1. Drawing the tool path specified by a program being executed, with the
graphic display function

2. Drawing the tool path with the dynamic graphic display function

3. Drawing the machining profile with the dynamic graphic display
function

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

592

It is possible to draw the programmed tool path, which makes it possible
to check the progress of machining, while observing the path on the CRT
screen.
In addition, it is also possible to enlarge/reduce the screen.
Before drawing, graphic parameters must be set.
When the dynamic graphics function is used, the graphics function
described in this section cannot be used.  See Section 12.2 for the dynamic
graphics function.

Graphics display procedure

1 Press function key AUXGRAPH .  

The graphic parameter screen shown below appears.  (If this screen
does not appear, press soft key [G.PRM] .)

GRAPHIC PARAMETER O9501 N0014

AXES _P= 4

(XY=0, YZ=1, ZY=2, XZ=3, XYZ=4, ZXY=5)

RANGE (MAX.)

X= 0 Y=     0 Z= 0

RANGE (MIN.)

X= 0 Y=     0 Z= 0

SCALE K=    70

GRAPHIC CENTER

X= 57500 Y= 75000 Z= 0

PROGRAM STOP N=     0

AUTO ERASE A=     1

NO.  P = S  0  T
 10:16:23      MDI       
[ G.PRM ][ GRAPH ][  AUX  ][      ][      ]

2 Move the cursor with the cursor keys to a parameter to set.

3 Enter data, then press the INPUT  key.  (A decimal point cannot be

entered.)

4 Repeat steps 2 and 3 until all required parameters are specified.

5 Press soft key [GRAPH] .

12.1
GRAPHICS DISPLAY

Procedure

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

593

6 Automatic operation is started and machine movement is drawn on
the screen.

O9501 N0014

X    0.000
Y    0.000
Z    0.000

S  0  T
 10:17:21      AUTO      
[ G.PRM ][ GRAPH ][  AUX  ][      ][      ]

Z

X Y

The size of the graphic screen will be as follows:

Gc : Center of the screen

Note : ( ) indicate the values for a 14″ CRT.

Gc

45(75)mm 72mm
(120)

72mm
(120)

45(75)mm

Fig. 12.1 (a)  Graphic range

As shown in Fig.12.1 (a), the maximum graphics range is an area of
approx. 144 mm (width) × 90 mm (height) for a 9″ CRT and approx. 240
mm (width)× 150 mm (height) for a 14″ CRT.

To draw a section of the program within the actual graphics range, set the
graphics range using one of the following two methods:

1 Set the center coordinates of the range and the magnification.

2 Set the maximum and minimum coordinates for the range in the
program.

Whether 1 or 2 is used depends on which parameters are set last.  A
graphics range which has been set is retained when the power is turned
off.

Explanations

� RANGE 
(Actual graphic range)

� Setting the graphics
rangeww

w.
cn

cc
en

ter
.co

m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

594

Set the center of the graphic range to the center of the screen.  If the
drawing range in the program can be contained in the actual graphics
range, set the magnification to 1 (actual value set is 100).

When the drawing range is larger than the maximum graphics range or
much smaller than the maximum graphics range, the graphics
magnification should be changed. The graphics magnification is 0.01 to
100.00 times, which is usually determined  as follows;

Graphics magnification= Graphics magnification (H), or graphics
magnifications (V), whichever is smaller

Graphics magnification H = α/(length on program to horizontal
direction axis)

Graphics magnification V= β/(length on program to vertical
direction axis)

α:144mm(for 9″ CRT)
β:90mm
α:240mm(for 14″ CRT)
β:150mm

Gc : Center of screen

Program

Gc
Program

Graphics range before 
magnification is applied

Graphics range after 
magnification is applied

The graphics magnification is always based on the center of the screen.

Gc

Graphics range before 
magnification is applied

Graphics range after 
magnification is applied

Fig. 12.1 (b)  Applying graphics magnification (Example of enlargement)

1. Setting the center
coordinate of the
graphics range and
graphics magnification

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

595

When the actual tool path is not near the center of the screen, method 1
will cause the tool path to be drawn out of the geaphics range if graphics
magnification is not set properly.
To avoid such cases, the following six graphic parameters are prepared;

Graphic range (Max.) X
Graphic range (Max.) Y
Graphic range (Max.) Z
Graphic range (Min.) X
Graphic range (Min.) Y
Graphic range (Min.) Z

With the above parameters,  the center of screen (Gcx, Gcy, Gcz) is
determined by the CNC as follows;

Gcx = (X (MAX.) + X (MIN.) ) /2
Gcy = (Y (MAX.) + Y (MIN.) ) /2
Gcz = (Z (MAX.) + Z (MIN.) ) / 2

The unit of the value will be 0.001 mm or 0.0001 inch depending on the
input unit.
Graphics magnification is applied automatically.  When the graphics
range is specified, the center coordinates and magnification do not need
to be calculated.

The graphic origin and graphic center point will not be changed even if
the workpiece coordinate origin is changed.
In other words, the workpiece coordinate origin is always consistent with
the graphic origin.

(Example)

Graphics origin

Gc (=30mm, 50mm)

Y

X

G92 X60. Y90. ;
After execution

Graphics origin=workpiece coordinate origin

Graphics point (60mm, 90mm)

As shown in the above example, when the command of G92 is specified, the drawing is moved as indicated 
by          . The position of the graphics origin or graphics center does not change.

Graphics point
Gc

Y

X

Fig. 12.1 (c)  Workpiece coordinate origin and graphics origin

2. Setting the maximum
and minimum
coordinates for the
drawing range in the
program

� Work coordinate system
and graphics

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

596

� AXES
Specify the plane to use for drawing.  The user can choose from the
following six coordinate systems:

X

Y

(1)

= 0  :  Select (1)
= 1  :  Select (2)
= 2  :  Select (3)
= 3  :  Select (4)
= 4  :  Select (5)
= 5  :  Select (6)

The rotating angle (horizontal, vertical) for isometric display of 5) and 6) is
fixed at 45° in both cases.

X

Z

(2)

Z

Y

(3)

X

Z

(4)

Y

Z

X

Y

X
Z

(5) (6)

Fig. 12.1 (d)  Coordinate system

� RANGE (Max., Min.)
Set the graphic range displayed on the screen by specifying maximum
and minimum values along each axis.

X =Maximum value X=Minimum value
Y =Maximum value Y=Minimum value
Z =Maximum value Z=Minimum value
Valid range:  –99999999 to +9999999

NOTE
1 The units are 0.001 mm or 0.0001 inch.  Note that the

maximum value must be greater than the minimum value for
each axis.

2 When setting the graphics range with the graphics
parameters for the maximum and minimum values, can not
set the parameters for the magnification and screen center
coordinates afterwards.  Only the parameters set last are
effective.

� SCALE
Set the graphic magnification
The setting range is 0 to 10000 (unit:0.01 time).

� GRAPHIC CENTER
X=
Y=
Z=
Set the coordinate value on the workpiece coordinate system at
graphic center.

� Graphics parameter

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

597

NOTE
1 When MAX. and MIN. of RANGE are set, the values will be

set automatically once drawing is executed
2 When setting the graphics range with the graphics

parameters for the magnification and screen center
coordinates, do not set the parameters for the maximum
and minimum values afterward.  Only the parameters set
last are effective.

� PROGRAM STOP
N=_
Set the sequence No. of the end block when necessary to partially
draw.
This value is automatically cancelled and set to –1 once drawing is
executed.

� AUTO ERASE
1 : Erase the previous drawing automatically when the automatic

operation is started under reset condition.

2 : Not erase automatically.

Since the graphic drawing is done when coordinate value is renewed
during automatic operation,  etc.,  it is necessary to start the program by
automatic operation.  To execute drawing without moving the machine,
therefore, enter the machine lock state.

When the AUTO operation is started under reset condition,  the program
is executed after deleting the previous drawing automatically (Automatic
deleting=1).  It is possible not to delete the previous drawing by graphic
parameter (Automatic deleting=0).

When necessary to draw a part of a program, search the starting block to
be drawn by the sequence No.  search,  and set the sequence No. of the end
block to the PROGRAM STOP N= of the graphic parameter before
starting the program under cycle operation mode.

The tool path is shown with a dashed line (  ) for rapid traverse and
with a solid line ( ) for cutting feed.

In case the feed rate is considerably high, drawing may not be executed
correctly, decrease the speed by dry–run,  etc.  to execute drawing.

� Executing drawing only

� Deleting the previous
drawing

� Drawing a part of a
program

� Drawing using dashed
lines and solid lines

Restrictions

� Feedrateww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

598

There are the following two functions in Dynamic Graphics.

Path graphic This is used to draw the path of tool center commanded by the
part program.

Solid graphic This is used to draw the workpiece figure machined by tool
movement commanded by the part program.

The path graphic function is used to precisely check the part program for
drawing the tool path with a line.  The solid graphic function is used to
draw the workpiece figure to be machined with a program.  Thus, it is easy
to recognize roughly the part program.  These two functions can be used
freely by switching them.

The path graphic feature calls a program from memory and draws the tool
path specified by the program.  This feature provides the following
functions.

The user can choose the drawing plane from four types of plane views,
two types of isometric projection views, and biplane view.

When an isometric projection view is used, the drawing can be rotated
horizontally and vertically.

A drawing can be enlarged or reduced by specifying a magnification from
0.01 to 100 with respect to the actual size.  In addition, a drawing can be
automatically enlarged or reduced by setting maximum and minimum
values.

A range of the program can be drawn by specifying a starting sequence
number and ending sequence number.

The user can specify whether to apply tool length offset and cutter
compensation to drawing.  This way, either the actual programmed path
or the tool path can be drawn.

When a tool path is drawn on a color CRT screen, the colors used can be
chosen from seven colors including white.  The color of the tool path can
be changed according to the T code.

The CNC automatically determines the maximum and minimum drawing
coordinates for each program.  This means that drawing can be performed
with a magnification automatically determined according to these
maximum and minimum values.

Except for biplane views the user can enlarge all types of drawings by a
factor of up to 100 while looking at the drawing that has been made.

The current tool position can be displayed on the screen.

The current position can also be indicated using coordinates.

12.2
DYNAMIC GRAPHIC
DISPLAY

12.2.1
Path Drawing

1. Drawing plane

2. Drawing rotation

3. Drawing enlargement
and reduction

4. Partial drawing

5. Programmed path
and tool path 
drawing

6. Color

7. Automatic scaling

8. Partial enlargement 
drawing

9. Indicating the current
tool position with a 
mark

10. Indicating the 
coordinates of the 
current position

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

599

Coordinate axes and actual size dimension lines are displayed together
with the drawing so that actual size can be referenced.

The first six functions above (1. to 6.) are available by setting the graphic
parameters.  The seventh to ninth functions (7. to 9.) are mainly executed
using soft keys after drawing has been setup.  The tenth function (10.) is
enabled by setting a parameter.  The eleventh function (11.) can be used
at any time.

Path drawing procedure

1 To draw a tool path, necessary data must be set beforehand.

So after press the function AUXGRAPH  key, press soft key [PATH] .  The

“PATH GRAPHIC (PARAMETER)” is displayed.

PATH GRAPHIC (PARAMETER–1) O9501 N0014

AXES P=     4

(XY=0, YZ=1, ZY=2, XZ=3, XYZ=4, ZXY=5, 2P=6)

ANGLE

 ROTATION A=     0

 TILTING A=     0

SCALE K=  0.00

CENTER OR MAX./MIN.

 X= 0.000 Y= 0.000 Z= 0.000

 I= 0.000 J= 0.000 K= 0.000

START SEQ. NO. N=     0

END SEQ. NO. N=     0

NO.      P = S   0 T

 10:20:36      MDI      

[ PARA–1 ][ PARA–2 ][ EXEC ][ SCALE ][ POS ]

PATH GRAPHIC (PARAMETER–2) O9501 N0014

TOOL. COMP. _P= 0

COLOR (0123456)

 PATH  P= 0

 TOOL  Q= 0

 AUTO CHANGE  R= 0

NO.  P = S   0  T
 10:21:20       MDI      

[ PARA–1 ][ PARA–2 ][ EXEC ][ SCALE ][ POS ]

2 There are two screens for setting drawing parameters.
Press the soft key [PARA–1] , [PARA–2]  according to the setting items
for selecting screens.

11. Displaying
coordinate axes and
actual size
dimentions lines

���������

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

600

3 Set the cursor to an item to be set by cursor keys.

4 Input numerics by numeric keys.

5 Press the INPUT  key.

The input numerics are set by these operations and the cursor
automatically moves to the next setting items.  The set data is held even
after the power is turned off.

6 Set the operation mode to the AUTO mode, press function key PRGRM ,

and call the part program which should be drawn.

7 After press function keyAUXGRAPH , and press soft key [PATH]  to redisplay

the PATH GRAPHIC (PARAMETER) screen. Then press soft key
[EXEC]  to display the PATH GRAPHIC (EXECUTION) screen.

PATH GRAPHIC (EXECUTION) O9501 N0014

[ AUTO ][ START ][ STOP ][ REWIND ][ ERASE ]

X

25.8

Y

8 Press soft key [AUTO]  or [START] .  Pressing [AUTO]  enables
automatic scaling.  See item 7 in introduction of path drawing and the
description of soft key [AUTO]  in Explanations for details.  Drawing
is now started.  During drawing, the message “DRAWING” blinks at
the lower–right corner of the screen.

9 Press soft key [STOP]  to pause drawing.  The indication of “STOP”
blinks at the lower right corner on the screen.  Press soft key [START]
to start drawing.  In addition, press soft key [REWIND]  to redraw
from the top of program before pressing soft key [START] .

10 Execute the last of part program (M02/M30) to end drawing.  This
will cause, blinking of the “DRAWING” light to turn off.  The tool
path view drawn can be retained until the power is turned off unless a
new tool path view is drawn or soft key [ERASE]  is pressed.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

601

11 For partial drawing enlargement, display the PATH GRAPHIC
(SCALE) screen by pressing the soft key [ZOOM]  on the PATH
GRAPHIC (PARAMETER) screen of step 1 above.  The tool path is
displayed.

PATH GRAPHIC (EXECUTION) O9501 N0014

[ EXEC ][   ←   ][   →   ][   ↓    ][  ↑   ]

X

25.8

Y

SCALE

1.00

12 Perform positioning of marks displayed at the center of the screen to
the center of the part enlarged using soft keys [←], [→], [↓ ], and [↑ ].

13 Set the relative magnification rate for the tool path view which is
being drawn using the address keys “P” and “M”.  When you press
address key P or M, the following results:

Address key Function

P The relative magnification rate increases by 0.1.

M The relative magnification rate decreases by 0.1.

The relative magnification rate is continuously changed by keeping
the address keys depressed.  It is possible to magnify up to 100 times
in reference to the actual dimensions.

14 Press the soft key [EXEC]  after setting the relative magnification rate.
Then, the screen automatically changes to “TOOL PATH
(EXECUTION)” and the drawing of set partial enlargement view
starts.  The set partial enlargement status is valid until soft key
[AUTO]  or [ERASE]  is pressed.

Partial enlargement

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

602

15 To display a mark at the current tool position, display the PATH
GRAPHIC (POSITION) screen by pressing soft key [POS]  on the
PATH GRAPHIC (PARAMETER) screen of step 1 above.  This mark
blinks at the current tool center position on the tool path.

PATH GRAPHIC (POSITION) O9501 N0014

[ PARA–1 ][ PARA–2 ][ EXEC ][ SCALE ][ POS ]

X

25.8

Y

The relationship between the setting value and drawing planeis as shown
below:

Setting value Drawing plane

0 Plane view (XY)

1 Plane view (YZ)

2 Plane view (ZY)

3 Plane view (XZ)

4 Isometric projection (XYZ)

5 Isometric projection (ZXY)

6 Biplane view (XY,XZ)

The following coordinate systems are selected.

X

Y Z
XY YZ

ZY XZ

X

Y Z

Y

Z

P=0 P=1

P=2 P=3

Fig. 12.2.1 (a)  Coordinate systems for the plane view

Mark display of current
tool position

Explanations

� Drawing plane

� Plane view (XY,YZ,ZY,XZ)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

603

Projector view by isometric can be drawn.

Y

XYZ

X

Z Y

ZXY

XZ

P=4 P=5

Fig. 12.2.1 (b)  Coordinate systems for the isometric projection

X

Y Z

X

P=6

Fig. 12.2.1 (c)  Coordinate systems for the biplane view

Biplanes (XY and XZ) can be drawn simultaneously. The maximum and
minimum coordinate values must be set to draw the biplane view.  The
maximum and minimum coordinate values can also be set by performing
automatic scaling

The direction of the coordinate axis is set when the isometric projection
is the setting of the drawing screen.   The direction is set by horizontal and
vertical rotation angles.  The unit is expressed in degrees.

The horizontal rotation angle is set in the range of –180° to +180° in
reference to the vertical axis.  Set a positive value for clockwise rotation
of the coordinate axis.  Thus, the direction of projection (visual arrow)
becomes counterclockwise.

Rotating

Fig. 12.2.1 (d)  Rotating

The tilting angle of the vertical axis is set in the range of –90° to +90° in
reference to the horizontal axis crossing the vertical axis at a right angle.
When a positive value is set, the vertical axis slants to the other side of
the graphic screen.  Thus, the projection direction (arrow direction)
becomes the horizontal direction.

� Isometric projection
(XYZ,ZXY)

� Biplane view

� ANGLE

� ROTATION

� TILTING

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

604

Tilting

Fig. 12.2.1 (e)  Tilting

Set the magnification rate of drawing from 0.01 to 100.00.  When 1.0 is
set, drawing is carried out in actual dimensions.  When 0 is set, the
drawing magnification rate is automatically set based on the setting of
maximum and minimum coordinate values of drawing.

When a graphics (drawing) magnification of 0 is set, maximum
coordinates on the X–axis, Y–axis, and Z–axis in the workpiece
coordinate system must be set in addresses X, Y, and Z, and minimum
coordinates must be set in addresses I, J, and K, to specify the graphics
(drawing) range.  For biplane view drawing, maximum and minimum
coordinates for drawing must be specified.
When a drawing magnification other than 0 is set, the X, Y, and Z
coordinates of the drawing center in the workpiece coordinate system
must be set in addresses X, Y, and Z.  Addresses I, J, and K are not used.
The table below summarizes the setting requirements described above.

Setting the drawing
magnification rate

Setting
magnification  rate

Address X/Y/Z Address I/J/K

Other than 0 Drawing center coordinate  value of X,
Y, and Z axes

Ignored

0 or biplane view drawing Drawing maximum coordinate value of
X, Y, and Z axes

Drawing minimum coordinate value of
X, Y, and Z axes

Set the start and end sequence numbers of drawing in four digits each.
The part program for drawing is executed from the head and only the part
enclosed by the start sequence and end sequence numbers is drawn.  When
0 is set as the start sequence number, drawing is performed from the head
of the program.  In addition, when 0 is set as the end sequence number,
drawing is performed up to the end of program.  The sequence number is
referred to regardless of either main program or subprogram.

It is possible to set whether the tool path is drawn by making the tool
length offset or cutter compensation valid or invalid.

Setting  value Tool length offset or cutter compensation

0  Perform drawing by making tool compensation valid (an actual tool path is drawn.)

1  Perform drawing by making tool compensation invalid (A programmed path is drawn.)

Always set 0 before drawing when indicating the mark of the current tool
position.

� SCALE

� CENTER OR MAX./MIN.

� START SEQ. NO. and
END SEQ. NO.

� TOOL COMP.ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

605

Specify the color of the tool path.  In the case of monochrome display, it
is not required to set it.  The relationship between the setting value and
color is as shown below:

Setting value Color

0 White

1 Red

2 Green

3 Yellow

4 Blue

5 Purple

6 Light blue

� PATH Specify the color of the tool path.
� TOOL Specify the color of the current position mark of

the tool.
� AUTO CHANGE Set if for changing the color of the tool path

automatically according to the T –code command.

Setting value Function

0 The color of the tool path is not changed.

1 The color of the tool path is changed automatically.

When 1 is set, the setting value of the color designation of PATH is
incremented by 1 every time the T code is commanded. At the same time,
the color of the tool path changes. If the setting value exceeds 6, it returns
to 0.

Software key Function

[AUTO] Automatic scaling is performed.  Obtain the maximum and 
minimum coordinates of the part program before performing
drawing, specify them for the maximum and minimum values
of drawing parameters, and set the drawing magnification rate
to 0 before starting drawing.  Thus, the tool path view is proper-
ly laid out on the screen.

[START] Drawing starts.  When the [START]  is pressed while the 
drawing is not in STOP, the part program starts from the top of
the part program.  Press the [START]  while the drawing is in
stop to allow drawing to be carried out continuously.

[STOP] Stop drawing.  (Single block stop)

[REWIND] Press this key to start drawing from the top of part program.
Searches for the beginning of a part program.

[ERASE] Erase the tool path view which has been drawn.

No part program which has not been registered in memory can be drawn.
Also, it is necessary that the M02 or M30 should be commanded at the
end of the part  program.

� COLOR

� Soft key functions on the
“PATH GRAPHIC
[EXECUTION]”screen

� Graphic program

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

606

The period of mark blinking is short when the tool is moving and becomes
longer when the tool stops.
The mark indicating the current  position of tool is displayed on the XY
plane view when the biplane drawing is performed.

Parameter No. 058#5 is used to specify whether to use � or x as the mark
for indicating the current tool position and the center of a partially
enlarged drawing.

Parameter No. 046#5  is used to specify whether to display the coordinates
of the current position on the tool path drawing screen.

If a program specifies a coordinate system change, parameter No.058#0
is used to specify whether to draw without changing the coordinate
system or to draw by regarding the current drawing position as the current
position in the new coordinate system.

If machine operation is not allowed, no drawing can be carried out.  No
drawing can be made during machine operation.  The setting data and
switches required for drawing are as shown below:

Setting data and switch Status

Tool offset amount Set it properly when performing drawing while
the tool offset amount becomes valid.

Single block Off

Optional block skip Set it properly.

Feed hold Off

The partial enlargement can be carried out on the plane view and isometric
projection view.  No partial enlargement can be made in the drawing of
the biplane view.

In dynamic graphics display, drawing cannot be executed while the
machine is operating even though this is possible in ordinary graphics
display (see Section 12.1).  However, after drawing is executed, the
operator can see how the tool moves along the tool path by operating the
machine while displaying the mark for the current position of the tool.
It is necessary that the setting data and switches related to the machine
operation should be the same status between drawing operation and
machining operation  for properly displaying the current  position of tool
on the drawn tool path.

� Mark for the tool current
position

� Position mark

� Display of the coordinate
value

� �����	�� ��� ����	����

�����


Restrictions

� Graphic condition

� Partial enlargement

� Tool current position

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

607

The solid graphics draws the figure of a workpieces machined by the
movement of a tool.
The following graphic functions are provided :

Solid model graphic is drawn by surfaces so that the machined figure can
be recognized concretely.

It is possible to draw a blank figure before machining.
A rectangular parallelepiped and a circular column or cylinder can be
drawn.  A circular column or cylinder parallel to the X–axis, Y–axis, or
Z–axis can be selected.

It is possible to draw the progress of machining by simulation.

It is possible to draw the final finish machined figure.

The user can choose from four drawing directions and eight tilting angles.

It is possible to draw XY plane views as well as solid model views.  Height
of the workpiece is discriminated by color for color display or brightness
for monochrome display.

In addition to a solid drawing, a triplane view can be drawn.  The user can
choose from four types of plane view and side view positions.   The user
can freely change the cross–section position of a side view.

It is possible to install tools in the direction which is parallel to the X or
Y axis as well as the Z axis.

It is possible to change tools during machining by the part program
command.

12.2.2
Solid Graphics

1. Solid model graphic

2. Blank figure graphics

3. Drawing of machining
progress

4. Drawing of final
machined figure

5. Changing of drawing
direction

6. Plane view graphics

7. Tri–plane view graphic

8. Horizontal hole
machining

9. Tool change during
machining

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

608

Solid graphics drawing procedure

1 To draw a machining profile, necessary data must be set beforehand.

So after press the function key AUXGRAPH , press the soft key [SOLID] .

Then the screen of “SOLID GRAPHIC (PARAMETER)” is displayed.

SOLID GRAPHIC (PARAMETER) O9501 N0014
BLANK FORM P=     2

  X= 0.000 Y= 0.000 Z= 0.000

  I= 0.000 J= 0.000 K= 0.000

TOOL FORM P=     0

R= 0.000 K= 0.000

PROJECTION P=     0

Q=     0 R=     0

INTENSITY P=     0

(0123456) Q=     0 R=     0

START SEQ.NO. N=     0

END SEQ.NO. N=     0

ANIM. SPEED N=     0

NO.  X = S    0 T   
 10:26:35      MDI       
[ BLANK ][ EXEC ][ REVIEW ][ 3–PLN ][      ]

2 Use a cursor key to move the cursor to an item to be set.

3 Input numerics for the item at the cursor using the numeric key.

4 Press theINPUT key.

Input numerics can be set by these operations and the cursor moves to the
next setting item automatically.  The set data is retained even if the power
is turned off.
See Explanations for details on settings.

5 To draw a blank figure, display the SOLID GRAPHIC (BLANK) screen
by pressing soft key [BLANK]  on the SOLID GRAPHIC
(PARAMETER) screen of step 1 above.

SOLID GRAPHIC (BLANK) O9501 N0014

[ ANEW ][ + ROT ][ – ROT ][ +TILT ][ –TILT ]

Z
Y

X

Procedure

� SOLID GRAPHIC
(BLANK)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

609

6 Press soft key [ANEW] .  This allows the blank figure drawing to be
performed based on the blank figure data set.

7 Press soft keys [+ROT] [–ROT] [+TILT] , and [–TILT] , when
performing drawing by changing the drawing directions.  Parameters
P and Q for the drawing direction are changed and the figure is
redrawn with the new parameters.

8 Set the operation mode to the AUTO mode, press function PRGRM key,

and call the subject part program of drawing.

9 To draw a machining profile, display the SOLID GRAPHIC
(EXECUTION) screen by pressing soft key [EXEC]  on the SOLID
GRAPHIC (PARAMETER) screen of step 1 above.

SOLID GRAPHIC (EXECUTION) O0100 N0100

[  A.ST  ][  F.ST  ][ STOP ][ REWIND ][     ]

Z
Y

X

ÔÔÔÔÔ
ÔÔÔÔÔ
ÔÔÔÔÔ
ÔÔÔÔÔÔÔ
ÔÔÔÔÔÔÔ
ÔÔÔÔÔÔÔ
ÔÔÔÔÔÔÔ
ÔÔÔÔÔÔÔÕÕÕÕ

10 Press either soft key [A.ST]  or [F.ST] .  When “STOP” is not displayed
at the lower right corner of the screen, the program is executed from
its head.  “DRAWING” blinks at the lower right corner of screen
during drawing.  When [A.ST]  is pressed, the status of machining in
progress is drawn by simulation.  When [F.ST]  is pressed, the profile
during machining is not drawn.  Only the finished profile produced by
the program is drawn. This allows drawing to be started.

11 Press soft key [STOP]  to stop drawing temporarily.  Drawing is
stopped after drawing the current block and “STOP” blinks at the
lower right corner of screen.  Press soft key [A.ST]  or [F.ST]  when
restarting drawing.  Press soft key [REWIND]  and then the [A.ST]  or
[F.ST]  if redrawing from the head.  It is possible to continue drawing
after changing the solid graphic parameters in temporary stop.

12 When the end of program (M02 or M03) is executed, the drawing
ends and the blinking of “DRAWING” stops. Then, the final finish
figure is drawn on the screen. The drawn figure view is retained until
the power is turned off as long as a new machine figure view is drawn.

� SOLID GRAPHICS
(EXECUTION)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

610

13 The color, intensity, or drawing direction of a machining figure which
has been drawn can be changed and the figure redrawn.
To redraw the figure, first change the parameters for the color,
intensity, or drawing direction on the SOLID GRAPHIC
(PARAMETER) screen shown in step 1, then press soft key
[REVIEW]  to display the SOLID GRAPHIC (REVIEW) screen.

SOLID GRAPHIC (REVIEW) O0100 N0100

[ ANEW ][ +ROT ][ –ROT ][ +TILT ][ –TILT ]

Z

Y

X

ÕÕ

ÕÕ

ÔÔÔÔÔÔ
ÔÔÔÔÔÔ
ÔÔÔÔÔÔ
ÔÔÔÔÔÔ
ÔÔÔÔÔÔ
ÔÔÔÔÔÔ
ÔÔÔÔÔÔÕ

14 Press soft key [ANEW] .  The machining figure is redrawn with the
color, intensity, or drawing direction set in step 13.

15 To redraw the figure in a different direction, press soft key
[+ROT] , [–ROT] , [+TILT] , or [–TILT].  Parameters P and Q for the
drawing direction are changed and the figure is redrawn with the new
paramaters.

� REVIEW

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

611

16 The machined figure can be drawn on the tri–plane view.
To draw a triplane view, press soft key [3–PLN]  on the SOLID
GRAPHIC (PARAMETER) screen of step 1 above.  The SOLID
GRAPHIC (3–PLANE) screen appears.

SOLID GRAPHIC (3–PLANE) 01126 N01126

[     ][  �   ][  �   ][  �   ][  �   ]

17 Each time soft key [    ] is pressed, the side–view drawings

displayed change as follows.

Right view and rear view

Rear view and left view

Left view and front view

Front view and right view

18 The sectional position of side view can be changed by the soft keys
[←], [→], [↑ ], and [↓ ]. 
With the sectional position of the left/right side view, the marks � and
� indicating the sectional position can be moved using the soft keys
[←] and [→].  
With the sectional position of rear/front side view, the marks � and �
indicating the sectional position can be moved using the soft keys [↑ ],
and [↓ ].  Keep the keys depressed to change sectional/views
continuously.

� Triplane view drawing

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

612

Set the type of blank figure under P.  The relationship between the setting
value and figure is as follows:

P Blank figure

0 Rectangular parallelepiped  (Cubed)

1 Column or cylinder (parallel to Z–axis)

2 Column or cylinder (parallel to X–axis)

3 Column or cylinder (parallel to Y–axis)

Set the X–axis, Y–axis, and Z–axis coordinate values of standard point
of materials in workpiece coordinate system to the addresses X, Y, and Z.
The standard point of materials is the corner point  in the negative
direction in the case of rectangular parallelepiped blank figure and the
center point of bottom in the case of column and cylinder materials.

Set the dimensions of materials.  The relationship between the addresses
I, J, and K and setting value is as shown below:

Material I J K

Rectangular Length in X–axis
direction

Length in Y–axis
direction

Length in Z–axis
direction

Column Radius of circle 0 Length of column

Cylinder Radius of exter-
nal circle

Radius of internal
circle

Length of cylinder

Z

K
Y

J

I
(X,Y,Z) J

I

X

(X,Y,Z)

K

Explanations

GRAPHICS PARAMETER

� BLANK FORM

♦ BLANK FORM (P)

♦ Material positions
(X,Y,Z)

♦ Material dimensions
(I,J,K)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

613

Set the machining direction of tools.  The relationship between the setting
value and machining direction is  as shown below.

P Machining direction of tools

0,1 Parallel to the Z–axis (perform machining from the + direction)

2 Parallel to the X–axis (perform machining from the + direction)

3 Parallel to the Y–axis (perform machining from the + direction)

4 Parallel to the Z–axis (perform machining from the – direction)

5 Parallel to the X–axis (perform machining from the – direction)

6 Parallel to the Y–axis (perform machining from the – direction)

Set the dimensions of tool.  The relationship between the displayed
address and setting value is as shown below:

Address Setting numerics

D
R

Radius of tool

K Distance from the program point to tool tip  (normally 0)

K

R
Program point

Tip of the tool

The relationship between graphic method and direction and setting value
is as shown below:

P Graphic method and direction

0, 4 Oblique projection view (+ X–axis)

1, 5 Oblique projection view (+ Y–axis)

2, 6 Oblique projection view (– X–axis)

3, 7 Oblique projection view (–Y–axis)

This setting value can also be incremented or decremented by the soft
keys [+ROT]  or [– ROT] .  In this case, if the setting value exceeds 7, it
returns to 0.  If it is smaller than 0, it becomes 7.

� TOOL FORM

♦ Machining tool 
orientation (P)

♦ Dimensions of tools 
(R,K)

� PROJECTION

♦ Graphics method
and direction (P)

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

614

Set the slant direction of the projection axis in the case of oblique
projection drawing.  Moreover, plane view can be specified.  The
relationship between the setting value and slant direction is as shown
below:

Q Slant direction

3 Plane view

2 (0,2) direction ;  α=90°in the figure below

1 (1,2) direction ;  α=60°in the figure below

0 (2,2) direction ;  α=45°in the figure below

–1 (2,1) direction ;  α=30°in the figure below

–2 (2,0) direction ;  α=0°in the figure below

This setting value can also be incremented or decremented by 1 using soft
key [+ TILT]  or [–TILT] .

Example)  The angle of projection is changed by the set value.

Variations of the above figure determined by set values are shown below.

(i) Set value:3 (ii) Set value:  2 (iii) Set value:  1

(iv) Set value:  0 (v) Set value:  –1 (vi) Set value:  –2

(Two–dimensional drawing)
(α=90°) (α=60°)

(α=45°) (α=30°) (α=0°)

αα

�

�

The angle of projection 

(A,B)

♦ Tilting angle (Q)

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

615

Set the direction of the vertical axis.

R VERTICAL AXIS

0, 1 Z–axis

2 X–axis

3 Y–axis

The direction of the vertical axis which is set is effective by executing
graph.

Specify the intensity of the drawing screen when performing drawing on
the monochrome screen, and the color of the drawing screen when
performing drawing on the color screen.  The relationship between the
setting,  intensity, and color is as shown below:
However, when the plane view is displayed on the monochrome screen.
The brighter surface, whichever is specified by P or Q becomes the top
surface.

Setting value Intensity Color

0 Maximum brightness White

1 Red

2
Dark

Green

3
Dark

Yellow

4 ↓ Blue

5

Li ht

Purple

6
Light

Light blue

The direction of the vertical axis which is set is effective by executing
graph.

Address Oblique projection view Plane view Triplane view

P Upper surface Upper surface Upper/lower surface

Q Side surface Middle surface Left/right surface

R Ridge Ridge Ridge

Remarks The intensity/color of
front surface is 

between P and Q

Lower surface 
is blank

The intensity/color of
plane view is between

P and Q

♦ VERTICAL AXIS (R)

� INTENSITY

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

616

P Q

P+Q

P

Q

Blank

P

P+Q Q

Oblique projection view

Plane view

Triplan view

Specify the start sequence number and end sequence number of each
drawing in a four–digit numeric.  The subject part program is executed
from the head.  But only the part enclosed by the start sequence number
and end sequence numeric is drawn.  When 0 is set as the start sequence
number, the program is drawn from its head.  When 0 is set as the end
sequence number, the program is drawn to its end.  The comparison of
sequence number is performed regardless of main program and
subprogram.

Set interval of animated simulation drawing ranging from 0 to 255.
Every time the machining proceeds by the number set, the drawing is
repeated.  If 0 is set, drawing is repeated at every 1 block execution.

Soft key Function

[A.ST] Simulate and draw the progress of machining.

[F.ST] No figure during machining is drawn and only the final fin-
ish figure by that program is drawn.

[STOP] When pressed, stops drawing at the end of block (single
block stop).

[REWIND] Press this key to perform drawing from the head of part
program.  Heading is performed automatically after execu-
tion of program end (M02/M30).

No part program which has not been registered in memory can be drawn.
It is also necessary that the M02 or M30 be commanded at the end of the
part program.

� START SEQ. NO. and
END SEQ. NO.

� ANIM. SPEED

� Soft key functions on the
“SOLID GRAPHIC
(EXECUTION)” screen

� Graphics program

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

617

It is possible to specify BLANK FORM and TOOL FORM in the part
program.  The command format is as shown below.  If it is commanded
during execution of drawing, the item corresponding to the screen of
“SOLID GRAPHIC (PARAMETER)” is set and drawing continues with the
set data.

� Command of BLANK FORM

G10 L90 P_X_Y_Z_I_J_K_ ;

The command value succeeding the address is the same as the numeric
set to the address being displayed at the item of BLANK FORM of
“SOLID GRAPHIC (PARAMETER)”.  If  BLANK FORM is
commanded, drawing continues after a new blank figure is drawn.

� Command of TOOL FORM
G10 L91 P_R_K_ ;

The command value succeeding the address is the same as the numeric
set to the address being displayed at the item of TOOL FORM of screen
“SOLID GRAPHIC (PARAMETER)”.  If 0 is set with the tool radius
value, no machining simulation is performed thereafter.

Parameter No. 046#5  is used to specify whether to display the coordinates
of the current position on SOLID GRAPHIC screen.

In solid graphics, parameter No. 058#1 is used to specify whether to apply
tool length offset.

Parameter No. 058#2 is used to select whether to draw a triplane view with
the third–angle or first–angle projection.

Parameter No. 058#3 is used to specify whether to draw ridges in plane
view drawing.

Parameter No. 058#4 is used to specify whether to display a solid graphics
in the rough mode or in the fine mode.  When a solid graphics is drawn
in the fine mode, the drawing speed is slower than when drawn in the
rough mode.

In triplane drawing, a value can be specified by parameter No. 253 for
changing the position of the cross section while the soft key is held down.
A value from 0 to 10 can be set.  When 0 is specified, a value of 1 is used.

� Specifying the blank
form and tool form in the
part program

� Display of the coordinate
value

� TOOL COMP.

� Graphic method

� Ridge drawing

� Display mode

� Cross section position
change

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/0812. GRAPHICS FUNCTION

618

Right view and rear view

[            ]

Rear view and left view

Front view and right view Left view and front view

[            ]

[            ][            ]

Rear view

Top view

Right side viewLeft side view

Front view

Example)  The side views of the figure below are illustrated.

In the above figure, the side views displayed are switched as follows.

Press

Press

Press Press

Examples

� Side view selection in
triplane drawing

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 12. GRAPHICS FUNCTIONOPERATION

619

Some examples of cross–sectional views are given below for the left view
and front view shown on the previous page.

ÅÅÅÅÅ
ÅÅÅÅÅ
ÅÅÅÅÅ

Sectional view 1

Å
Å
Å
Å
Å

ÅÅ
ÅÅ
ÅÅ

ÅÅÅ
ÅÅÅ

ÅÅÅ
ÅÅÅ
ÅÅÅ

Å
Å

ÅÅ
ÅÅ

Sectional view 2

If the machine operation is not enabled, no drawing can be made.  No
drawing can be made during operation of machine.  The main setting data
and switches needed on drawing are as shown below:

Setting data/switch Status needed for drawing

Cutter compensation value It is necessary to set the cutter compensation val-
ue properly.  A valid tool length compensation val-
ue must be specified if a figure is drawn with tool
length compensation enabled.

Single block Off

Optional block skip Properly set it.

Feed hold Off

Tools which set the tool figure are limited to the cylinder figure
(equivalent to flat end mill).

In solid graphics, paths based on helical interpolation cannot be drawn.

� Cross section position
selection in triplane
drawing

Limitations

� Graphic condition

� Tool form

� Helical interpolation

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/08
13. DISPLAY AND OPERATION

OF 00–MC

620

13 DISPLAY AND OPERATION OF 00–MC
The CRT/MDI panel of 00–MC consists of a CRT display (14″ color) and
keyboard.  Contents of display and operation by key input are completely
different depending on whether the CNC screen or MMC screen is
displayed on the CRT/MDI panel.  In this manual, the operation when
only the CNC screen is displayed is described.  Refer to the manual of
machine tool builder for MMC screen.

AUX
GRAPH

MMC/
CNC

SHIFT

POWER

RESET
OUTPUT
START

/

.

A

.

B

.

C

.

D

$

E

%

F

&

G

.

H I J K

L M N

SP

O

>

P

.

Q

–

R

<

S

>

T

[

U

]

V

.{

W

}

X

:

Y

;

Z

.

EOB

7 8 9 ALTER

4

.

5 6 INSRT

1 2 3

.

DELET

–

:.

0

.

.

.

INPUT

POS PRGRM

.

CAN

DGNOS
PARAM

OPR
ALARM

FUNC

Reset key

MMC/CNC
swich key

Shift key

Start/output key

Program editing keys

Input key

Function keys

I+OFF O+OFF

MENU
OFSET

Fig. 13  MDI for 00–MC

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
13. DISPLAY AND OPERATION

 OF 00–MCOPERATION

621

Press “CNC” key on the CRT/MDI panel to display the CNC screen when
the MMC screen is displayed on the CRT display of the CRT/MDI panel.
The CNC screen consists of a variable section and a fixed section.  The
variable section is the part that is surrounded by the frame at the bottom
right, and its display contents are the same as displayed on the 9″ CRT
display of 0–MC.  Therefore, the screen selected by function key, page
key, cursor key, and soft key is displayed.  
The fixed section is the rest of the above variable section, and its display
contents are position data, operation time (optional), modal data, and S,
T command value, as shown on the screen.  Display items of this section
cannot be changed by the screen selection operation.  However, its display
contents are always renewed.

ACTUAL POSITION (ABSOLUTE)

PART COUNT 0

RUN TIME 29H 47M

CYCLE TIME 0H 0M 0S

(MODAL)
G64 G00 F

G17 R
G91 P
G22 Q 
G94 H
G21 M
G40 S
G49 T
G80
G98
G67
G54

ABC REL ALL PRGRM DGNOS

PARAMETER
NO. DATA NO. DATA
0001 10000100 0011 00000000
0002 00000011 0012 00000001
0003 00000000 0013 10000000
0004 01110111 0014 00000000
0005 01110111 0015 00000000
0006 01110111 0016 00000000
0007 01110111 0017 01111111
0008 00000011 0018 00000000
0009 01000100 0019 00000000
0010 11000100 0020 00000000

NO. 0001 =
MDI

�

X 0.000 O0009
Y 0.000
Z 0.000 N0009

variable section

Fixed section

Fig. 13.1

13.1
DISPLAY

ww
w.

cn
cc

en
ter

.co
m



OPERATION B–61404E/08
13. DISPLAY AND OPERATION

OF 00–MC

622

Key operation can only be done when the CNC screen is displayed on the
CRT display of the CRT/MDI panel.  Address keys and numerical keys
are independently arranged on 00–MB.  However, inputting data is

exactly the same as that of 0–MB.  The page key  , cursor key

 , and selection key  on the software operator’s panel

are of combined use with the function key.  Press the corresponding key
for use as a page key, cursor key, and selection key on the software
operator’s panel.  Press the corresponding key while pressing the
“FUNC” key as the function key.
Five keys on the right half ten keys are effective for the variable section,
and the other five keys on the left half are effective for selecting position
display data in the fixed section.
When the number is specified by a method like the parameter screen,

because there is no NO. key use the cursor key  instead.

13.2
OPERATION

ww
w.

cn
cc

en
ter

.co
m



IV.  MAINTENANCE

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. METHOD OF REPLACING BATTERYMAINTENANCE

625

1 METHOD OF REPLACING BATTERY
This chapter describes the method of replacing batteries as follows.

1.1  REPLACING CNC BATTERY FOR MEMORY BACK–UP
1.2  REPLACING BATTERIES FOR ABSOLUTE PULSE CODER

ww
w.

cn
cc

en
ter

.co
m



MAINTENANCE B–61404E/081. METHOD OF REPLACING BATTERY

626

When the message “BAT” appears at the bottom of the screen, replace the
backup batteries for the CNC memory according to the procedure
described below.

Procedure for replacing CNC battery for memory back–up

1 Have three commercially available fresh alkaline R20 (D) batteries
handy.

2 Switch on the machine (CNC).  (When replacing the batteries, keep
the CNC switched on.  If you replace the batteries with the CNC
switched off, the memory contents will be lost.)

3 Loosen the screws for the battery case cover and remove it.  For the
location of the battery case, refer to the relevant operating manual
issued by the machine builder.

4 Replace the batteries in the battery case with the fresh ones you have
handy.  Be careful for the orientation of the batteries.  Of the three
batteries, the middle one is in the orientation opposite to the other
two.

5 After replacing the batteries, put the battery case cover back in place.

6 Press the RESET  key and ensure the message “BAT” disappears.

Ç
Ç

ÇÇ�
�

�
�

�

�

Screw

Cover

1.1
REPLACING CNC
BATTERY FOR
MEMORY BACK–UP

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 1. METHOD OF REPLACING BATTERYMAINTENANCE

627

If absolute pulse coder alarm 3n7 (where n is an axis number) occurs,
replace the batteries (alkaline) for the absolute pulse coder according to
the procedure described below.

Procedure for replacing batteries for absolute pulse coder

1 Have three commercially available fresh alkaline R20 (D) batteries
handy.

2 Switch on the machine (CNC).  (When replacing the batteries, keep
the CNC switched on.  If you replace the batteries with the CNC
switched off, the memory contents will be lost.)

3 Loosen the screws for the battery case cover and remove it.  For the
location of the battery case, refer to the relevant operating manual
issued by the machine builder.

4 Replace the batteries in the battery case with the fresh ones you have
handy.  Be careful for the orientation of the batteries.  (Place the two
batteries in the orientation opposite to the other two as shown below.)

5 After replacing the batteries, put the battery case cover back in place.

6 Switch the machine (CNC) off and on again, and ensure that alarm
3n7 does not occur.

Ç

ÇÇ

Screw

Cover

1.2
REPLACING
BATTERIES FOR
ABSOLUTE PULSE
CODER

���������

ww
w.

cn
cc

en
ter

.co
m



APPENDIX

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 A. TAPE CODE LISTAPPENDIX

631

A TAPE CODE LIST
ISO code EIA code Meaning

Character 8 7 6 5 4 3 2 1 Character 8 7 6 5 4 3 2 1 Without
custom
macro B

With 
custom
macro B

0 � � � 0 � � Number 0

1 � � � � � 1 � � Number 1

2 � � � � � 2 � � Number 2

3 � � � � � 3 � � � � Number 3

4 � � � � � 4 � � Number 4

5 � � � � � 5 � � � � Number 5

6 � � � � � 6 � � � � Number 6

7 � � � � � � � 7 � � � � Number 7

8 � � � � � 8 � � Number 8

9 � � � � � 9 � � � � Number 9

A � � � a � � � � Address  A

B � � � b � � � � Address B

C � � � � � c � � � � � � Address C

D � � � d � � � � Address D

E � � � � � e � � � � � � Address E

F � � � � � f � � � � � � Address F

G � � � � � g � � � � � � Address G

H � � � h � � � � Address H

I � � � � � i � � � � � � Address I

J � � � � � j � � � � � Address J

K � � � � � k � � � � Address K

L � � � � � l � � � � Address L

M � � � � � m � � � � Address M

N � � � � � n � � � � Address N

O � � � � � � � o � � � � Address O

P � � � p � � � � � � Address P

Q � � � � � q � � � � Address Q

R � � � � � r � � � � Address R

S � � � � � s � � � � Address S

T � � � � � t � � � � Address T

U � � � � � u � � � � Address U

V � � � � � v � � � � Address V

W � � � � � � � w � � � � Address W

X � � � � � x � � � � � � Address X

Y � � � � � y � � � � Address Y

Z � � � � � z � � � � Address Z

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08A. TAPE CODE LIST

632

ISO code MeaningEIA code

Character With 
custom
macro B

Without
custom
macro B

12345678Character12345678

DEL � � � � � � � � � Del � � � � � � � � � �

NUL � Blank � � �

BS � � � BS � � � � � �

HT � � � Tab � � � � � � � �

LF or NL � � � CR or EOB � �

CR � � � � � ___ � �

SP � � � SP � � � �

% � � � � � ER � � � �

( � � � (2–4–5) � � � �

) � � � � � (2–4–7) � � � �

+ � � � � � + � � � � �

– � � � � � – � �

: � � � � � ___

/ � � � � � � � / � � � �

. � � � � � . � � � � � �

# � � � � � Parameter
(No.0044)

$ � � � ___ ∆ �

& � � � � � & � � � � ∆ �
� � � � � � ___ ∆ �

* � � � � � Parameter
(No.0042)

∆

, � � � � � , � � � � � �

; � � � � � � � ___ ∆ ∆

< � � � � � ___ ∆ ∆

= � � � � � � � Parameter
(No.0043)

∆

> � � � � � � � ___ ∆ ∆

? � � � � � � � ___ ∆ �

@ � � � ___ ∆ �

” � � � ___ ∆ ∆

[ � � � � � � � Parameter
(No.0053)

∆

] � � � � � � � Parameter
(No.0054)

∆

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 A. TAPE CODE LISTAPPENDIX

633

NOTE
1 The symbols used in the remark column have the following meanings.

(Space) : The character will be registered in memory and has a specific meaning.  
If it is used incorrectly in a statement other than a comment, an alarm occurs.

� : The character will not be registered in memory and will be ignored.
� : The character will be registered in memory, but will be ignored during program execution.
� : The character will be registered in memory.  If it is used in a statement other than a

comment, an alarm occurs.
� : If it is used in a statement other than a comment, the character will not be registered in

memory.  If it is used in a comment, it will be registered in memory.
2 Codes not in this table are ignored if their parity is correct.
3 Codes with incorrect parity cause the TH alarm. But they are ignored without generating the

TH alarm when they are in the comment section.
4 A character with all eight holes punched is ignored and does not generate TH alarm in EIA code.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08
B. LIST OF FUNCTIONS AND 

TAPE FORMAT

634

B LIST OF FUNCTIONS AND TAPE FORMAT
Some functions cannot be added as options depending on the model.
In the tables below, PI _:presents a combination of arbitrary axis
addresses using X,Y,Z,A,B and C (such as X_Y_Z_A_).
x = 1st basic axis (X usually) 
y = 2nd basic axis (Y usually) 
z = 3rd basic axis (Z usually)

Functions Illustration Tape format

Positioning (G00) PI

Start point

G00    _ ;PI

Linear  interpolation (G01) PI

Start point

G01    _ F_;PI

Circular interpolation 
(G02, G03)

(x, y)

G03(x, y)

JR

I

G02

Start point

Start point

R

I

J

G17
G02

G03
X_ Y_

R_

I_ J_
F_ ;

G18
G02

G03
X_ Z_

R_

I_ K_
F_ ;

G19
G02

G03
Y_ Z_

R_

J_ K_
F_ ;

Helical cutting (G02, G03)

(x, y)

(xyz)

z

Start 
point

For XY–plane G03

α : Arbitrary address except a 
circular interpolation axis

G17
G02

G03
X_ Y_

R_

I_ J_
α_ F_ ;

G18
G02

G03
X_ Z_

R_

I_ K_
α_ F_ ;

G19
G02

G03
Y_ Z_

R_

J_ K_
α_ F_ ;

Dwell (G04)
G04

X_ ;
P_

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
B. LIST OF FUNCTIONS AND

 TAPE FORMATAPPENDIX

635

Functions Tape formatIllustration

Exact  stop (G09)
Velocity

Time

Inposition check

G09

G01_

G03_
G02_ _ ;

Change of offset value by
program (G10)

Tool offset value (offset memory B)
G10 L10 P_ R_ ;

Wear offset value (offset memory B)
G10 L11 P_ R_ ;

Workpiece origin offset value
G10 L2 P_ IP_ ;
G10 L20 P_ IP_ ;

Cutter compensation 
(G40 – G42)

ÇÇÇ
ÇÇÇ
ÇÇÇ

ÇÇÇ
ÇÇÇ
ÇÇÇ
ÇÇÇÇ
ÇÇÇÇ
ÇÇÇÇ

G41

G42
G40

G17
G18
G19

G40
G41
G42

H_ ;
D_ ;

H, D : Cutter compensation number
G40 : Cancel

_PI

Tool length offset 
(G43, G44, G49)

Z

Offset
G43

α_ H_ ;
G44

G43
H_ ;

G44

H : Tool offset number
G49 : Cancel

Tool offset
(G45 – G48) G45ÙÙÙÙ

ÙÙ

ÙÙÙÙÙ

ÙÙ
ÙÙ

G46

G47

G48

Elongated

Reduced

Elongated twofold

Reduced to half
: Amount of compensation,

PI

G45
G46
G47
G48

_ D_ ;

D : Tool offset number
P : Scale factor

PI

Scaling (G50, G51)

P1’

P1 P2

P4 P3

P2’

P4’ P3’
PI

G51        _ P_ ;
P : 
G50 ;   Cancel

PIww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08
B. LIST OF FUNCTIONS AND 

TAPE FORMAT

636

Functions Tape formatIllustration

Local coordinate system 
setting (G52)

x

y

Local coordinate
system

Workpiece coordinate
system

PI

G52      _ ;PI

Machine coordinate 
system selection (G53)

G53       _ ;PI

Workpiece coordinate
system selection 
(G54 – G59)

Workpiece
coordinate system

Machine coordinate system

Workpiece 
zero point
offset

PI
G54
   :
G59

_ ;PI

Single direction posiitoning
(G50)

PI G60      _ ;PI

Inch/millimeter 
conversion (G20, G21)

G20 ; Inch input

G21 ; Millimeter input

Stored stroke check
(G22, G23)

(XYZ)

(IJK)

G22 X_ Y_ Z_ I_ J_ K_ ;

G23 ;     Cancel

Reference position return 
check (G27)

Start point

PI G27    _ ;PI

Reference position return
(G28)
2nd, 3rd, 4th reference
position return (G30)

Start point

Reference position

Intermediate position

(G28)

PI

G28    _ ;

G30P
P2
P3
P4

_ ;

PI

PI

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
B. LIST OF FUNCTIONS AND

 TAPE FORMATAPPENDIX

637

Functions Tape formatIllustration

Return from reference 
position to start point (G29)

Intermediate position

Reference position

PI

G29    _ ;PI

Skip function (G31)

Start point
Skip signal

PI G31    _ F_;PI

Thread cutting (G33) F Equal lead thread cutting

G33    _ F_;PI

Cutting mode,
Exact stop mode,
Tapping mode,
Automatic corner override 
mode

v

t
G64

v

t
G60

t

G64_ ; Cutting mode
G60_ ; Exact stop mode
G62_ ;
     Automatic corner override mode
G63_ ; Tapping mode

Custom macro
(G65, G66, G67)

G65 P_ ;
O_ ;

M99 ;

Macro One–shot call
G65P <argument>;
P:  Program number

Modal call
G66 P <argument>
G67; cancel

Coordinate system rotation
(G68, G69) Y

X
(x y)

α

For the XY plane

G68

G69 ;     Cancel

G17 X_ Y_ 
G18 Z_ X_
G19 Y_ Z_

R α �

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08
B. LIST OF FUNCTIONS AND 

TAPE FORMAT

638

Functions Tape formatIllustration

Canned cycles 
(G73, G74, G80 – G89)

Refer to II.14.  FUNCTIONS TO SIMPLIFY
PROGRAMMING

G80 ; Cancel

G73
G74
G76
G81
   :
G89

X_ Y_ Z_ P_ Q_ R_ F_ K_ ;

Absolute/incremental 
programming (G90/G91)

G90_ ; Absolute command

G91_ ; Incremental command

G90_ G91_ ; Combined use

Change of workpiece 
coordinate system (G92) ÇÇ

ÇÇPI

G92    _ ;PI

Initial point return / R point
return (G98, G99)

G99

G98

R point

Z point

I point
G98  ;
G99  ;

Constant surface speed 
control (G96, G97)

����� �	 ���
���� G96 S_ ;
G97 ;   Cancel

Polar coordinate input
(G15, G16)

Yp

Xp

Xp

Yp

Local coordinate system

Workpiece coordinate system

G17 G16 Xp_ Yp … ;
G18 G16 Zp_ Xp … ;
G19 G16 Yp_ Zp … ;
G15 ;  Cancel

Automatic tool length 
measurement (G37)

Start 
point

Measurement
position reached
signal

Measurement 
position

G37 Z… ;

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 C. RANGE OF COMMAND VALUEAPPENDIX

639

C RANGE OF COMMAND VALUE

Increment system

IS–B IS–C

Least input 
increment

0.001 mm 0.0001 mm

Least command 
increment

0.001 mm 0.0001 mm

Max. program-
mable dimension

±99999.999 mm ±9999.9999 mm

Max. rapid traverse
Notes

100000 mm/min 24000 mm/min

Feedrate range 
Notes

1 to 100000 mm/min 1 to 12000 mm/min

Incremental feed 0.001, 0.01, 0.1, 1 mm/step 0.0001, 0.001, 0.01, 0.1
mm/step

Tool compensation 0 to ±999.999 mm 0 to ±999.9999 mm

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

Linear axis

� In case of millimeter
input, feed screw is
millimeter

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08C. RANGE OF COMMAND VALUE

640

Increment system

IS–B IS–C

Least input 
increment

0.0001 inch 0.00001 inch

Least command 
increment

0.001 mm 0.0001 mm

Max. program-
mable dimension

±9999.9999 inch ±393.70078 inch

Max. rapid traverse
Notes

100000 mm/min 24000 mm/min

Feedrate range 
Notes

0.01 to 4000 inch/min 0.01 to 480 inch/min

Incremental feed 0.0001, 0.001, 0.01, 0.1
inch/step

0.00001, 0.0001, 0.001,
0.01 inch/step

Tool compensation 0 to ±99.9999 inch 0 to ±99.99999 inch

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

Increment system

IS–B IS–C

Least input 
increment

0.0001 inch 0.00001 inch

Least command 
increment

0.0001 inch 0.00001 inch

Max. program-
mable dimension

±9999.9999 inch ±999.99999 inch

Max. rapid traverse
Notes

4000 inch/min 960 inch/min

Feedrate range 
Notes

0.01 to 4000 inch/min 0.01 to 480 inch/min

Incremental feed 0.0001, 0.001, 0.01, 0.1
inch/step

0.00001, 0.0001, 0.001,
0.01 inch/step

Tool compensation 0 to ±99.9999 inch 0 to ±99.99999 inch

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

� In case of inch input,
feed screw is millimeter

� In case of inch input,
feed screw is inch

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 C. RANGE OF COMMAND VALUEAPPENDIX

641

Increment system

IS–B IS–C

Least input 
increment

0.001 mm 0.0001 mm

Least command 
increment

0.0001 inch 0.00001 inch

Max. program-
mable dimension

±99999.999 mm ±9999.9999 mm

Max. rapid traverse
Notes

4000 inch/min 960 inch/min

Feedrate range 
Notes

1 to 100000 mm/min 1 to 12000 mm/min

Incremental feed 0.001, 0.01, 0.1, 1 mm/step 0.0001, 0.001, 0.01, 0.1
mm/step

Tool compensation 0 to ±999.999 mm 0 to ±999.9999 mm

Dwell time 0 to 99999.999 sec 0 to 9999.9999 sec

Increment system

IS–B IS–C

Least input 
increment

0.001 deg 0.0001 deg

Least command 
increment

0.001 deg 0.0001 deg

Max. program-
mable dimension

±99999.999 deg ±9999.9999 deg

Max. rapid traverse
Notes

100000 deg/min 24000 deg/min

Feedrate range
(metric input)
Notes

1 to 100000 deg/min 1 to 12000 deg/min

Feedrate range 
(inch input) Notes

1 to 6000 deg/min 1 to 600 deg/min

Incremental feed 0.001, 0.01, 0.1, 1 deg/step 0.0001, 0.001, 0.01, 0.1
deg/step

NOTE
The feedrate range shown above are limitations depending
on CNC interpolation capacity.  As a whole system,
limitations depending on servo system must also be
considered.

� In case of millimeter
input, feed screw is inch

Rotation axis

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08D. NOMOGRAPHS

642

D NOMOGRAPHS

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 D. NOMOGRAPHSAPPENDIX

643

The leads of a thread are generally incorrect in δ1 and δ2, as shown in  Fig.
D.1 (a), due to automatic acceleration  and  deceleration.
Thus distance allowances must be made to the extent of δ1 and δ2 in the
program.

δ1δ2

Fig. D.1 (a)  Incorrect thread position

�2 � T1V

V � 1
60

RL

T1 : Time constant of servo system (sec)
V : Cutting speed (mm/sec)
R : Spindle speed (rpm)
L : Thread feed (mm)

Time constant T1 (sec) of 
the servo system: Usually 
0.033 s.

(mm) (1). . . . . . . . . . . . 

�1 � {t–T1 � T1 exp(–
t

T1
)}V

� � exp(– t
T1

)

(2). . . . . . 

(3). . . . . . 

T1 : Time constant of servo system (sec)
V : Cutting speed (mm/sec)

Time constant T1 (sec) of 
the servo system: Usually 
0.033 s.

The lead at the beginning of thread cutting is shorter than the specified
lead L, and the allowable lead error is  ∆L.  Then as follows.

a � �L
L

When the value of “a” is determined, the time lapse until the thread
accuracy is attained.  The time “t” is substituted in (2) to determine δ1:
Constants V and T1 are determined in the same way as for δ2.  Since the
calculation of δ1 is rather complex, a nomography is provided on the
following pages.

D.1
INCORRECT
THREADED LENGTH

Explanations

� How to determine δ2

� How to determine δ1

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08D. NOMOGRAPHS

644

First specify the class and the lead of a thread.  The thread accuracy, a, will
be obtained at �, and depending on the time constant of cutting feed
acceleration/ deceleration, the δ1 value when V = 10mm / s will be
obtained at �.  Then, depending on the speed of thread cutting, δ1 for
speed other than 10mm/ s can be obtained at �.

Time constant of 
servo system

V=40mm/sec
V=20mm/sec

�

0

δ1 a

L

L

�

�

δ1(V=10mm/sec)

T1

T2

See the graph in  reference later in
the manual for an actual example.

Fig. D.1 (b)  Nomograph

NOTE
The equations for δ1, and δ2 are for when the
acceleration/deceleration time constant for cutting feed is 0.

� How to use nomograph

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 D. NOMOGRAPHSAPPENDIX

645

δ2 δ1

Fig. D.2  Incorrect threaded portion

R : Spindle speed (rpm)
L : Thread lead (mm)

* When time constant T of the 
servo system is 0.033 s.

�2 �
LR

1800 * (mm)

�1 �
LR

1800*
(–1–lna)

� �2(–1–lna)

Following a is a permited value of  thread.

a –1–lna

0.005 4.298

0.01

0.015

0.02

3.605

3.200

2.912

(mm)

(mm)

R : Spindle speed (rpm)
L : Thread lead (mm)

* When time constant T of the 
servo system is 0.033 s.

R=350rpm

L=1mm

a=0.01 then

�2 �
350 � 1

1800
� 0.194

�1 � �2 � 3.605 � 0.701

(mm)

(mm)

D.2
SIMPLE
CALCULATION OF
INCORRECT THREAD
LENGTH

Explanations

� How to determine δ2

� How to determine δ1

Examplesww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08D. NOMOGRAPHS

646

V: speed in thread cutting

Time constant of the
servo system

50msec

V=10mm/sec
(    0.39in/sec)

V=20mm/sec
(    0.79in/sec)

V=30mm/sec
(    1.18in/sec)

V=40mm/sec
(   1.57in/sec)

V=2in/sec V=1in/sec

δ1 (V=10mm/sec)

33msec

δ1
8  (mm)

0.3 (in)

δ1

6 4 2 0

0.2 0.1

0.007 0.010 0.015 0.020 0.025
Metric thread
JIS class 1
JIS class 2

Unified
thread
JIS 2A
JIS 3A
(Theoretical
accuracy)

3.3 3.0 2.5 2.01.5 1.25 1.0 0.9 0.75 0.6 0.4 0.3 (mm) Lead L

a= ( ∆L
L

5.0 4.0 3.5 3.0 2.5 2.0 1.751.5 1.25 1.0 0.9 0.8 0.75 (mm)
4 5 6 7 8 910 121314 161820

6 7 8 9 1012 14161820
Ridges/inch

)

Lead L

Ridges/inch

=.. =.. =.. =..

Nomograph for obtaining approach distance  δ1

� Reference

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 D. NOMOGRAPHSAPPENDIX

647

When servo system delay (by exponential acceleration/deceleration at
cutting or caused by the positioning system when a servo motor is used)
is accompanied by cornering, a slight deviation is produced between the
tool path (tool center path) and the programmed path as shown in Fig. D.3
(a).
Time constant T1 of the exponential acceleration/deceleration is fixed to
0.

θ

V1

V2

Tool path

Programmed path

Fig. D.3 (a)  Slight deviation between the tool path and
 the programmed path

This tool path is determined by the following parameters:

� Feedrate (V1, V2)

� Corner angle (θ)
� Exponential acceleration / deceleration time constant (T1) at cutting

(T1 = 0)

� Presence or absence of buffer register.

The above parameters are used to theoretically analyze the tool path.
When actually programming, the above items must be considered and
programming must be performed carefully so that the shape of the
workpiece is within the desired precision.
In other words, when the shape of the workpiece is not within the
theoretical precision, the commands of the next block must not be read
until the specified feedrate becomes zero. The dwell function is then used
to stop the machine for the appropriate period.

D.3
TOOL PATH AT
CORNER

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08D. NOMOGRAPHS

648

The tool path shown in Fig. D.3 (b) is analyzed based on the following
conditions:
Feedrate is constant at both blocks before and after cornering.
The controller has a buffer register.  (The error differs with the reading
speed of the tape reader, number of characters of the next block, etc.)

θ

V

VX1

VY1
φ1

VY2

VX2

φ2

V

X0

Y

Fig. D.3 (b)  Example of tool path

VX1 � V cos�1

VY1 � V sin�1

VX2 � V cos�2

VY2 � V sin�2

V : Feedrate at both blocks before and after cornering
VX1 : X–axis component of feedrate of preceding block
VY1 : Y–axis component of feedrate of preceding block
VX2 : X–axis component of feedrate of following block
VY2 : Y–axis component of feedrate of following block
θ : Corner angle
φ1 : Angle formed by specified path direction of preceding block 

and X–axis
φ2 : Angle formed by specified path direction of following block 

and X–axis

Analysis

� Description of conditions
and symbols

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 D. NOMOGRAPHSAPPENDIX

649

Y0

X0

V

0

Fig. D.3 (c)  Initial value

The initial value when cornering begins, that is, the X and Y coordinates
at the end of command distribution by the controller, is determined by the
feedrate and the positioning system time constant of the servo motor.

X0 � VX1(T1 � T2)

Y0 � VY1(T1 � T2)

T1:Exponential acceleration / deceleration time constant. (T=0)
T2:Time constant of positioning system (Inverse of position loop gain)

The equations below represent the feedrate for the corner section in
X–axis direction and Y–axis direction.

VX(t) �
Vx1–Vx2
T1–T2

{T1 exp (–
t

T1
)–T2 exp (–

t
T2

)} � Vx2

VY(t) �
VY1–VY2
T1–T2

{T1 exp(–
t

T1
)–T2 exp(–

t
T2

)} � VY2

Therefore, the coordinates of the tool path at time t are calculated from the
following equations:

X(t) � �
t

0

VX(t)dt–X0

�
VX2–VX1
T1–T2

{T1
2
exp(– t

T1
)–T2

2
exp(– t

T2
)}–VX2(T1 � T2–t)

Y(t) � �
t

0

VY(t)dt–Y0

�
VY2–VY1
T1–T2

{T1
2
exp(– t

T1
)–T2

2
exp(– t

T2
)}–VY2(T1 � T2–t)

� Initial value calculation

� Analysis of corner tool
path

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08D. NOMOGRAPHS

650

When a servo motor is used, the positioning system causes an error
between input commands and output results. Since the tool advances
along the specified segment, an error is not produced in linear
interpolation. In circular interpolation, however, radial errors may be
produced, sepecially for circular cutting at high speeds.
This error can be obtained as follows:

�r � 1
2

(T1
2
� T2

2
) V

2

r

�rY

X

(1). . . 

Command path

Actual path

�r : Maximum radius error (mm)
v : Feedrate (mm/s)
r : Circle radius (mm)
T1 : Exponential acceleration/deceleration time constant 

(sec) at cutting (T=0) 
T2 : Time constant of positoning system (sec). 

(Inverse of positon loop gain)

r

Since the machining radius r (mm) and allowable error�r   (mm) of the
workpiece is given in actual machining, the allowable limit feedrate v
(mm /sec) is determined by equation (1).
Since the acceleration/deceleration time constant at cutting which is set
by this equipment varies with the machine tool, refer to the manual issued
by the machine tool builder.

D.4
RADIUS DIRECTION
ERROR AT CIRCLE
CUTTING

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
E. STATUS WHEN TURNING POWER ON,

 WHEN CLEAR AND WHEN RESETAPPENDIX

651

E STATUS WHEN TURNING POWER ON, WHEN CLEARAND WHEN RESET
Parameter No. 046 bit6 is used to select whether resetting the CNC places
it in the cleared state or in the reset state (0: reset state/1: cleared state).
The symbols in the tables below mean the following :

� : The status is not changed or the movement is continued.

� : The status is cancelled or the movement is interrupted.

Item When turning power on Cleared Reset

Setting 
data

Offset value � � �
data

Data set by the MDI 
setting operation

� � �

Parameter � � �

Various 
data

Programs in memory � � �
data

Contents in the buffer
storage

� � � : MDI mode
� : Other mode

Display of sequence 
number

� � (Note 1) � (Note 1)

One shot G code � � �

Modal G code Initial G codes.
(The G20 and G21
codes return to the same
state they were in when
the power was last
turned off.)

Initial G codes.
(G20/G21 are not
changed.)

�

F Zero Zero �

S, T, M � � �

K (Number of repeats) � � �

Work coordinate value Zero � �

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08
E. STATUS WHEN TURNING POWER ON, 

WHEN CLEAR AND WHEN RESET

652

Item ResetClearedWhen turning power on

Action in 
operation

Movement � � �
o eration

Dwell � � �

Issuance of M, S and T
codes

� � �

Tool length compensation � Depending on parameter
No.001#3

� : MDI mode
Other modes depend on
parameter No. 001#3.

Cutter compensation � � � : MDI mode
� : Other modes

Storing called 
subprogram number

� � (Note 2) � : MDI mode
� : Other modes(Note 2)

Output 
signals

CNC alarm signal AL Extinguish if there is no
cause for the alarm

Extinguish if there is no
cause for the alarm

Extinguish if there is no
cause for the alarm

Reference position 
return completion LED

� � (� : Emergency stop) � (� : Emergency stop)

S, T and B codes � � �

M code � � �

M, S and T strobe signals � � �

Spindle revolution signal
(S analog signal)

� � �

CNC ready signal MA ON � �

Servo ready signal SA ON (When other than
servo alarm)

ON (When other than
servo alarm)

ON (When other than
servo alarm)

Cycle start LED (STL) � � �

Feed hold LED (SPL) � � �

NOTE
1 When heading is performed, the main program number is displayed as the sequence number.
2 When a reset is performed during execution of a subprogram, control returns the main program.

Execution cannot be started from the middle of the subprogram.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
F. CHARACTER–TO CODES
CORRESPONDENCE TABLEAPPENDIX

653

F CHARACTER–TO CODES CORRESPONDENCE TABLE
Character Code Comment Character Code Comment

A 065 6 054

B 066 7 055

C 067 8 056

D 068 9 057

E 069 032 Space

F 070 ! 033 Exclamation mark

G 071 ” 034 Quotation mark

H 072 # 035 Hash sign

I 073 $ 036 Dollar sign

J 074 % 037 Percent

K 075 & 038 Ampersand

L 076 ’ 039 Apostrophe

M 077 ( 040 Left parenthesis

N 078 ) 041 Right parenthesis

O 079 * 042 Asterisk

P 080 + 043 Plus sign

Q 081 , 044 Comma

R 082 – 045 Minus sign

S 083 . 046 Period

T 084 / 047 Slash

U 085 : 058 Colon

V 086 ; 059 Semicolon

W 087 < 060 Left angle bracket

X 088 = 061 Equal sign

Y 089 > 062 Right angle bracket

Z 090 ? 063 Question mark

0 048 @ 064 “At” mark

1 049 [ 091 Left square bracket

2 050 ^ 092

3 051 ¥ 093 Yen sign

4 052 ] 094 Right square bracket

5 053 _ 095 Underscore

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

654

G ALARM LIST
1) Program errors (P/S alarm)

Number Meaning Contents and  remedy

000 PLEASE TURN OFF POWER A parameter which requires the power off was input, turn off power.

001 TH PARITY ALARM TH alarm (A character with incorrect parity was input). Correct the tape.

002 TV PARITY ALARM TV alarm (The number of characters in a block is odd). This alarm will
be generated only when the TV check is effective.

003 TOO MANY DIGITS Data exceeding the maximum allowable number of digits was input.
(Refer to the item of max. programmable dimensions.)

004 ADDRESS NOT FOUND A numeral or the sign “ – ” was input without an address at the beginning
of a block. Modify the program .

005 NO DATA AFTER ADDRESS The address was not followed by the appropriate data but was followed
by another address or EOB code. Modify the program.

006 ILLEGAL USE OF NEGATIVE SIGN Sign “ .” input error (Sign “ – ” was input after an address with which it
cannot be used. Or two or more “ – ” signs were input.) 
Modify the program.

007 ILLEGAL USE OF DECIMAL POINT Decimal point “ – ” input error (A decimal point was input after an address
with which it can not be used.  Or two decimal points were input.)
Modify the program.

008 ILLEGAL USE OF PROGRAM END An attempt was made to execute EOR (%) because there was not M02,
M30, or M99 at the end of the program.  Correct the program.

009 ILLEGAL ADDRESS INPUT Unusable character was input in significant area.
Modify the program.

010 IMPROPER G–CODE An unusable G code or G code corresponding to the function not pro-
vided is specified. Modify the program.

011 NO FEEDRATE COMMANDED Feedrate was not commanded to a cutting feed or the feedrate was in-
adequate. Modify the program.

014 CAN NOT COMMAND G95 A synchronous feed is specified without the option for threading / syn-
chronous feed.

015 TOO MANY AXES COMMANDED The number of the commanded axes exceeded that of simultaneously
controlled axes.

020 OVER TOLERANCE OF RADIUS In circular interpolation (G02 or G03), difference of the distance between
the start point and the center of an arc and that between the end point
and the center of the arc exceeded the value specified in parameter No.
876.

021 ILLEGAL PLANE AXIS 
COMMANDED

An axis not included in the selected plane (by using G17, G18, G19) was
commanded in circular interpolation. Modify the program.

025 CANNOT COMMAND F0 IN G02/G03 F0 (fast feed) was instructed by F1 –digit column feed in circular inter-
polation. Modify the program.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

655

Number Contents and  remedyMeaning

027 NO AXES COMMANDED IN G43/G44 No axis is specified in G43 and G44 blocks for the tool length offset type
C.
Offset is not canceled but another axis is offset for the tool length offset
type C. Modify the program.

028 ILLEGAL PLANE SELECT In the plane selection command, two or more axes in the same direction
are commanded.
Modify the program.

029 ILLEGAL OFFSET VALUE The offset values specified by H code is too large.
Modify the program.

030 ILLEGAL OFFSET NUMBER The offset number specified by D/H code for tool length offset or cutter
compensation is too large. Modify the program.

031 ILLEGAL P COMMAND IN G10 In setting an offset amount by G10, the offset number following address
P was excessive or it was not specified.
Modify the program.

032 ILLEGAL OFFSET VALUE IN G10 In setting an offset amount by G10 or in writing an offset amount by sys-
tem variables, the offset amount was excessive.

033 NO SOLUTION AT CRC A point of intersection cannot be determined for cutter compensation C.
Modify the program.

034 NO CIRC ALLOWED IN ST–UP/EXT
BLK

The start up or cancel was going to be performed in the G02 or G03
mode in cutter compensation. Modify the program.

035 CAN NOT COMMANDED G39 G39 is commanded in cutter compensation B cancel mode or on the
plane other than offset plane. Modify the program.

036 CAN NOT COMMANDED G31 Skip cutting (G31) was specified in cutter compensation mode.
Modify the program.

037 CAN NOT CHANGE PLANE IN CRC G40 is commanded on the plane other than offset plane in cutter com-
pensation B. The plane selected by using G17, G18 or G19 is changed
in cutter compensation C mode. Modify the program.

038 INTERFERENCE IN CIRCULAR
BLOCK

Overcutting will occur in cutter compensation C because the arc start
point or end point coincides with the arc center. 
Modify the program.

041 INTERFERENCE IN CRC Overcutting will occur in cutter compensation C.   Two or more blocks
are consecutively specified in which functions such as the auxiliary
function and dwell functions are performed without movement in the cut-
ter compensation mode. Modify the program.

042 G45/G48 NOT ALLOWED IN CRC Tool offset (G45 to G48) is commanded in cutter compensation. Modify
the program.

043 ILLEGAL T–CODE COMMAND In the DRILL–MATE, a T code was not specified together with the M06
code in a block. Alternatively, the Tcode was out of range.

044 G27–G30 NOT ALLOWED IN FIXED
CYC

One of G27 to G30 is commanded in canned cycle mode. 
Modify the program.

046 ILLEGAL REFERENCE RETURN
COMMAND

Other than P2, P3 and P4 are commanded for 2nd, 3rd and 4th refer-
ence position return command.

050 CHF/CNR NOT ALLOWED IN THRD
BLK

Chamfering or corner R is commanded in the thread cutting block.
Modify the program.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

656

Number Contents and  remedyMeaning

051 MISSING MOVE AFTER CHF/CNR Improper movement or the move distance was specified in the block
next to the chamfering or corner R block.
Modify the program.

052 CODE IS NOT G01 AFTER CHF/CNR The block next to the chamfering or corner R block is not G01.  Modify
the program.

053 TOO MANY ADDRESS COMMANDS For systems without the arbitary angle chamfering or corner R cutting,
a comma was specified. For systems with this feature, a comma was fol-
lowed by something other than R or C  Correct the program.

055 MISSING MOVE VALUE IN CHF/CNR In the arbitrary angle chamfering or corner R block, the move distance
is less than chamfer or corner R amount.

058 END POINT NOT FOUND In a arbitrary angle chamfering or corner R cutting block, a specified axis
is not in the selected plane. Correct the program.

059 PROGRAM NUMBER NOT FOUND In an external program number search, a specified program number
was not found. Otherwise, a program specified for searching is being
edited in background processing. Check the program number and ex-
ternal signal. Or discontinue the background eiting.

060 SEQUENCE NUMBER NOT FOUND Commanded sequence number was not found in the sequence number
search. Check the sequence number.

070 NO PROGRAM SPACE IN MEMORY The memory area is insufficient.
Delete any unnecessary programs, then retry.

071 DATA NOT FOUND The address to be searched was not found.  Or the program with speci-
fied program number was not found in program number search.
Check the data.

072 TOO MANY PROGRAMS The number of programs to be stored exceeded 63 (basic), 125 (option)
or, 200 (option). Delete unnecessary programs and execute program
registeration again.

073 PROGRAM NUMBER ALREADY IN
USE

The commanded program number has already been used.
Change the program number or delete unnecessary programs and
execute program registeration again.

074 ILLEGAL PROGRAM NUMBER The program number is other than 1 to 9999.
Modify the program number.

076 ADDRESS P NOT DEFINED Address P (program number) was not commanded in the block which
includes an M98, G65, or G66 command. Modify the program.

077 SUB PROGRAM NESTING ERROR A level larger than the maximum allowable nesting level of subprogram
calls was specified.  Modify the program.

078 NUMBER NOT FOUND A program number or a sequence number which was specified by ad-
dress P in the block which includes an M98, M99, M65 or G66 was not
found.  The sequence number specified by a GOTO statement was not
found.  An attempt was made to call a program being edited in the back-
ground processing mode.  Correct the program.

079 PROGRAM VERIFY ERROR In memory or program collation,a program in memory does not agree
with that read from an external I/O device. Check both the programs in
memory and those from the external device.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

657

Number Contents and  remedyMeaning

080 G37 ARRIVAL SIGNAL NOT 
ASSERTED

In the automatic tool length measurement function (G37), the measure-
ment position reach signal (XAE, YAE, or ZAE) is not turned on within
an area specified in parameter (value ε). 
This is due to a setting or operator error.

081 OFFSET NUMBER NOT FOUND IN
G37

Tool length automatic measurement (G37) was specified without a H
code. (Automatic tool length measurement function) Modify the pro-
gram.

082 H–CODE NOT ALLOWED IN G37 H code and automatic tool compensation (G37) were specified in the
same block. (Automatic tool length measurement function) Modify the
program.

083 ILLEGAL AXIS COMMAND IN G37 In automatic tool length measurement, an invalid axis was specified or
the command is incremental.   Modify the program.

085 COMMUNICATION ERROR When entering data in the memory by using Reader / Puncher interface,
an overrun, parity or framing error was generated. The number of bits
of input data or setting of baud rate or specification No. of I/O unit is in-
correct.

086 DR SIGNAL OFF When entering data in the memory by using Reader / Puncher interface,
the ready signal (DR) of reader / puncher was turned off.
Power supply of I/O unit is off or cable is not connected or a P.C.B. is de-
fective.

087 BUFFER OVERFLOW When entering data in the memory by using Reader / Puncher interface,
though the read terminate command is specified, input is not interrupted
after 10 characters read. I/O unit or P.C.B. is defective.

090 REFERENCE RETURN 
INCOMPLETE

The reference position return cannot be performed normally because
the reference position return start point is too close to the reference posi-
tion or the speed is too slow. Separate the start point far enough from
the reference position, or specify a sufficiently fast speed for reference
position return.

091 MANUAL RETURN IMPOSSIBLE 
DURING PAUSE

A manual return to the reference position was impossible because of the
program being at pause.  Press the reset button to cause a manual 
return.

092 AXES NOT ON THE REFERENCE 
POINT

The commanded axis by G28 (automatic reference position return) or
G27 (reference position return check) did not return to the reference
position.

094 P TYPE NOT ALLOWED 
(COORD CHG)

P type cannot be specified when the program is restarted. (After the au-
tomatic operation was interrupted, the coordinate system setting opera-
tion was performed.) Perform the correct operation according to th oper-
ator’s manual.

095 P TYPE NOT ALLOWED 
(EXT OFS CHG)

P type cannot be specified when the program is restarted.   (After the
automatic operation was interrupted, the external workpiece offset
amount changed.)

096 P TYPE NOT ALLOWED 
(WRK OFS CHG)

P type cannot be specified when the program is restarted.  (After the au-
tomatic operation was interrupted, the workpiece offset amount
changed.)

097 P TYPE NOT ALLOWED 
(AUTO EXEC)

P type cannot be directed when the program is restarted. (After power
ON, after emergency stop or P / S 94 to 97 reset, no automatic operation
is performed.) Perform automatic operation.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

658

Number Contents and  remedyMeaning

098 G28 FOUND IN SEQUENCE 
RETURN

A command of the program restart was specified without the reference
position return operation after power ON or emergency stop, and G28
was found during search.

099 MDI EXEC NOT ALLOWED AFT.
SEARCH

After completion of search in program restart, a move command is given
with MDI.

100 PARAMETER WRITE ENABLE On the PARAMETER(SETTING) screen, PWE (parameter writing en-
abled) is set to 1. Set it to 0, then reset the system.

101 PLEASE CLEAR MEMORY The power turned off while rewriting the memory by program edit opera-
tion.  When this alarm occurs, set the PWE parameter to 1, then switch
on the power while holding down the <DELET> key.  All programs will
be deleted.

109 D/S ALARM A value other than 0 or 1 was specified after P in the G08 code, or no
value was specified.

110 DATA OVERFLOW The absolute value of fixed decimal point display data exceeds the al-
lowable range. Modify the program.

111 CALCULATED DATA OVERFLOW The result of calculation turns out to be invalid, an alarm No.111 is is-
sued.
–1047 to –10–29, 0, 10–29 to 1047

112 DIVIDED BY ZERO Division by zero was specified. (including tan 90°)

113 IMPROPER COMMAND A function which cannot be used in custom macro is commanded.
Modify the program.

114 FORMAT ERROR IN MACRO Custom macro A specified an undefined H code in a G65 block.  There
is an error in other formats than <Formula>.
Modify the program.

115 ILLEGAL VARIABLE NUMBER A value not defined as a variable number is designated in the custom
macro or in high–speed cycle machining.
The header contents are improper.  This alarm is given in the following
cases:
High speed cycle machining

1. The header corresponding to the specified machining cycle number
called is not found.

2. The cycle connection data value is out of the allowable range (0 –
999).

3. The number of data in the header is out of the allowable range (0 –
32767).

4. The start data variable number of executable format data is out of
the allowable range (#20000 – #85535).

5. The last storing data variable number of executable format data is
out of the allowable range (#85535).

6. The storing start data variable number of executable format datais
overlapped with the variable number used in the header.  Modify the
program.

116 WRITE PROTECTED VARIABLE The left side of substitution statement is a variable whose substitution
is inhibited. Modify the program.

118 PARENTHESIS NESTING ERROR The nesting of bracket exceeds the upper limit (quintuple).
Modify the program.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

659

Number Contents and  remedyMeaning

119 ILLEGAL ARGUMENT The SQRT argument is negative. Or BCD argument is negative, and
other values than 0 to 9 are present on each line of BIN argument.
Modify the program.

122 DUPLICATE MACRO MODAL–CALL The macro modal call is specified in double.
Modify the program.

123 CAN NOT USE MACRO COMMAND
IN DNC

Macro control command is used during DNC operation.
Modify the program.

124 MISSING END STATEMENT DO – END does not correspond to 1 : 1.  Modify the program.

125 FORMAT ERROR IN MACRO Custom macro A specified an undefined H code in a G65 block.  
<Formula> format is erroneous.  Modify the program.

126 ILLEGAL LOOP NUMBER In DOn, 1� n �3 is not established. Modify the program.

127 NC, MACRO STATEMENT IN SAME
BLOCK

NC and custom macro commands coexist.
Modify the program.

128 ILLEGAL MACRO SEQUENCE 
NUMBER

The sequence number specified in the branch command was not 0 to
9999. Or, it cannot be searched. Modify the program.

129 ILLEGAL ARGUMENT ADDRESS An address which is not allowed in <Argument Designation > is used.
Modify the program.

130 ILLEGAL AXIS OPERATION An axis control command was given by PMC to an axis controlled by
CNC.  Or an axis control command was given by CNC to an axis con-
trolled by PMC. Modify the program.

131 TOO MANY EXTERNAL ALARM
MESSAGES

Five or more alarms have generated in external alarm message. 
Consult the PMC ladder diagram to find the cause.

132 ALARM NUMBER NOT FOUND No alarm No. concerned exists in external alarm message clear.
Check the PMC ladder diagram.

133 ILLEGAL DATA IN EXT. ALARM MSG Small section data is erroneous in external alarm message or external
operator message. Check the PMC ladder diagram.

135 ILLEGAL ANGLE COMMAND The index table indexing positioning angle was instructed in other than
an integral multiple of the value of the minimum angle.
Modify the program.

136 ILLEGAL AXIS COMMAND In index table indexing.Another control axis was instructed together with
the B axis.
Modify the program.

139 CAN NOT CHANGE PMC CONTROL
AXIS

An axis is selected in commanding by PMC axis control.
Modify the program.

141 CAN NOT COMMAND G51 IN CRC G51 (Scaling ON) is commanded in the tool offset mode.
Modify the program.

142 ILLEGAL SCALE RATE Scaling magnification is commanded in other than 1 – 999999.
Correct the scaling magnification setting .

143 SCALED MOTION DATA 
OVERFLOW

The scaling results, move distance, coordinate value and circular radius
exceed the maximum command value. Correct the program or scaling
mangification.

144 ILLEGAL PLANE SELECTED The coordinate rotation plane and arc or cutter compensation C plane
must be the same. Modify the program.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

660

Number Contents and  remedyMeaning

148 ILLEGAL SETTING DATA Automatic corner override deceleration rate is out of the settable range
of judgement angle. Modify the parameters (No.1710 to No.1714)

150 ILLEGAL TOOL GROUP NUMBER Tool Group No. exceeds the maximum allowable value in the tool life
management.
Modify the program.

151 TOOL GROUP NUMBER NOT
FOUND

The tool group of the tool life management commanded in the machin-
ing program is not set.
Modify the value of program or parameter.

152 NO SPACE FOR TOOL ENTRY The number of tools within one group in the tool life management ex-
ceeds the maximum value registerable.  Modify the number of tools.

153 T–CODE NOT FOUND In tool life data registration, a T code was not specified where one should
be.  Correct the program.

154 NOT USING TOOL IN LIFE GROUP When the group is not commanded in the tool life management, H99 or
D99 was commanded.  Correct the program.

155 ILLEGAL T–CODE IN M06 In the machining program, M06 and T code in the same block do not cor-
respond to the group in use. Correct the program.

156 P/L COMMAND NOT FOUND P and L commands are missing at the head of program in which the tool
group of the tool life management is set. Correct the program.

157 TOO MANY TOOL GROUPS The number of tool groups in the tool life management to be set exceeds
the maximum allowable value.  Modify the program.

158 ILLEGAL TOOL LIFE DATA The tool life to be set is too excessive. Modify the setting value.

159 TOOL DATA SETTING INCOMPLETE During executing a life data setting program, power was turned off. 
Set again.

175 ILLEGAL G107 COMMAND Conditions when performing circular interpolation start or cancel not
correct.  To change the mode to the cylindrical interpolation mode, spec-
ify the command in a format of “G07.1 rotation–axis name radius of cylin-
der.”

176 IMPROPER G–CODE IN G107 Any of the following G codes which cannot be specified in the cylindrical
interpolation mode was specified.

1) G codes for positioning: G28,, G73, G74, G76, G81 – G89, including
the codes specifying the rapid traverse cycle

2) G codes for setting a coordinate system: G52,G92,

3) G code for selecting coordinate system: G53 G54–G59

Modify the program.

177 CHECK SUM ERROR
(G05 MODE)

Check sum error is occurred in the high–speed remote buffer.

178 G05 COMMANDED IN G41/G42
MODE

G05 was commanded in the G41/G42 mode.
Correct the program.

179 PARAMETER SETTING ERROR The number of controlled axes set by the parameter 7510 exceeds the
maximum number. Modify the parameter setting value.

180 COMMUNICATION ERROR 
(REMOTE BUF)

Remote buffer connection alarm has generated. Confirm the number of
cables, parameters and I/O device.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

661

Number Contents and  remedyMeaning

181 FORMAT ERROR IN G81 BLOCK

(Hobbing machine)

G81 block format error

1) T (number of teeth) has not been instructed.

2) Data outside the command range was instructed by either T, L, Q or
P.

Modify the program.

182 G81 NOT COMMANDED
(Hobbing machine)

G83 (C axis servo lag quantity offset) was instructed though synchro-
nization by G81 has not been instructed. Correct the program.

183 DUPLICATE G83 (COMMANDS)
(Hobbing machine)

G83 was instructed before canceled by G82 after compensating for the
C axis servo lag quantity by G83.

184 ILLEGAL COMMAND IN G81

(Hobbing machine)

A command not to be instructed during synchronization by G81 was
instructed.

1) A C axis command by G00, G27, G28, G29, G30, etc. was
instructed.

2) Inch/Metric switching by G20, G21 was instructed.

185 RETURN TO REFERENCE POINT
(Hobbing machine)

G81 was instructed without performing reference position return after
power on or emergency stop.  Perform reference position return.

186 PARAMETER SETTING ERROR

(Hobbing machine)

Parameter error regarding G81

1) The C axis has not been set to be a rotary axis.

2) A hob axis and position coder gear ratio setting error

190 ILLEGAL AXIS SELECT In the constant surface speed control, the specified axis command (P)
contains an illegal value.
Correct the program.

194 SPINDLE COMMAND IN 
SYNCHRO–MODE

Cs contour control or rigid tapping was specified during serial spindle
synchronous control.  Correct the program.

195 SPINDLE CONTROL MODE SWITCH The serial spindle control mode was not switched.  Check the PMC lad-
der program.

197 C–AXIS COMMANDED IN SPINDLE
MODE

A command for Cs–axis movement was issued when the current control
mode is not serial spindle Cs contour control.  Check the PMC ladder
program or machining program.

199 MACRO WORD UNDEFINED Undefined macro word was used. Modify the custom macro.

200 ILLEGAL S CODE COMMAND In the rigid tap, an S value is out of the range or is not specified.
Modify the program.

201 FEEDRATE NOT FOUND IN RIGID
TAP

In the rigid tap, no F value is specified.
Correct the program.

202 POSITION LSI OVERFLOW In the rigid tap, spindle distribution value is too large.

203 PROGRAM MISS AT RIGID TAPPING In the rigid tap, position for a rigid M code (M29) or an S command is in-
correct. Modify the program.

204 ILLEGAL AXIS OPERATION In the rigid tap, an axis movement is specified between the rigid M code
(M29) block and G84 (G74) block. Modify the program.

205 RIGID MODE DI SIGNAL OFF Rigid mode DI signal is not ON when G84 (G74) is executed though the
rigid M code (M29) is specified.Consult the PMC ladder diagram to find
the reason the DI signal (DGNG061.1) is not turned on. Modify the pro-
gram.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

662

Number Contents and  remedyMeaning

206 CAN NOT CHANGE PLANE 
(RIGID TAP)

Plane changeover was instructed in the rigid mode.
Correct the program.

210 CAN NOT COMAND M198/M199 M198 and M199 are executed in the schedule operation. M198 is
executed in the DNC operation.

211 CAN NOT COMMAND HIGH–SPEED
SKIP

A high–speed skip (G31) was specified during the feed–per–rotation or
rigid tapping mode.  Correct the program.

212 ILLEGAL PLANE SELECT The arbitrary angle chamfering or a corner R is commanded or the plane
including an additional axis.  Correct the program.

213 ILLEGAL COMMAND IN 
SYNCHRO–MODE

Any of the following alarms occurred in the operation with the simple
synchronization control.

1) The program issued the move command to the slave axis.

2) The program issued the manual continuous feed/manual handle
feed/incremental feed command to the slave axis.

3) The program issued the automatic reference position return com-
mand without executing the manual reference position return after
the power was turned on.

4) The difference between the position error amount of the master and
slave axes exceeded the value specified in parameter .

214 ILLEGAL COMMAND IN 
SYNCHRO–MODE

Coordinate system is set or tool compensation of the shift type is
executed in the synchronous control.  Correct the program.

222 DNC OP. NOT ALLOWED IN 
BG.–EDIT

Input and output are executed at a time in the background edition.
Execute a correct operation.

224 RETURN TO REFERENCE POINT Reference position return has not been performed before the automatic
operation starts. Perform reference position return.

230 R CODE NOT FOUND The infeed quantity R has not been instructed for the G160 block of th
ecanned grinding cycle.  Or the R command value is negative. Correct
the program.

250 SIMULTANEOUS M06 AND Z–AXIS
MOVEMENT NOT ALLOWED

A tool change (M06) and a Z–axis movement were specified simulta-
neously in the DRILL MATE.  Correct the program.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

663

2) Background edit alarm

Number Meaning Contents and  remedy

??? BACKGROUND EDIT ALARM BP/S alarm occurs in the same number as the P/S alarm that occurs in
ordinary program edit.  (070, 071, 072, 073, 074 085,086,087 etc.)

140 SELECTED PROGRAM ALARM It was attempted to select or delete in the background a program being
selected in the foreground.  (Note) 
Use background editing correctly.

NOTE
A background editing alarm may occur even during MDI operation–B.  This is because MDI
operation–B uses the background editing function.

3) Absolute pulse coder (APC) alarm

Number Meaning Contents and  remedy

3n0 nth–axis origin return Manual reference position return is required for the nth–axis.

3n1 APC alarm: nth–axis communication nth–axis APC communication error.  Failure in data transmission 
Possible causes include a faulty APC, cable, or servo interface module.

3n2 APC alarm: nth–axis over time nth–axis APC overtime error.  Failure in data transmission.
Possible causes include a faulty APC, cable, or servo interface module.

3n3 APC alarm: nth–axis framing nth–axis APC framing error.  Failure in data transmission.
Possible causes include a faulty APC, cable, or servo interface module.

3n4 APC alarm: nth–axis parity nth–axis APC parity error.  Failure in data transmission.
Possible causes include a faulty APC, cable, or servo interface module.

3n5 APC alarm: nth–axis pulse error nth–axis APC pulse error alarm.   
APC alarm.APC or cable may be faulty.

3n6 APC alarm: nth–axis battery voltage 0 nth–axis APC battery voltage has decreased to a low level so that the
data cannot be held.  
APC alarm. Battery or cable may be faulty.

3n7 APC alarm: nth–axis battery low 1 nth–axis axis APC battery voltage reaches a level where the battery
must be renewed.
APC alarm. Replace the battery.

3n8 APC alarm: nth–axis battery low 2 nth–axis APC battery voltage has reached a level where the battery
must be renewed (including when power is OFF).
APC alarm.

When either of the following alarms is issued, a possible cause is a faulty
serial pulse coder or cable.

Number Meaning Contents

3n9 SPC ALARM: n AXIS PULSE CODER The n axis (axis 1–8) pulse coder has a fault.

3n5 ZRN Impossible: 
n AXIS PULSE CODER

A reference position has not been established for the nth–axis serial
pulse coder.  Move the tool along the nth axis by more than a single rota-
tion of the motor.

4) Serial pulse coder (SPC)
alarmsww

w.
cn

cc
en

ter
.co

m



APPENDIX B–61404E/08G. ALARM LIST

664

The details of serial pulse coder alarm No. 3n9 are displayed in the
diagnosis display (No. 760 to 767, 770 to 777) as shown below.

#7

760 to 767

#6
CSAL

#5
BLAL

#4
PHAL

#3
RCAL

#2
BZAL

#1
CKAL

#0
SPHL

CSAL : The serial pulse coder is defective. Replace it.

BLAL : The battery voltage is low. Replace the batteries. This alarm has nothing
to do with alarm (serial pulse coder alarm).

PHAL : The serial pulse coder or feedback cable is defective.
Replace the serial pulse coder or cable.

RCAL : The serial pulse coder is defective. Replace it.

BZAL : The pulse coder was supplied with power for the first time.
Make sure that the batteries are connected.
Turn the power off, then turn it on again and perform a reference position
return. This alarm has nothing to do with alarm (serial pulse coder alarm).

CKAL : The serial pulse coder is defective. Replace it.

PHAL : The serial pulse coder or feedback cable is defective. replace the serial
pulse coder or cable.

#7
DTERR770 to 777

#6
CRCERR

#5
STBERR

#4 #3 #2 #1 #0

DTERR : The serial pulse coder encountered a communication error.
The pulse coder, feedbak cable, or feedback receiver circuit is defective.
Replace the pulse coder, feedback cable, or NC–axis board

CRCERR : The serial pulse coder encountered a communication error.
The pulse coder, feedback cable, or feedback receiver circuit is defective.
Replace the pulse coder, feedback cable, or NC–axis board.

STBERR : The serial pulse coder encountered a communication error.
The pulse coder, feedback cable, or feedback receiver circuit is defective.
Replace the pulse coder, feedback cable, or NC–axis board.

5) Servo alarms

Number Meaning Contents and actions

400 SERVO ALARM: 1, 2TH AXIS 
OVERLOAD

1–axis, 2–axis overload signal is on.  Refer to diagnosis display No. 720
or 721 for details.

401 SERVO ALARM: 1, 2TH AXIS VRDY
OFF

1–axis, 2–axis servo amplifier READY signal (DRDY) went off.

402 SERVO ALARM: 3, 4TH AXIS 
OVERLOAD

3–axis, 4–axis overload signal is on.  Refer to diagnosis display No. 722
or 723 for details.

403 SERVO ALARM: 3, 4TH AXIS VRDY
OFF

3–axis, 4–axis servo amplifier READY signal (DRDY) went off.

404 SERVO ALARM: n–TH AXIS VRDY
ON

Even though the n–th axis (axis 1–8) READY signal (MCON) went off,
the servo amplifier READY signal (DRDY) is still on.  Or, when the power
was turned on, DRDY went on even though MCON was off.
Check that the axis card and servo amplifierr are connected.

� The details of serial
pulse coder alarm
No.3n9

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

665

Number Contents and actionsMeaning

405 SERVO ALARM: ZERO POINT 
RETURN FAULT

Position control system fault.  Due to an NC or servo system fault in the
reference position return, there is the possibility that reference position
return could not be executed correctly.  Try again from the manual refer-
ence position return.

406 SERVO ALARM: 
7, 8TH AXIS OVER LOAD
7, 8TH AXIS VRDY OFF

7–axis, 8–axis overload signal is on.  Refer to diagnosis display No. 726
or 727 for details.
3–axis, 4–axis servo amplifier READY signal (DRDY) went off.

4n0 SERVO ALARM: n–TH AXIS – 
EXCESS ERROR

The position deviation value when the n–th axis stops is larger than the
set value.
Note) Limit value must be set to parameter for each axis.

4n1 SERVO ALARM: n–TH AXIS – 
EXCESS ERROR

The position deviation value when the n–th axis moves is larger than the
set value. 
Note) Limit value must be set to parameter for each axis.

4n3 SERVO ALARM: n–th AXIS – LSI
OVERFLOW

The contents of the error register for the n–th axis exceeded ±231 power.
This error usually occurs as the result of an improperly set parameters.

4n4 SERVO ALARM: n–TH AXIS –
DETECTION RELATED ERROR

N–th axis digital servo system fault.  Refer to diagnosis display No. 720
and No.727 for details.

4n5 SERVO ALARM: n–TH AXIS – 
EXCESS SHIFT

A speed higher than 4000000 units/s was attempted to be set in the n–th
axis.  This error occurs as the result of improperly set CMR.

4n6 SERVO ALARM: n–TH AXIS – 
DISCONNECTION

Position detection system fault in the n–th axis pulse coder (disconnec-
tion alarm).

4n7 SERVO ALARM: n–TH AXIS – PA-
RAMETER INCORRECT

This alarm occurs when the n–th axis is in one of the conditions listed
below. (Digital servo system alarm)

1) The value set in Parameter No. 8n20 (motor form) is out of the 
specified limit.

2) A proper value (111 or –111) is not set in parameter No. 8n22 
(motor revolution direction).

3) Illegal data (a value below 0, etc.) was set in parameter No. 8n23
(number of speed feedback pulses per motor revolution).

4) Illegal data (a value below 0, etc.) was set in parameter No. 8n24
(number of position feedback pulses per motor revolution).

5) Parameters No. 8n84 and No. 8n85 (flexible field gear rate) have not
been set.

6) An axis selection parameter (from No. 269 to 274) is incorrect.

7) An overflow occurred during parameter computation.

490 SERVO ALARM: 5TH AXIS OVER
LOAD

5–axis, 6–axis overload signal is on.  Refer to diagnosis display No. 724
or 725 for details.

491 SERVO ALARM: 5, 6TH VRDY OFF 5–axis, 6–axis servo amplifier READY signal (DRDY) went off.

494 SERVO ALARM: 5, 6TH AXIS VRDY
ON

The axis card ready signal (MCON) for axes 5 and 6 is off, but the servo
amplifier ready signal (DRDY) is not.  Alternatively, when the power is
applied, the DRDY is on, but the MCON is not.  Ensure that the axis card
and servo amplifier are connected.

495 SERVO ALARM: 5, 6TH AXIS ZERO
POINT RETURN

This is a position control circuit error.  It is likely that a return to the refer-
ence position failed because of an error in the NC or the servo system.
Retry a return to the reference position.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

666

NOTE
If an excessive spindle error alarm occurs during rigid tapping, the relevant alarm number for
the tapping feed axis is displayed.

The detailed descriptions of servo alarm number 414 are displayed with
diagnosis numbers 720 to 727 in the sequence of axis numbers.

#7
OVL720 to 727

#6
LV

#5
OVC

#4
HCAL

#3
HVAL

#2
DCAL

#1
FBAL

#0
OFAL

OVL : An overload alarm is being generated. 
(This bit causes servo alarm No. 400, 402, 406, 490).

LV : A low voltage alarm is being generated in servo amp. 
Check LED.

OVC : A overcurrent alarm is being generated inside of digital servo.

HCAL : An abnormal current alarm is being generated in servo amp.
Check LED.

HVAL : An overvoltage alarm is being generated in servo amp. 
Check LED.

DCAL : A regenerative discharge circuit alarm is being generated in servo amp.
Check LED.

FBAL : A disconnection alarm is being generated.
(This bit causes servo alarm No.4n6.)

OFAL : An overflow alarm is being generated inside of digital servo.

6) Spindle alarms

Number Meaning Contents and remedy

408 SPINDLE SERIAL LINK START
FAULT

This alarm is generated when the spindle control unit is not ready for
starting correctly when the power is turned on in the system with the seri-
al spindle.
The four reasons can be considered as follows:

1) An improperly connected optic cable, or the spindle control unit’s
power is OFF.

2) When the NC power was turned on under alarm conditions other
than SU–01 or AL–24 which are shown on the LED display of the
spindle control unit.
In this case, turn the spindle amplifier power off once and perform
startup again.

3) Other reasons (improper combination of hardware)
This alarm does not occur after the system including the spindle con-
trol unit is activated.

409 SPINDLE ALARM DETECTION A spindle amplifier alarm occurred in a system with a serial spindle.  The
alarm is indicated as “AL–XX” (where XX is a number) on the display of
the spindle amplifier.  For details, see Section 14.  Setting bit 7 of param-
eter No. 0397 causes the spindle amplifier alarm number to appear on
the screen.

� Details of servo 
alarm No.4n4

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

667

7) Over travel alarms

Number Meaning Contents and remedy

5n0 OVER TRAVEL : +n Exceeded the n–th axis + side stored stroke limit 1, 2.

5n1 OVER TRAVEL : –n Exceeded the n–th axis – side stored stroke limit 1, 2.

5n2 OVER TRAVEL : +n Exceeded the n–th axis + side stored stroke limit 3.

5n3 OVER TRAVEL : –n Exceeded the n–th axis – side stored stroke limit 3.

5n4 OVER TRAVEL : +n Exceeded the n–th axis + side hardware OT.

5n5 OVER TRAVEL : –n Exceeded the n–th axis – side hardware OT.

8) Macro alarms

Number Meaning Contents and remedy

500 to
599

MACRO ALARM This alarm is related to the custom macro, macro executor, or order–
made macro (including conversational program inputs).  Refer to the
relevant manual for details.  (The macro alarm number may coincide
with an overtravel alarm number.  However, they can be distinguished
from each other because the overtravel alarm number is accompanied
with the description of the alarm.

9) PMC alarms

Number Meaning Contents and remedy

600 PMC ALARM : INVALID INSTRUC-
TION

An invalid–instruction interrupt occurred in the PMC.

601 PMC ALARM : RAM PARITY A PMC RAM parity error occurred.

602 PMC ALARM : SERIAL TRANSFER A PMC serial transfer error occurred.

603 PMC ALARM : WATCHDOG A PMC watchdog timer alarm occurred.

604 PMC ALARM : ROM PARITY A PMC ROM parity error occurred.

605 PMC ALARM : OVER STEP The maximum allowable number of PMC ladder program steps was ex-
ceeded.

606 PMC ALARM : I/O MODULE ASSIGN-
MENT

The assignment of I/O module signals is incorrect.

607 PMC ALARM : I/O LINK An I/O link error occurred.  The details are listed below.

Number Details of PMC alarm (No. 607)

010 * Communication error (SLC (master) internal register error)

020 * An SLC RAM bit error occurred (verification error).

030 * An SLC RAM bit error occurred (verification error).

040 No I/O unit has been connected.

050 32 or more I/O units are connected.

060 * Data transmission error (no response from the slave)

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

668

Number Details of PMC alarm (No. 607)

070 * Communication error (no response from the slave)

080 * Communication error (no response from the slave)

090 An NMI (for other than alarm codes 110 to 160) occurred.

130 * An SLC (master) RAM parity error occurred (detected by hardware).

140 * An SLC (slave) RAM parity error occurred (detected by hardware).

160 * SLC (slave) communication error
* AL0 : Watchdog timer

DO clear signal received
* IR1 : CRC or framing error

Watchdog timer alarm
Parity error

Hardware errors are indicated with an asterisk (*).

10) Overheat alarms

Number Meaning Contents and remedy

700 OVERHEAT: CONTROL UNIT Control unit overheat
Check that the fan motor operates normally, and clean the air filter.

11) M–NET alarm

Number Meaning Contents and remedy

899 M–NET INTERFACE ALARM This alarm is related to a serial interface for an external PLC.  The details
are listed below.

Number Details of M–NET alarm (No. 899)

0001 Abnormal character (character other than transmission codes) received

0002 “EXT” code error

0003 Connection time monitor error (parameter No. 0464)

0004 Polling time monitor error (parameter No. 0465)

0005 Vertical parity or framing error detected

0257 Transmission time–out error (parameter No. 0466)

0258 ROM parity error

0259 Overrun error detected

Others CPU interrupt detectedww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

669

(These alarms cannot be reset with reset key.)

Number Meaning Contents and remedy

910 MAIN RAM PARITY This RAM parity error is related to low–order bytes.  Replace the
memory PC board.

911 MAIN RAM PARITY This RAM parity error is related to high–order bytes.  Replace the
memory PC board.

912 SHARED RAM PARITY This parity error is related to low–order bytes of RAM shared with the
digital servo circuit.  Replace the axis control PC board.

913 SHARED RAM PARITY This parity error is related to high–order bytes of RAM shared with the
digital servo circuit.  Replace the axis control PC board.

914 SERVO RAM PARITY This is a local RAM parity error in the digital servo circuit.  
Replace the axis control PC board.

915 LADDER EDITING CASSETTE RAM
PARITY

This RAM parity error is related to low–order bytes of the ladder editing
cassette.  Replace the ladder editing cassette.

916 LADDER EDITING CASSETTE RAM
PARITY

This RAM parity error is related to high–order bytes of the ladder editing
cassette.  Replace the ladder editing cassette.

920 WATCHDOG ALARM This is a watchdog timer alarm or a servo system alarm for axis 1 to 4.
Replace the master or axis control PC board.

921 SUB CPU WATCHDOG ALARM This is a watchdog timer alarm related to the sub–CPU board or a servo
system alarm for axis 5 or 6.  Replace the sub–CPU board or the
axis–5/6 control PC board.

922 7/8 AXIS SERVO SYSTEM ALARM This is a servo system alarm related to axis 7 or 8.  Replace the axis–7/8
control PC board.

930 CPU ERROR This is a CPU error.  Replace the master PC board.

940 PC BOARD INSTALLATION ERROR PC board installation is incorrect.  Check the specification of the PC
board.

941 MEMORY PC BOARD CONNECTION
ERROR

The memory PC board is not connected securely.  Ensure that the PC
board is connected securely.

945 SERIAL SPINDLE COMMUNICA-
TION ERROR

The hardware configuration is incorrect for the serial spindle, or a com-
munication alarm occurred.  Check the hardware configuration of the
spindle.  Also ensure that the hardware for the serial spindle is con-
nected securely.

946 SECOND SERIAL SPINDLE COM-
MUNICATION ERROR

Communication is impossible with the second serial spindle.  Ensure
that the second serial spindle is connected securely.

950 FUSE BLOWN ALARM A fuse has blown.  Replace the fuse (+24E; F14).

960 SUB CPU ERROR This is a sub–CPU error.  Replace the sub–CPU PC board.

998 ROM PARITY This is a ROM parity error.  Replace the ROM board in which the error
occurred.

13) External alarm

Number Meaning Contents and remedy

1000 EXTERNAL ALARM This alarm was detected by the PMC ladder program.  Refer to the rele-
vant manual from the machine builder for details.

12) System alarms

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

670

14) Alarms Displayed on spindle Servo Unit

Alarm
No. Meaning Description Remedy

“A”
display

Program ROM abnormality
(not installed)

Detects that control program is not started (due to
program ROM not installed, etc.)

Install normal program
ROM

AL01 Motor
overheat

Detects motor speed exceeding specified speed ex-
cessively.

Check load status.
Cool motor then reset
alarm.

AL02 Excessive speed deviation Detects motor speed exceeding specified speed ex-
cessively.

Check load status.
Reset alarm.

AL03 DC link section fuse blown Detects that fuse F4 in DC link section is blown (mod-
els 30S and 40S).

Check power transistors,
and so forth.
Replace fuse.

AL04 Input fuse blown.
Input power open phase.

Detects blown fuse (F1 to F3), open phase or mo-
mentary failure of power (models 30S and 40S).

Replace fuse.
Check open phase and
power supply refenerative
circuit operation.

AL05 Control power supply fuse
blown

Detects that control power supply fuse AF2 or AF3 is
blown (models 30S and 40S).

Check for control power
supply short circuit .
Replace fuse.

AL–07 Excessive speed Detects that motor rotation has exceeded 115% of its
rated speed.

Reset alarm.

AL–08 High input voltage Detects that switch is flipped to 200 VAC when input
voltage is 230 VAC or higher (models 30S and 40S).

Flip switch to 230 VAC.

AL–09 Excessive load on main circuit
section

Detects abnormal temperature rise of power transis-
tor radiator.

Cool radiator then reset
alarm.

AL–10 Low input voltage Detects drop in input power supply voltage. Remove cause, then reset
alarm.

AL–11 Overvoltage in DC link section Detects abnormally high direct current power supply
voltage in power circuit section.

Remove cause, then reset
alarm.

AL–12 Overcurrent in DC link section Detects flow of abnormally large current in direct cur-
rent section of power cirtcuit

Remove cause, then reset
alarm.

AL–13 CPU internal data memory ab-
normality

Detects abnormality in CPU internal data memory.
This check is made only when power is turned on.

Remove cause, then reset
alarm.

AL–15 Spindle switch/output switch
alarm

Detects incorrect switch sequence in spindle switch/
output switch operation.

Check sequence.

AL–16 RAM abnormality Detects abnormality in RAM for external data. This
check is made only when power is turned on.

Remove cause, then reset
alarm.

AL–18 Program ROM sum check er-
ror

Detects program ROM data error.This check is made
only when power is turned on.

Remove cause, then reset
alarm.

AL–19 Excessive U phase current
detection circuit offset

Detects excessive U phase current detection ciucuit
offset.
This check is made only when power is turned on.

Remove cause, then reset
alarm.

AL–20 Excessive V phase current
detection circuit offset

Detects excessive V phase current detection circuit
offset.
This check is made only when power is turned on.

Remove cause, then reset
alarm.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 G. ALARM LISTAPPENDIX

671

Alarm
No. RemedyDescriptionMeaning

AL–24 Serial transfer data error Detects serial transfer data error (such as NC power
supply turned off, etc.)

Remove cause, then reset
alarm.

AL–25 Serial data transfer stopped Detects that serial data transfer has stopped. Remove cause, then reset
alarm.

AL–26 Disconnection of speed detec-
tion signal for Cs contouring
control

Detects abnormality in position coder signal(such as
unconnected cable and parameter setting error).

Remove cause, then reset
alarm.

AL–27 Position coder signal discon-
nection

Detects abnormality in position coder signal (such as
unconnected cable and adjustment error).

Remove cause, then reset
alarm.

AL–28 Disconnection of position
detection signal for Cs contour-
ing control

Detects abnormality in position detection signal for
Cs contouring control (such as unconnected cable
and adjustment error).

Remove cause, then reset
alarm.

AL–29 Short–time overload Detects that overload has been continuously applied
for some period of time (such as restraining motor
shaft in positioning).

Remove cause, then reset
alarm.

AL–30 Input circuit overcurrent Detects overcurrent flowing in input circuit. Remove cause, then reset
alarm.

AL–31 Speed detection signal discon-
nection motor restraint alarm or
motor is clamped.

Detects that motor cannot rotate at specified speed
or it is detected that the motor is clamped. (but ro-
tates at very slow speed or has stopped).
(This includes checking of speed detection signal
cable.)

Remove cause, then reset
alarm.

AL–32 Abnormality in RAM internal to
LSI for serial data transfer. This
check is made only when pow-
er is turned on.

Detects abnormality in RAM internalto LSI for serial
data transfer. This check is made only when power
is turned on.

Remove cause, then reset
alarm.

AL–33 Insufficient DC link section
charging

Detects insuffieient charging of direct current power
supply voltage in power circuit section when magnet-
ic contactor in amplifier is turned on (such as open
phase and defectifve charging resistor).

Remove cause, then reset
alarm.

AL–34 Parameter data setting beyond
allowable range of values

Detects parameter data set beyond allowable range
of values.

Set correct data.

AL–35 Excesive gear ratio data set-
ting

Detects gear ratio data set beyond allowable range
of values.

Set correct data.

AL–36 Error counter over flow Detects error counter overflow. Correct cause, then reset
alarm.

AL–37 Speed detector parameter set-
ting error

Detects incorrect setting of parameter for number of
speed detection pulses.

Set correct data.

AL–39 Alarm for indicating failure in
detecting 1–rotation signal for
Cs contouring control

Detects 1–rotaion signal detection failure in Cs con-
touring contorl.

Make 1–rotaion signal ad-
justment.
Check cable shield status.

AL–40 Alarm for indicating 1–rotation
signal for Cs contouring control
not detected

Detects that 1–rotation signal has not occurred in Cs
contouring control.

Make 1–rotaion signal ad-
justment.

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08G. ALARM LIST

672

Alarm
No. RemedyDescriptionMeaning

AL–41 Alarm for indicating failure in
detecting position coder 1–ro-
taion signal.

Detects failure in detecting position coder 1–rotation
signal.

Make signal adjustment for
signal conversion circuit.
Check cable shield status.

AL–42 Alarm for indicating position
coder 1–rotation signal not de-
tected

Detects that position coder 1–rotation signal has not
issued.

Make 1–rotation signal ad-
justment for signal conver-
sion circuit.

AL–43 Alarm for indicating disconnec-
tion of position coder signal for
differential speed mode

Detects that main spindle position coder signal used
for differential speed mode is not connected yet (or
is disconnected).

Check that main spindle
position coder signal is con-
nected to connector CN12.

AL–46 Alarm for indicating failure in
detecting position coder
1–rotation signal in thread cut-
ting operation.

Detects failure in detecting position coder 1–rotation
signasl in thread cutting operation.

Make 1–rotation signal ad-
justment for signal conver-
sion circuit
Check cable shield status.

AL–47 Position coder signal ab-
normality

Detects incorrect position coder signal count opera-
tion.

Make signal adjustment for
signal conversion circuit.
Check cable shield status.

AL–48 Position coder 1–rotation sig-
nal abnormailty

Detects that occurrence of position coder 1–rotation
signal has stopped.

Make 1–rotation signal ad-
justment for signal conver-
sion circuit.

AL–49 The converted differential
speed is too high.

Detects that speed of other spindle converted to
speed of local spindle has exceeded allowable limit
in differential mode.

Check the position coder
state of the other side.

AL–50 Excessive speed command
calculation value in spindle
synchronization control

Detects that speed command calculation value ex-
ceeded allowable range in spindle synchronization
control.

Check parameters such as
a position gain.

AL–51 Undervoltage at DC link sec-
tion

Detects that DC power supply voltage of power ciu-
cuit has dropped (due to momentary power failure or
loose contact of magnetic contactor).

Remove cause, then reset
alarm.

AL–52 ITP signal abnormality I Detects abnormality in synchronization signal (ITP
signal )with CNC (such as loss of ITP signal).

Remove cause, then reset
alarm.

AL–53 ITP signal abnormality II Detects abnormality in synchronization signal (ITP
signal) with CNC (such as loss of ITP signal).

Remove cause, then reset
alarm.

AL–54 Overload current alarm Detects that excessive current flowed in motor for
long time.

Check if overload operation
or frequent acceleration/
deceleration is performed.

AL–55 Power line abnormality in
spindle switching/output
switching

Detects that switch request signal does not match
power line status check signal.

Check operation of mag-
netic contractor for power
line switching.
Check if power line status
check signal is processed
normally.ww

w.
cn

cc
en

ter
.co

m



B–61404E/08
H. OPERATION OF PORTABLE

TAPE READERAPPENDIX

673

H OPERATION OF PORTABLE TAPE READER
Portable tape reader is the device which inputs the NC program and the
data on the paper tape to CNC.

2. Optical
reader

12. Photoamplifier

13. Reader/punch
interface adapter

11. Cable storage
6. Handle 3. Capstan roller

4. Control switch

1. Light source

5. Tape box

10. Lowering
Lock lever

9. Cover lock

7. Winder

8. Metal A

� Names and descriptions
of each section

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08
H. OPERATION OF PORTABLE

TAPE READER

674

Table H  Description of each section

No. Name Descriptions

1 Light Sources

An LED (Light emitting diode) is mounted for each channel and for the feed hole (9
diodes in total). A built–in Stop Shoe functions to decelerate the tape. The light source
is attracted to the optical reader by a magnet so that the tape will be held in the correct
position. This unit can be opened upward, by turning the tape reader control switch
to the RELEASE position (this turns off the magnet).

2 Optical Reader
Reads data punched on the tape, through a glass window. Dust or scratches on the
glass window can result in reading errors. Keep this window clean.

3 Capstan Roller Controls the feeding of tape as specified by the control unit.

4
Tape Reader 
Control Switch

A 3–position switch used to control the Tape Reader.

RELEASE The tape is allowed to be free, or used to open the lightsource.
When loading or unloading the tape, select this position.

AUTO The tape is set to fixed position by the Stop Shoe. The feed and stop
of the tape is controlled by the CNC. To input data from tape, the Light
Source must be closed and this position must be selected.

MANUAL The tape can be fed in the forward reading direction. if another
position is selected, the tape feed is stopped.

5 Tape Box
A Tape Box is located below the Tape Reader. A belt used to draw out a paper tape
is located inside the box. The paper tape can easily be pulled out using this belt. The
tape box accomodates 15 meters of tape.

6 Handle Used to carry the tape reader.

7 Winder Used to advance or rewind the tape.

8 Metal A

Fastener
(usually kept open)

When removing the rolled tape, reduce the
internal diameter by pushing the fastener.

Push

Paper tape
Paper tape

Insert

9 Cover lock Be sure to use the lock for fastening the cover before carrying the tape reader.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
H. OPERATION OF PORTABLE

TAPE READERAPPENDIX

675

Table H  Description of each section

No. DescriptionsName

10 Lowering lock lever

When the tape reader is raised, the latch mechanism is activated to fix the tape reader.
Thus, the tape reader is not lowered.  The latch is locked with the lowering lock lever.
The latch is therefore not unlocked even when the tape reader is raised with the han-
dle.

When the latch is locked, the lever is horizontal.  To store the tape reader in the box,
push the lever to release the lock, then raise the tape reader with the handle to unlock
the latch.

When the latch is unlocked, the tape reader can be stored in the box.

When storing the tape reader, secure it with the cover lock.

11 Cable storage Used to store rolled power and signal cables.  The cable length is 1.5 m.

12 Photoamplifier For the tape reader

13
Reader/punch
interface adapter

200 VAC input and 5 VDC output power and reader/punch interface adapter PCB

Procedure for Operating the Portable Tape Reader

1 Unlock the cover locks 9.  Raise the tape reader with the handle 6 until it
clicks, then lower the tape reader.  The tape reader then appears and is
secured.  Check that the lowering lock levers 10 are horizontal.

2 Take out the signal and power cables from the cable storage 11 and
connect the signal cable with the CNC reader/punch interface port
and the power cable with the power supply.

3 Turn the control switch to the RELEASE position.

4 Lift the Light Source Unit, and insert an NC tape between the gap.
The tape must be positioned as shown in the figure, when viewed
looking downward.

Direction in which the tape advances

Feed 
holes

5 Pull the tape until the top of the tape goes past the Capstan roller.

6 Check that the NC tape is correctly positioned by the Tape Guide.

7 Lower the Light Source.

8 Turn the switch to the AUTO position.

9 Suspend the top and rear–end of the tape in the Tape Box.

Preparations

Setting the tape

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08
H. OPERATION OF PORTABLE

TAPE READER

676

10 Turn the switch to the RELEASE position.

11 Lift the Light Source and remove the tape.

12 Lower the Light Source

13 Store the cables in the cable storage 11.

14 Push the lowering lock lever 10 at both sides down.

15 Raise the tape reader with the handle 6 to unlock the latch, then gently
lower it.

16 Lock the cover lock 9 and carry the tape reader with the handle 6.

CAUTION
1 SETTING OF A TAPE

When the NC tape is loaded, the Label Skip function activates to read but skip data  until first
End of Block code (CR in EIA code or LF in ISO code) is read.  When loading an NC tape, the
location within the tape, from which data reading should be started must properly be selected
and the NC tape should be set as shown in the figure below.

2 DISCONNECTION AND CONNECTION OF A PORTABLE TAPE READER CONNECTION
CABLE
Don’t disconnect or connect CNC tape reader connection cable (signal cable) without turning
off the CNC power supply, otherwise the PCB of the tape reader and master PCB of CNC
controller may be broken.Turn off the CNC power supply before disconnecting or connecting
the connection cable, accordingly.

; ;

Set the tape so that this section is under
the glass window.

 The program which should be read

Actually, the end of block code (;) is CR in EIA
code or is LF in ISO code.

Removing the tape

Storage

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 I. Series 0–D SPECIFICATIONSAPPENDIX

677

I Series 0–D SPECIFICATIONS
� : Basic � : Basic option � : option
� : Function included in other option

Controlled axis

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Number of controlled axes 3 axes � — — — � —

4 axes — � � � — �

Simultaneous controllable
axes

3 axes � � — — � —
axes

4 axes — — � � — �

Additional axis control — — — � — �

Axis control by PMC MAX. 2 axes — � � � — �

Cs–axis contouring control — — — � — �

Simple synchronous control — — — � — �

Angular axis control — — — — — �

Least input increment 0.001mm,0.001deg,
0.0001inch

� � � � � �

Incremental system 1/10 0.0001mm,0.0001deg,
0.00001inch

— — — � � �

Inch/metric conversion — � � � � �

Interlock � � � � � �

Machine lock � � � � � �

Emergency stop � � � � � �

Overtravel signal X/Y/Z–axis � � � � � �

Stored stroke check 1 � � � � � �

Stroke limit external setting — — — � — �

Stored stroke check 2 � � � � � �

Stored stroke check 3 G22,G23 — — — � — �

Mirror image each axis � � � � � �

Follow up � � � � � �

Servo off � � � � � �

Mechanical handle feed � � � � � �

Backlash compensation � � � � � �

Stored pitch error
compensation

� � � � � �

Position switch — — — � — �

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08I. Series 0–D SPECIFICATIONS

678

Operation

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Automatic operation 
(Memory)

� � � � � �

DNC operation included in
Reader/puncher
interface

� � � � � �

MDI operation � � � � � �

MDI operation B — — — � — �

Scheduling function Directory display of
floppy cassette is need.

— — — � — �

Program number search � � � � � �

Sequence number search � � � � � �

Sequence number
comparison and stop

— — — � — �

Program restart — — — � — �

Buffer register � � � � � �

Dry run � � � � � �

Single block � � � � � �

Manual continuous feed
(JOG)

� � � � � �

Manual reference position
return

� � � � � �

Setting the reference
position without DOGs

� � � � � �

Reference position setting
with mechanical stopper

— — — � — �

Manual handle feed 1 unit � � � � — �

2/3 units — — — � — �

Manual handle feed rate �1, �10, �m, �n
m: to 127, n: to 1000

� � � � � �

Handle interruption — — — � — �

Incremental feed �1, �10, �100,
�1000

� � � � � �

Jog and handle
simultaneous mode

� � � � � �ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 I. Series 0–D SPECIFICATIONSAPPENDIX

679

Interpolation function

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Positioning G00 � � � � � �

Single direction positioning G60 � � � � � �

Exact stop mode G61 � � � � � �

Exact stop G09 � � � � � �

Linear interpolation � � � � � �

Circular interpolation Multi quadrant is
possible.

� � � � � �

Dwell (per sec.) � � � � � �

Cylindrical interpolation — — — � — �

Helical interpolation — � � � — �

Helical interpolation axis
extend

— � � � — �

Thread cutting.
synchronous feed

Position coder is need. — — — � — �

Skip function G31 — — — � — �

High–speed skip function — — — � — �

Reference position return G28 � � � � � �

Reference position return
check

G27 � � � � � �

2nd reference position
return

� � � � � �

3rd/4th reference position
return

— — — � — �

Normal direction control — — — � � �

Continuous dressing control — — — — — �

Infeed control — — — — � �

Index table indexing
function

— — — � — �

Rapid traverse rate 100 m/min � � � � � �

Rapid traverse override Fo,25,50,100% � � � � � �

Feed per minute mm/min. � � � � � �

Feed par revolution mm/rev — — — � — �

Tangential speed constant
control

� � � � � �

Cutting feedrate clamp � � � � � �

Automatic acceleration /
deceleration

Rapid traverse : linear
Cutting feed : 

exponential

� � � � � �

Bell–shaped acceleration /
deceleration for rapid
traverse

— — — � — �

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08I. Series 0–D SPECIFICATIONS

680

Item 0–GSD II
0–GSD

Package 10–MD II
0–MD

Package 3
0–MD

Package 2
0–MD

Package 1Specification

Linear acceleration /
deceleration after cutting
feed interpolation

— — — � — �

Feedrate override 0  to 150% � � � � � �

F1–digit feed — — — � — �

Jog override 0  to 150% — — — � — �

Override cancel � � � � � �

External deceleration — — — � — �

Advanced preview control — — — � — �

Programming

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Tape code EIA/ISO automatic
recognition

� � � � � �

Label skip � � � � � �

Parity check Parity H, Parity V � � � � � �

Control in / out � � � � � �

Optional block skip 1 piece � � � � � �

9 pieces — — — � — �

Max. programmable
dimension

�8 digits � � � � � �

Program number O4 digits � � � � � �

Sequence number N4 digits � � � � � �

Absolute / Incremental
programming

It is possible to use in
the same block.

� � � � � �

Decimal point input / Pocket
calculator type decimal point
input programming

� � � � � �

Plane selection G17,G18,G19 � � � � � �

Rotary axis designation only added axes � � � � � �

Rotary axis roll–over
function

only added axes � � � � � �

Polar coordinate command — — — � — �

Coordinate system setting � � � � � �

Automatic coordinate
system setting

� � � � � �

Workpiece coordinate
system

G52,G53,G54 to G59 � � � � � �

Workpiece coordinate pair
addition

48 pairs      Note) — — — � — �

Manual absolute on and off � � � � � �

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 I. Series 0–D SPECIFICATIONSAPPENDIX

681

Item 0–GSD II
0–GSD

Package 10–MD II
0–MD

Package 3
0–MD

Package 2
0–MD

Package 1Specification

Optional angle chamfering /
corner R

— — — � — �

Programmable data input G10 (Programmable
input of offset)

— � � � � �

Sub program call two–fold nested � � � � � �

Custom macro A � � � � � �

Custom macro B Editing is not available. — — � � — �

Addition of custom macro
common variables

only custom macro B — — — � — �

Pattern data input — — — � — �

Interruption type custom
macro

— — — � — �

Canned cycles for drilling � � � � — �

Canned cycles for grinding — — — — � �

Small–hole peck drilling
cycle

— — — � — —

Circular interpolation by R
programming

� � � � � �

Automatic corner override — — — � — �

Block overlap — — — � — �

Automatic corner
deceleration

— — — � — �

Feedrate clamp by circular
radius

— — — � — �

Scaling — — — � — �

Coordinate system rotation — — — � — �

Programmable mirror image — — — � — �

Menu programming — — — � — �

Tape format for FS10/11 — — — � — �

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08I. Series 0–D SPECIFICATIONS

682

Miscellaneous function/spindle function

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Auxiliary function M3 digit � � � � � �

2nd auxiliary function B6 digit � � � � — �

Auxiliary function lock � � � � � �

High speed M/S/T interface � � � � � �

Multiple command of
auxiliary function

3 pieces (M code only) � � � � � �

Spindle function S analog/ serial output � � � � � �

Constant surface speed
control

— — — � — �

Spindle speed override 0  to 120% � � � � � �

Analog voltage control by
PMC

� � � � � �

1st spindle orientation — — — � — �

1st spindle speed range
switch

— — — � — �

2nd spindle orientation — — — � — �

2nd spindle speed range
switch

— — — � — �

Spindle synchronous control — — — � — �

Simple spindle synchronous
control

— — — � — �

Rigid tapping Position coder is need. — � � � — �

Tool function/tool offset function

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Tool function � � � � � �

Tool offset memory �6 digits  32 pieces — — — — � —

�6 digits  64 pieces � � � — — —

�6 digits 400 pieces — — — � — �

Tool offset memory B Tool geometry / wear
offset

— — — � — �

Tool length compensation � � � � � �

Tool position offset — — — � — �

Cutter compensation C � � � � — �

Tool life management — — — � — �

Automatic tool length
measurement

— — — � — �

Tool length measurement — — — � — �

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08 I. Series 0–D SPECIFICATIONSAPPENDIX

683

Editing operation

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Part program storage length 10m — — — — � —

120m � � — — — —

320m — — � � — �

Registered programs 63 pieces � � � — � —

200 pieces — — — � — �

Tape editing � � � � � �

Program protect � � � � � �

Background editing — � � � — �

Extended part program
editing

— — � � — �

Play back — — — � — �

Setting / display

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Status display � � � � � �

Clock function — — — � — �

Current position display � � � � � �

Program display Program name : 
31 characters

� � � � � �

Parameter setting and
display

� � � � � �

Self–diagnosis function � � � � � �

Alarm display � � � � � �

Run hour and parts count
display

— � � � — �

Actual cutting feed display � � � � � �

Display of spindle speed
and T code at all screens

Position coder is need. — — — � — �

Directory display of floppy
cassette

— — — � — �

Graphic display — — — � — �

Servo setting screen � � � � � �

Spindle setting screen � � � � � �

Servo waveform display — — — � — �

Software operator’s panel — � � � — �

Software operator’s panel
general purpose switch

— � � � — �

English display � � � � � �

ww
w.

cn
cc

en
ter

.co
m



APPENDIX B–61404E/08I. Series 0–D SPECIFICATIONS

684

Item 0–GSD II
0–GSD

Package 10–MD II
0–MD

Package 3
0–MD

Package 2
0–MD

Package 1Specification

Japanese (Chinese
characters) display

— — � � — �

German / French display — — � � — �

Italian display — — � � — �

Chinese display � � � � � �

Spanish display — — � � — �

Korean display — — — � — �

Data protection key � � � � � �

Data input / output

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Reader / puncher interface Reader/puncher (Ch.1)
interface

� � � � � �

Reader/puncher (Ch.2)
interface

— — — � — �

DNC2 — — — � — �

External I/O device control — — � � — �

External data input — � � � � �

External key input — — — � — �

External workpiece number
search

15 pieces � � � � � �

External program number
search

1 to 9999 � � � � � �

Others

Item Specification
0–MD

Package 1
0–MD

Package 2
0–MD

Package 3 0–MD II
0–GSD

Package 1 0–GSD II

Status output signals � � � � � �

9″ monochrome CRT � � � � � �

PMC–L Basic command:6.0µs
Max. steps: 5000

� � — � � �

PMC–M Basic command:2.0µs
Max. steps: 8000

— — � � — �

Internal I/O card DI/DO: 104/72 points,
source/sink

� � � � � �

I/O Unit–MODEL A DI/DO Max. : 
1024/1024 points

— — — � — �

NOTE
Part program storage length is decreased by 9.75m.

ww
w.

cn
cc

en
ter

.co
m



B–61404E/08
J. CORRESPONDENCE BETWEEN

 ENGLISH KEY AND SYMBOLIC KEYAPPENDIX

685

J CORRESPONDENCE BETWEEN ENGLISH KEY ANDSYMBOLIC KEY
Table J  Correspondence between english key and symbolic key (Series 0)

Name English key Symbolic key Name English key Symbolic key

RESET key RESET
OPRATION/
ALARM key

OPR

ALARM

PAGE UP key
PAGE

AUXILIARY/
GRAPHIC key

AUX

GRAPH

PAGE DOWN key PAGE MACRO key MACRO

SHIFT key SHIFT ALTER key ALTER

POSITION key POS INSERT key INSRT

PROGRAM key PRGRM INPUT key INPUT

MENU key MENU
OUTPUT/START
key

OUTPT

START

OFFSET key OFSET DELETE key DELET

MENU/OFFSET
key

MENU

OFSET
CANCEL key CAN

DIAGNOS/
PARAM key

DGNOS

PARAMww
w.

cn
cc

en
ter

.co
m



IndexB–61404E/08

i–1

�Number �
14″ CRT soft key configuration, 402

�A�
Absolute and incremental programming (G90, G91), 94

Actual feedrate display, 545

Adding workpiece coordinate systems, 88

Advanced preview control, 371

Alarm and self–diagnosis functions, 464

Alarm display, 389, 465

Alarm list, 654

Altering a word, 500

Angular axis control (0–GSC, 0–GSD/II), 369

Argument specification, 283

Arithmetic and logic operation, 308

Automatic corner deceleration, 68

Automatic grinding wheel diameter compensation after
dressing, 182

Automatic insertion of sequence numbers, 521

Automatic operation, 380, 423

Automatic override for inner corners (G62), 60

Automatic tool length measurement (G37), 196

Auxiliary function, 115

Auxiliary function (M function), 116

�B�
Background editing, 516

Boring cycle (G85), 151

Boring cycle (G86), 153

Boring cycle (G88), 157

Boring cycle (G89), 159

Boring cycle back boring cycle (G87), 155

Branch and repetition, 313

�C�
Canned cycle, 133

Canned cycle cancel (G80), 161, 171

Canned grinding cycle (0–GSC, 0–GSD/II), 172

Change of the cutter compensation value, 215

Changing the file name, 492

Changing workpiece coordinate system, 85

Character–to codes correspondence table, 653

Characters and codes to be used for the pattern data input
function, 355

Check by running the machine, 382

Checking by self–diagnostic screen, 467

Checking the minimum grinding wheel diameter (0–GSC,
0–GSD/II), 182

Circular interpolation (G02, G03), 37

Command for machine operations – miscellaneous function, 20

Compensation function, 191

Conditional branch (IF statement), 313

Configuration of high speed cycle cutting data, 362

Constant lead threading (G33), 45

Constant surface speed control (G96, G97), 102

Continuous–feed surface grinding cycle (G78), 177

Controlled axes, 26, 27

Conversational programming with graphic function, 528

Coordinate system, 81

Coordinate system on part drawing and coordinate system
specified by CNC – coordinate system, 15

Coordinate system rotation (G68, G69), 266

Coordinate value and dimension, 93

Copying an entire program, 508

Copying part of a program, 509

Corner offset circular interpolation (G39), 212

Correspondence between english key and symbolic key, 685

Creating programs, 519

Creating programs in TEACH IN mode, 523

Creating programs using the MDI panel, 520

CRT/MDI panels and LCD/MDI panels, 393

Current block display screen, 550

Current position display, 389

Custom macro A, 279

Custom macro B, 297

Custom macro body, 285

Custom macro command, 280

Cutter compensation B (G39 to G42), 205

Cutter compensation cancel (G40), 213

Cutter compensation left (G41), 208

Cutter compensation right (G42), 210

Cutting feed, 54

Cutting feed block overlap, 67

Cutting feed linear acceleration/deceleration before
interpolation, 64

Cutting feedrate control, 58

Cutting speed – spindle speed function, 19

Cylindrical interpolation (G107), 42

�D�
Data input/output, 469

Data output, 391

Decimal point programming, 99

Deleting a block, 502

Deleting a word, 501

Deleting all programs, 505

Deleting blocks, 502

ww
w.

cn
cc

en
ter

.co
m



INDEX B–61404E/08

i–2

Deleting files, 490

Deleting more than one program by specifying a range, 506

Deleting multiple blocks, 503

Deleting one program, 505

Deleting programs, 505

Details of cutter compensation C, 224

Details of functions, 339

Direct constant–dimension plunge grinding cycle (G77), 175

Display, 388, 621

Display and operation of 00–MC, 620

Display of run time and parts count, 546

Display of software configuration, 409

Displaying and entering setting data, 579

Displaying and setting custom macro common variables, 566

Displaying and setting data, 385

Displaying and setting parameters, 572

Displaying and setting pitch error compensation data, 574

Displaying and setting run time, parts count, and time, 583

Displaying and setting the software operator’s panel, 587

Displaying and setting the workpiece origin offset value, 564

Displaying and setting tool life management data, 569

Displaying directory of floppy disk, 485

Displaying memory used and a list of programs, 557

Displaying operator message, 586

Displaying pattern data and pattern menu, 567

Displaying the directory, 486

Displaying the pattern menu, 347

Displaying the program number and sequence number, 589

Displaying the program number, sequence number, and status,
and warning messages for data setting, 589

Displaying the status and warning for data setting, 590

DNC operation, 431

Drilling cycle counter boring cycle (G82), 145

Drilling cycle, spot drilling (G81), 143

Dry run, 454

Dwell (G04), 63

Dynamic graphic display, 598

�E�
Editing a part program, 384

Editing of custom macro B, 515

Editing programs, 493

Emergency stop, 458

Exact stop (G09, G61) cutting mode (G64) taping mode (G63),
59

Extended part program editing function, 507

External I/O devices, 403

External motion function (G81), 186

External output commands, 333

�F�
FANUC FA Card, 406

FANUC Floppy Cassette, 405

FANUC Handy File, 405

FANUC PPR, 406

Feed functions, 49

Feed–feed function, 13

Feedrate clamp based on arc radius, 74

Feedrate override, 452

File deletion, 473

File search, 472

Files, 470

Fine boring cycle (G76), 141

Function keys, 399

Function keys and soft keys, 398

Functions to simplify programming, 132

�G�
G65 (modal call), 282

General flow of operation of CNC machine tool, 6

General screen operations, 398

Graphic display, 390

Graphics display, 592

Graphics function, 591

Grinding–wheel wear compensation by continuous dressing
(0–GSC, 0–GSD/II), 181

�H�
Header, 362

Heading a program, 498

Helical cutting (G02, G03), 41

High speed cycle cutting, 360

High–speed peck drilling cycle (G73), 137

How to indicate command dimensions for moving the tool –
absolute, incremental commands, 18

How to view the position display change without running the
machine, 383

�I�
In–feed grinding along the Y and Z axes at the end of table

swing (0–GSC, 0–GSD/II), 183

Inch/metric conversion (G20, G21), 98

Incorrect threaded length, 643

Increment system, 27

Incremental feed, 415

ww
w.

cn
cc

en
ter

.co
m



INDEXB–61404E/08

i–3

Index table indexing function, 272

Input command from MDI, 257

Inputting a program, 474

Inputting and outputting parameters and pitch error
compensation data, 481

Inputting custom macro B common variables, 483

Inputting offset data, 479

Inputting parameters, 481

Inputting/outputting custom macro B common variables, 483

Inserting a word, 499

Inserting, altering and deleting a word, 494

Interference check, 249

Intermittent–feed surface grinding cycle (G79), 179

Internal circular cutting feedrate change, 62

Interpolation function, 32

Interruption type custom macro, 337

�J�
Jog feed, 413

�K�
Key input and input buffer, 400

Kind of variables, 286

�L�
Left–handed rigid tapping cycle (G74), 167

Left–handed tapping cycle (G74), 139

Limitations, 332

Linear interpolation (G01), 35

List of functions and tape format, 634

Local coordinate system, 90

�M�
M98 (single call), 280

Machine coordinate system, 82

Machine lock and auxiliary lock, 451

Macro call, 317

Macro call using an M code, 325

Macro call using G code, 324

Macro Instruction and Branch Instruction (G65), 291

Macro statements and NC statements, 312

Manual absolute ON and OFF, 418

Manual handle feed, 416

Manual handle interruption, 443

Manual operation, 376, 410

Manual reference position return, 411

Maximum stroke, 27

MDI operation, 426

Memory operation, 424

Memory operation using Series 10/11 tape format, 359

Menu programming, 526

Merging a program, 511

Method of replacing battery, 625

Mirror image, 446

Modal call (G66), 322

Moving part of a program, 510

Multiple M commands in a single block, 117

�N�
Name of axes, 27

Next block display screen, 551

Nomographs, 642

Normal direction control (G150, G151, G152), 275

Notes on custom macro, 296

Notes on reading this manual, 8

Number of control axes, 361

Number of registered cycles, 362

�O�
Offset data input and output, 479

Operating monitor display, 547

Operation, 622

Operation of portable tape reader, 673

Operational devices, 392

Optional angle chamfering and corner rounding, 184

Outputting a program, 476

Outputting custom macro B common variable, 484

Outputting offset data, 480

Outputting parameters, 482

Outputting programs, 489

Overall position display, 544

Overcutting by cutter compensation, 254

Overtravel, 459

Overview of cutter compensation C (G40 to G42), 218

�P�
Part drawing and tool movement, 14

Parts count display, run time display, 390

Path drawing, 598

Pattern data display, 351

Pattern data input function, 346

Peck drilling cycle (G83), 147

ww
w.

cn
cc

en
ter

.co
m



INDEX B–61404E/08

i–4

Peek rigid tapping cycle (G84 or G74), 169

Plane selection, 92

Plunge grinding cycle (G75), 173

Polar coordinate command (G15, G16), 95

Portable tape reader, 407

Position display in the relative coordinate system, 542

Position display in the work coordinate system, 541

Positioning (G00), 33

Positive/negative cutter compensation value and tool center
path, 216

Power disconnection, 409

Power on/off, 408

Preparatory function (G function), 28

Processing macro statements, 330

Program check screen, 552

Program components other than program sections, 120

Program configuration, 21, 118

Program contents display, 549

Program display, 388

Program input/output, 474

Program number search, 504

Program restart, 432

Program screen for MDI operation, 554

Program section configuration, 123

Programmable parameter entry (G10), 357

Pulse distribution, 361

�R�
Radius direction error at circle cutting, 650

Range of command value, 639

Rapid traverse, 53

Rapid traverse bell–shaped acceleration/deceleration, 76

Rapid traverse override, 453

Reading files, 488

Reference position, 77

Reference position (machine–specific position), 14

Register, change and delete of tool life management data, 110

Registering custom macro programs, 331

Reorganizing memory, 518

Repetition (WHILE statement), 314

Replacement of words and addresses, 513

Replacing batteries for absolute pulse coder, 627

Replacing CNC battery for memory back–up, 626

Rigid tapping, 164

Rigid tapping (G84), 165

Rotary axis roll–over, 368

�S�
Safety function, 457

Sample program, 328

Scaling (G50, G51), 260

Scheduling function, 436

Screens displayed by function key DGNOSPARAM , 571

Screens displayed by function key 
MENU

OFSET , 559

Screens displayed by function key OPR
ALARM

, 586

Screens displayed by function key POS , 540

Screens displayed by function key PRGRM  (in auto mode or

MDI mode), 548

Screens displayed by function key PRGRM  (in the edit mode),

556

Selecting a workpiece coordinate system, 84

Selection of tool used for various machining – tool function, 20

Sequence number comparison and stop, 581

Sequence number search, 448

Series 0–D specifications, 677

Setting a workpiece coordinate system, 83

Setting and displaying data, 532

Setting and displaying the tool offset value, 560

Simple calculation of incorrect thread length, 645

Simple call (G65), 317

Simple synchronous control, 365

Single block, 455

Single direction positioning (G60), 34

Skip function (G31), 47

Small–diameter peck drilling cycle, 187

Solid graphics, 607

Specification method, 338

Specifying the spindle speed value directly (S5–digit
command), 101

Specifying the spindle speed with a binary code, 101

Spindle speed function (S function), 100

Status when turning power on, when clear and when reset, 651

Stroke check, 460

Subprogram, 129

Subprogram call function, 441

Subprogram call using an M code, 326

Subprogram call using M code, 280

Subprogram call using T code, 281

Subprogram calls using a T code, 327

Supplementary explanation for copying, moving and merging,
512

ww
w.

cn
cc

en
ter

.co
m



INDEXB–61404E/08

i–5

Switch between cutter compensation left and cutter
compensation right, 214

System variables, 301

�T�
Tape code list, 631

Tapping cycle (G84), 149

Test operation, 450

Testing a program, 382

The second auxiliary functions (B codes), 117

Tool compensation values, number of compensation values, and
entering values from the program (G10), 258

Tool figure and tool motion by program, 24

Tool function (T function), 106

Tool length measurement, 562

Tool length offset (G43, G44, G49), 192

Tool life, 114

Tool life management command in a machining program, 111

Tool life management data, 109

Tool life management function, 108

Tool movement along workpiece parts figure–interpolation, 12

Tool movement by programming–automatic operation, 378

Tool movement in offset mode, 229

Tool movement in offset mode cancel, 243

Tool movement in start–up, 225

Tool movement range – stroke, 25

Tool offset (G45 to G48), 200

Tool path at corner, 647

Tool selection function, 107

Turning on the power, 408

�U�
Unconditional branch (GOTO statement), 313

�V�
Variables, 285, 298

�W�
Word search, 496

Workpiece coordinate system, 83

ww
w.

cn
cc

en
ter

.co
m



R
ev

is
io

n 
R

ec
or

d

FA
N

U
C

 S
er

ie
s 

0/
00

/0
–M

at
e 

F
O

R
 M

A
C

H
IN

IN
G

 C
E

N
T

E
R

  O
P

E
R

AT
O

R
’S

 M
A

N
U

A
L 

 (
B

–6
14

04
E

)

05
A

ug
., 

’9
4

�A
ll 

pa
ge

s 
ar

e 
re

vi
se

d

04
A

ug
., 

’9
2

�A
dd

iti
on

 o
f c

om
m

on
 v

ar
ia

bl
e 

ad
di

tio
n

�A
lte

rla
tio

n 
of

 R
S

–2
32

–C
/R

S
–4

22
 In

te
rf

ac
e

�A
lte

rla
tio

n 
of

 P
ar

am
et

er
s

�A
lte

rla
tio

n 
of

 E
rr

or
 C

od
e 

Li
st

08
Ju

n.
, ’

98
�C

or
re

ct
io

n 
of

 e
rr

or
s

03
S

ep
., 

’9
0

�C
or

re
ct

io
n 

of
 e

rr
or

s
�A

dd
ito

n 
of

 ”
A

P
P

E
N

D
IX

 7
 R

S
–2

32
–C

/R
S

–4
22

 IN
T

E
R

FA
C

E
”

07
A

ug
., 

’9
7

�
A

dd
iti

on
 o

f S
af

et
y 

P
re

ca
ut

io
ns

�
A

dd
iti

on
 o

f S
er

ie
s 

0–
D

�
A

dd
iti

on
 o

f A
pp

en
di

x 
I “

S
er

ie
s 

0–
D

 S
P

E
C

IF
IC

A
T

IO
N

S
”

�
C

or
re

ct
io

n 
of

 e
rr

or
s

02
M

ar
., 

’8
9

�A
dd

iti
on

 o
f 0

–M
at

e 
M

C
 fu

nc
tio

n

06
M

ay
’9

7

�
A

dd
iti

on
 o

f f
ol

lo
w

in
g 

ite
m

s

�
C

ut
tin

g 
fe

ed
 li

ne
ar

 a
cc

el
er

at
io

n/
de

ce
le

ra
tio

n 
be

fo
re

 in
te

r-
po

la
tio

n

�
C

ut
tin

g 
fe

ed
 b

lo
ck

 o
ve

rla
p

�
A

ut
om

at
ic

 c
or

ne
r 

de
ce

le
ra

tio
n

�
F

ee
dr

at
e

cl
am

p
ba

se
d

on
ar

c
ra

di
us

01
O

ct
., 

’8
8

06
M

ay
, 

97
�

F
ee

dr
at

e 
cl

am
 b

as
ed

 o
n 

ar
c 

ra
di

us

�
R

ap
id

 tr
av

er
se

 b
el

l–
sh

ap
ed

 a
cc

el
er

at
io

n/
de

ce
le

ra
tio

n

�
S

m
al

l–
di

am
et

er
 p

ec
k 

dr
ill

in
g 

cy
cl

e

�
O

pe
ra

tin
g 

m
on

ito
r 

di
sp

la
y

�
C

or
re

sp
on

de
nc

e 
be

tw
ee

n 
E

ng
lis

h 
ke

y 
an

d 
S

ym
bo

lic
 k

ey

�
C

or
re

ct
io

n 
of

 e
rr

or
s

E
di

tio
n

D
at

e
C

on
te

nt
s

E
di

tio
n

D
at

e
C

on
te

nt
s

ww
w.

cn
cc

en
ter

.co
m



·  No part of this manual may be
reproduced in any form.

·  All specifications and designs
are subject to change without
notice.

ww
w.

cn
cc

en
ter

.co
m


	Cover Sheet.pdf
	61404E.pdf
	SAFETY PRECAUTIONS
	Warnings, Cautions, and Notes
	General Warnings and Cautions
	Programming
	Handling
	Daily Maintenance

	TABLE OF CONTENTS
	GENERAL
	General
	Applicable Models
	Special Symbols
	Related Manuals
	Flow of Operation of the CNC Machine Tool
	Notes on Reading this Manual


	PROGRAMMING
	General
	Tool Movement along Workpiece Parts Figure - Interpolation
	Feed - Feed Function
	Part Drawing and Tool Movement
	Machine-Specific Position
	Coordinate System
	Absolute and Incremental Commands
	Cutting Speed - Spindle Speed Function
	Tool Selection - Tool Function
	Machine Operation - Miscellaneous Function
	Program Configuration
	Tool Figure and Tool Motion by Program
	Tool Movement Range - Stroke


	Controlled Axes
	Controlled Axes
	Axis Names
	Increment System
	Maximum Stroke

	Preparatory Functions
	Interpolation Functions
	Positioning (G00)
	Single Direction Positioning (G60)
	Linear (G01)
	Circular (G02, G03)
	Helical Cutting (G02, G03)
	Cylindrical (G107)
	Constant Lead Threading (G33)
	Skip (G31)

	Feed Functions
	Overview
	Rapid Traverse
	Cutting Feed
	Cutting Feed Rate Control
	Exact Stop (G09, G61)
	Cutting Mode (G64)
	Tapping Mode (G63)
	Automatic Override for Inner Corners (G62)
	Internal Circular Cutting Feed Rate Change

	Dwell (G04)
	Cutting Feed Linear Acceleration / Deceleration before Interpolation
	Cutting Feed Block Overlap
	Automatic Corner Deceleration
	Feed Rate Clamp Based on Arc Radius
	Rapid Traverse Bell-Shaped Acceleration / Deceleration

	Reference Position
	Coordinate System
	Machine Coordinate System
	Workpiece Coordinate System
	Setting a System
	Selecting a System
	Changing the System
	Adding a System

	Local Coordinate System
	Plane Selection

	Coordinate Value and Dimension
	Absolute and Incremental Programming (G90, G91)
	Polar Coordinate Command (G15, G16)
	Inch and Metric Conversion (G20, G21)
	Decimal Point Programming

	Spindle Speed Functions
	Specifying the Spindle Speed
	Binary Code
	S5-Digit Command

	Constant Surface Speed Control (G96, G97)

	Tool Functions
	Tool Selection
	Tool Life Management
	Tool Life Management Data
	Register, Change, or Delete

	Commands in a Machining Program
	Tool Life


	Auxiliary Functions
	Auxiliary (M) Functions
	Multiple M Commands in a Single Block
	Second Auxiliary (B) Functions

	Program Configuration
	Components other than Program Sections
	Program Sections
	Subprogram

	Functions to Simplify Programming
	Canned Cycles
	High-Speed Peck Drilling (G73)
	Left-Hand Tapping (G74)
	Fine Boring (G76)
	Drilling and Spot Drilling (G81)
	Drilling and Counter Boring (G82)
	Peck Drilling (G83)
	Tapping (G84)
	Boring (G85)
	Boring (G86)
	Boring Back and Boring (G87)
	Boring (G88)
	Boring (G89)
	Cancel (G80)

	Rigid Tapping
	Rigid Tapping (G84)
	Left-Hand Rigid Tapping (G74)
	Peck Rigid Tapping (G84 or G74)
	Cancel (G80)

	Canned Grinding Cycle (0-GSC, 0-GSD/II)
	Plunge Grinding (G75)
	Direct Constant-Dimension Plunge Grinding (G77)
	Continuous-Feed Surface Grinding (G78)
	Intermittent-Feed Surface Grinding (G79)

	Grinding Wheel Wear Compensation by Continuous Dressing
	Automatic Grinding Wheel Diameter Compensation after Dressing
	Checking the Minimum Grinding Wheel Diameter

	In-Feed Grinding along the Y and Z Axes at the End of the Table Swing
	Optional Angle Chamfering and Corner Rounding
	External Motion Function (G81)
	Small-Diameter Peck Drilling

	Compensation Function
	Tool Length Offset (G43, G44, G49)
	Automatic Tool Length Measurement (G37)
	Tool Offset (G45 - G48)
	Cutter Compensation B (G39 - G42)
	Cutter Compensation Left (G41)
	Cutter Compensation Right (G42)
	Corner Offset Circular Interpolation (G39)
	Cutter Compensation Cancel (G40)
	Switch between Cutter Compensation Left and Right
	Change of the Cutter Compensation Value
	Positive and Negative Cutter Compensation Value and Tool Center Path

	Overview of Cutter Compensation C (G40 - G42)
	Details of Cutter Compensation C
	Overview
	Tool Movement
	Startup
	Offset Mode
	Cancel


	Interference Check
	Overcutting by Cutter Compensation
	Input Command from the MDI

	Tool Compensation Values, Number of Compensation Values, and Entering Values from the Program (G10)
	Scaling (G50, G51)
	Coordinate System Rotation (G68, G69)
	Index Table Indexing
	Normal Direction Control (G150, G151, G152)

	Custom Macro A
	Custom Macro Command
	Single Call (M98)
	Subprogram Call
	M Code
	T Code

	Modal Call (G66)
	Argument Specification

	Custom Macro Body
	Variables
	Kinds of Variables
	Operation and Branch Instructions (G65)
	Notes on Custom Macros


	Custom Macro B
	Variables
	System Variables
	Arithmetic and Logic Operation
	Macro Statements and NC Statements
	Branch and Repetition
	Unconditional Branch (GOTO Statement)
	Conditional Branch (IF Statement)
	Repetition (WHILE Statement)

	Macro Call
	Simple Call (G65)
	Modal Call (G66)
	Using a G Code
	Using an M Code

	Subprogram Call
	Using an M Code
	Using a T Code

	Sample Program

	Processing Macro Statements
	Registering Custom Macro Programs
	Limitations
	External Output Commands
	Interruption Type Custom Macro
	Specification Method
	Details of Functions


	Pattern Data Input Function
	Displaying the Pattern Menu
	Pattern Data Display
	Characters and Codes to be Used

	Programmable Parameter Entry (G10)
	Memory Operation Using Series 10/11 Tape Format
	High-Speed Cycle Cutting
	Number of Control Axes
	Pulse Distribution
	Configuration of Data
	Number of Registered Cycles
	Header


	Simple Synchronous Control
	Rotary Axis Rollover
	Angular Axis Control (0-GSC, 0-GSD/II)
	Advanced Preview Control

	OPERATION
	General
	Manual Operation
	Tool Movement by Programming - Automatic Operation
	Automatic Operation
	Testing a Program
	Running the Machine
	Viewing the Position Display Change

	Editing a Part Program
	Displaying and Setting Data
	Displays
	Program
	Current Position
	Alarm
	Parts Count
	Run Time
	Graphics

	Data Output

	Operational Devices
	CRT/MDI and LCD/MDI Panels
	9-inch Monochrome/Color CRT/MDI
	Small with Soft Keys
	Small without Soft Keys
	Full Keys

	Thin MDI Display
	14-inch Color CRT/MDI
	Keyboard Explanation

	Function Keys and Soft Keys
	General Screen Operations
	Function Keys
	Key Input and Input Buffer
	14-inch CRT Soft Key Configuration

	External I/O Devices
	Handy File
	Floppy Cassette
	FA Card
	PPR
	Portable Tape Reader

	Power On / Off
	Turning Power On
	Display of Software Configuration
	Turning Power Off


	Manual Operation
	Manual Reference Position Return
	Jog Feed
	Incremental Feed
	Manual Handle Feed
	Manual Absolute On / Off

	Automatic Operation
	Memory Operation
	MDI Operation
	DNC Operation
	Program Restart
	Scheduling Function
	Subprogram Call Function
	Manual Handle Interruption
	Mirror Image
	Sequence Number Search

	Test Operation
	Machine Lock
	Auxiliary Function Lock
	Feed Rate Override
	Rapid Traverse Override
	Dry Run
	Single Block

	Safety Functions
	Emergency Stop
	Overtravel
	Stroke Check

	Alarms and Self-Diagnostics
	Alarm Display
	Self-Diagnostic Screen

	Data Input and Output
	Files
	File Search
	File Deletion
	Program Input and Output
	Inputting a Program
	Outputting a Program

	Offset Data Input and Output
	Inputting Offset Data
	Outputting Offset Data

	Inputting and Outputting Parameters and Pitch Error Compensation Data
	Inputting Parameters
	Outputting Parameters

	Inputting and Outputting Custom Macro B Common Variables
	Inputting Variables
	Outputting Variables

	Displaying the Directory of a Floppy Disk
	Displaying the Directory
	Reading Files
	Outputting Programs
	Deleting Files
	Changing the File Name


	Editing Programs
	Inserting, Altering and Deleting a Word
	Word Search
	Heading a Program
	Inserting a Word
	Altering a Word
	Deleting a Word

	Deleting Blocks
	One Block
	Multiple Blocks

	Program Number Search
	Deleting Programs
	One Program
	All Programs
	Specifying a Range

	Extended Part Program Editing Function
	Copying an Entire Program
	Copying Part of a Program
	Moving Part of a Program
	Merging a Program
	Supplemental Explanation
	Replacing Words and Addresses

	Editing Custom Macro B
	Background Edit
	Reorganizing Memory

	Creating Programs
	Using the MDI Panel
	Automatically Inserting Sequence Numbers
	Creating Programs in Teach-in Mode
	Menu Programming
	Conversational Programming with Graphic Function

	Setting and Displaying Data
	Position Display Screen
	Program Screen in AUTO or MDI Mode
	Program Screen in EDIT Mode
	Offset Screen
	Parameter and Diagnostic Screen
	Alarm Screen
	Screens Displayed by Function Key (POS)
	Position
	Work Coordinate System
	Relative Coordinate System

	Overall Position
	Actual Feed Rate
	Run Time
	Parts Count
	Operating Monitor

	Screens Displayed by Function Key (PROG) (AUTO or MDI Mode)
	Program Contents
	Current Block
	Next Block
	Program Check
	MDI Operation

	Screens Displayed by Function Key (PROG) (EDIT Mode)
	Memory Used
	List of Programs

	Screens Displayed by Function Key (OFFSET SETTING)
	Tool Offset Values
	Tool Length Measurement
	Workpiece Origin Offset Value
	Custom Macro Common Variables
	Pattern Data and Menu
	Tool Life Management Data

	Screens Displayed by Function Key (SYSTEM)
	Parameters
	Pitch Error Compensation Data
	Setting Data
	Sequence Number Comparison / Stop
	Run Time
	Parts Count
	Time

	Screens Displayed by Function Key (MESSAGE)
	Operator Messages
	Software Operator's Panel

	Displaying the Program Number, Sequence Number, Status, and Warning Messages for Data Setting
	Program and Sequence Numbers
	Status and Warning for Data Setting


	Graphics Function
	Graphics Display
	Dynamic Graphic Display
	Path Drawing
	Solid Graphics


	Display and Operation of 00-MC
	Display
	Operation


	MAINTENANCE
	Replacing the Battery
	Memory Backup
	Absolute Pulse Coder


	APPENDIXES
	Tape Code List
	Functions and Tape Format
	Range of Command Values
	Nomographs
	Incorrect Threaded Length
	Simple Calculation of Incorrect Thread Length
	Tool Path at Corner
	Radius Direction Error at Circle Cutting

	Status When Turning Power On, Clear, and Reset
	Character-to-Codes Correspondence Table
	Alarms
	Program Errors (P/S Alarms)
	Background Edit Alarms
	Absolute Pulse Coder (APC) Alarms
	Serial Pulse Coder (SPC) Alarms
	Servo Alarms
	Spindle Alarms
	Overtravel Alarms
	Macro Alarms
	PMC Alarms
	Overheat Alarms
	M-NET Alarms
	System Alarms
	External Alarm
	Alarms Displayed on the Spindle Servo Unit

	Portable Tape Reader
	Series 0-D Specifications
	Controlled Axis
	Operation
	Interpolation
	Programming
	Miscellaneous Functions and Spindle Functions
	Tool Functions and Tool Offset Functions
	Edit Operation
	Setting and Display
	Data Input and Output
	Others

	Correspondence between English and Symbolic Keys

	INDEX
	REVISION RECORD


